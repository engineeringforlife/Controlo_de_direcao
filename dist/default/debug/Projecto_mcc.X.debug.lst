

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Nov 20 10:14:52 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    75                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1
    85                           	psect	text67,global,reloc=2,class=CODE,delta=1
    86                           	psect	text68,global,reloc=2,class=CODE,delta=1
    87                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    90                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    91  0000                     
    92                           ; Version 2.10
    93                           ; Generated 31/07/2019 GMT
    94                           ; 
    95                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    96                           ; All rights reserved.
    97                           ; 
    98                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    99                           ; 
   100                           ; Redistribution and use in source and binary forms, with or without modification, are
   101                           ; permitted provided that the following conditions are met:
   102                           ; 
   103                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   104                           ;        conditions and the following disclaimer.
   105                           ; 
   106                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   107                           ;        of conditions and the following disclaimer in the documentation and/or other
   108                           ;        materials provided with the distribution.
   109                           ; 
   110                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   111                           ;        software without specific prior written permission.
   112                           ; 
   113                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   114                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   115                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   116                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   117                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   118                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   119                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   120                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   121                           ; 
   122                           ; 
   123                           ; Code-generator required, PIC18F45K22 Definitions
   124                           ; 
   125                           ; SFR Addresses
   126  0000                     
   127                           	psect	idataBANK1
   128  003C64                     __pidataBANK1:
   129                           	opt callstack 0
   130                           
   131                           ;initializer for main@F6396
   132  003C64  41                 	db	65
   133  003C65  44                 	db	68
   134  003C66  45                 	db	69
   135  003C67  4F                 	db	79
   136  003C68  52                 	db	82
   137  003C69  45                 	db	69
   138  003C6A  4C                 	db	76
   139  003C6B  20                 	db	32
   140  003C6C  42                 	db	66
   141  003C6D  41                 	db	65
   142  003C6E  4E                 	db	78
   143  003C6F  44                 	db	68
   144  003C70  45                 	db	69
   145  003C71  49                 	db	73
   146  003C72  52                 	db	82
   147  003C73  41                 	db	65
   148  003C74  00                 	db	0
   149  003C75  00                 	db	0
   150  003C76  00                 	db	0
   151  003C77  00                 	db	0
   152  003C78  00                 	db	0
   153                           
   154                           ;initializer for main@F6394
   155  003C79  44                 	db	68
   156  003C7A  41                 	db	65
   157  003C7B  56                 	db	86
   158  003C7C  49                 	db	73
   159  003C7D  44                 	db	68
   160  003C7E  20                 	db	32
   161  003C7F  44                 	db	68
   162  003C80  52                 	db	82
   163  003C81  55                 	db	85
   164  003C82  4D                 	db	77
   165  003C83  4F                 	db	79
   166  003C84  4E                 	db	78
   167  003C85  44                 	db	68
   168  003C86  00                 	db	0
   169  003C87  00                 	db	0
   170  003C88  00                 	db	0
   171  003C89  00                 	db	0
   172  003C8A  00                 	db	0
   173  003C8B  00                 	db	0
   174  003C8C  00                 	db	0
   175  003C8D  00                 	db	0
   176                           
   177                           	psect	nvCOMRAM
   178  00004F                     __pnvCOMRAM:
   179                           	opt callstack 0
   180  00004F                     _timer1ReloadVal:
   181                           	opt callstack 0
   182  00004F                     	ds	2
   183                           
   184                           	psect	nvBANK1
   185  0001B9                     __pnvBANK1:
   186                           	opt callstack 0
   187  0001B9                     _TMR1_InterruptHandler:
   188                           	opt callstack 0
   189  0001B9                     	ds	2
   190  0001BB                     _INT1_InterruptHandler:
   191                           	opt callstack 0
   192  0001BB                     	ds	2
   193  0001BD                     _INT0_InterruptHandler:
   194                           	opt callstack 0
   195  0001BD                     	ds	2
   196  0000                     _CCPR5H	set	3926
   197  0000                     _CCPR5L	set	3925
   198  0000                     _CCP5CON	set	3924
   199  0000                     _ANSELA	set	3896
   200  0000                     _ANSELE	set	3900
   201  0000                     _ANSELB	set	3897
   202  0000                     _ANSELC	set	3898
   203  0000                     _ANSELD	set	3899
   204  0000                     _TMR1	set	4046
   205  0000                     _T1GCONbits	set	4044
   206  0000                     _T1CONbits	set	4045
   207  0000                     _T1CON	set	4045
   208  0000                     _TMR1L	set	4046
   209  0000                     _TMR1H	set	4047
   210  0000                     _T1GCON	set	4044
   211  0000                     _LATDbits	set	3980
   212  0000                     _TRISDbits	set	3989
   213  0000                     _PORTD	set	3971
   214  0000                     _ADCON0bits	set	4034
   215  0000                     _ADRESH	set	4036
   216  0000                     _ADRESL	set	4035
   217  0000                     _ADCON2	set	4032
   218  0000                     _ADCON1	set	4033
   219  0000                     _ADCON0	set	4034
   220  0000                     _PIR1bits	set	3998
   221  0000                     _PIE1bits	set	3997
   222  0000                     _IPR1bits	set	3999
   223  0000                     _RCONbits	set	4048
   224  0000                     _INTCON3bits	set	4080
   225  0000                     _INTCONbits	set	4082
   226  0000                     _INTCON2bits	set	4081
   227  0000                     _WPUB	set	3937
   228  0000                     _TRISD	set	3989
   229  0000                     _TRISC	set	3988
   230  0000                     _TRISB	set	3987
   231  0000                     _TRISA	set	3986
   232  0000                     _TRISE	set	3990
   233  0000                     _LATC	set	3979
   234  0000                     _LATB	set	3978
   235  0000                     _LATA	set	3977
   236  0000                     _LATD	set	3980
   237  0000                     _LATE	set	3981
   238  0000                     _OSCTUNE	set	3995
   239  0000                     _OSCCON2	set	4050
   240  0000                     _OSCCON	set	4051
   241                           
   242                           	psect	smallconst
   243  000600                     __psmallconst:
   244                           	opt callstack 0
   245  000600  00                 	db	0
   246  000601                     STR_6:
   247  000601  45                 	db	69	;'E'
   248  000602  4D                 	db	77	;'M'
   249  000603  45                 	db	69	;'E'
   250  000604  52                 	db	82	;'R'
   251  000605  47                 	db	71	;'G'
   252  000606  45                 	db	69	;'E'
   253  000607  4E                 	db	78	;'N'
   254  000608  43                 	db	67	;'C'
   255  000609  49                 	db	73	;'I'
   256  00060A  41                 	db	65	;'A'
   257  00060B  20                 	db	32
   258  00060C  41                 	db	65	;'A'
   259  00060D  54                 	db	84	;'T'
   260  00060E  49                 	db	73	;'I'
   261  00060F  56                 	db	86	;'V'
   262  000610  41                 	db	65	;'A'
   263  000611  44                 	db	68	;'D'
   264  000612  41                 	db	65	;'A'
   265  000613  20                 	db	32
   266  000614  20                 	db	32
   267  000615  20                 	db	32
   268  000616  20                 	db	32
   269  000617  20                 	db	32
   270  000618  20                 	db	32
   271  000619  20                 	db	32
   272  00061A  20                 	db	32
   273  00061B  20                 	db	32
   274  00061C  20                 	db	32
   275  00061D  20                 	db	32
   276  00061E  20                 	db	32
   277  00061F  00                 	db	0
   278  000620                     STR_5:
   279  000620  53                 	db	83	;'S'
   280  000621  49                 	db	73	;'I'
   281  000622  53                 	db	83	;'S'
   282  000623  54                 	db	84	;'T'
   283  000624  45                 	db	69	;'E'
   284  000625  4D                 	db	77	;'M'
   285  000626  41                 	db	65	;'A'
   286  000627  20                 	db	32
   287  000628  4F                 	db	79	;'O'
   288  000629  4E                 	db	78	;'N'
   289  00062A  20                 	db	32
   290  00062B  20                 	db	32
   291  00062C  20                 	db	32
   292  00062D  20                 	db	32
   293  00062E  20                 	db	32
   294  00062F  20                 	db	32
   295  000630  20                 	db	32
   296  000631  20                 	db	32
   297  000632  20                 	db	32
   298  000633  20                 	db	32
   299  000634  20                 	db	32
   300  000635  20                 	db	32
   301  000636  20                 	db	32
   302  000637  20                 	db	32
   303  000638  20                 	db	32
   304  000639  00                 	db	0
   305  00063A                     STR_4:
   306  00063A  53                 	db	83	;'S'
   307  00063B  49                 	db	73	;'I'
   308  00063C  53                 	db	83	;'S'
   309  00063D  54                 	db	84	;'T'
   310  00063E  45                 	db	69	;'E'
   311  00063F  4D                 	db	77	;'M'
   312  000640  41                 	db	65	;'A'
   313  000641  20                 	db	32
   314  000642  4F                 	db	79	;'O'
   315  000643  46                 	db	70	;'F'
   316  000644  46                 	db	70	;'F'
   317  000645  20                 	db	32
   318  000646  20                 	db	32
   319  000647  20                 	db	32
   320  000648  20                 	db	32
   321  000649  20                 	db	32
   322  00064A  20                 	db	32
   323  00064B  20                 	db	32
   324  00064C  20                 	db	32
   325  00064D  20                 	db	32
   326  00064E  20                 	db	32
   327  00064F  20                 	db	32
   328  000650  20                 	db	32
   329  000651  20                 	db	32
   330  000652  00                 	db	0
   331  000653                     STR_1:
   332  000653  53                 	db	83	;'S'
   333  000654  49                 	db	73	;'I'
   334  000655  53                 	db	83	;'S'
   335  000656  54                 	db	84	;'T'
   336  000657  45                 	db	69	;'E'
   337  000658  4D                 	db	77	;'M'
   338  000659  41                 	db	65	;'A'
   339  00065A  20                 	db	32
   340  00065B  44                 	db	68	;'D'
   341  00065C  45                 	db	69	;'E'
   342  00065D  20                 	db	32
   343  00065E  43                 	db	67	;'C'
   344  00065F  4F                 	db	79	;'O'
   345  000660  4E                 	db	78	;'N'
   346  000661  54                 	db	84	;'T'
   347  000662  52                 	db	82	;'R'
   348  000663  4F                 	db	79	;'O'
   349  000664  4C                 	db	76	;'L'
   350  000665  4F                 	db	79	;'O'
   351  000666  20                 	db	32
   352  000667  44                 	db	68	;'D'
   353  000668  45                 	db	69	;'E'
   354  000669  00                 	db	0
   355  00066A                     STR_7:
   356  00066A  44                 	db	68	;'D'
   357  00066B  65                 	db	101	;'e'
   358  00066C  73                 	db	115	;'s'
   359  00066D  6C                 	db	108	;'l'
   360  00066E  6F                 	db	111	;'o'
   361  00066F  63                 	db	99	;'c'
   362  000670  61                 	db	97	;'a'
   363  000671  6D                 	db	109	;'m'
   364  000672  65                 	db	101	;'e'
   365  000673  6E                 	db	110	;'n'
   366  000674  74                 	db	116	;'t'
   367  000675  6F                 	db	111	;'o'
   368  000676  3D                 	db	61	;'='
   369  000677  20                 	db	32
   370  000678  25                 	db	37
   371  000679  2E                 	db	46
   372  00067A  32                 	db	50	;'2'
   373  00067B  66                 	db	102	;'f'
   374  00067C  20                 	db	32
   375  00067D  20                 	db	32
   376  00067E  20                 	db	32
   377  00067F  00                 	db	0
   378  000680                     STR_2:
   379  000680  55                 	db	85	;'U'
   380  000681  4D                 	db	77	;'M'
   381  000682  20                 	db	32
   382  000683  50                 	db	80	;'P'
   383  000684  52                 	db	82	;'R'
   384  000685  4F                 	db	79	;'O'
   385  000686  43                 	db	67	;'C'
   386  000687  45                 	db	69	;'E'
   387  000688  53                 	db	83	;'S'
   388  000689  53                 	db	83	;'S'
   389  00068A  4F                 	db	79	;'O'
   390  00068B  20                 	db	32
   391  00068C  44                 	db	68	;'D'
   392  00068D  45                 	db	69	;'E'
   393  00068E  20                 	db	32
   394  00068F  49                 	db	73	;'I'
   395  000690  4E                 	db	78	;'N'
   396  000691  4A                 	db	74	;'J'
   397  000692  45                 	db	69	;'E'
   398  000693  00                 	db	0
   399  000694                     STR_8:
   400  000694  49                 	db	73	;'I'
   401  000695  4E                 	db	78	;'N'
   402  000696  46                 	db	70	;'F'
   403  000697  00                 	db	0
   404  000698                     STR_12:
   405  000698  4E                 	db	78	;'N'
   406  000699  41                 	db	65	;'A'
   407  00069A  4E                 	db	78	;'N'
   408  00069B  00                 	db	0
   409  00069C                     STR_9:
   410  00069C  69                 	db	105	;'i'
   411  00069D  6E                 	db	110	;'n'
   412  00069E  66                 	db	102	;'f'
   413  00069F  00                 	db	0
   414  0006A0                     STR_13:
   415  0006A0  6E                 	db	110	;'n'
   416  0006A1  61                 	db	97	;'a'
   417  0006A2  6E                 	db	110	;'n'
   418  0006A3  00                 	db	0
   419  0006A4                     STR_16:
   420  0006A4  6C                 	db	108	;'l'
   421  0006A5  66                 	db	102	;'f'
   422  0006A6  00                 	db	0
   423  0006A7                     STR_3:
   424  0006A7  41                 	db	65	;'A'
   425  0006A8  4F                 	db	79	;'O'
   426  0006A9  00                 	db	0
   427  0000                     
   428                           ; #config settings
   429  0006AA  00                 	db	0	; dummy byte at the end
   430  0000                     
   431                           	psect	cinit
   432  0038F4                     __pcinit:
   433                           	opt callstack 0
   434  0038F4                     start_initialization:
   435                           	opt callstack 0
   436  0038F4                     __initialization:
   437                           	opt callstack 0
   438                           
   439                           ; Initialize objects allocated to BANK1 (42 bytes)
   440                           ; load TBLPTR registers with __pidataBANK1
   441  0038F4  0E64               	movlw	low __pidataBANK1
   442  0038F6  6EF6               	movwf	tblptrl,c
   443  0038F8  0E3C               	movlw	high __pidataBANK1
   444  0038FA  6EF7               	movwf	tblptrh,c
   445  0038FC  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   446  0038FE  6EF8               	movwf	tblptru,c
   447  003900  EE01  F08F         	lfsr	0,__pdataBANK1
   448  003904  EE10 F02A          	lfsr	1,42
   449  003908                     copy_data0:
   450  003908  0009               	tblrd		*+
   451  00390A  CFF5 FFEE          	movff	tablat,postinc0
   452  00390E  50E5               	movf	postdec1,w,c
   453  003910  50E1               	movf	fsr1l,w,c
   454  003912  E1FA               	bnz	copy_data0
   455                           
   456                           ; Clear objects allocated to BANK1 (88 bytes)
   457  003914  EE01  F000         	lfsr	0,__pbssBANK1
   458  003918  0E58               	movlw	88
   459  00391A                     clear_0:
   460  00391A  6AEE               	clrf	postinc0,c
   461  00391C  06E8               	decf	wreg,f,c
   462  00391E  E1FD               	bnz	clear_0
   463                           
   464                           ; Clear objects allocated to BANK0 (3 bytes)
   465  003920  0100               	movlb	0
   466  003922  6BD6               	clrf	(__pbssBANK0+2)& (0+255),b
   467  003924  6BD5               	clrf	(__pbssBANK0+1)& (0+255),b
   468  003926  6BD4               	clrf	__pbssBANK0& (0+255),b
   469                           
   470                           ; Clear objects allocated to COMRAM (12 bytes)
   471  003928  EE00  F043         	lfsr	0,__pbssCOMRAM
   472  00392C  0E0C               	movlw	12
   473  00392E                     clear_1:
   474  00392E  6AEE               	clrf	postinc0,c
   475  003930  06E8               	decf	wreg,f,c
   476  003932  E1FD               	bnz	clear_1
   477  003934                     end_of_initialization:
   478                           	opt callstack 0
   479  003934                     __end_of__initialization:
   480                           	opt callstack 0
   481  003934  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   482  003936  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   483  003938  0E00               	movlw	low (__Lmediumconst shr (0+16))
   484  00393A  6EF8               	movwf	tblptru,c
   485  00393C  0100               	movlb	0
   486  00393E  EFDA  F00F         	goto	_main	;jump to C main() function
   487                           
   488                           	psect	bssCOMRAM
   489  000043                     __pbssCOMRAM:
   490                           	opt callstack 0
   491  000043                     _nout:
   492                           	opt callstack 0
   493  000043                     	ds	2
   494  000045                     _width:
   495                           	opt callstack 0
   496  000045                     	ds	2
   497  000047                     _prec:
   498                           	opt callstack 0
   499  000047                     	ds	2
   500  000049                     _flags:
   501                           	opt callstack 0
   502  000049                     	ds	2
   503  00004B                     _flag_CNT1:
   504                           	opt callstack 0
   505  00004B                     	ds	1
   506  00004C                     _adc_flag:
   507                           	opt callstack 0
   508  00004C                     	ds	1
   509  00004D                     _valor:
   510                           	opt callstack 0
   511  00004D                     	ds	2
   512                           
   513                           	psect	bssBANK0
   514  0000D4                     __pbssBANK0:
   515                           	opt callstack 0
   516  0000D4                     _write_flag:
   517                           	opt callstack 0
   518  0000D4                     	ds	1
   519  0000D5                     _start_flag:
   520                           	opt callstack 0
   521  0000D5                     	ds	1
   522  0000D6                     _emerg_flag:
   523                           	opt callstack 0
   524  0000D6                     	ds	1
   525                           
   526                           	psect	bssBANK1
   527  000100                     __pbssBANK1:
   528                           	opt callstack 0
   529  000100                     floorf@F524:
   530                           	opt callstack 0
   531  000100                     	ds	4
   532  000104                     ___fpclassifyf@F463:
   533                           	opt callstack 0
   534  000104                     	ds	4
   535  000108                     _dbuf:
   536                           	opt callstack 0
   537  000108                     	ds	80
   538                           
   539                           	psect	dataBANK1
   540  00018F                     __pdataBANK1:
   541                           	opt callstack 0
   542  00018F                     main@F6396:
   543                           	opt callstack 0
   544  00018F                     	ds	21
   545  0001A4                     main@F6394:
   546                           	opt callstack 0
   547  0001A4                     	ds	21
   548                           
   549                           	psect	cstackBANK1
   550  000158                     __pcstackBANK1:
   551                           	opt callstack 0
   552  000158                     main@name1:
   553                           	opt callstack 0
   554                           
   555                           ; 21 bytes @ 0x0
   556  000158                     	ds	21
   557  00016D                     main@name2:
   558                           	opt callstack 0
   559                           
   560                           ; 21 bytes @ 0x15
   561  00016D                     	ds	21
   562  000182                     main@valor_analog:
   563                           	opt callstack 0
   564                           
   565                           ; 5 bytes @ 0x2A
   566  000182                     	ds	5
   567  000187                     main@angulo:
   568                           	opt callstack 0
   569                           
   570                           ; 4 bytes @ 0x2F
   571  000187                     	ds	4
   572  00018B                     main@i:
   573                           	opt callstack 0
   574                           
   575                           ; 2 bytes @ 0x33
   576  00018B                     	ds	2
   577  00018D                     main@j:
   578                           	opt callstack 0
   579                           
   580                           ; 2 bytes @ 0x35
   581  00018D                     	ds	2
   582                           
   583                           	psect	cstackBANK0
   584  000060                     __pcstackBANK0:
   585                           	opt callstack 0
   586  000060                     ?_efgtoa:
   587                           	opt callstack 0
   588  000060                     efgtoa@fp:
   589                           	opt callstack 0
   590                           
   591                           ; 2 bytes @ 0x0
   592  000060                     	ds	2
   593  000062                     efgtoa@f:
   594                           	opt callstack 0
   595                           
   596                           ; 4 bytes @ 0x2
   597  000062                     	ds	4
   598  000066                     efgtoa@c:
   599                           	opt callstack 0
   600                           
   601                           ; 1 bytes @ 0x6
   602  000066                     	ds	1
   603  000067                     ??_efgtoa:
   604                           
   605                           ; 1 bytes @ 0x7
   606  000067                     	ds	5
   607  00006C                     efgtoa@ou:
   608                           	opt callstack 0
   609                           
   610                           ; 4 bytes @ 0xC
   611  00006C                     	ds	4
   612  000070                     _efgtoa$1249:
   613                           	opt callstack 0
   614                           
   615                           ; 2 bytes @ 0x10
   616  000070                     	ds	2
   617  000072                     _efgtoa$1250:
   618                           	opt callstack 0
   619                           
   620                           ; 2 bytes @ 0x12
   621  000072                     	ds	2
   622  000074                     _efgtoa$1255:
   623                           	opt callstack 0
   624                           
   625                           ; 2 bytes @ 0x14
   626  000074                     	ds	2
   627  000076                     _efgtoa$1259:
   628                           	opt callstack 0
   629                           
   630                           ; 2 bytes @ 0x16
   631  000076                     	ds	2
   632  000078                     _efgtoa$1260:
   633                           	opt callstack 0
   634                           
   635                           ; 2 bytes @ 0x18
   636  000078                     	ds	2
   637  00007A                     _efgtoa$1261:
   638                           	opt callstack 0
   639                           
   640                           ; 2 bytes @ 0x1A
   641  00007A                     	ds	2
   642  00007C                     efgtoa@t:
   643                           	opt callstack 0
   644                           
   645                           ; 2 bytes @ 0x1C
   646  00007C                     	ds	2
   647  00007E                     efgtoa@pp:
   648                           	opt callstack 0
   649                           
   650                           ; 2 bytes @ 0x1E
   651  00007E                     	ds	2
   652  000080                     efgtoa@m:
   653                           	opt callstack 0
   654                           
   655                           ; 2 bytes @ 0x20
   656  000080                     	ds	2
   657  000082                     efgtoa@ne:
   658                           	opt callstack 0
   659                           
   660                           ; 2 bytes @ 0x22
   661  000082                     	ds	2
   662  000084                     efgtoa@d:
   663                           	opt callstack 0
   664                           
   665                           ; 2 bytes @ 0x24
   666  000084                     	ds	2
   667  000086                     efgtoa@sign:
   668                           	opt callstack 0
   669                           
   670                           ; 2 bytes @ 0x26
   671  000086                     	ds	2
   672  000088                     efgtoa@p:
   673                           	opt callstack 0
   674                           
   675                           ; 2 bytes @ 0x28
   676  000088                     	ds	2
   677  00008A                     efgtoa@nmode:
   678                           	opt callstack 0
   679                           
   680                           ; 1 bytes @ 0x2A
   681  00008A                     	ds	1
   682  00008B                     efgtoa@w:
   683                           	opt callstack 0
   684                           
   685                           ; 2 bytes @ 0x2B
   686  00008B                     	ds	2
   687  00008D                     efgtoa@mode:
   688                           	opt callstack 0
   689                           
   690                           ; 1 bytes @ 0x2D
   691  00008D                     	ds	1
   692  00008E                     efgtoa@h:
   693                           	opt callstack 0
   694                           
   695                           ; 4 bytes @ 0x2E
   696  00008E                     	ds	4
   697  000092                     efgtoa@l:
   698                           	opt callstack 0
   699                           
   700                           ; 4 bytes @ 0x32
   701  000092                     	ds	4
   702  000096                     efgtoa@i:
   703                           	opt callstack 0
   704                           
   705                           ; 2 bytes @ 0x36
   706  000096                     	ds	2
   707  000098                     efgtoa@g:
   708                           	opt callstack 0
   709                           
   710                           ; 4 bytes @ 0x38
   711  000098                     	ds	4
   712  00009C                     efgtoa@e:
   713                           	opt callstack 0
   714                           
   715                           ; 2 bytes @ 0x3C
   716  00009C                     	ds	2
   717  00009E                     efgtoa@n:
   718                           	opt callstack 0
   719                           
   720                           ; 2 bytes @ 0x3E
   721  00009E                     	ds	2
   722  0000A0                     efgtoa@u:
   723                           	opt callstack 0
   724                           
   725                           ; 4 bytes @ 0x40
   726  0000A0                     	ds	4
   727  0000A4                     ?_vfpfcnvrt:
   728                           	opt callstack 0
   729  0000A4                     vfpfcnvrt@fp:
   730                           	opt callstack 0
   731                           
   732                           ; 2 bytes @ 0x44
   733  0000A4                     	ds	2
   734  0000A6                     vfpfcnvrt@fmt:
   735                           	opt callstack 0
   736                           
   737                           ; 2 bytes @ 0x46
   738  0000A6                     	ds	2
   739  0000A8                     vfpfcnvrt@ap:
   740                           	opt callstack 0
   741                           
   742                           ; 2 bytes @ 0x48
   743  0000A8                     	ds	2
   744  0000AA                     ??_vfpfcnvrt:
   745                           
   746                           ; 1 bytes @ 0x4A
   747  0000AA                     	ds	4
   748  0000AE                     _vfpfcnvrt$1275:
   749                           	opt callstack 0
   750                           
   751                           ; 2 bytes @ 0x4E
   752  0000AE                     	ds	2
   753  0000B0                     _vfpfcnvrt$1279:
   754                           	opt callstack 0
   755                           
   756                           ; 2 bytes @ 0x50
   757  0000B0                     	ds	2
   758  0000B2                     vfpfcnvrt@f:
   759                           	opt callstack 0
   760                           
   761                           ; 4 bytes @ 0x52
   762  0000B2                     	ds	4
   763  0000B6                     vfpfcnvrt@ct:
   764                           	opt callstack 0
   765                           
   766                           ; 3 bytes @ 0x56
   767  0000B6                     	ds	3
   768  0000B9                     vfpfcnvrt@c:
   769                           	opt callstack 0
   770                           
   771                           ; 1 bytes @ 0x59
   772  0000B9                     	ds	1
   773  0000BA                     ?_vfprintf:
   774                           	opt callstack 0
   775  0000BA                     vfprintf@fp:
   776                           	opt callstack 0
   777                           
   778                           ; 2 bytes @ 0x5A
   779  0000BA                     	ds	2
   780  0000BC                     vfprintf@fmt:
   781                           	opt callstack 0
   782                           
   783                           ; 2 bytes @ 0x5C
   784  0000BC                     	ds	2
   785  0000BE                     vfprintf@ap:
   786                           	opt callstack 0
   787                           
   788                           ; 2 bytes @ 0x5E
   789  0000BE                     	ds	2
   790  0000C0                     ?_sprintf:
   791                           	opt callstack 0
   792  0000C0                     sprintf@s:
   793                           	opt callstack 0
   794                           
   795                           ; 2 bytes @ 0x60
   796  0000C0                     	ds	2
   797  0000C2                     sprintf@fmt:
   798                           	opt callstack 0
   799                           
   800                           ; 2 bytes @ 0x62
   801  0000C2                     	ds	8
   802  0000CA                     sprintf@ap:
   803                           	opt callstack 0
   804                           
   805                           ; 2 bytes @ 0x6A
   806  0000CA                     	ds	2
   807  0000CC                     sprintf@f:
   808                           	opt callstack 0
   809                           
   810                           ; 6 bytes @ 0x6C
   811  0000CC                     	ds	6
   812  0000D2                     ??_main:
   813                           
   814                           ; 1 bytes @ 0x72
   815  0000D2                     	ds	2
   816                           
   817                           	psect	cstackCOMRAM
   818  000001                     __pcstackCOMRAM:
   819                           	opt callstack 0
   820  000001                     ?_ADC_GetConversionResult:
   821                           	opt callstack 0
   822  000001                     TMR1_WriteTimer@timerVal:
   823                           	opt callstack 0
   824                           
   825                           ; 2 bytes @ 0x0
   826  000001                     	ds	2
   827  000003                     ??_ADC_GetConversionResult:
   828  000003                     
   829                           ; 1 bytes @ 0x2
   830  000003                     	ds	2
   831  000005                     ADC_ISR@anval:
   832                           	opt callstack 0
   833                           
   834                           ; 2 bytes @ 0x4
   835  000005                     	ds	2
   836  000007                     ??_INTERRUPT_InterruptManagerHigh:
   837                           
   838                           ; 1 bytes @ 0x6
   839  000007                     	ds	2
   840  000009                     ??_INTERRUPT_InterruptManagerLow:
   841  000009                     
   842                           ; 1 bytes @ 0x8
   843  000009                     	ds	5
   844  00000E                     ??_BusyXLCD:
   845  00000E                     ??_SetCGRamAddr:
   846  00000E                     ??_DelayPORXLCD:
   847  00000E                     ??_DelayXLCD:
   848  00000E                     ?_strlen:
   849                           	opt callstack 0
   850  00000E                     ?___fpclassifyf:
   851                           	opt callstack 0
   852  00000E                     ?_isupper:
   853                           	opt callstack 0
   854  00000E                     ?_isdigit:
   855                           	opt callstack 0
   856  00000E                     ?_strncmp:
   857                           	opt callstack 0
   858  00000E                     ?_isspace:
   859                           	opt callstack 0
   860  00000E                     ?___wmul:
   861                           	opt callstack 0
   862  00000E                     ?___awdiv:
   863                           	opt callstack 0
   864  00000E                     ?___awmod:
   865                           	opt callstack 0
   866  00000E                     ?___fladd:
   867                           	opt callstack 0
   868  00000E                     ?___fldiv:
   869                           	opt callstack 0
   870  00000E                     ?___flneg:
   871                           	opt callstack 0
   872  00000E                     ?___fltol:
   873                           	opt callstack 0
   874  00000E                     ?___xxtofl:
   875                           	opt callstack 0
   876  00000E                     WriteCmdXLCD@cmd:
   877                           	opt callstack 0
   878  00000E                     WriteDataXLCD@data:
   879                           	opt callstack 0
   880  00000E                     INT0_SetInterruptHandler@InterruptHandler:
   881                           	opt callstack 0
   882  00000E                     INT1_SetInterruptHandler@InterruptHandler:
   883                           	opt callstack 0
   884  00000E                     TMR1_SetInterruptHandler@InterruptHandler:
   885                           	opt callstack 0
   886  00000E                     ___wmul@multiplier:
   887                           	opt callstack 0
   888  00000E                     ___awdiv@dividend:
   889                           	opt callstack 0
   890  00000E                     ___awmod@dividend:
   891                           	opt callstack 0
   892  00000E                     isdigit@c:
   893                           	opt callstack 0
   894  00000E                     isspace@c:
   895                           	opt callstack 0
   896  00000E                     isupper@c:
   897                           	opt callstack 0
   898  00000E                     fputc@c:
   899                           	opt callstack 0
   900  00000E                     strcpy@dest:
   901                           	opt callstack 0
   902  00000E                     strlen@s:
   903                           	opt callstack 0
   904  00000E                     strncmp@_l:
   905                           	opt callstack 0
   906  00000E                     ___fleq@ff1:
   907                           	opt callstack 0
   908  00000E                     ___flneg@f1:
   909                           	opt callstack 0
   910  00000E                     ___fltol@f1:
   911                           	opt callstack 0
   912  00000E                     ___fladd@b:
   913                           	opt callstack 0
   914  00000E                     ___fldiv@b:
   915                           	opt callstack 0
   916  00000E                     ___xxtofl@val:
   917                           	opt callstack 0
   918  00000E                     ___fpclassifyf@x:
   919                           	opt callstack 0
   920                           
   921                           ; 4 bytes @ 0xD
   922  00000E                     	ds	1
   923  00000F                     putsXLCD@buffer:
   924                           	opt callstack 0
   925                           
   926                           ; 2 bytes @ 0xE
   927  00000F                     	ds	1
   928  000010                     ??_isupper:
   929  000010                     ??_isdigit:
   930  000010                     ??_isspace:
   931  000010                     ___wmul@multiplicand:
   932                           	opt callstack 0
   933  000010                     ___awdiv@divisor:
   934                           	opt callstack 0
   935  000010                     ___awmod@divisor:
   936                           	opt callstack 0
   937  000010                     fputc@fp:
   938                           	opt callstack 0
   939  000010                     strcpy@src:
   940                           	opt callstack 0
   941  000010                     strlen@a:
   942                           	opt callstack 0
   943  000010                     strncmp@_r:
   944                           	opt callstack 0
   945                           
   946                           ; 2 bytes @ 0xF
   947  000010                     	ds	1
   948  000011                     SetCGRamAddr@CGaddr:
   949                           	opt callstack 0
   950                           
   951                           ; 1 bytes @ 0x10
   952  000011                     	ds	1
   953  000012                     ??_fputc:
   954  000012                     ??___fpclassifyf:
   955  000012                     ??_strcpy:
   956  000012                     ??___fltol:
   957  000012                     ??___xxtofl:
   958  000012                     ___awdiv@counter:
   959                           	opt callstack 0
   960  000012                     ___awmod@counter:
   961                           	opt callstack 0
   962  000012                     ___wmul@product:
   963                           	opt callstack 0
   964  000012                     strncmp@n:
   965                           	opt callstack 0
   966  000012                     ___fleq@ff2:
   967                           	opt callstack 0
   968  000012                     ___fladd@a:
   969                           	opt callstack 0
   970  000012                     ___fldiv@a:
   971                           	opt callstack 0
   972                           
   973                           ; 4 bytes @ 0x11
   974  000012                     	ds	1
   975  000013                     ___awdiv@sign:
   976                           	opt callstack 0
   977  000013                     ___awmod@sign:
   978                           	opt callstack 0
   979                           
   980                           ; 1 bytes @ 0x12
   981  000013                     	ds	1
   982  000014                     ??_strncmp:
   983  000014                     ?_tolower:
   984                           	opt callstack 0
   985  000014                     _isspace$1781:
   986                           	opt callstack 0
   987  000014                     ___awdiv@quotient:
   988                           	opt callstack 0
   989  000014                     strcpy@s:
   990                           	opt callstack 0
   991  000014                     tolower@c:
   992                           	opt callstack 0
   993                           
   994                           ; 2 bytes @ 0x13
   995  000014                     	ds	1
   996  000015                     ?_atoi:
   997                           	opt callstack 0
   998  000015                     atoi@s:
   999                           	opt callstack 0
  1000  000015                     strncmp@l:
  1001                           	opt callstack 0
  1002                           
  1003                           ; 2 bytes @ 0x14
  1004  000015                     	ds	1
  1005  000016                     ??_tolower:
  1006  000016                     ??___fladd:
  1007  000016                     ??___fldiv:
  1008  000016                     ??___fleq:
  1009  000016                     ___fltol@sign1:
  1010                           	opt callstack 0
  1011  000016                     ___xxtofl@sign:
  1012                           	opt callstack 0
  1013  000016                     ___fpclassifyf@e:
  1014                           	opt callstack 0
  1015  000016                     strcpy@d:
  1016                           	opt callstack 0
  1017                           
  1018                           ; 2 bytes @ 0x15
  1019  000016                     	ds	1
  1020  000017                     ??_atoi:
  1021  000017                     ___fltol@exp1:
  1022                           	opt callstack 0
  1023  000017                     ___xxtofl@exp:
  1024                           	opt callstack 0
  1025  000017                     fputs@s:
  1026                           	opt callstack 0
  1027  000017                     strncmp@r:
  1028                           	opt callstack 0
  1029                           
  1030                           ; 2 bytes @ 0x16
  1031  000017                     	ds	1
  1032  000018                     ___xxtofl@arg:
  1033                           	opt callstack 0
  1034  000018                     ___fpclassifyf@u:
  1035                           	opt callstack 0
  1036                           
  1037                           ; 4 bytes @ 0x17
  1038  000018                     	ds	1
  1039  000019                     fputs@fp:
  1040                           	opt callstack 0
  1041                           
  1042                           ; 2 bytes @ 0x18
  1043  000019                     	ds	1
  1044  00001A                     ___fladd@signs:
  1045                           	opt callstack 0
  1046  00001A                     _tolower$1866:
  1047                           	opt callstack 0
  1048  00001A                     ___fldiv@rem:
  1049                           	opt callstack 0
  1050                           
  1051                           ; 4 bytes @ 0x19
  1052  00001A                     	ds	1
  1053  00001B                     ___fladd@aexp:
  1054                           	opt callstack 0
  1055  00001B                     fputs@c:
  1056                           	opt callstack 0
  1057  00001B                     atoi@neg:
  1058                           	opt callstack 0
  1059                           
  1060                           ; 2 bytes @ 0x1A
  1061  00001B                     	ds	1
  1062  00001C                     ?___flmul:
  1063                           	opt callstack 0
  1064  00001C                     ___fladd@bexp:
  1065                           	opt callstack 0
  1066  00001C                     fputs@i:
  1067                           	opt callstack 0
  1068  00001C                     ___flmul@b:
  1069                           	opt callstack 0
  1070                           
  1071                           ; 4 bytes @ 0x1B
  1072  00001C                     	ds	1
  1073  00001D                     ___fladd@grs:
  1074                           	opt callstack 0
  1075  00001D                     _atoi$1750:
  1076                           	opt callstack 0
  1077                           
  1078                           ; 2 bytes @ 0x1C
  1079  00001D                     	ds	1
  1080  00001E                     ?_pad:
  1081                           	opt callstack 0
  1082  00001E                     ___fldiv@sign:
  1083                           	opt callstack 0
  1084  00001E                     pad@fp:
  1085                           	opt callstack 0
  1086                           
  1087                           ; 2 bytes @ 0x1D
  1088  00001E                     	ds	1
  1089  00001F                     ___fldiv@new_exp:
  1090                           	opt callstack 0
  1091  00001F                     _atoi$1752:
  1092                           	opt callstack 0
  1093                           
  1094                           ; 2 bytes @ 0x1E
  1095  00001F                     	ds	1
  1096  000020                     pad@buf:
  1097                           	opt callstack 0
  1098  000020                     ___flmul@a:
  1099                           	opt callstack 0
  1100                           
  1101                           ; 4 bytes @ 0x1F
  1102  000020                     	ds	1
  1103  000021                     _atoi$1751:
  1104                           	opt callstack 0
  1105  000021                     ___fldiv@grs:
  1106                           	opt callstack 0
  1107                           
  1108                           ; 4 bytes @ 0x20
  1109  000021                     	ds	1
  1110  000022                     pad@p:
  1111                           	opt callstack 0
  1112  000022                     atoi@n:
  1113                           	opt callstack 0
  1114                           
  1115                           ; 2 bytes @ 0x21
  1116  000022                     	ds	2
  1117  000024                     ??___flmul:
  1118  000024                     ??_pad:
  1119                           
  1120                           ; 1 bytes @ 0x23
  1121  000024                     	ds	1
  1122  000025                     ___fldiv@bexp:
  1123                           	opt callstack 0
  1124  000025                     pad@i:
  1125                           	opt callstack 0
  1126                           
  1127                           ; 2 bytes @ 0x24
  1128  000025                     	ds	1
  1129  000026                     ___fldiv@aexp:
  1130                           	opt callstack 0
  1131                           
  1132                           ; 1 bytes @ 0x25
  1133  000026                     	ds	1
  1134  000027                     ?_floorf:
  1135                           	opt callstack 0
  1136  000027                     pad@w:
  1137                           	opt callstack 0
  1138  000027                     floorf@x:
  1139                           	opt callstack 0
  1140                           
  1141                           ; 4 bytes @ 0x26
  1142  000027                     	ds	1
  1143  000028                     ___flmul@sign:
  1144                           	opt callstack 0
  1145                           
  1146                           ; 1 bytes @ 0x27
  1147  000028                     	ds	1
  1148  000029                     ___flmul@aexp:
  1149                           	opt callstack 0
  1150                           
  1151                           ; 1 bytes @ 0x28
  1152  000029                     	ds	1
  1153  00002A                     ___flmul@grs:
  1154                           	opt callstack 0
  1155                           
  1156                           ; 4 bytes @ 0x29
  1157  00002A                     	ds	1
  1158  00002B                     ??_floorf:
  1159                           
  1160                           ; 1 bytes @ 0x2A
  1161  00002B                     	ds	3
  1162  00002E                     ___flmul@bexp:
  1163                           	opt callstack 0
  1164                           
  1165                           ; 1 bytes @ 0x2D
  1166  00002E                     	ds	1
  1167  00002F                     ___flmul@prod:
  1168                           	opt callstack 0
  1169                           
  1170                           ; 4 bytes @ 0x2E
  1171  00002F                     	ds	2
  1172  000031                     floorf@m:
  1173                           	opt callstack 0
  1174                           
  1175                           ; 4 bytes @ 0x30
  1176  000031                     	ds	2
  1177  000033                     ___flmul@temp:
  1178                           	opt callstack 0
  1179                           
  1180                           ; 2 bytes @ 0x32
  1181  000033                     	ds	2
  1182  000035                     ?___flsub:
  1183                           	opt callstack 0
  1184  000035                     floorf@e:
  1185                           	opt callstack 0
  1186  000035                     ___flge@ff1:
  1187                           	opt callstack 0
  1188  000035                     ___flsub@b:
  1189                           	opt callstack 0
  1190                           
  1191                           ; 4 bytes @ 0x34
  1192  000035                     	ds	2
  1193  000037                     floorf@u:
  1194                           	opt callstack 0
  1195                           
  1196                           ; 4 bytes @ 0x36
  1197  000037                     	ds	2
  1198  000039                     ___flge@ff2:
  1199                           	opt callstack 0
  1200  000039                     ___flsub@a:
  1201                           	opt callstack 0
  1202                           
  1203                           ; 4 bytes @ 0x38
  1204  000039                     	ds	4
  1205  00003D                     ??___flge:
  1206                           
  1207                           ; 1 bytes @ 0x3C
  1208  00003D                     	ds	4
  1209  000041                     vfprintf@cfmt:
  1210                           	opt callstack 0
  1211                           
  1212                           ; 2 bytes @ 0x40
  1213  000041                     	ds	2
  1214  000043                     
  1215                           ; 1 bytes @ 0x42
  1216 ;;
  1217 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1218 ;;
  1219 ;; *************** function _main *****************
  1220 ;; Defined at:
  1221 ;;		line 127 in file "main.c"
  1222 ;; Parameters:    Size  Location     Type
  1223 ;;		None
  1224 ;; Auto vars:     Size  Location     Type
  1225 ;;  valor_analog    5   42[BANK1 ] unsigned char [5]
  1226 ;;  angulo          4   47[BANK1 ] float 
  1227 ;;  name2          21   21[BANK1 ] unsigned char [21]
  1228 ;;  name1          21    0[BANK1 ] unsigned char [21]
  1229 ;;  j               2   53[BANK1 ] int 
  1230 ;;  i               2   51[BANK1 ] int 
  1231 ;; Return value:  Size  Location     Type
  1232 ;;                  1    wreg      void 
  1233 ;; Registers used:
  1234 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1235 ;; Tracked objects:
  1236 ;;		On entry : 0/0
  1237 ;;		On exit  : 0/0
  1238 ;;		Unchanged: 0/0
  1239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1240 ;;      Params:         0       0       0       0       0       0       0
  1241 ;;      Locals:         0       0      55       0       0       0       0
  1242 ;;      Temps:          0       2       0       0       0       0       0
  1243 ;;      Totals:         0       2      55       0       0       0       0
  1244 ;;Total ram usage:       57 bytes
  1245 ;; Hardware stack levels required when called:   16
  1246 ;; This function calls:
  1247 ;;		_BusyXLCD
  1248 ;;		_CGRamAddr0
  1249 ;;		_INT0_SetInterruptHandler
  1250 ;;		_INT1_SetInterruptHandler
  1251 ;;		_OpenXLCD
  1252 ;;		_SYSTEM_Initialize
  1253 ;;		_TMR1_SetInterruptHandler
  1254 ;;		_WriteCmdXLCD
  1255 ;;		_WriteDataXLCD
  1256 ;;		___flmul
  1257 ;;		___xxtofl
  1258 ;;		_putsXLCD
  1259 ;;		_sprintf
  1260 ;; This function is called by:
  1261 ;;		Startup code after reset
  1262 ;; This function uses a non-reentrant model
  1263 ;;
  1264                           
  1265                           	psect	text0
  1266  001FB4                     __ptext0:
  1267                           	opt callstack 0
  1268  001FB4                     _main:
  1269                           	opt callstack 15
  1270  001FB4                     
  1271                           ;main.c: 130:         SYSTEM_Initialize();
  1272  001FB4  EC96  F01E         	call	_SYSTEM_Initialize	;wreg free
  1273  001FB8                     
  1274                           ;main.c: 133:         char name1[21] = "DAVID DRUMOND";
  1275  001FB8  EE21  F0A4         	lfsr	2,main@F6394
  1276  001FBC  EE11  F058         	lfsr	1,main@name1
  1277  001FC0  0E14               	movlw	20
  1278  001FC2                     u8591:
  1279  001FC2  CFDB FFE3          	movff	plusw2,plusw1
  1280  001FC6  06E8               	decf	wreg,f,c
  1281  001FC8  E2FC               	bc	u8591
  1282  001FCA                     
  1283                           ;main.c: 134:         char name2[21] = "ADEOREL BANDEIRA";
  1284  001FCA  EE21  F08F         	lfsr	2,main@F6396
  1285  001FCE  EE11  F06D         	lfsr	1,main@name2
  1286  001FD2  0E14               	movlw	20
  1287  001FD4                     u8601:
  1288  001FD4  CFDB FFE3          	movff	plusw2,plusw1
  1289  001FD8  06E8               	decf	wreg,f,c
  1290  001FDA  E2FC               	bc	u8601
  1291                           
  1292                           ;main.c: 137:         int i;;main.c: 138:         int j;;main.c: 145:     OpenXLCD(0b001
      +                          01111 & 0b00111011);
  1293  001FDC  0E2B               	movlw	43
  1294  001FDE  EC2A  F016         	call	_OpenXLCD
  1295  001FE2                     l6948:
  1296  001FE2  ECC9  F01E         	call	_BusyXLCD	;wreg free
  1297  001FE6  0900               	iorlw	0
  1298  001FE8  A4D8               	btfss	status,2,c
  1299  001FEA  EFF9  F00F         	goto	u8611
  1300  001FEE  EFFB  F00F         	goto	u8610
  1301  001FF2                     u8611:
  1302  001FF2  EFF1  F00F         	goto	l6948
  1303  001FF6                     u8610:
  1304  001FF6                     
  1305                           ;main.c: 147:     WriteCmdXLCD(0b00001111 & 0b00001101 & 0b00001110);
  1306  001FF6  0E0C               	movlw	12
  1307  001FF8  EC06  F01D         	call	_WriteCmdXLCD
  1308  001FFC                     l6952:
  1309  001FFC  ECC9  F01E         	call	_BusyXLCD	;wreg free
  1310  002000  0900               	iorlw	0
  1311  002002  A4D8               	btfss	status,2,c
  1312  002004  EF06  F010         	goto	u8621
  1313  002008  EF08  F010         	goto	u8620
  1314  00200C                     u8621:
  1315  00200C  EFFE  F00F         	goto	l6952
  1316  002010                     u8620:
  1317  002010                     
  1318                           ;main.c: 149:     WriteCmdXLCD(0b00010111);
  1319  002010  0E17               	movlw	23
  1320  002012  EC06  F01D         	call	_WriteCmdXLCD
  1321  002016                     l6956:
  1322  002016  ECC9  F01E         	call	_BusyXLCD	;wreg free
  1323  00201A  0900               	iorlw	0
  1324  00201C  A4D8               	btfss	status,2,c
  1325  00201E  EF13  F010         	goto	u8631
  1326  002022  EF15  F010         	goto	u8630
  1327  002026                     u8631:
  1328  002026  EF0B  F010         	goto	l6956
  1329  00202A                     u8630:
  1330  00202A                     
  1331                           ;main.c: 151:     WriteCmdXLCD(0b00000001);
  1332  00202A  0E01               	movlw	1
  1333  00202C  EC06  F01D         	call	_WriteCmdXLCD
  1334  002030                     l6960:
  1335  002030  ECC9  F01E         	call	_BusyXLCD	;wreg free
  1336  002034  0900               	iorlw	0
  1337  002036  A4D8               	btfss	status,2,c
  1338  002038  EF20  F010         	goto	u8641
  1339  00203C  EF22  F010         	goto	u8640
  1340  002040                     u8641:
  1341  002040  EF18  F010         	goto	l6960
  1342  002044                     u8640:
  1343  002044                     
  1344                           ;main.c: 153:     CGRamAddr0();
  1345  002044  ECB4  F017         	call	_CGRamAddr0	;wreg free
  1346                           
  1347                           ;main.c: 155:     WriteCmdXLCD(0b10000000);
  1348  002048  0E80               	movlw	128
  1349  00204A  EC06  F01D         	call	_WriteCmdXLCD
  1350  00204E                     l6964:
  1351  00204E  ECC9  F01E         	call	_BusyXLCD	;wreg free
  1352  002052  0900               	iorlw	0
  1353  002054  A4D8               	btfss	status,2,c
  1354  002056  EF2F  F010         	goto	u8651
  1355  00205A  EF31  F010         	goto	u8650
  1356  00205E                     u8651:
  1357  00205E  EF27  F010         	goto	l6964
  1358  002062                     u8650:
  1359  002062                     
  1360                           ;main.c: 157:     putsXLCD(name1);
  1361  002062  0E58               	movlw	low main@name1
  1362  002064  6E0F               	movwf	putsXLCD@buffer^0,c
  1363  002066  0E01               	movlw	high main@name1
  1364  002068  6E10               	movwf	(putsXLCD@buffer+1)^0,c
  1365  00206A  EC33  F01B         	call	_putsXLCD	;wreg free
  1366  00206E                     l6968:
  1367  00206E  ECC9  F01E         	call	_BusyXLCD	;wreg free
  1368  002072  0900               	iorlw	0
  1369  002074  A4D8               	btfss	status,2,c
  1370  002076  EF3F  F010         	goto	u8661
  1371  00207A  EF41  F010         	goto	u8660
  1372  00207E                     u8661:
  1373  00207E  EF37  F010         	goto	l6968
  1374  002082                     u8660:
  1375  002082                     
  1376                           ;main.c: 159:     WriteCmdXLCD(0b11000000);
  1377  002082  0EC0               	movlw	192
  1378  002084  EC06  F01D         	call	_WriteCmdXLCD
  1379  002088                     l6972:
  1380  002088  ECC9  F01E         	call	_BusyXLCD	;wreg free
  1381  00208C  0900               	iorlw	0
  1382  00208E  A4D8               	btfss	status,2,c
  1383  002090  EF4C  F010         	goto	u8671
  1384  002094  EF4E  F010         	goto	u8670
  1385  002098                     u8671:
  1386  002098  EF44  F010         	goto	l6972
  1387  00209C                     u8670:
  1388  00209C                     
  1389                           ;main.c: 161:     putsXLCD(name2);
  1390  00209C  0E6D               	movlw	low main@name2
  1391  00209E  6E0F               	movwf	putsXLCD@buffer^0,c
  1392  0020A0  0E01               	movlw	high main@name2
  1393  0020A2  6E10               	movwf	(putsXLCD@buffer+1)^0,c
  1394  0020A4  EC33  F01B         	call	_putsXLCD	;wreg free
  1395  0020A8                     
  1396                           ;main.c: 162:     _delay((unsigned long)((500)*(12000000/4000.0)));
  1397  0020A8  0E08               	movlw	8
  1398  0020AA  0100               	movlb	0	; () banked
  1399  0020AC  6FD3               	movwf	(??_main+1)& (0+255),b
  1400  0020AE  0E9D               	movlw	157
  1401  0020B0  6FD2               	movwf	??_main& (0+255),b
  1402  0020B2  0E05               	movlw	5
  1403  0020B4                     u8847:
  1404  0020B4  2EE8               	decfsz	wreg,f,c
  1405  0020B6  D7FE               	bra	u8847
  1406  0020B8  2FD2               	decfsz	??_main& (0+255),f,b
  1407  0020BA  D7FC               	bra	u8847
  1408  0020BC  2FD3               	decfsz	(??_main+1)& (0+255),f,b
  1409  0020BE  D7FA               	bra	u8847
  1410  0020C0  D000               	nop2	
  1411  0020C2                     
  1412                           ;main.c: 164:     WriteCmdXLCD(0b00000001);
  1413  0020C2  0E01               	movlw	1
  1414  0020C4  EC06  F01D         	call	_WriteCmdXLCD
  1415  0020C8                     l6980:
  1416  0020C8  ECC9  F01E         	call	_BusyXLCD	;wreg free
  1417  0020CC  0900               	iorlw	0
  1418  0020CE  A4D8               	btfss	status,2,c
  1419  0020D0  EF6C  F010         	goto	u8681
  1420  0020D4  EF6E  F010         	goto	u8680
  1421  0020D8                     u8681:
  1422  0020D8  EF64  F010         	goto	l6980
  1423  0020DC                     u8680:
  1424  0020DC                     
  1425                           ;main.c: 167:     WriteCmdXLCD(0b10000000);
  1426  0020DC  0E80               	movlw	128
  1427  0020DE  EC06  F01D         	call	_WriteCmdXLCD
  1428  0020E2                     
  1429                           ;main.c: 168:     putsXLCD("SISTEMA DE CONTROLO DE");
  1430  0020E2  0E53               	movlw	low STR_1
  1431  0020E4  6E0F               	movwf	putsXLCD@buffer^0,c
  1432  0020E6  0E06               	movlw	high STR_1
  1433  0020E8  6E10               	movwf	(putsXLCD@buffer+1)^0,c
  1434  0020EA  EC33  F01B         	call	_putsXLCD	;wreg free
  1435  0020EE                     l6986:
  1436  0020EE  ECC9  F01E         	call	_BusyXLCD	;wreg free
  1437  0020F2  0900               	iorlw	0
  1438  0020F4  A4D8               	btfss	status,2,c
  1439  0020F6  EF7F  F010         	goto	u8691
  1440  0020FA  EF81  F010         	goto	u8690
  1441  0020FE                     u8691:
  1442  0020FE  EF77  F010         	goto	l6986
  1443  002102                     u8690:
  1444  002102                     
  1445                           ;main.c: 171:     WriteCmdXLCD(0b11000000);
  1446  002102  0EC0               	movlw	192
  1447  002104  EC06  F01D         	call	_WriteCmdXLCD
  1448  002108                     
  1449                           ;main.c: 172:     putsXLCD("UM PROCESSO DE INJE");
  1450  002108  0E80               	movlw	low STR_2
  1451  00210A  6E0F               	movwf	putsXLCD@buffer^0,c
  1452  00210C  0E06               	movlw	high STR_2
  1453  00210E  6E10               	movwf	(putsXLCD@buffer+1)^0,c
  1454  002110  EC33  F01B         	call	_putsXLCD	;wreg free
  1455  002114                     l6992:
  1456  002114  ECC9  F01E         	call	_BusyXLCD	;wreg free
  1457  002118  0900               	iorlw	0
  1458  00211A  A4D8               	btfss	status,2,c
  1459  00211C  EF92  F010         	goto	u8701
  1460  002120  EF94  F010         	goto	u8700
  1461  002124                     u8701:
  1462  002124  EF8A  F010         	goto	l6992
  1463  002128                     u8700:
  1464  002128                     
  1465                           ;main.c: 174:      WriteDataXLCD(0b00000000);
  1466  002128  0E00               	movlw	0
  1467  00212A  EC25  F01D         	call	_WriteDataXLCD
  1468  00212E                     l6996:
  1469  00212E  ECC9  F01E         	call	_BusyXLCD	;wreg free
  1470  002132  0900               	iorlw	0
  1471  002134  A4D8               	btfss	status,2,c
  1472  002136  EF9F  F010         	goto	u8711
  1473  00213A  EFA1  F010         	goto	u8710
  1474  00213E                     u8711:
  1475  00213E  EF97  F010         	goto	l6996
  1476  002142                     u8710:
  1477  002142                     
  1478                           ;main.c: 176:      putsXLCD("AO");
  1479  002142  0EA7               	movlw	low STR_3
  1480  002144  6E0F               	movwf	putsXLCD@buffer^0,c
  1481  002146  0E06               	movlw	high STR_3
  1482  002148  6E10               	movwf	(putsXLCD@buffer+1)^0,c
  1483  00214A  EC33  F01B         	call	_putsXLCD	;wreg free
  1484  00214E                     
  1485                           ;main.c: 178:     for (i = 0; i < 10 ; i++ ) {
  1486  00214E  0E00               	movlw	0
  1487  002150  0101               	movlb	1	; () banked
  1488  002152  6F8C               	movwf	(main@i+1)& (0+255),b
  1489  002154  0E00               	movlw	0
  1490  002156  6F8B               	movwf	main@i& (0+255),b
  1491  002158                     l7006:
  1492                           
  1493                           ; BSR set to: 1
  1494                           ;main.c: 180:     WriteCmdXLCD(0b00011011);
  1495  002158  0E1B               	movlw	27
  1496  00215A  EC06  F01D         	call	_WriteCmdXLCD
  1497  00215E                     l7008:
  1498  00215E  ECC9  F01E         	call	_BusyXLCD	;wreg free
  1499  002162  0900               	iorlw	0
  1500  002164  A4D8               	btfss	status,2,c
  1501  002166  EFB7  F010         	goto	u8721
  1502  00216A  EFB9  F010         	goto	u8720
  1503  00216E                     u8721:
  1504  00216E  EFAF  F010         	goto	l7008
  1505  002172                     u8720:
  1506  002172                     
  1507                           ;main.c: 182:     for (j = 0; j < 100 ; j++ )
  1508  002172  0E00               	movlw	0
  1509  002174  0101               	movlb	1	; () banked
  1510  002176  6F8E               	movwf	(main@j+1)& (0+255),b
  1511  002178  0E00               	movlw	0
  1512  00217A  6F8D               	movwf	main@j& (0+255),b
  1513  00217C                     l7016:
  1514                           
  1515                           ; BSR set to: 1
  1516                           ;main.c: 183:      _delay((unsigned long)((1)*(12000000/4000.0)));
  1517  00217C  0E04               	movlw	4
  1518  00217E  0100               	movlb	0	; () banked
  1519  002180  6FD2               	movwf	??_main& (0+255),b
  1520  002182  0EE4               	movlw	228
  1521  002184                     u8857:
  1522  002184  2EE8               	decfsz	wreg,f,c
  1523  002186  D7FE               	bra	u8857
  1524  002188  2FD2               	decfsz	??_main& (0+255),f,b
  1525  00218A  D7FC               	bra	u8857
  1526  00218C  F000               	nop	
  1527  00218E  0101               	movlb	1	; () banked
  1528  002190  4B8D               	infsnz	main@j& (0+255),f,b
  1529  002192  2B8E               	incf	(main@j+1)& (0+255),f,b
  1530  002194  BF8E               	btfsc	(main@j+1)& (0+255),7,b
  1531  002196  EFD6  F010         	goto	u8731
  1532  00219A  518E               	movf	(main@j+1)& (0+255),w,b
  1533  00219C  E109               	bnz	u8730
  1534  00219E  0E64               	movlw	100
  1535  0021A0  5D8D               	subwf	main@j& (0+255),w,b
  1536  0021A2  A0D8               	btfss	status,0,c
  1537  0021A4  EFD6  F010         	goto	u8731
  1538  0021A8  EFD8  F010         	goto	u8730
  1539  0021AC                     u8731:
  1540  0021AC  EFBE  F010         	goto	l7016
  1541  0021B0                     u8730:
  1542  0021B0                     
  1543                           ; BSR set to: 1
  1544                           ;main.c: 184:     }
  1545  0021B0  4B8B               	infsnz	main@i& (0+255),f,b
  1546  0021B2  2B8C               	incf	(main@i+1)& (0+255),f,b
  1547  0021B4                     
  1548                           ; BSR set to: 1
  1549  0021B4  BF8C               	btfsc	(main@i+1)& (0+255),7,b
  1550  0021B6  EFE6  F010         	goto	u8741
  1551  0021BA  518C               	movf	(main@i+1)& (0+255),w,b
  1552  0021BC  E109               	bnz	u8740
  1553  0021BE  0E0A               	movlw	10
  1554  0021C0  5D8B               	subwf	main@i& (0+255),w,b
  1555  0021C2  A0D8               	btfss	status,0,c
  1556  0021C4  EFE6  F010         	goto	u8741
  1557  0021C8  EFE8  F010         	goto	u8740
  1558  0021CC                     u8741:
  1559  0021CC  EFAC  F010         	goto	l7006
  1560  0021D0                     u8740:
  1561  0021D0                     l7024:
  1562  0021D0  ECC9  F01E         	call	_BusyXLCD	;wreg free
  1563  0021D4  0900               	iorlw	0
  1564  0021D6  A4D8               	btfss	status,2,c
  1565  0021D8  EFF0  F010         	goto	u8751
  1566  0021DC  EFF2  F010         	goto	u8750
  1567  0021E0                     u8751:
  1568  0021E0  EFE8  F010         	goto	l7024
  1569  0021E4                     u8750:
  1570  0021E4                     
  1571                           ;main.c: 186:             WriteCmdXLCD(0b00000001);
  1572  0021E4  0E01               	movlw	1
  1573  0021E6  EC06  F01D         	call	_WriteCmdXLCD
  1574  0021EA                     
  1575                           ;main.c: 193:     (INTCONbits.GIEH = 1);
  1576  0021EA  8EF2               	bsf	242,7,c	;volatile
  1577  0021EC                     
  1578                           ;main.c: 196:     (INTCONbits.GIEL = 1);
  1579  0021EC  8CF2               	bsf	242,6,c	;volatile
  1580                           
  1581                           ;main.c: 198:     INT1_SetInterruptHandler(start);
  1582  0021EE  0EA4               	movlw	low _start
  1583  0021F0  6E0E               	movwf	INT1_SetInterruptHandler@InterruptHandler^0,c
  1584  0021F2  0E3B               	movlw	high _start
  1585  0021F4  6E0F               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)^0,c
  1586  0021F6  ECFB  F01E         	call	_INT1_SetInterruptHandler	;wreg free
  1587                           
  1588                           ;main.c: 199:     INT0_SetInterruptHandler(emrgencia);
  1589  0021FA  0E38               	movlw	low _emrgencia
  1590  0021FC  6E0E               	movwf	INT0_SetInterruptHandler@InterruptHandler^0,c
  1591  0021FE  0E3C               	movlw	high _emrgencia
  1592  002200  6E0F               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)^0,c
  1593  002202  EC00  F01F         	call	_INT0_SetInterruptHandler	;wreg free
  1594                           
  1595                           ;main.c: 201:     TMR1_SetInterruptHandler(convert_timer);
  1596  002206  0E22               	movlw	low _convert_timer
  1597  002208  6E0E               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
  1598  00220A  0E3E               	movlw	high _convert_timer
  1599  00220C  6E0F               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
  1600  00220E  ECF1  F01E         	call	_TMR1_SetInterruptHandler	;wreg free
  1601  002212                     l7032:
  1602                           
  1603                           ;main.c: 219:         if (write_flag) {
  1604  002212  0100               	movlb	0	; () banked
  1605  002214  51D4               	movf	_write_flag& (0+255),w,b	;volatile
  1606  002216  B4D8               	btfsc	status,2,c
  1607  002218  EF10  F011         	goto	u8761
  1608  00221C  EF12  F011         	goto	u8760
  1609  002220                     u8761:
  1610  002220  EF58  F011         	goto	l7056
  1611  002224                     u8760:
  1612  002224                     
  1613                           ; BSR set to: 0
  1614                           ;main.c: 220:             write_flag = 0;
  1615  002224  0E00               	movlw	0
  1616  002226  6FD4               	movwf	_write_flag& (0+255),b	;volatile
  1617  002228                     l7036:
  1618  002228  ECC9  F01E         	call	_BusyXLCD	;wreg free
  1619  00222C  0900               	iorlw	0
  1620  00222E  A4D8               	btfss	status,2,c
  1621  002230  EF1C  F011         	goto	u8771
  1622  002234  EF1E  F011         	goto	u8770
  1623  002238                     u8771:
  1624  002238  EF14  F011         	goto	l7036
  1625  00223C                     u8770:
  1626  00223C                     
  1627                           ;main.c: 223:             if (emerg_flag == 0) {
  1628  00223C  0100               	movlb	0	; () banked
  1629  00223E  51D6               	movf	_emerg_flag& (0+255),w,b	;volatile
  1630  002240  A4D8               	btfss	status,2,c
  1631  002242  EF25  F011         	goto	u8781
  1632  002246  EF27  F011         	goto	u8780
  1633  00224A                     u8781:
  1634  00224A  EF45  F011         	goto	l7050
  1635  00224E                     u8780:
  1636  00224E                     
  1637                           ; BSR set to: 0
  1638                           ;main.c: 224:                 if (start_flag == 0) {
  1639  00224E  51D5               	movf	_start_flag& (0+255),w,b	;volatile
  1640  002250  A4D8               	btfss	status,2,c
  1641  002252  EF2D  F011         	goto	u8791
  1642  002256  EF2F  F011         	goto	u8790
  1643  00225A                     u8791:
  1644  00225A  EF3A  F011         	goto	l7046
  1645  00225E                     u8790:
  1646  00225E                     
  1647                           ; BSR set to: 0
  1648                           ;main.c: 225:                     WriteCmdXLCD(0b10000000);
  1649  00225E  0E80               	movlw	128
  1650  002260  EC06  F01D         	call	_WriteCmdXLCD
  1651  002264                     
  1652                           ;main.c: 226:                     putsXLCD("SISTEMA OFF             ");
  1653  002264  0E3A               	movlw	low STR_4
  1654  002266  6E0F               	movwf	putsXLCD@buffer^0,c
  1655  002268  0E06               	movlw	high STR_4
  1656  00226A  6E10               	movwf	(putsXLCD@buffer+1)^0,c
  1657  00226C  EC33  F01B         	call	_putsXLCD	;wreg free
  1658                           
  1659                           ;main.c: 228:                 }
  1660  002270  EF58  F011         	goto	l7056
  1661  002274                     l7046:
  1662                           
  1663                           ; BSR set to: 0
  1664                           ;main.c: 230:                     WriteCmdXLCD(0b10000000);
  1665  002274  0E80               	movlw	128
  1666  002276  EC06  F01D         	call	_WriteCmdXLCD
  1667  00227A                     
  1668                           ;main.c: 231:                     putsXLCD("SISTEMA ON               ");
  1669  00227A  0E20               	movlw	low STR_5
  1670  00227C  6E0F               	movwf	putsXLCD@buffer^0,c
  1671  00227E  0E06               	movlw	high STR_5
  1672  002280  6E10               	movwf	(putsXLCD@buffer+1)^0,c
  1673  002282  EC33  F01B         	call	_putsXLCD	;wreg free
  1674  002286  EF58  F011         	goto	l7056
  1675  00228A                     l7050:
  1676                           
  1677                           ; BSR set to: 0
  1678                           ;main.c: 235:                 WriteCmdXLCD(0b10000000);
  1679  00228A  0E80               	movlw	128
  1680  00228C  EC06  F01D         	call	_WriteCmdXLCD
  1681  002290                     l7052:
  1682  002290  ECC9  F01E         	call	_BusyXLCD	;wreg free
  1683  002294  0900               	iorlw	0
  1684  002296  A4D8               	btfss	status,2,c
  1685  002298  EF50  F011         	goto	u8801
  1686  00229C  EF52  F011         	goto	u8800
  1687  0022A0                     u8801:
  1688  0022A0  EF48  F011         	goto	l7052
  1689  0022A4                     u8800:
  1690  0022A4                     
  1691                           ;main.c: 237:                 putsXLCD("EMERGENCIA ATIVADA            ");
  1692  0022A4  0E01               	movlw	low STR_6
  1693  0022A6  6E0F               	movwf	putsXLCD@buffer^0,c
  1694  0022A8  0E06               	movlw	high STR_6
  1695  0022AA  6E10               	movwf	(putsXLCD@buffer+1)^0,c
  1696  0022AC  EC33  F01B         	call	_putsXLCD	;wreg free
  1697  0022B0                     l7056:
  1698                           
  1699                           ;main.c: 242:         if (adc_flag == 1) {
  1700  0022B0  044C               	decf	_adc_flag^0,w,c
  1701  0022B2  A4D8               	btfss	status,2,c
  1702  0022B4  EF5E  F011         	goto	u8811
  1703  0022B8  EF60  F011         	goto	u8810
  1704  0022BC                     u8811:
  1705  0022BC  EF09  F011         	goto	l7032
  1706  0022C0                     u8810:
  1707  0022C0                     
  1708                           ;main.c: 243:             float angulo= 0.1759530792*valor;
  1709  0022C0  C04D  F00E         	movff	_valor,___xxtofl@val
  1710  0022C4  C04E  F00F         	movff	_valor+1,___xxtofl@val+1
  1711  0022C8  0E00               	movlw	0
  1712  0022CA  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
  1713  0022CC  0EFF               	movlw	-1
  1714  0022CE  6E10               	movwf	(___xxtofl@val+2)^0,c
  1715  0022D0  6E11               	movwf	(___xxtofl@val+3)^0,c
  1716  0022D2  0E01               	movlw	1
  1717  0022D4  EC88  F014         	call	___xxtofl
  1718  0022D8  C00E  F01C         	movff	?___xxtofl,___flmul@b
  1719  0022DC  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  1720  0022E0  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  1721  0022E4  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  1722  0022E8  0E0B               	movlw	11
  1723  0022EA  6E20               	movwf	___flmul@a^0,c
  1724  0022EC  0E2D               	movlw	45
  1725  0022EE  6E21               	movwf	(___flmul@a+1)^0,c
  1726  0022F0  0E34               	movlw	52
  1727  0022F2  6E22               	movwf	(___flmul@a+2)^0,c
  1728  0022F4  0E3E               	movlw	62
  1729  0022F6  6E23               	movwf	(___flmul@a+3)^0,c
  1730  0022F8  ECC5  F00D         	call	___flmul	;wreg free
  1731  0022FC  C01C  F187         	movff	?___flmul,main@angulo
  1732  002300  C01D  F188         	movff	?___flmul+1,main@angulo+1
  1733  002304  C01E  F189         	movff	?___flmul+2,main@angulo+2
  1734  002308  C01F  F18A         	movff	?___flmul+3,main@angulo+3
  1735  00230C                     
  1736                           ;main.c: 244:             char valor_analog[5];;main.c: 245:             sprintf(valor_a
      +                          nalog,"Deslocamento= %.2f   ", angulo);
  1737  00230C  0E82               	movlw	low main@valor_analog
  1738  00230E  0100               	movlb	0	; () banked
  1739  002310  6FC0               	movwf	sprintf@s& (0+255),b
  1740  002312  0E01               	movlw	high main@valor_analog
  1741  002314  6FC1               	movwf	(sprintf@s+1)& (0+255),b
  1742  002316  0E6A               	movlw	low STR_7
  1743  002318  6FC2               	movwf	sprintf@fmt& (0+255),b
  1744  00231A  0E06               	movlw	high STR_7
  1745  00231C  6FC3               	movwf	(sprintf@fmt+1)& (0+255),b
  1746  00231E  C187  F0C4         	movff	main@angulo,?_sprintf+4
  1747  002322  C188  F0C5         	movff	main@angulo+1,?_sprintf+5
  1748  002326  C189  F0C6         	movff	main@angulo+2,?_sprintf+6
  1749  00232A  C18A  F0C7         	movff	main@angulo+3,?_sprintf+7
  1750  00232E  EC28  F01C         	call	_sprintf	;wreg free
  1751  002332                     
  1752                           ;main.c: 246:             WriteCmdXLCD(0b11000000);
  1753  002332  0EC0               	movlw	192
  1754  002334  EC06  F01D         	call	_WriteCmdXLCD
  1755  002338                     l7064:
  1756  002338  ECC9  F01E         	call	_BusyXLCD	;wreg free
  1757  00233C  0900               	iorlw	0
  1758  00233E  A4D8               	btfss	status,2,c
  1759  002340  EFA4  F011         	goto	u8821
  1760  002344  EFA6  F011         	goto	u8820
  1761  002348                     u8821:
  1762  002348  EF9C  F011         	goto	l7064
  1763  00234C                     u8820:
  1764  00234C                     
  1765                           ;main.c: 249:             putsXLCD(valor_analog);
  1766  00234C  0E82               	movlw	low main@valor_analog
  1767  00234E  6E0F               	movwf	putsXLCD@buffer^0,c
  1768  002350  0E01               	movlw	high main@valor_analog
  1769  002352  6E10               	movwf	(putsXLCD@buffer+1)^0,c
  1770  002354  EC33  F01B         	call	_putsXLCD	;wreg free
  1771  002358                     
  1772                           ;main.c: 250:             adc_flag=0;
  1773  002358  0E00               	movlw	0
  1774  00235A  6E4C               	movwf	_adc_flag^0,c
  1775  00235C  EF09  F011         	goto	l7032
  1776  002360  EF33  F000         	goto	start
  1777  002364                     __end_of_main:
  1778                           	opt callstack 0
  1779                           
  1780 ;; *************** function _sprintf *****************
  1781 ;; Defined at:
  1782 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  1783 ;; Parameters:    Size  Location     Type
  1784 ;;  s               2   96[BANK0 ] PTR unsigned char 
  1785 ;;		 -> main@valor_analog(5), 
  1786 ;;  fmt             2   98[BANK0 ] PTR const unsigned char 
  1787 ;;		 -> STR_7(22), 
  1788 ;; Auto vars:     Size  Location     Type
  1789 ;;  f               6  108[BANK0 ] struct _IO_FILE
  1790 ;;  ap              2  106[BANK0 ] PTR void [1]
  1791 ;;		 -> ?_sprintf(2), 
  1792 ;;  ret             2    0        int 
  1793 ;; Return value:  Size  Location     Type
  1794 ;;                  2   96[BANK0 ] int 
  1795 ;; Registers used:
  1796 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1797 ;; Tracked objects:
  1798 ;;		On entry : 0/0
  1799 ;;		On exit  : 0/0
  1800 ;;		Unchanged: 0/0
  1801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1802 ;;      Params:         0       8       0       0       0       0       0
  1803 ;;      Locals:         0      10       0       0       0       0       0
  1804 ;;      Temps:          0       0       0       0       0       0       0
  1805 ;;      Totals:         0      18       0       0       0       0       0
  1806 ;;Total ram usage:       18 bytes
  1807 ;; Hardware stack levels used:    1
  1808 ;; Hardware stack levels required when called:   15
  1809 ;; This function calls:
  1810 ;;		_vfprintf
  1811 ;; This function is called by:
  1812 ;;		_main
  1813 ;; This function uses a non-reentrant model
  1814 ;;
  1815                           
  1816                           	psect	text1
  1817  003850                     __ptext1:
  1818                           	opt callstack 0
  1819  003850                     _sprintf:
  1820                           	opt callstack 15
  1821  003850  0EC4               	movlw	low (?_sprintf+4)
  1822  003852  0100               	movlb	0	; () banked
  1823  003854  6FCA               	movwf	sprintf@ap& (0+255),b
  1824  003856  0E00               	movlw	high (?_sprintf+4)
  1825  003858  6FCB               	movwf	(sprintf@ap+1)& (0+255),b
  1826  00385A  C0C0  F0CC         	movff	sprintf@s,sprintf@f
  1827  00385E  C0C1  F0CD         	movff	sprintf@s+1,sprintf@f+1
  1828  003862                     
  1829                           ; BSR set to: 0
  1830  003862  0E00               	movlw	0
  1831  003864  6FCF               	movwf	(sprintf@f+3)& (0+255),b
  1832  003866  0E00               	movlw	0
  1833  003868  6FCE               	movwf	(sprintf@f+2)& (0+255),b
  1834  00386A                     
  1835                           ; BSR set to: 0
  1836  00386A  0E00               	movlw	0
  1837  00386C  6FD1               	movwf	(sprintf@f+5)& (0+255),b
  1838  00386E  0E00               	movlw	0
  1839  003870  6FD0               	movwf	(sprintf@f+4)& (0+255),b
  1840  003872                     
  1841                           ; BSR set to: 0
  1842  003872  0ECC               	movlw	low sprintf@f
  1843  003874  6FBA               	movwf	vfprintf@fp& (0+255),b
  1844  003876  0E00               	movlw	high sprintf@f
  1845  003878  6FBB               	movwf	(vfprintf@fp+1)& (0+255),b
  1846  00387A  C0C2  F0BC         	movff	sprintf@fmt,vfprintf@fmt
  1847  00387E  C0C3  F0BD         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1848  003882  0ECA               	movlw	low sprintf@ap
  1849  003884  6FBE               	movwf	vfprintf@ap& (0+255),b
  1850  003886  0E00               	movlw	high sprintf@ap
  1851  003888  6FBF               	movwf	(vfprintf@ap+1)& (0+255),b
  1852  00388A  EC6C  F01B         	call	_vfprintf	;wreg free
  1853  00388E  0100               	movlb	0	; () banked
  1854  003890  51CE               	movf	(sprintf@f+2)& (0+255),w,b
  1855  003892  25C0               	addwf	sprintf@s& (0+255),w,b
  1856  003894  6ED9               	movwf	fsr2l,c
  1857  003896  51CF               	movf	(sprintf@f+3)& (0+255),w,b
  1858  003898  21C1               	addwfc	(sprintf@s+1)& (0+255),w,b
  1859  00389A  6EDA               	movwf	fsr2h,c
  1860  00389C  0E00               	movlw	0
  1861  00389E  6EDF               	movwf	indf2,c
  1862  0038A0                     
  1863                           ; BSR set to: 0
  1864  0038A0  0012               	return		;funcret
  1865  0038A2                     __end_of_sprintf:
  1866                           	opt callstack 0
  1867                           
  1868 ;; *************** function _vfprintf *****************
  1869 ;; Defined at:
  1870 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1871 ;; Parameters:    Size  Location     Type
  1872 ;;  fp              2   90[BANK0 ] PTR struct _IO_FILE
  1873 ;;		 -> sprintf@f(6), 
  1874 ;;  fmt             2   92[BANK0 ] PTR const unsigned char 
  1875 ;;		 -> STR_7(22), 
  1876 ;;  ap              2   94[BANK0 ] PTR PTR void 
  1877 ;;		 -> sprintf@ap(2), 
  1878 ;; Auto vars:     Size  Location     Type
  1879 ;;  cfmt            2   64[COMRAM] PTR unsigned char 
  1880 ;;		 -> STR_7(22), 
  1881 ;; Return value:  Size  Location     Type
  1882 ;;                  2   90[BANK0 ] int 
  1883 ;; Registers used:
  1884 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1885 ;; Tracked objects:
  1886 ;;		On entry : 0/0
  1887 ;;		On exit  : 0/0
  1888 ;;		Unchanged: 0/0
  1889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1890 ;;      Params:         0       6       0       0       0       0       0
  1891 ;;      Locals:         2       0       0       0       0       0       0
  1892 ;;      Temps:          0       0       0       0       0       0       0
  1893 ;;      Totals:         2       6       0       0       0       0       0
  1894 ;;Total ram usage:        8 bytes
  1895 ;; Hardware stack levels used:    1
  1896 ;; Hardware stack levels required when called:   14
  1897 ;; This function calls:
  1898 ;;		_vfpfcnvrt
  1899 ;; This function is called by:
  1900 ;;		_sprintf
  1901 ;; This function uses a non-reentrant model
  1902 ;;
  1903                           
  1904                           	psect	text2
  1905  0036D8                     __ptext2:
  1906                           	opt callstack 0
  1907  0036D8                     _vfprintf:
  1908                           	opt callstack 15
  1909  0036D8                     
  1910                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1911  0036D8  C0BC  F041         	movff	vfprintf@fmt,vfprintf@cfmt
  1912  0036DC  C0BD  F042         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1913  0036E0                     
  1914                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1915  0036E0  0E00               	movlw	0
  1916  0036E2  6E44               	movwf	(_nout+1)^0,c
  1917  0036E4  0E00               	movlw	0
  1918  0036E6  6E43               	movwf	_nout^0,c
  1919                           
  1920                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1921  0036E8  EF8A  F01B         	goto	l6732
  1922  0036EC                     l6730:
  1923                           
  1924                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1925  0036EC  C0BA  F0A4         	movff	vfprintf@fp,vfpfcnvrt@fp
  1926  0036F0  C0BB  F0A5         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1927  0036F4  0E41               	movlw	low vfprintf@cfmt
  1928  0036F6  0100               	movlb	0	; () banked
  1929  0036F8  6FA6               	movwf	vfpfcnvrt@fmt& (0+255),b
  1930  0036FA  0E00               	movlw	high vfprintf@cfmt
  1931  0036FC  6FA7               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1932  0036FE  C0BE  F0A8         	movff	vfprintf@ap,vfpfcnvrt@ap
  1933  003702  C0BF  F0A9         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1934  003706  EC8F  F00B         	call	_vfpfcnvrt	;wreg free
  1935  00370A  0100               	movlb	0	; () banked
  1936  00370C  51A4               	movf	?_vfpfcnvrt& (0+255),w,b
  1937  00370E  2643               	addwf	_nout^0,f,c
  1938  003710  51A5               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1939  003712  2244               	addwfc	(_nout+1)^0,f,c
  1940  003714                     l6732:
  1941                           
  1942                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1943  003714  C041  FFF6         	movff	vfprintf@cfmt,tblptrl
  1944  003718  C042  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1945  00371C                     	if	0	;tblptru may be non-zero
  1946  00371C                     	endif
  1947  00371C                     	if	0	;tblptru may be non-zero
  1948  00371C                     	endif
  1949  00371C  0008               	tblrd		*
  1950  00371E  50F5               	movf	tablat,w,c
  1951  003720  0900               	iorlw	0
  1952  003722  A4D8               	btfss	status,2,c
  1953  003724  EF96  F01B         	goto	u8281
  1954  003728  EF98  F01B         	goto	u8280
  1955  00372C                     u8281:
  1956  00372C  EF76  F01B         	goto	l6730
  1957  003730                     u8280:
  1958  003730                     
  1959                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1960  003730  C043  F0BA         	movff	_nout,?_vfprintf
  1961  003734  C044  F0BB         	movff	_nout+1,?_vfprintf+1
  1962  003738  0012               	return		;funcret
  1963  00373A                     __end_of_vfprintf:
  1964                           	opt callstack 0
  1965                           
  1966 ;; *************** function _vfpfcnvrt *****************
  1967 ;; Defined at:
  1968 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1969 ;; Parameters:    Size  Location     Type
  1970 ;;  fp              2   68[BANK0 ] PTR struct _IO_FILE
  1971 ;;		 -> sprintf@f(6), 
  1972 ;;  fmt             2   70[BANK0 ] PTR PTR unsigned char 
  1973 ;;		 -> vfprintf@cfmt(2), 
  1974 ;;  ap              2   72[BANK0 ] PTR PTR void 
  1975 ;;		 -> sprintf@ap(2), 
  1976 ;; Auto vars:     Size  Location     Type
  1977 ;;  llu             8    0        unsigned long long 
  1978 ;;  ll              8    0        long long 
  1979 ;;  f               4   82[BANK0 ] long long 
  1980 ;;  ct              3   86[BANK0 ] unsigned char [3]
  1981 ;;  vp              3    0        PTR void 
  1982 ;;  cp              3    0        PTR unsigned char 
  1983 ;;  i               2    0        int 
  1984 ;;  done            2    0        int 
  1985 ;;  c               1   89[BANK0 ] unsigned char 
  1986 ;; Return value:  Size  Location     Type
  1987 ;;                  2   68[BANK0 ] int 
  1988 ;; Registers used:
  1989 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1990 ;; Tracked objects:
  1991 ;;		On entry : 0/0
  1992 ;;		On exit  : 0/0
  1993 ;;		Unchanged: 0/0
  1994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1995 ;;      Params:         0       6       0       0       0       0       0
  1996 ;;      Locals:         0      12       0       0       0       0       0
  1997 ;;      Temps:          0       4       0       0       0       0       0
  1998 ;;      Totals:         0      22       0       0       0       0       0
  1999 ;;Total ram usage:       22 bytes
  2000 ;; Hardware stack levels used:    1
  2001 ;; Hardware stack levels required when called:   13
  2002 ;; This function calls:
  2003 ;;		_atoi
  2004 ;;		_efgtoa
  2005 ;;		_fputc
  2006 ;;		_isdigit
  2007 ;;		_isupper
  2008 ;;		_strncmp
  2009 ;;		_tolower
  2010 ;; This function is called by:
  2011 ;;		_vfprintf
  2012 ;; This function uses a non-reentrant model
  2013 ;;
  2014                           
  2015                           	psect	text3
  2016  00171E                     __ptext3:
  2017                           	opt callstack 0
  2018  00171E                     _vfpfcnvrt:
  2019                           	opt callstack 15
  2020  00171E                     
  2021                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  2022  00171E  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2023  001722  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2024  001726  CFDE FFF6          	movff	postinc2,tblptrl
  2025  00172A  CFDD FFF7          	movff	postdec2,tblptrh
  2026  00172E                     	if	0	;tblptru may be non-zero
  2027  00172E                     	endif
  2028  00172E                     	if	0	;tblptru may be non-zero
  2029  00172E                     	endif
  2030  00172E  0008               	tblrd		*
  2031  001730  50F5               	movf	tablat,w,c
  2032  001732  0A25               	xorlw	37
  2033  001734  A4D8               	btfss	status,2,c
  2034  001736  EF9F  F00B         	goto	u8131
  2035  00173A  EFA1  F00B         	goto	u8130
  2036  00173E                     u8131:
  2037  00173E  EFA9  F00D         	goto	l6590
  2038  001742                     u8130:
  2039  001742                     
  2040                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  2041  001742  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2042  001746  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2043  00174A  2ADE               	incf	postinc2,f,c
  2044  00174C  0E00               	movlw	0
  2045  00174E  22DD               	addwfc	postdec2,f,c
  2046  001750                     
  2047                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  2048  001750  0E00               	movlw	0
  2049  001752  6E46               	movwf	(_width+1)^0,c
  2050  001754  0E00               	movlw	0
  2051  001756  6E45               	movwf	_width^0,c
  2052  001758  C045  F049         	movff	_width,_flags
  2053  00175C  C046  F04A         	movff	_width+1,_flags+1
  2054  001760                     
  2055                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  2056  001760  6847               	setf	_prec^0,c
  2057  001762  6848               	setf	(_prec+1)^0,c
  2058  001764                     
  2059                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  2060  001764  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2061  001768  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2062  00176C  CFDE FFF6          	movff	postinc2,tblptrl
  2063  001770  CFDD FFF7          	movff	postdec2,tblptrh
  2064  001774                     	if	0	;tblptru may be non-zero
  2065  001774                     	endif
  2066  001774                     	if	0	;tblptru may be non-zero
  2067  001774                     	endif
  2068  001774  0008               	tblrd		*
  2069  001776  50F5               	movf	tablat,w,c
  2070  001778  0A2E               	xorlw	46
  2071  00177A  A4D8               	btfss	status,2,c
  2072  00177C  EFC2  F00B         	goto	u8141
  2073  001780  EFC4  F00B         	goto	u8140
  2074  001784                     u8141:
  2075  001784  EF42  F00C         	goto	l6536
  2076  001788                     u8140:
  2077  001788                     
  2078                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  2079  001788  0E00               	movlw	0
  2080  00178A  6E48               	movwf	(_prec+1)^0,c
  2081  00178C  0E00               	movlw	0
  2082  00178E  6E47               	movwf	_prec^0,c
  2083  001790                     
  2084                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  2085  001790  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2086  001794  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2087  001798  2ADE               	incf	postinc2,f,c
  2088  00179A  0E00               	movlw	0
  2089  00179C  22DD               	addwfc	postdec2,f,c
  2090  00179E                     
  2091                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  2092  00179E  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2093  0017A2  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2094  0017A6  CFDE FFF6          	movff	postinc2,tblptrl
  2095  0017AA  CFDD FFF7          	movff	postdec2,tblptrh
  2096  0017AE                     	if	0	;tblptru may be non-zero
  2097  0017AE                     	endif
  2098  0017AE                     	if	0	;tblptru may be non-zero
  2099  0017AE                     	endif
  2100  0017AE  0008               	tblrd		*
  2101  0017B0  50F5               	movf	tablat,w,c
  2102  0017B2  0A2A               	xorlw	42
  2103  0017B4  A4D8               	btfss	status,2,c
  2104  0017B6  EFDF  F00B         	goto	u8151
  2105  0017BA  EFE1  F00B         	goto	u8150
  2106  0017BE                     u8151:
  2107  0017BE  EFFE  F00B         	goto	l6526
  2108  0017C2                     u8150:
  2109  0017C2                     
  2110                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  2111  0017C2  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2112  0017C6  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2113  0017CA  2ADE               	incf	postinc2,f,c
  2114  0017CC  0E00               	movlw	0
  2115  0017CE  22DD               	addwfc	postdec2,f,c
  2116                           
  2117                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2118  0017D0  C0A8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2119  0017D4  C0A9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2120  0017D8  CFDF F0AA          	movff	indf2,??_vfpfcnvrt
  2121  0017DC  0E02               	movlw	2
  2122  0017DE  26DE               	addwf	postinc2,f,c
  2123  0017E0  CFDF F0AB          	movff	indf2,??_vfpfcnvrt+1
  2124  0017E4  0E00               	movlw	0
  2125  0017E6  22DD               	addwfc	postdec2,f,c
  2126  0017E8  C0AA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2127  0017EC  C0AB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2128  0017F0  CFDE F047          	movff	postinc2,_prec
  2129  0017F4  CFDD F048          	movff	postdec2,_prec+1
  2130                           
  2131                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  2132  0017F8  EF42  F00C         	goto	l6536
  2133  0017FC                     l6526:
  2134                           
  2135                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  2136  0017FC  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2137  001800  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2138  001804  CFDE F015          	movff	postinc2,atoi@s
  2139  001808  CFDD F016          	movff	postdec2,atoi@s+1
  2140  00180C  EC62  F015         	call	_atoi	;wreg free
  2141  001810  C015  F047         	movff	?_atoi,_prec
  2142  001814  C016  F048         	movff	?_atoi+1,_prec+1
  2143                           
  2144                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2145  001818  EF15  F00C         	goto	l6530
  2146  00181C                     l6528:
  2147                           
  2148                           ; BSR set to: 0
  2149                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  2150  00181C  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2151  001820  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2152  001824  2ADE               	incf	postinc2,f,c
  2153  001826  0E00               	movlw	0
  2154  001828  22DD               	addwfc	postdec2,f,c
  2155  00182A                     l6530:
  2156  00182A  0ED0               	movlw	208
  2157  00182C  0100               	movlb	0	; () banked
  2158  00182E  6FAA               	movwf	??_vfpfcnvrt& (0+255),b
  2159  001830  0EFF               	movlw	255
  2160  001832  6FAB               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2161  001834  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2162  001838  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2163  00183C  CFDE FFF6          	movff	postinc2,tblptrl
  2164  001840  CFDD FFF7          	movff	postdec2,tblptrh
  2165  001844                     	if	0	;tblptru may be non-zero
  2166  001844                     	endif
  2167  001844                     	if	0	;tblptru may be non-zero
  2168  001844                     	endif
  2169  001844  0008               	tblrd		*
  2170  001846  50F5               	movf	tablat,w,c
  2171  001848  6FAC               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2172  00184A  6BAD               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2173  00184C  51AA               	movf	??_vfpfcnvrt& (0+255),w,b
  2174  00184E  27AC               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2175  001850  51AB               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2176  001852  23AD               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2177  001854  51AD               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2178  001856  E10A               	bnz	u8160
  2179  001858  0E0A               	movlw	10
  2180  00185A  5DAC               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2181  00185C  A0D8               	btfss	status,0,c
  2182  00185E  EF33  F00C         	goto	u8161
  2183  001862  EF36  F00C         	goto	u8160
  2184  001866                     u8161:
  2185  001866  0E01               	movlw	1
  2186  001868  EF37  F00C         	goto	u8170
  2187  00186C                     u8160:
  2188  00186C  0E00               	movlw	0
  2189  00186E                     u8170:
  2190  00186E  6FAE               	movwf	_vfpfcnvrt$1275& (0+255),b
  2191  001870  6BAF               	clrf	(_vfpfcnvrt$1275+1)& (0+255),b
  2192  001872                     
  2193                           ; BSR set to: 0
  2194  001872  51AE               	movf	_vfpfcnvrt$1275& (0+255),w,b
  2195  001874  11AF               	iorwf	(_vfpfcnvrt$1275+1)& (0+255),w,b
  2196  001876  A4D8               	btfss	status,2,c
  2197  001878  EF40  F00C         	goto	u8181
  2198  00187C  EF42  F00C         	goto	u8180
  2199  001880                     u8181:
  2200  001880  EF0E  F00C         	goto	l6528
  2201  001884                     u8180:
  2202  001884                     l6536:
  2203                           
  2204                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  2205  001884  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2206  001888  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2207  00188C  CFDE FFF6          	movff	postinc2,tblptrl
  2208  001890  CFDD FFF7          	movff	postdec2,tblptrh
  2209  001894                     	if	0	;tblptru may be non-zero
  2210  001894                     	endif
  2211  001894                     	if	0	;tblptru may be non-zero
  2212  001894                     	endif
  2213  001894  0008               	tblrd		*
  2214  001896  50F5               	movf	tablat,w,c
  2215  001898  6E14               	movwf	tolower@c^0,c
  2216  00189A  6A15               	clrf	(tolower@c+1)^0,c
  2217  00189C  EC9D  F01B         	call	_tolower	;wreg free
  2218  0018A0  5014               	movf	?_tolower^0,w,c
  2219  0018A2  0100               	movlb	0	; () banked
  2220  0018A4  6FB6               	movwf	vfpfcnvrt@ct& (0+255),b
  2221  0018A6                     
  2222                           ; BSR set to: 0
  2223                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  2224  0018A6  51B6               	movf	vfpfcnvrt@ct& (0+255),w,b
  2225  0018A8  B4D8               	btfsc	status,2,c
  2226  0018AA  EF59  F00C         	goto	u8191
  2227  0018AE  EF5B  F00C         	goto	u8190
  2228  0018B2                     u8191:
  2229  0018B2  EF95  F00C         	goto	l6546
  2230  0018B6                     u8190:
  2231  0018B6                     
  2232                           ; BSR set to: 0
  2233                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  2234  0018B6  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2235  0018BA  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2236  0018BE  CFDE F0AA          	movff	postinc2,??_vfpfcnvrt
  2237  0018C2  CFDD F0AB          	movff	postdec2,??_vfpfcnvrt+1
  2238  0018C6  0E01               	movlw	1
  2239  0018C8  27AA               	addwf	??_vfpfcnvrt& (0+255),f,b
  2240  0018CA  0E00               	movlw	0
  2241  0018CC  23AB               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2242  0018CE  C0AA  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2243  0018D2  C0AB  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2244  0018D6                     	if	0	;tblptru may be non-zero
  2245  0018D6                     	endif
  2246  0018D6                     	if	0	;tblptru may be non-zero
  2247  0018D6                     	endif
  2248  0018D6  0008               	tblrd		*
  2249  0018D8  50F5               	movf	tablat,w,c
  2250  0018DA  6E14               	movwf	tolower@c^0,c
  2251  0018DC  6A15               	clrf	(tolower@c+1)^0,c
  2252  0018DE  EC9D  F01B         	call	_tolower	;wreg free
  2253  0018E2  5014               	movf	?_tolower^0,w,c
  2254  0018E4  0100               	movlb	0	; () banked
  2255  0018E6  6FB7               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2256  0018E8                     
  2257                           ; BSR set to: 0
  2258                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  2259  0018E8  51B7               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2260  0018EA  B4D8               	btfsc	status,2,c
  2261  0018EC  EF7A  F00C         	goto	u8201
  2262  0018F0  EF7C  F00C         	goto	u8200
  2263  0018F4                     u8201:
  2264  0018F4  EF95  F00C         	goto	l6546
  2265  0018F8                     u8200:
  2266  0018F8                     
  2267                           ; BSR set to: 0
  2268                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  2269  0018F8  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2270  0018FC  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2271  001900  CFDE F0AA          	movff	postinc2,??_vfpfcnvrt
  2272  001904  CFDD F0AB          	movff	postdec2,??_vfpfcnvrt+1
  2273  001908  0E02               	movlw	2
  2274  00190A  27AA               	addwf	??_vfpfcnvrt& (0+255),f,b
  2275  00190C  0E00               	movlw	0
  2276  00190E  23AB               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2277  001910  C0AA  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2278  001914  C0AB  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2279  001918                     	if	0	;tblptru may be non-zero
  2280  001918                     	endif
  2281  001918                     	if	0	;tblptru may be non-zero
  2282  001918                     	endif
  2283  001918  0008               	tblrd		*
  2284  00191A  50F5               	movf	tablat,w,c
  2285  00191C  6E14               	movwf	tolower@c^0,c
  2286  00191E  6A15               	clrf	(tolower@c+1)^0,c
  2287  001920  EC9D  F01B         	call	_tolower	;wreg free
  2288  001924  5014               	movf	?_tolower^0,w,c
  2289  001926  0100               	movlb	0	; () banked
  2290  001928  6FB8               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2291  00192A                     l6546:
  2292                           
  2293                           ; BSR set to: 0
  2294                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  2295  00192A  0E66               	movlw	102
  2296  00192C  19B6               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2297  00192E  A4D8               	btfss	status,2,c
  2298  001930  EF9C  F00C         	goto	u8211
  2299  001934  EF9E  F00C         	goto	u8210
  2300  001938                     u8211:
  2301  001938  EFDE  F00C         	goto	l6558
  2302  00193C                     u8210:
  2303  00193C                     
  2304                           ; BSR set to: 0
  2305                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  2306  00193C  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2307  001940  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2308  001944  CFDE FFF6          	movff	postinc2,tblptrl
  2309  001948  CFDD FFF7          	movff	postdec2,tblptrh
  2310  00194C                     	if	0	;tblptru may be non-zero
  2311  00194C                     	endif
  2312  00194C                     	if	0	;tblptru may be non-zero
  2313  00194C                     	endif
  2314  00194C  0008               	tblrd		*
  2315  00194E  CFF5 F0B9          	movff	tablat,vfpfcnvrt@c
  2316  001952                     
  2317                           ; BSR set to: 0
  2318                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  2319  001952  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2320  001956  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2321  00195A  2ADE               	incf	postinc2,f,c
  2322  00195C  0E00               	movlw	0
  2323  00195E  22DD               	addwfc	postdec2,f,c
  2324  001960                     
  2325                           ; BSR set to: 0
  2326                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2327  001960  C0A8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2328  001964  C0A9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2329  001968  CFDF F0AA          	movff	indf2,??_vfpfcnvrt
  2330  00196C  0E04               	movlw	4
  2331  00196E  26DE               	addwf	postinc2,f,c
  2332  001970  CFDF F0AB          	movff	indf2,??_vfpfcnvrt+1
  2333  001974  0E00               	movlw	0
  2334  001976  22DD               	addwfc	postdec2,f,c
  2335  001978  C0AA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2336  00197C  C0AB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2337  001980  CFDE F0B2          	movff	postinc2,vfpfcnvrt@f
  2338  001984  CFDE F0B3          	movff	postinc2,vfpfcnvrt@f+1
  2339  001988  CFDE F0B4          	movff	postinc2,vfpfcnvrt@f+2
  2340  00198C  CFDE F0B5          	movff	postinc2,vfpfcnvrt@f+3
  2341  001990                     l6554:
  2342                           
  2343                           ; BSR set to: 0
  2344                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  2345  001990  C0A4  F060         	movff	vfpfcnvrt@fp,efgtoa@fp
  2346  001994  C0A5  F061         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2347  001998  C0B2  F062         	movff	vfpfcnvrt@f,efgtoa@f
  2348  00199C  C0B3  F063         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2349  0019A0  C0B4  F064         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2350  0019A4  C0B5  F065         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2351  0019A8  C0B9  F066         	movff	vfpfcnvrt@c,efgtoa@c
  2352  0019AC  EC56  F003         	call	_efgtoa	;wreg free
  2353  0019B0  C060  F0A4         	movff	?_efgtoa,?_vfpfcnvrt
  2354  0019B4  C061  F0A5         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2355  0019B8  EFC4  F00D         	goto	l661
  2356  0019BC                     l6558:
  2357                           
  2358                           ; BSR set to: 0
  2359                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2360  0019BC  0EB6               	movlw	low vfpfcnvrt@ct
  2361  0019BE  6E0E               	movwf	strncmp@_l^0,c
  2362  0019C0  0E00               	movlw	high vfpfcnvrt@ct
  2363  0019C2  6E0F               	movwf	(strncmp@_l+1)^0,c
  2364  0019C4  0EA4               	movlw	low STR_16
  2365  0019C6  6E10               	movwf	strncmp@_r^0,c
  2366  0019C8  0E06               	movlw	high STR_16
  2367  0019CA  6E11               	movwf	(strncmp@_r+1)^0,c
  2368  0019CC  0E00               	movlw	0
  2369  0019CE  6E13               	movwf	(strncmp@n+1)^0,c
  2370  0019D0  0E02               	movlw	2
  2371  0019D2  6E12               	movwf	strncmp@n^0,c
  2372  0019D4  ECB3  F018         	call	_strncmp	;wreg free
  2373  0019D8  500E               	movf	?_strncmp^0,w,c
  2374  0019DA  100F               	iorwf	(?_strncmp+1)^0,w,c
  2375  0019DC  A4D8               	btfss	status,2,c
  2376  0019DE  EFF3  F00C         	goto	u8221
  2377  0019E2  EFF5  F00C         	goto	u8220
  2378  0019E6                     u8221:
  2379  0019E6  EF71  F00D         	goto	l6574
  2380  0019EA                     u8220:
  2381  0019EA                     
  2382                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2383  0019EA  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2384  0019EE  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2385  0019F2  CFDE F0AA          	movff	postinc2,??_vfpfcnvrt
  2386  0019F6  CFDD F0AB          	movff	postdec2,??_vfpfcnvrt+1
  2387  0019FA  0E01               	movlw	1
  2388  0019FC  0100               	movlb	0	; () banked
  2389  0019FE  27AA               	addwf	??_vfpfcnvrt& (0+255),f,b
  2390  001A00  0E00               	movlw	0
  2391  001A02  23AB               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2392  001A04  C0AA  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2393  001A08  C0AB  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2394  001A0C                     	if	0	;tblptru may be non-zero
  2395  001A0C                     	endif
  2396  001A0C                     	if	0	;tblptru may be non-zero
  2397  001A0C                     	endif
  2398  001A0C  0008               	tblrd		*
  2399  001A0E  CFF5 F0B9          	movff	tablat,vfpfcnvrt@c
  2400  001A12  0EBF               	movlw	191
  2401  001A14  6FAA               	movwf	??_vfpfcnvrt& (0+255),b
  2402  001A16  0EFF               	movlw	255
  2403  001A18  6FAB               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2404  001A1A  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2405  001A1E  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2406  001A22  CFDE FFF6          	movff	postinc2,tblptrl
  2407  001A26  CFDD FFF7          	movff	postdec2,tblptrh
  2408  001A2A                     	if	0	;tblptru may be non-zero
  2409  001A2A                     	endif
  2410  001A2A                     	if	0	;tblptru may be non-zero
  2411  001A2A                     	endif
  2412  001A2A  0008               	tblrd		*
  2413  001A2C  50F5               	movf	tablat,w,c
  2414  001A2E  6FAC               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2415  001A30  6BAD               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2416  001A32  51AA               	movf	??_vfpfcnvrt& (0+255),w,b
  2417  001A34  27AC               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2418  001A36  51AB               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2419  001A38  23AD               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2420  001A3A  51AD               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2421  001A3C  E10A               	bnz	u8230
  2422  001A3E  0E1A               	movlw	26
  2423  001A40  5DAC               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2424  001A42  A0D8               	btfss	status,0,c
  2425  001A44  EF26  F00D         	goto	u8231
  2426  001A48  EF29  F00D         	goto	u8230
  2427  001A4C                     u8231:
  2428  001A4C  0E01               	movlw	1
  2429  001A4E  EF2A  F00D         	goto	u8240
  2430  001A52                     u8230:
  2431  001A52  0E00               	movlw	0
  2432  001A54                     u8240:
  2433  001A54  6FB0               	movwf	_vfpfcnvrt$1279& (0+255),b
  2434  001A56  6BB1               	clrf	(_vfpfcnvrt$1279+1)& (0+255),b
  2435  001A58                     
  2436                           ; BSR set to: 0
  2437  001A58  51B0               	movf	_vfpfcnvrt$1279& (0+255),w,b
  2438  001A5A  11B1               	iorwf	(_vfpfcnvrt$1279+1)& (0+255),w,b
  2439  001A5C  B4D8               	btfsc	status,2,c
  2440  001A5E  EF33  F00D         	goto	u8251
  2441  001A62  EF35  F00D         	goto	u8250
  2442  001A66                     u8251:
  2443  001A66  EF4F  F00D         	goto	l6568
  2444  001A6A                     u8250:
  2445  001A6A                     
  2446                           ; BSR set to: 0
  2447                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2448  001A6A  C0A8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2449  001A6E  C0A9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2450  001A72  CFDF F0AA          	movff	indf2,??_vfpfcnvrt
  2451  001A76  0E04               	movlw	4
  2452  001A78  26DE               	addwf	postinc2,f,c
  2453  001A7A  CFDF F0AB          	movff	indf2,??_vfpfcnvrt+1
  2454  001A7E  0E00               	movlw	0
  2455  001A80  22DD               	addwfc	postdec2,f,c
  2456  001A82  C0AA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2457  001A86  C0AB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2458  001A8A  CFDE F0B2          	movff	postinc2,vfpfcnvrt@f
  2459  001A8E  CFDE F0B3          	movff	postinc2,vfpfcnvrt@f+1
  2460  001A92  CFDE F0B4          	movff	postinc2,vfpfcnvrt@f+2
  2461  001A96  CFDE F0B5          	movff	postinc2,vfpfcnvrt@f+3
  2462                           
  2463                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  2464  001A9A  EF67  F00D         	goto	l668
  2465  001A9E                     l6568:
  2466                           
  2467                           ; BSR set to: 0
  2468                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2469  001A9E  C0A8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2470  001AA2  C0A9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2471  001AA6  CFDF F0AA          	movff	indf2,??_vfpfcnvrt
  2472  001AAA  0E04               	movlw	4
  2473  001AAC  26DE               	addwf	postinc2,f,c
  2474  001AAE  CFDF F0AB          	movff	indf2,??_vfpfcnvrt+1
  2475  001AB2  0E00               	movlw	0
  2476  001AB4  22DD               	addwfc	postdec2,f,c
  2477  001AB6  C0AA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2478  001ABA  C0AB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2479  001ABE  CFDE F0B2          	movff	postinc2,vfpfcnvrt@f
  2480  001AC2  CFDE F0B3          	movff	postinc2,vfpfcnvrt@f+1
  2481  001AC6  CFDE F0B4          	movff	postinc2,vfpfcnvrt@f+2
  2482  001ACA  CFDE F0B5          	movff	postinc2,vfpfcnvrt@f+3
  2483  001ACE                     l668:
  2484                           
  2485                           ; BSR set to: 0
  2486                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2487  001ACE  0E02               	movlw	2
  2488  001AD0  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2489  001AD4  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2490  001AD8  26DE               	addwf	postinc2,f,c
  2491  001ADA  0E00               	movlw	0
  2492  001ADC  22DD               	addwfc	postdec2,f,c
  2493  001ADE  EFC8  F00C         	goto	l6554
  2494  001AE2                     l6574:
  2495                           
  2496                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  2497  001AE2  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2498  001AE6  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2499  001AEA  CFDE FFF6          	movff	postinc2,tblptrl
  2500  001AEE  CFDD FFF7          	movff	postdec2,tblptrh
  2501  001AF2                     	if	0	;tblptru may be non-zero
  2502  001AF2                     	endif
  2503  001AF2                     	if	0	;tblptru may be non-zero
  2504  001AF2                     	endif
  2505  001AF2  0008               	tblrd		*
  2506  001AF4  50F5               	movf	tablat,w,c
  2507  001AF6  0A25               	xorlw	37
  2508  001AF8  A4D8               	btfss	status,2,c
  2509  001AFA  EF81  F00D         	goto	u8261
  2510  001AFE  EF83  F00D         	goto	u8260
  2511  001B02                     u8261:
  2512  001B02  EF9B  F00D         	goto	l6584
  2513  001B06                     u8260:
  2514  001B06                     
  2515                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  2516  001B06  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2517  001B0A  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2518  001B0E  2ADE               	incf	postinc2,f,c
  2519  001B10  0E00               	movlw	0
  2520  001B12  22DD               	addwfc	postdec2,f,c
  2521  001B14                     
  2522                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  2523  001B14  0E00               	movlw	0
  2524  001B16  6E0F               	movwf	(fputc@c+1)^0,c
  2525  001B18  0E25               	movlw	37
  2526  001B1A  6E0E               	movwf	fputc@c^0,c
  2527  001B1C  C0A4  F010         	movff	vfpfcnvrt@fp,fputc@fp
  2528  001B20  C0A5  F011         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2529  001B24  EC1E  F019         	call	_fputc	;wreg free
  2530  001B28                     l6580:
  2531                           
  2532                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  2533  001B28  0E00               	movlw	0
  2534  001B2A  0100               	movlb	0	; () banked
  2535  001B2C  6FA5               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2536  001B2E  0E01               	movlw	1
  2537  001B30  6FA4               	movwf	?_vfpfcnvrt& (0+255),b
  2538  001B32  EFC4  F00D         	goto	l661
  2539  001B36                     l6584:
  2540                           
  2541                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  2542  001B36  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2543  001B3A  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2544  001B3E  2ADE               	incf	postinc2,f,c
  2545  001B40  0E00               	movlw	0
  2546  001B42  22DD               	addwfc	postdec2,f,c
  2547  001B44                     
  2548                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  2549  001B44  0E00               	movlw	0
  2550  001B46  0100               	movlb	0	; () banked
  2551  001B48  6FA5               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2552  001B4A  0E00               	movlw	0
  2553  001B4C  6FA4               	movwf	?_vfpfcnvrt& (0+255),b
  2554  001B4E  EFC4  F00D         	goto	l661
  2555  001B52                     l6590:
  2556                           
  2557                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  2558  001B52  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2559  001B56  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2560  001B5A  CFDE FFF6          	movff	postinc2,tblptrl
  2561  001B5E  CFDD FFF7          	movff	postdec2,tblptrh
  2562  001B62                     	if	0	;tblptru may be non-zero
  2563  001B62                     	endif
  2564  001B62                     	if	0	;tblptru may be non-zero
  2565  001B62                     	endif
  2566  001B62  0008               	tblrd		*
  2567  001B64  50F5               	movf	tablat,w,c
  2568  001B66  6E0E               	movwf	fputc@c^0,c
  2569  001B68  6A0F               	clrf	(fputc@c+1)^0,c
  2570  001B6A  C0A4  F010         	movff	vfpfcnvrt@fp,fputc@fp
  2571  001B6E  C0A5  F011         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2572  001B72  EC1E  F019         	call	_fputc	;wreg free
  2573  001B76                     
  2574                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  2575  001B76  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2576  001B7A  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2577  001B7E  2ADE               	incf	postinc2,f,c
  2578  001B80  0E00               	movlw	0
  2579  001B82  22DD               	addwfc	postdec2,f,c
  2580  001B84  EF94  F00D         	goto	l6580
  2581  001B88                     l661:
  2582  001B88  0012               	return		;funcret
  2583  001B8A                     __end_of_vfpfcnvrt:
  2584                           	opt callstack 0
  2585                           
  2586 ;; *************** function _strncmp *****************
  2587 ;; Defined at:
  2588 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  2589 ;; Parameters:    Size  Location     Type
  2590 ;;  _l              2   13[COMRAM] PTR const unsigned char 
  2591 ;;		 -> vfpfcnvrt@ct(3), 
  2592 ;;  _r              2   15[COMRAM] PTR const unsigned char 
  2593 ;;		 -> STR_18(3), 
  2594 ;;  n               2   17[COMRAM] unsigned int 
  2595 ;; Auto vars:     Size  Location     Type
  2596 ;;  r               2   22[COMRAM] PTR const unsigned char 
  2597 ;;		 -> STR_18(3), 
  2598 ;;  l               2   20[COMRAM] PTR const unsigned char 
  2599 ;;		 -> vfpfcnvrt@ct(3), 
  2600 ;; Return value:  Size  Location     Type
  2601 ;;                  2   13[COMRAM] int 
  2602 ;; Registers used:
  2603 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2604 ;; Tracked objects:
  2605 ;;		On entry : 0/0
  2606 ;;		On exit  : 0/0
  2607 ;;		Unchanged: 0/0
  2608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2609 ;;      Params:         6       0       0       0       0       0       0
  2610 ;;      Locals:         4       0       0       0       0       0       0
  2611 ;;      Temps:          1       0       0       0       0       0       0
  2612 ;;      Totals:        11       0       0       0       0       0       0
  2613 ;;Total ram usage:       11 bytes
  2614 ;; Hardware stack levels used:    1
  2615 ;; Hardware stack levels required when called:    8
  2616 ;; This function calls:
  2617 ;;		Nothing
  2618 ;; This function is called by:
  2619 ;;		_vfpfcnvrt
  2620 ;; This function uses a non-reentrant model
  2621 ;;
  2622                           
  2623                           	psect	text4
  2624  003166                     __ptext4:
  2625                           	opt callstack 0
  2626  003166                     _strncmp:
  2627                           	opt callstack 19
  2628  003166  C00E  F015         	movff	strncmp@_l,strncmp@l
  2629  00316A  C00F  F016         	movff	strncmp@_l+1,strncmp@l+1
  2630  00316E  C010  F017         	movff	strncmp@_r,strncmp@r
  2631  003172  C011  F018         	movff	strncmp@_r+1,strncmp@r+1
  2632  003176  0612               	decf	strncmp@n^0,f,c
  2633  003178  A0D8               	btfss	status,0,c
  2634  00317A  0613               	decf	(strncmp@n+1)^0,f,c
  2635  00317C  2812               	incf	strncmp@n^0,w,c
  2636  00317E  E106               	bnz	u8081
  2637  003180  2813               	incf	(strncmp@n+1)^0,w,c
  2638  003182  A4D8               	btfss	status,2,c
  2639  003184  EFC6  F018         	goto	u8081
  2640  003188  EFC8  F018         	goto	u8080
  2641  00318C                     u8081:
  2642  00318C  EFD5  F018         	goto	l6486
  2643  003190                     u8080:
  2644  003190  0E00               	movlw	0
  2645  003192  6E0F               	movwf	(?_strncmp+1)^0,c
  2646  003194  0E00               	movlw	0
  2647  003196  6E0E               	movwf	?_strncmp^0,c
  2648  003198  EF1D  F019         	goto	l1470
  2649  00319C                     l6484:
  2650  00319C  4A15               	infsnz	strncmp@l^0,f,c
  2651  00319E  2A16               	incf	(strncmp@l+1)^0,f,c
  2652  0031A0  4A17               	infsnz	strncmp@r^0,f,c
  2653  0031A2  2A18               	incf	(strncmp@r+1)^0,f,c
  2654  0031A4  0612               	decf	strncmp@n^0,f,c
  2655  0031A6  A0D8               	btfss	status,0,c
  2656  0031A8  0613               	decf	(strncmp@n+1)^0,f,c
  2657  0031AA                     l6486:
  2658  0031AA  C015  FFD9         	movff	strncmp@l,fsr2l
  2659  0031AE  C016  FFDA         	movff	strncmp@l+1,fsr2h
  2660  0031B2  50DF               	movf	indf2,w,c
  2661  0031B4  B4D8               	btfsc	status,2,c
  2662  0031B6  EFDF  F018         	goto	u8091
  2663  0031BA  EFE1  F018         	goto	u8090
  2664  0031BE                     u8091:
  2665  0031BE  EF0C  F019         	goto	l6494
  2666  0031C2                     u8090:
  2667  0031C2  C017  FFF6         	movff	strncmp@r,tblptrl
  2668  0031C6  C018  FFF7         	movff	strncmp@r+1,tblptrh
  2669  0031CA                     	if	0	;tblptru may be non-zero
  2670  0031CA                     	endif
  2671  0031CA                     	if	0	;tblptru may be non-zero
  2672  0031CA                     	endif
  2673  0031CA  0008               	tblrd		*
  2674  0031CC  50F5               	movf	tablat,w,c
  2675  0031CE  0900               	iorlw	0
  2676  0031D0  B4D8               	btfsc	status,2,c
  2677  0031D2  EFED  F018         	goto	u8101
  2678  0031D6  EFEF  F018         	goto	u8100
  2679  0031DA                     u8101:
  2680  0031DA  EF0C  F019         	goto	l6494
  2681  0031DE                     u8100:
  2682  0031DE  5012               	movf	strncmp@n^0,w,c
  2683  0031E0  1013               	iorwf	(strncmp@n+1)^0,w,c
  2684  0031E2  B4D8               	btfsc	status,2,c
  2685  0031E4  EFF6  F018         	goto	u8111
  2686  0031E8  EFF8  F018         	goto	u8110
  2687  0031EC                     u8111:
  2688  0031EC  EF0C  F019         	goto	l6494
  2689  0031F0                     u8110:
  2690  0031F0  C015  FFD9         	movff	strncmp@l,fsr2l
  2691  0031F4  C016  FFDA         	movff	strncmp@l+1,fsr2h
  2692  0031F8  50DF               	movf	indf2,w,c
  2693  0031FA  6E14               	movwf	??_strncmp^0,c
  2694  0031FC  C017  FFF6         	movff	strncmp@r,tblptrl
  2695  003200  C018  FFF7         	movff	strncmp@r+1,tblptrh
  2696  003204                     	if	0	;tblptru may be non-zero
  2697  003204                     	endif
  2698  003204                     	if	0	;tblptru may be non-zero
  2699  003204                     	endif
  2700  003204  0008               	tblrd		*
  2701  003206  50F5               	movf	tablat,w,c
  2702  003208  1814               	xorwf	??_strncmp^0,w,c
  2703  00320A  B4D8               	btfsc	status,2,c
  2704  00320C  EF0A  F019         	goto	u8121
  2705  003210  EF0C  F019         	goto	u8120
  2706  003214                     u8121:
  2707  003214  EFCE  F018         	goto	l6484
  2708  003218                     u8120:
  2709  003218                     l6494:
  2710  003218  C015  FFD9         	movff	strncmp@l,fsr2l
  2711  00321C  C016  FFDA         	movff	strncmp@l+1,fsr2h
  2712  003220  50DF               	movf	indf2,w,c
  2713  003222  6E14               	movwf	??_strncmp^0,c
  2714  003224  C017  FFF6         	movff	strncmp@r,tblptrl
  2715  003228  C018  FFF7         	movff	strncmp@r+1,tblptrh
  2716  00322C                     	if	0	;tblptru may be non-zero
  2717  00322C                     	endif
  2718  00322C                     	if	0	;tblptru may be non-zero
  2719  00322C                     	endif
  2720  00322C  0008               	tblrd		*
  2721  00322E  50F5               	movf	tablat,w,c
  2722  003230  5C14               	subwf	??_strncmp^0,w,c
  2723  003232  6E0E               	movwf	?_strncmp^0,c
  2724  003234  6A0F               	clrf	(?_strncmp+1)^0,c
  2725  003236  A0D8               	btfss	status,0,c
  2726  003238  060F               	decf	(?_strncmp+1)^0,f,c
  2727  00323A                     l1470:
  2728  00323A  0012               	return		;funcret
  2729  00323C                     __end_of_strncmp:
  2730                           	opt callstack 0
  2731                           
  2732 ;; *************** function _efgtoa *****************
  2733 ;; Defined at:
  2734 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2735 ;; Parameters:    Size  Location     Type
  2736 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  2737 ;;		 -> sprintf@f(6), 
  2738 ;;  f               4    2[BANK0 ] PTR struct _IO_FILE
  2739 ;;  c               1    6[BANK0 ] unsigned char 
  2740 ;; Auto vars:     Size  Location     Type
  2741 ;;  u               4   64[BANK0 ] unsigned char 
  2742 ;;  g               4   56[BANK0 ] unsigned char 
  2743 ;;  l               4   50[BANK0 ] unsigned char 
  2744 ;;  h               4   46[BANK0 ] unsigned char 
  2745 ;;  ou              4   12[BANK0 ] unsigned char 
  2746 ;;  n               2   62[BANK0 ] int 
  2747 ;;  e               2   60[BANK0 ] int 
  2748 ;;  i               2   54[BANK0 ] int 
  2749 ;;  w               2   43[BANK0 ] int 
  2750 ;;  p               2   40[BANK0 ] int 
  2751 ;;  sign            2   38[BANK0 ] int 
  2752 ;;  d               2   36[BANK0 ] int 
  2753 ;;  ne              2   34[BANK0 ] int 
  2754 ;;  m               2   32[BANK0 ] int 
  2755 ;;  pp              2   30[BANK0 ] int 
  2756 ;;  t               2   28[BANK0 ] int 
  2757 ;;  mode            1   45[BANK0 ] unsigned char 
  2758 ;;  nmode           1   42[BANK0 ] unsigned char 
  2759 ;; Return value:  Size  Location     Type
  2760 ;;                  2    0[BANK0 ] int 
  2761 ;; Registers used:
  2762 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2763 ;; Tracked objects:
  2764 ;;		On entry : 0/0
  2765 ;;		On exit  : 0/0
  2766 ;;		Unchanged: 0/0
  2767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2768 ;;      Params:         0       7       0       0       0       0       0
  2769 ;;      Locals:         0      56       0       0       0       0       0
  2770 ;;      Temps:          0       5       0       0       0       0       0
  2771 ;;      Totals:         0      68       0       0       0       0       0
  2772 ;;Total ram usage:       68 bytes
  2773 ;; Hardware stack levels used:    1
  2774 ;; Hardware stack levels required when called:   12
  2775 ;; This function calls:
  2776 ;;		___awdiv
  2777 ;;		___awmod
  2778 ;;		___fladd
  2779 ;;		___fldiv
  2780 ;;		___fleq
  2781 ;;		___flge
  2782 ;;		___flmul
  2783 ;;		___flneg
  2784 ;;		___flsub
  2785 ;;		___fltol
  2786 ;;		___fpclassifyf
  2787 ;;		_floorf
  2788 ;;		_isupper
  2789 ;;		_pad
  2790 ;;		_strcpy
  2791 ;;		_tolower
  2792 ;; This function is called by:
  2793 ;;		_vfpfcnvrt
  2794 ;; This function uses a non-reentrant model
  2795 ;;
  2796                           
  2797                           	psect	text5
  2798  0006AC                     __ptext5:
  2799                           	opt callstack 0
  2800  0006AC                     _efgtoa:
  2801                           	opt callstack 15
  2802  0006AC                     
  2803                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.10\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  2804  0006AC  0E00               	movlw	0
  2805  0006AE  0100               	movlb	0	; () banked
  2806  0006B0  6F87               	movwf	(efgtoa@sign+1)& (0+255),b
  2807  0006B2  0E00               	movlw	0
  2808  0006B4  6F86               	movwf	efgtoa@sign& (0+255),b
  2809  0006B6                     
  2810                           ; BSR set to: 0
  2811                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  2812  0006B6  C062  F098         	movff	efgtoa@f,efgtoa@g
  2813  0006BA  C063  F099         	movff	efgtoa@f+1,efgtoa@g+1
  2814  0006BE  C064  F09A         	movff	efgtoa@f+2,efgtoa@g+2
  2815  0006C2  C065  F09B         	movff	efgtoa@f+3,efgtoa@g+3
  2816  0006C6                     
  2817                           ; BSR set to: 0
  2818                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  2819  0006C6  BF9B               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2820  0006C8  EF6A  F003         	goto	u7490
  2821  0006CC  EF68  F003         	goto	u7491
  2822  0006D0                     u7491:
  2823  0006D0  EF80  F003         	goto	l6148
  2824  0006D4                     u7490:
  2825  0006D4                     
  2826                           ; BSR set to: 0
  2827                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  2828  0006D4  0E00               	movlw	0
  2829  0006D6  6F87               	movwf	(efgtoa@sign+1)& (0+255),b
  2830  0006D8  0E01               	movlw	1
  2831  0006DA  6F86               	movwf	efgtoa@sign& (0+255),b
  2832  0006DC                     
  2833                           ; BSR set to: 0
  2834                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  2835  0006DC  C098  F00E         	movff	efgtoa@g,___flneg@f1
  2836  0006E0  C099  F00F         	movff	efgtoa@g+1,___flneg@f1+1
  2837  0006E4  C09A  F010         	movff	efgtoa@g+2,___flneg@f1+2
  2838  0006E8  C09B  F011         	movff	efgtoa@g+3,___flneg@f1+3
  2839  0006EC  EC7F  F01D         	call	___flneg	;wreg free
  2840  0006F0  C00E  F098         	movff	?___flneg,efgtoa@g
  2841  0006F4  C00F  F099         	movff	?___flneg+1,efgtoa@g+1
  2842  0006F8  C010  F09A         	movff	?___flneg+2,efgtoa@g+2
  2843  0006FC  C011  F09B         	movff	?___flneg+3,efgtoa@g+3
  2844  000700                     l6148:
  2845                           
  2846                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  2847  000700  0E00               	movlw	0
  2848  000702  0100               	movlb	0	; () banked
  2849  000704  6F9F               	movwf	(efgtoa@n+1)& (0+255),b
  2850  000706  0E00               	movlw	0
  2851  000708  6F9E               	movwf	efgtoa@n& (0+255),b
  2852  00070A                     
  2853                           ; BSR set to: 0
  2854                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  2855  00070A  C045  F08B         	movff	_width,efgtoa@w
  2856  00070E  C046  F08C         	movff	_width+1,efgtoa@w+1
  2857  000712                     
  2858                           ; BSR set to: 0
  2859                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  2860  000712  5186               	movf	efgtoa@sign& (0+255),w,b
  2861  000714  1187               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2862  000716  A4D8               	btfss	status,2,c
  2863  000718  EF90  F003         	goto	u7501
  2864  00071C  EF92  F003         	goto	u7500
  2865  000720                     u7501:
  2866  000720  EF99  F003         	goto	l6156
  2867  000724                     u7500:
  2868  000724                     
  2869                           ; BSR set to: 0
  2870  000724  A449               	btfss	_flags^0,2,c
  2871  000726  EF97  F003         	goto	u7511
  2872  00072A  EF99  F003         	goto	u7510
  2873  00072E                     u7511:
  2874  00072E  EFB3  F003         	goto	l6168
  2875  000732                     u7510:
  2876  000732                     l6156:
  2877                           
  2878                           ; BSR set to: 0
  2879                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  2880  000732  5186               	movf	efgtoa@sign& (0+255),w,b
  2881  000734  1187               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2882  000736  A4D8               	btfss	status,2,c
  2883  000738  EFA0  F003         	goto	u7521
  2884  00073C  EFA2  F003         	goto	u7520
  2885  000740                     u7521:
  2886  000740  EFA8  F003         	goto	l6160
  2887  000744                     u7520:
  2888  000744                     
  2889                           ; BSR set to: 0
  2890  000744  0E00               	movlw	0
  2891  000746  6F71               	movwf	(_efgtoa$1249+1)& (0+255),b
  2892  000748  0E2B               	movlw	43
  2893  00074A  6F70               	movwf	_efgtoa$1249& (0+255),b
  2894  00074C  EFAC  F003         	goto	l6162
  2895  000750                     l6160:
  2896                           
  2897                           ; BSR set to: 0
  2898  000750  0E00               	movlw	0
  2899  000752  6F71               	movwf	(_efgtoa$1249+1)& (0+255),b
  2900  000754  0E2D               	movlw	45
  2901  000756  6F70               	movwf	_efgtoa$1249& (0+255),b
  2902  000758                     l6162:
  2903                           
  2904                           ; BSR set to: 0
  2905  000758  C070  F108         	movff	_efgtoa$1249,_dbuf
  2906  00075C                     
  2907                           ; BSR set to: 0
  2908                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  2909  00075C  4B9E               	infsnz	efgtoa@n& (0+255),f,b
  2910  00075E  2B9F               	incf	(efgtoa@n+1)& (0+255),f,b
  2911  000760                     
  2912                           ; BSR set to: 0
  2913                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  2914  000760  078B               	decf	efgtoa@w& (0+255),f,b
  2915  000762  A0D8               	btfss	status,0,c
  2916  000764  078C               	decf	(efgtoa@w+1)& (0+255),f,b
  2917  000766                     l6168:
  2918                           
  2919                           ; BSR set to: 0
  2920                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2921  000766  C098  F00E         	movff	efgtoa@g,___fpclassifyf@x
  2922  00076A  C099  F00F         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2923  00076E  C09A  F010         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2924  000772  C09B  F011         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2925  000776  EC34  F018         	call	___fpclassifyf	;wreg free
  2926  00077A  040E               	decf	?___fpclassifyf^0,w,c
  2927  00077C  100F               	iorwf	(?___fpclassifyf+1)^0,w,c
  2928  00077E  A4D8               	btfss	status,2,c
  2929  000780  EFC4  F003         	goto	u7531
  2930  000784  EFC6  F003         	goto	u7530
  2931  000788                     u7531:
  2932  000788  EF1D  F004         	goto	l6186
  2933  00078C                     u7530:
  2934  00078C  0EBF               	movlw	191
  2935  00078E  0100               	movlb	0	; () banked
  2936  000790  6F67               	movwf	??_efgtoa& (0+255),b
  2937  000792  0EFF               	movlw	255
  2938  000794  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  2939  000796  5166               	movf	efgtoa@c& (0+255),w,b
  2940  000798  6F69               	movwf	(??_efgtoa+2)& (0+255),b
  2941  00079A  6B6A               	clrf	(??_efgtoa+3)& (0+255),b
  2942  00079C  5167               	movf	??_efgtoa& (0+255),w,b
  2943  00079E  2769               	addwf	(??_efgtoa+2)& (0+255),f,b
  2944  0007A0  5168               	movf	(??_efgtoa+1)& (0+255),w,b
  2945  0007A2  236A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2946  0007A4  516A               	movf	(??_efgtoa+3)& (0+255),w,b
  2947  0007A6  E10A               	bnz	u7540
  2948  0007A8  0E1A               	movlw	26
  2949  0007AA  5D69               	subwf	(??_efgtoa+2)& (0+255),w,b
  2950  0007AC  A0D8               	btfss	status,0,c
  2951  0007AE  EFDB  F003         	goto	u7541
  2952  0007B2  EFDE  F003         	goto	u7540
  2953  0007B6                     u7541:
  2954  0007B6  0E01               	movlw	1
  2955  0007B8  EFDF  F003         	goto	u7550
  2956  0007BC                     u7540:
  2957  0007BC  0E00               	movlw	0
  2958  0007BE                     u7550:
  2959  0007BE  6F72               	movwf	_efgtoa$1250& (0+255),b
  2960  0007C0  6B73               	clrf	(_efgtoa$1250+1)& (0+255),b
  2961  0007C2                     
  2962                           ; BSR set to: 0
  2963  0007C2  5172               	movf	_efgtoa$1250& (0+255),w,b
  2964  0007C4  1173               	iorwf	(_efgtoa$1250+1)& (0+255),w,b
  2965  0007C6  B4D8               	btfsc	status,2,c
  2966  0007C8  EFE8  F003         	goto	u7561
  2967  0007CC  EFEA  F003         	goto	u7560
  2968  0007D0                     u7561:
  2969  0007D0  EFF8  F003         	goto	l6178
  2970  0007D4                     u7560:
  2971  0007D4                     
  2972                           ; BSR set to: 0
  2973                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  2974  0007D4  0E08               	movlw	low _dbuf
  2975  0007D6  259E               	addwf	efgtoa@n& (0+255),w,b
  2976  0007D8  6E0E               	movwf	strcpy@dest^0,c
  2977  0007DA  0E01               	movlw	high _dbuf
  2978  0007DC  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2979  0007DE  6E0F               	movwf	(strcpy@dest+1)^0,c
  2980  0007E0  0E94               	movlw	low STR_8
  2981  0007E2  6E10               	movwf	strcpy@src^0,c
  2982  0007E4  0E06               	movlw	high STR_8
  2983  0007E6  6E11               	movwf	(strcpy@src+1)^0,c
  2984  0007E8  ECCD  F01B         	call	_strcpy	;wreg free
  2985                           
  2986                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  2987  0007EC  EF04  F004         	goto	l6180
  2988  0007F0                     l6178:
  2989                           
  2990                           ; BSR set to: 0
  2991                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  2992  0007F0  0E08               	movlw	low _dbuf
  2993  0007F2  259E               	addwf	efgtoa@n& (0+255),w,b
  2994  0007F4  6E0E               	movwf	strcpy@dest^0,c
  2995  0007F6  0E01               	movlw	high _dbuf
  2996  0007F8  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2997  0007FA  6E0F               	movwf	(strcpy@dest+1)^0,c
  2998  0007FC  0E9C               	movlw	low STR_9
  2999  0007FE  6E10               	movwf	strcpy@src^0,c
  3000  000800  0E06               	movlw	high STR_9
  3001  000802  6E11               	movwf	(strcpy@src+1)^0,c
  3002  000804  ECCD  F01B         	call	_strcpy	;wreg free
  3003  000808                     l6180:
  3004                           
  3005                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  3006  000808  0100               	movlb	0	; () banked
  3007  00080A  0EFD               	movlw	253
  3008  00080C  278B               	addwf	efgtoa@w& (0+255),f,b
  3009  00080E  0EFF               	movlw	255
  3010  000810  238C               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3011  000812                     l6182:
  3012                           
  3013                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  3014  000812  C060  F01E         	movff	efgtoa@fp,pad@fp
  3015  000816  C061  F01F         	movff	efgtoa@fp+1,pad@fp+1
  3016  00081A  0E08               	movlw	low _dbuf
  3017  00081C  6E20               	movwf	pad@buf^0,c
  3018  00081E  0E01               	movlw	high _dbuf
  3019  000820  6E21               	movwf	(pad@buf+1)^0,c
  3020  000822  C08B  F022         	movff	efgtoa@w,pad@p
  3021  000826  C08C  F023         	movff	efgtoa@w+1,pad@p+1
  3022  00082A  ECE5  F019         	call	_pad	;wreg free
  3023  00082E  C01E  F060         	movff	?_pad,?_efgtoa
  3024  000832  C01F  F061         	movff	?_pad+1,?_efgtoa+1
  3025  000836  EF2E  F009         	goto	l571
  3026  00083A                     l6186:
  3027                           
  3028                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3029  00083A  C098  F00E         	movff	efgtoa@g,___fpclassifyf@x
  3030  00083E  C099  F00F         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3031  000842  C09A  F010         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3032  000846  C09B  F011         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3033  00084A  EC34  F018         	call	___fpclassifyf	;wreg free
  3034  00084E  500E               	movf	?___fpclassifyf^0,w,c
  3035  000850  100F               	iorwf	(?___fpclassifyf+1)^0,w,c
  3036  000852  A4D8               	btfss	status,2,c
  3037  000854  EF2E  F004         	goto	u7571
  3038  000858  EF30  F004         	goto	u7570
  3039  00085C                     u7571:
  3040  00085C  EF70  F004         	goto	l6204
  3041  000860                     u7570:
  3042  000860  0EBF               	movlw	191
  3043  000862  0100               	movlb	0	; () banked
  3044  000864  6F67               	movwf	??_efgtoa& (0+255),b
  3045  000866  0EFF               	movlw	255
  3046  000868  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  3047  00086A  5166               	movf	efgtoa@c& (0+255),w,b
  3048  00086C  6F69               	movwf	(??_efgtoa+2)& (0+255),b
  3049  00086E  6B6A               	clrf	(??_efgtoa+3)& (0+255),b
  3050  000870  5167               	movf	??_efgtoa& (0+255),w,b
  3051  000872  2769               	addwf	(??_efgtoa+2)& (0+255),f,b
  3052  000874  5168               	movf	(??_efgtoa+1)& (0+255),w,b
  3053  000876  236A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3054  000878  516A               	movf	(??_efgtoa+3)& (0+255),w,b
  3055  00087A  E10A               	bnz	u7580
  3056  00087C  0E1A               	movlw	26
  3057  00087E  5D69               	subwf	(??_efgtoa+2)& (0+255),w,b
  3058  000880  A0D8               	btfss	status,0,c
  3059  000882  EF45  F004         	goto	u7581
  3060  000886  EF48  F004         	goto	u7580
  3061  00088A                     u7581:
  3062  00088A  0E01               	movlw	1
  3063  00088C  EF49  F004         	goto	u7590
  3064  000890                     u7580:
  3065  000890  0E00               	movlw	0
  3066  000892                     u7590:
  3067  000892  6F74               	movwf	_efgtoa$1255& (0+255),b
  3068  000894  6B75               	clrf	(_efgtoa$1255+1)& (0+255),b
  3069  000896                     
  3070                           ; BSR set to: 0
  3071  000896  5174               	movf	_efgtoa$1255& (0+255),w,b
  3072  000898  1175               	iorwf	(_efgtoa$1255+1)& (0+255),w,b
  3073  00089A  B4D8               	btfsc	status,2,c
  3074  00089C  EF52  F004         	goto	u7601
  3075  0008A0  EF54  F004         	goto	u7600
  3076  0008A4                     u7601:
  3077  0008A4  EF62  F004         	goto	l6196
  3078  0008A8                     u7600:
  3079  0008A8                     
  3080                           ; BSR set to: 0
  3081                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  3082  0008A8  0E08               	movlw	low _dbuf
  3083  0008AA  259E               	addwf	efgtoa@n& (0+255),w,b
  3084  0008AC  6E0E               	movwf	strcpy@dest^0,c
  3085  0008AE  0E01               	movlw	high _dbuf
  3086  0008B0  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3087  0008B2  6E0F               	movwf	(strcpy@dest+1)^0,c
  3088  0008B4  0E98               	movlw	low STR_12
  3089  0008B6  6E10               	movwf	strcpy@src^0,c
  3090  0008B8  0E06               	movlw	high STR_12
  3091  0008BA  6E11               	movwf	(strcpy@src+1)^0,c
  3092  0008BC  ECCD  F01B         	call	_strcpy	;wreg free
  3093                           
  3094                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  3095  0008C0  EF04  F004         	goto	l6180
  3096  0008C4                     l6196:
  3097                           
  3098                           ; BSR set to: 0
  3099                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  3100  0008C4  0E08               	movlw	low _dbuf
  3101  0008C6  259E               	addwf	efgtoa@n& (0+255),w,b
  3102  0008C8  6E0E               	movwf	strcpy@dest^0,c
  3103  0008CA  0E01               	movlw	high _dbuf
  3104  0008CC  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3105  0008CE  6E0F               	movwf	(strcpy@dest+1)^0,c
  3106  0008D0  0EA0               	movlw	low STR_13
  3107  0008D2  6E10               	movwf	strcpy@src^0,c
  3108  0008D4  0E06               	movlw	high STR_13
  3109  0008D6  6E11               	movwf	(strcpy@src+1)^0,c
  3110  0008D8  ECCD  F01B         	call	_strcpy	;wreg free
  3111  0008DC  EF04  F004         	goto	l6180
  3112  0008E0                     l6204:
  3113                           
  3114                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  3115  0008E0  0E00               	movlw	0
  3116  0008E2  0100               	movlb	0	; () banked
  3117  0008E4  6FA0               	movwf	efgtoa@u& (0+255),b
  3118  0008E6  0E00               	movlw	0
  3119  0008E8  6FA1               	movwf	(efgtoa@u+1)& (0+255),b
  3120  0008EA  0E80               	movlw	128
  3121  0008EC  6FA2               	movwf	(efgtoa@u+2)& (0+255),b
  3122  0008EE  0E3F               	movlw	63
  3123  0008F0  6FA3               	movwf	(efgtoa@u+3)& (0+255),b
  3124                           
  3125                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  3126  0008F2  0E00               	movlw	0
  3127  0008F4  6F9D               	movwf	(efgtoa@e+1)& (0+255),b
  3128  0008F6  0E00               	movlw	0
  3129  0008F8  6F9C               	movwf	efgtoa@e& (0+255),b
  3130  0008FA                     
  3131                           ; BSR set to: 0
  3132                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  3133  0008FA  C098  F00E         	movff	efgtoa@g,___fleq@ff1
  3134  0008FE  C099  F00F         	movff	efgtoa@g+1,___fleq@ff1+1
  3135  000902  C09A  F010         	movff	efgtoa@g+2,___fleq@ff1+2
  3136  000906  C09B  F011         	movff	efgtoa@g+3,___fleq@ff1+3
  3137  00090A  0E00               	movlw	0
  3138  00090C  6E12               	movwf	___fleq@ff2^0,c
  3139  00090E  0E00               	movlw	0
  3140  000910  6E13               	movwf	(___fleq@ff2+1)^0,c
  3141  000912  0E00               	movlw	0
  3142  000914  6E14               	movwf	(___fleq@ff2+2)^0,c
  3143  000916  0E00               	movlw	0
  3144  000918  6E15               	movwf	(___fleq@ff2+3)^0,c
  3145  00091A  EC9E  F01A         	call	___fleq	;wreg free
  3146  00091E  B0D8               	btfsc	status,0,c
  3147  000920  EF94  F004         	goto	u7611
  3148  000924  EF96  F004         	goto	u7610
  3149  000928                     u7611:
  3150  000928  EF19  F005         	goto	l6222
  3151  00092C                     u7610:
  3152  00092C  EFB5  F004         	goto	l6214
  3153  000930                     l6210:
  3154                           
  3155                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  3156  000930  C0A0  F01C         	movff	efgtoa@u,___flmul@b
  3157  000934  C0A1  F01D         	movff	efgtoa@u+1,___flmul@b+1
  3158  000938  C0A2  F01E         	movff	efgtoa@u+2,___flmul@b+2
  3159  00093C  C0A3  F01F         	movff	efgtoa@u+3,___flmul@b+3
  3160  000940  0E00               	movlw	0
  3161  000942  6E20               	movwf	___flmul@a^0,c
  3162  000944  0E00               	movlw	0
  3163  000946  6E21               	movwf	(___flmul@a+1)^0,c
  3164  000948  0E20               	movlw	32
  3165  00094A  6E22               	movwf	(___flmul@a+2)^0,c
  3166  00094C  0E41               	movlw	65
  3167  00094E  6E23               	movwf	(___flmul@a+3)^0,c
  3168  000950  ECC5  F00D         	call	___flmul	;wreg free
  3169  000954  C01C  F0A0         	movff	?___flmul,efgtoa@u
  3170  000958  C01D  F0A1         	movff	?___flmul+1,efgtoa@u+1
  3171  00095C  C01E  F0A2         	movff	?___flmul+2,efgtoa@u+2
  3172  000960  C01F  F0A3         	movff	?___flmul+3,efgtoa@u+3
  3173  000964                     
  3174                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  3175  000964  0100               	movlb	0	; () banked
  3176  000966  4B9C               	infsnz	efgtoa@e& (0+255),f,b
  3177  000968  2B9D               	incf	(efgtoa@e+1)& (0+255),f,b
  3178  00096A                     l6214:
  3179                           
  3180                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  3181  00096A  C098  F035         	movff	efgtoa@g,___flge@ff1
  3182  00096E  C099  F036         	movff	efgtoa@g+1,___flge@ff1+1
  3183  000972  C09A  F037         	movff	efgtoa@g+2,___flge@ff1+2
  3184  000976  C09B  F038         	movff	efgtoa@g+3,___flge@ff1+3
  3185  00097A  0E00               	movlw	0
  3186  00097C  6E20               	movwf	___flmul@a^0,c
  3187  00097E  0E00               	movlw	0
  3188  000980  6E21               	movwf	(___flmul@a+1)^0,c
  3189  000982  0E20               	movlw	32
  3190  000984  6E22               	movwf	(___flmul@a+2)^0,c
  3191  000986  0E41               	movlw	65
  3192  000988  6E23               	movwf	(___flmul@a+3)^0,c
  3193  00098A  C0A0  F01C         	movff	efgtoa@u,___flmul@b
  3194  00098E  C0A1  F01D         	movff	efgtoa@u+1,___flmul@b+1
  3195  000992  C0A2  F01E         	movff	efgtoa@u+2,___flmul@b+2
  3196  000996  C0A3  F01F         	movff	efgtoa@u+3,___flmul@b+3
  3197  00099A  ECC5  F00D         	call	___flmul	;wreg free
  3198  00099E  C01C  F039         	movff	?___flmul,___flge@ff2
  3199  0009A2  C01D  F03A         	movff	?___flmul+1,___flge@ff2+1
  3200  0009A6  C01E  F03B         	movff	?___flmul+2,___flge@ff2+2
  3201  0009AA  C01F  F03C         	movff	?___flmul+3,___flge@ff2+3
  3202  0009AE  EC32  F017         	call	___flge	;wreg free
  3203  0009B2  B0D8               	btfsc	status,0,c
  3204  0009B4  EFDE  F004         	goto	u7621
  3205  0009B8  EFE0  F004         	goto	u7620
  3206  0009BC                     u7621:
  3207  0009BC  EF98  F004         	goto	l6210
  3208  0009C0                     u7620:
  3209  0009C0  EF00  F005         	goto	l6220
  3210  0009C4                     l6216:
  3211                           
  3212                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  3213  0009C4  C0A0  F00E         	movff	efgtoa@u,___fldiv@b
  3214  0009C8  C0A1  F00F         	movff	efgtoa@u+1,___fldiv@b+1
  3215  0009CC  C0A2  F010         	movff	efgtoa@u+2,___fldiv@b+2
  3216  0009D0  C0A3  F011         	movff	efgtoa@u+3,___fldiv@b+3
  3217  0009D4  0E00               	movlw	0
  3218  0009D6  6E12               	movwf	___fldiv@a^0,c
  3219  0009D8  0E00               	movlw	0
  3220  0009DA  6E13               	movwf	(___fldiv@a+1)^0,c
  3221  0009DC  0E20               	movlw	32
  3222  0009DE  6E14               	movwf	(___fldiv@a+2)^0,c
  3223  0009E0  0E41               	movlw	65
  3224  0009E2  6E15               	movwf	(___fldiv@a+3)^0,c
  3225  0009E4  ECB2  F011         	call	___fldiv	;wreg free
  3226  0009E8  C00E  F0A0         	movff	?___fldiv,efgtoa@u
  3227  0009EC  C00F  F0A1         	movff	?___fldiv+1,efgtoa@u+1
  3228  0009F0  C010  F0A2         	movff	?___fldiv+2,efgtoa@u+2
  3229  0009F4  C011  F0A3         	movff	?___fldiv+3,efgtoa@u+3
  3230  0009F8                     
  3231                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  3232  0009F8  0100               	movlb	0	; () banked
  3233  0009FA  079C               	decf	efgtoa@e& (0+255),f,b
  3234  0009FC  A0D8               	btfss	status,0,c
  3235  0009FE  079D               	decf	(efgtoa@e+1)& (0+255),f,b
  3236  000A00                     l6220:
  3237                           
  3238                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  3239  000A00  C098  F035         	movff	efgtoa@g,___flge@ff1
  3240  000A04  C099  F036         	movff	efgtoa@g+1,___flge@ff1+1
  3241  000A08  C09A  F037         	movff	efgtoa@g+2,___flge@ff1+2
  3242  000A0C  C09B  F038         	movff	efgtoa@g+3,___flge@ff1+3
  3243  000A10  C0A0  F039         	movff	efgtoa@u,___flge@ff2
  3244  000A14  C0A1  F03A         	movff	efgtoa@u+1,___flge@ff2+1
  3245  000A18  C0A2  F03B         	movff	efgtoa@u+2,___flge@ff2+2
  3246  000A1C  C0A3  F03C         	movff	efgtoa@u+3,___flge@ff2+3
  3247  000A20  EC32  F017         	call	___flge	;wreg free
  3248  000A24  A0D8               	btfss	status,0,c
  3249  000A26  EF17  F005         	goto	u7631
  3250  000A2A  EF19  F005         	goto	u7630
  3251  000A2E                     u7631:
  3252  000A2E  EFE2  F004         	goto	l6216
  3253  000A32                     u7630:
  3254  000A32                     l6222:
  3255                           
  3256                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  3257  000A32  C066  F014         	movff	efgtoa@c,tolower@c
  3258  000A36  6A15               	clrf	(tolower@c+1)^0,c
  3259  000A38  EC9D  F01B         	call	_tolower	;wreg free
  3260  000A3C  5014               	movf	?_tolower^0,w,c
  3261  000A3E  0100               	movlb	0	; () banked
  3262  000A40  6F8D               	movwf	efgtoa@mode& (0+255),b
  3263  000A42                     
  3264                           ; BSR set to: 0
  3265                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  3266  000A42  C08D  F08A         	movff	efgtoa@mode,efgtoa@nmode
  3267  000A46                     
  3268                           ; BSR set to: 0
  3269                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  3270  000A46  0E67               	movlw	103
  3271  000A48  198D               	xorwf	efgtoa@mode& (0+255),w,b
  3272  000A4A  A4D8               	btfss	status,2,c
  3273  000A4C  EF2A  F005         	goto	u7641
  3274  000A50  EF2C  F005         	goto	u7640
  3275  000A54                     u7641:
  3276  000A54  EF52  F005         	goto	l6236
  3277  000A58                     u7640:
  3278  000A58                     
  3279                           ; BSR set to: 0
  3280                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  3281  000A58  5047               	movf	_prec^0,w,c
  3282  000A5A  1048               	iorwf	(_prec+1)^0,w,c
  3283  000A5C  A4D8               	btfss	status,2,c
  3284  000A5E  EF33  F005         	goto	u7651
  3285  000A62  EF35  F005         	goto	u7650
  3286  000A66                     u7651:
  3287  000A66  EF39  F005         	goto	l6232
  3288  000A6A                     u7650:
  3289  000A6A                     
  3290                           ; BSR set to: 0
  3291                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  3292  000A6A  0E00               	movlw	0
  3293  000A6C  6E48               	movwf	(_prec+1)^0,c
  3294  000A6E  0E01               	movlw	1
  3295  000A70  6E47               	movwf	_prec^0,c
  3296  000A72                     l6232:
  3297                           
  3298                           ; BSR set to: 0
  3299                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  3300  000A72  BE48               	btfsc	(_prec+1)^0,7,c
  3301  000A74  EF46  F005         	goto	u7660
  3302  000A78  5048               	movf	(_prec+1)^0,w,c
  3303  000A7A  E106               	bnz	u7661
  3304  000A7C  0447               	decf	_prec^0,w,c
  3305  000A7E  B0D8               	btfsc	status,0,c
  3306  000A80  EF44  F005         	goto	u7661
  3307  000A84  EF46  F005         	goto	u7660
  3308  000A88                     u7661:
  3309  000A88  EF4C  F005         	goto	l589
  3310  000A8C                     u7660:
  3311  000A8C                     l6234:
  3312                           
  3313                           ; BSR set to: 0
  3314  000A8C  0E00               	movlw	0
  3315  000A8E  6F89               	movwf	(efgtoa@p+1)& (0+255),b
  3316  000A90  0E06               	movlw	6
  3317  000A92  6F88               	movwf	efgtoa@p& (0+255),b
  3318  000A94  EF5B  F005         	goto	l6242
  3319  000A98                     l589:
  3320                           
  3321                           ; BSR set to: 0
  3322  000A98  C047  F088         	movff	_prec,efgtoa@p
  3323  000A9C  C048  F089         	movff	_prec+1,efgtoa@p+1
  3324  000AA0  EF5B  F005         	goto	l6242
  3325  000AA4                     l6236:
  3326                           
  3327                           ; BSR set to: 0
  3328                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  3329  000AA4  BE48               	btfsc	(_prec+1)^0,7,c
  3330  000AA6  EF57  F005         	goto	u7671
  3331  000AAA  EF59  F005         	goto	u7670
  3332  000AAE                     u7671:
  3333  000AAE  EF46  F005         	goto	l6234
  3334  000AB2                     u7670:
  3335  000AB2  EF4C  F005         	goto	l589
  3336  000AB6                     l6242:
  3337                           
  3338                           ; BSR set to: 0
  3339                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  3340  000AB6  0E67               	movlw	103
  3341  000AB8  198D               	xorwf	efgtoa@mode& (0+255),w,b
  3342  000ABA  A4D8               	btfss	status,2,c
  3343  000ABC  EF62  F005         	goto	u7681
  3344  000AC0  EF64  F005         	goto	u7680
  3345  000AC4                     u7681:
  3346  000AC4  EF93  F005         	goto	l6252
  3347  000AC8                     u7680:
  3348  000AC8                     
  3349                           ; BSR set to: 0
  3350                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  3351  000AC8  AF9D               	btfss	(efgtoa@e+1)& (0+255),7,b
  3352  000ACA  EF72  F005         	goto	u7690
  3353  000ACE  0EFC               	movlw	252
  3354  000AD0  5D9C               	subwf	efgtoa@e& (0+255),w,b
  3355  000AD2  0EFF               	movlw	255
  3356  000AD4  599D               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3357  000AD6  A0D8               	btfss	status,0,c
  3358  000AD8  EF70  F005         	goto	u7691
  3359  000ADC  EF72  F005         	goto	u7690
  3360  000AE0                     u7691:
  3361  000AE0  EF91  F005         	goto	l6250
  3362  000AE4                     u7690:
  3363  000AE4                     
  3364                           ; BSR set to: 0
  3365  000AE4  0EFF               	movlw	255
  3366  000AE6  6F67               	movwf	??_efgtoa& (0+255),b
  3367  000AE8  0EFF               	movlw	255
  3368  000AEA  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  3369  000AEC  C088  F069         	movff	efgtoa@p,??_efgtoa+2
  3370  000AF0  C089  F06A         	movff	efgtoa@p+1,??_efgtoa+3
  3371  000AF4  5167               	movf	??_efgtoa& (0+255),w,b
  3372  000AF6  2769               	addwf	(??_efgtoa+2)& (0+255),f,b
  3373  000AF8  5168               	movf	(??_efgtoa+1)& (0+255),w,b
  3374  000AFA  236A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3375  000AFC  519C               	movf	efgtoa@e& (0+255),w,b
  3376  000AFE  5D69               	subwf	(??_efgtoa+2)& (0+255),w,b
  3377  000B00  516A               	movf	(??_efgtoa+3)& (0+255),w,b
  3378  000B02  0A80               	xorlw	128
  3379  000B04  6F6B               	movwf	(??_efgtoa+4)& (0+255),b
  3380  000B06  519D               	movf	(efgtoa@e+1)& (0+255),w,b
  3381  000B08  0A80               	xorlw	128
  3382  000B0A  596B               	subwfb	(??_efgtoa+4)& (0+255),w,b
  3383  000B0C  A0D8               	btfss	status,0,c
  3384  000B0E  EF8B  F005         	goto	u7701
  3385  000B12  EF8D  F005         	goto	u7700
  3386  000B16                     u7701:
  3387  000B16  EF91  F005         	goto	l6250
  3388  000B1A                     u7700:
  3389  000B1A                     
  3390                           ; BSR set to: 0
  3391                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  3392  000B1A  0E66               	movlw	102
  3393  000B1C  6F8A               	movwf	efgtoa@nmode& (0+255),b
  3394                           
  3395                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
  3396  000B1E  EF93  F005         	goto	l6252
  3397  000B22                     l6250:
  3398                           
  3399                           ; BSR set to: 0
  3400                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  3401  000B22  0E65               	movlw	101
  3402  000B24  6F8A               	movwf	efgtoa@nmode& (0+255),b
  3403  000B26                     l6252:
  3404                           
  3405                           ; BSR set to: 0
  3406                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  3407  000B26  C088  F080         	movff	efgtoa@p,efgtoa@m
  3408  000B2A  C089  F081         	movff	efgtoa@p+1,efgtoa@m+1
  3409  000B2E                     
  3410                           ; BSR set to: 0
  3411                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  3412  000B2E  0E67               	movlw	103
  3413  000B30  198D               	xorwf	efgtoa@mode& (0+255),w,b
  3414  000B32  A4D8               	btfss	status,2,c
  3415  000B34  EF9E  F005         	goto	u7711
  3416  000B38  EFA0  F005         	goto	u7710
  3417  000B3C                     u7711:
  3418  000B3C  EFB0  F005         	goto	l6260
  3419  000B40                     u7710:
  3420  000B40                     
  3421                           ; BSR set to: 0
  3422  000B40  0E66               	movlw	102
  3423  000B42  198A               	xorwf	efgtoa@nmode& (0+255),w,b
  3424  000B44  A4D8               	btfss	status,2,c
  3425  000B46  EFA7  F005         	goto	u7721
  3426  000B4A  EFA9  F005         	goto	u7720
  3427  000B4E                     u7721:
  3428  000B4E  EFB2  F005         	goto	l6262
  3429  000B52                     u7720:
  3430  000B52                     
  3431                           ; BSR set to: 0
  3432  000B52  BF9D               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3433  000B54  EFB0  F005         	goto	u7730
  3434  000B58  EFAE  F005         	goto	u7731
  3435  000B5C                     u7731:
  3436  000B5C  EFB2  F005         	goto	l6262
  3437  000B60                     u7730:
  3438  000B60                     l6260:
  3439                           
  3440                           ; BSR set to: 0
  3441                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  3442  000B60  4B80               	infsnz	efgtoa@m& (0+255),f,b
  3443  000B62  2B81               	incf	(efgtoa@m+1)& (0+255),f,b
  3444  000B64                     l6262:
  3445                           
  3446                           ; BSR set to: 0
  3447                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  3448  000B64  0E66               	movlw	102
  3449  000B66  198A               	xorwf	efgtoa@nmode& (0+255),w,b
  3450  000B68  A4D8               	btfss	status,2,c
  3451  000B6A  EFB9  F005         	goto	u7741
  3452  000B6E  EFBB  F005         	goto	u7740
  3453  000B72                     u7741:
  3454  000B72  EFDB  F005         	goto	l6272
  3455  000B76                     u7740:
  3456  000B76                     
  3457                           ; BSR set to: 0
  3458                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  3459  000B76  BF9D               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3460  000B78  EFC2  F005         	goto	u7750
  3461  000B7C  EFC0  F005         	goto	u7751
  3462  000B80                     u7751:
  3463  000B80  EFCE  F005         	goto	l6268
  3464  000B84                     u7750:
  3465  000B84                     
  3466                           ; BSR set to: 0
  3467                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  3468  000B84  0E00               	movlw	0
  3469  000B86  6FA0               	movwf	efgtoa@u& (0+255),b
  3470  000B88  0E00               	movlw	0
  3471  000B8A  6FA1               	movwf	(efgtoa@u+1)& (0+255),b
  3472  000B8C  0E80               	movlw	128
  3473  000B8E  6FA2               	movwf	(efgtoa@u+2)& (0+255),b
  3474  000B90  0E3F               	movlw	63
  3475  000B92  6FA3               	movwf	(efgtoa@u+3)& (0+255),b
  3476                           
  3477                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  3478  000B94  0E00               	movlw	0
  3479  000B96  6F9D               	movwf	(efgtoa@e+1)& (0+255),b
  3480  000B98  0E00               	movlw	0
  3481  000B9A  6F9C               	movwf	efgtoa@e& (0+255),b
  3482  000B9C                     l6268:
  3483                           
  3484                           ; BSR set to: 0
  3485                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  3486  000B9C  0E67               	movlw	103
  3487  000B9E  198D               	xorwf	efgtoa@mode& (0+255),w,b
  3488  000BA0  B4D8               	btfsc	status,2,c
  3489  000BA2  EFD5  F005         	goto	u7761
  3490  000BA6  EFD7  F005         	goto	u7760
  3491  000BAA                     u7761:
  3492  000BAA  EFDB  F005         	goto	l6272
  3493  000BAE                     u7760:
  3494  000BAE                     
  3495                           ; BSR set to: 0
  3496                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  3497  000BAE  519C               	movf	efgtoa@e& (0+255),w,b
  3498  000BB0  2780               	addwf	efgtoa@m& (0+255),f,b
  3499  000BB2  519D               	movf	(efgtoa@e+1)& (0+255),w,b
  3500  000BB4  2381               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3501  000BB6                     l6272:
  3502                           
  3503                           ; BSR set to: 0
  3504                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  3505  000BB6  0E00               	movlw	0
  3506  000BB8  6F97               	movwf	(efgtoa@i+1)& (0+255),b
  3507  000BBA  0E00               	movlw	0
  3508  000BBC  6F96               	movwf	efgtoa@i& (0+255),b
  3509  000BBE                     
  3510                           ; BSR set to: 0
  3511                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  3512  000BBE  C098  F08E         	movff	efgtoa@g,efgtoa@h
  3513  000BC2  C099  F08F         	movff	efgtoa@g+1,efgtoa@h+1
  3514  000BC6  C09A  F090         	movff	efgtoa@g+2,efgtoa@h+2
  3515  000BCA  C09B  F091         	movff	efgtoa@g+3,efgtoa@h+3
  3516  000BCE                     
  3517                           ; BSR set to: 0
  3518                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  3519  000BCE  C0A0  F06C         	movff	efgtoa@u,efgtoa@ou
  3520  000BD2  C0A1  F06D         	movff	efgtoa@u+1,efgtoa@ou+1
  3521  000BD6  C0A2  F06E         	movff	efgtoa@u+2,efgtoa@ou+2
  3522  000BDA  C0A3  F06F         	movff	efgtoa@u+3,efgtoa@ou+3
  3523                           
  3524                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  3525  000BDE  EF6C  F006         	goto	l6286
  3526  000BE2                     l6278:
  3527                           
  3528                           ; BSR set to: 0
  3529                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  3530  000BE2  C08E  F00E         	movff	efgtoa@h,___fldiv@b
  3531  000BE6  C08F  F00F         	movff	efgtoa@h+1,___fldiv@b+1
  3532  000BEA  C090  F010         	movff	efgtoa@h+2,___fldiv@b+2
  3533  000BEE  C091  F011         	movff	efgtoa@h+3,___fldiv@b+3
  3534  000BF2  C0A0  F012         	movff	efgtoa@u,___fldiv@a
  3535  000BF6  C0A1  F013         	movff	efgtoa@u+1,___fldiv@a+1
  3536  000BFA  C0A2  F014         	movff	efgtoa@u+2,___fldiv@a+2
  3537  000BFE  C0A3  F015         	movff	efgtoa@u+3,___fldiv@a+3
  3538  000C02  ECB2  F011         	call	___fldiv	;wreg free
  3539  000C06  C00E  F027         	movff	?___fldiv,floorf@x
  3540  000C0A  C00F  F028         	movff	?___fldiv+1,floorf@x+1
  3541  000C0E  C010  F029         	movff	?___fldiv+2,floorf@x+2
  3542  000C12  C011  F02A         	movff	?___fldiv+3,floorf@x+3
  3543  000C16  EC7F  F013         	call	_floorf	;wreg free
  3544  000C1A  C027  F092         	movff	?_floorf,efgtoa@l
  3545  000C1E  C028  F093         	movff	?_floorf+1,efgtoa@l+1
  3546  000C22  C029  F094         	movff	?_floorf+2,efgtoa@l+2
  3547  000C26  C02A  F095         	movff	?_floorf+3,efgtoa@l+3
  3548                           
  3549                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  3550  000C2A  C092  F00E         	movff	efgtoa@l,___fltol@f1
  3551  000C2E  C093  F00F         	movff	efgtoa@l+1,___fltol@f1+1
  3552  000C32  C094  F010         	movff	efgtoa@l+2,___fltol@f1+2
  3553  000C36  C095  F011         	movff	efgtoa@l+3,___fltol@f1+3
  3554  000C3A  ECAF  F016         	call	___fltol	;wreg free
  3555  000C3E  C00E  F084         	movff	?___fltol,efgtoa@d
  3556  000C42  C00F  F085         	movff	?___fltol+1,efgtoa@d+1
  3557  000C46                     
  3558                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  3559  000C46  C08E  F035         	movff	efgtoa@h,___flsub@b
  3560  000C4A  C08F  F036         	movff	efgtoa@h+1,___flsub@b+1
  3561  000C4E  C090  F037         	movff	efgtoa@h+2,___flsub@b+2
  3562  000C52  C091  F038         	movff	efgtoa@h+3,___flsub@b+3
  3563  000C56  C0A0  F020         	movff	efgtoa@u,___flmul@a
  3564  000C5A  C0A1  F021         	movff	efgtoa@u+1,___flmul@a+1
  3565  000C5E  C0A2  F022         	movff	efgtoa@u+2,___flmul@a+2
  3566  000C62  C0A3  F023         	movff	efgtoa@u+3,___flmul@a+3
  3567  000C66  C092  F01C         	movff	efgtoa@l,___flmul@b
  3568  000C6A  C093  F01D         	movff	efgtoa@l+1,___flmul@b+1
  3569  000C6E  C094  F01E         	movff	efgtoa@l+2,___flmul@b+2
  3570  000C72  C095  F01F         	movff	efgtoa@l+3,___flmul@b+3
  3571  000C76  ECC5  F00D         	call	___flmul	;wreg free
  3572  000C7A  C01C  F039         	movff	?___flmul,___flsub@a
  3573  000C7E  C01D  F03A         	movff	?___flmul+1,___flsub@a+1
  3574  000C82  C01E  F03B         	movff	?___flmul+2,___flsub@a+2
  3575  000C86  C01F  F03C         	movff	?___flmul+3,___flsub@a+3
  3576  000C8A  ECA1  F01C         	call	___flsub	;wreg free
  3577  000C8E  C035  F08E         	movff	?___flsub,efgtoa@h
  3578  000C92  C036  F08F         	movff	?___flsub+1,efgtoa@h+1
  3579  000C96  C037  F090         	movff	?___flsub+2,efgtoa@h+2
  3580  000C9A  C038  F091         	movff	?___flsub+3,efgtoa@h+3
  3581  000C9E                     
  3582                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  3583  000C9E  C0A0  F00E         	movff	efgtoa@u,___fldiv@b
  3584  000CA2  C0A1  F00F         	movff	efgtoa@u+1,___fldiv@b+1
  3585  000CA6  C0A2  F010         	movff	efgtoa@u+2,___fldiv@b+2
  3586  000CAA  C0A3  F011         	movff	efgtoa@u+3,___fldiv@b+3
  3587  000CAE  0E00               	movlw	0
  3588  000CB0  6E12               	movwf	___fldiv@a^0,c
  3589  000CB2  0E00               	movlw	0
  3590  000CB4  6E13               	movwf	(___fldiv@a+1)^0,c
  3591  000CB6  0E20               	movlw	32
  3592  000CB8  6E14               	movwf	(___fldiv@a+2)^0,c
  3593  000CBA  0E41               	movlw	65
  3594  000CBC  6E15               	movwf	(___fldiv@a+3)^0,c
  3595  000CBE  ECB2  F011         	call	___fldiv	;wreg free
  3596  000CC2  C00E  F0A0         	movff	?___fldiv,efgtoa@u
  3597  000CC6  C00F  F0A1         	movff	?___fldiv+1,efgtoa@u+1
  3598  000CCA  C010  F0A2         	movff	?___fldiv+2,efgtoa@u+2
  3599  000CCE  C011  F0A3         	movff	?___fldiv+3,efgtoa@u+3
  3600  000CD2                     
  3601                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  3602  000CD2  0100               	movlb	0	; () banked
  3603  000CD4  4B96               	infsnz	efgtoa@i& (0+255),f,b
  3604  000CD6  2B97               	incf	(efgtoa@i+1)& (0+255),f,b
  3605  000CD8                     l6286:
  3606                           
  3607                           ; BSR set to: 0
  3608                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  3609  000CD8  5180               	movf	efgtoa@m& (0+255),w,b
  3610  000CDA  5D96               	subwf	efgtoa@i& (0+255),w,b
  3611  000CDC  5197               	movf	(efgtoa@i+1)& (0+255),w,b
  3612  000CDE  0A80               	xorlw	128
  3613  000CE0  6F67               	movwf	??_efgtoa& (0+255),b
  3614  000CE2  5181               	movf	(efgtoa@m+1)& (0+255),w,b
  3615  000CE4  0A80               	xorlw	128
  3616  000CE6  5967               	subwfb	??_efgtoa& (0+255),w,b
  3617  000CE8  A0D8               	btfss	status,0,c
  3618  000CEA  EF79  F006         	goto	u7771
  3619  000CEE  EF7B  F006         	goto	u7770
  3620  000CF2                     u7771:
  3621  000CF2  EFF1  F005         	goto	l6278
  3622  000CF6                     u7770:
  3623  000CF6                     
  3624                           ; BSR set to: 0
  3625                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  3626  000CF6  C0A0  F01C         	movff	efgtoa@u,___flmul@b
  3627  000CFA  C0A1  F01D         	movff	efgtoa@u+1,___flmul@b+1
  3628  000CFE  C0A2  F01E         	movff	efgtoa@u+2,___flmul@b+2
  3629  000D02  C0A3  F01F         	movff	efgtoa@u+3,___flmul@b+3
  3630  000D06  0E00               	movlw	0
  3631  000D08  6E20               	movwf	___flmul@a^0,c
  3632  000D0A  0E00               	movlw	0
  3633  000D0C  6E21               	movwf	(___flmul@a+1)^0,c
  3634  000D0E  0EA0               	movlw	160
  3635  000D10  6E22               	movwf	(___flmul@a+2)^0,c
  3636  000D12  0E40               	movlw	64
  3637  000D14  6E23               	movwf	(___flmul@a+3)^0,c
  3638  000D16  ECC5  F00D         	call	___flmul	;wreg free
  3639  000D1A  C01C  F092         	movff	?___flmul,efgtoa@l
  3640  000D1E  C01D  F093         	movff	?___flmul+1,efgtoa@l+1
  3641  000D22  C01E  F094         	movff	?___flmul+2,efgtoa@l+2
  3642  000D26  C01F  F095         	movff	?___flmul+3,efgtoa@l+3
  3643  000D2A                     
  3644                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  3645  000D2A  C08E  F035         	movff	efgtoa@h,___flge@ff1
  3646  000D2E  C08F  F036         	movff	efgtoa@h+1,___flge@ff1+1
  3647  000D32  C090  F037         	movff	efgtoa@h+2,___flge@ff1+2
  3648  000D36  C091  F038         	movff	efgtoa@h+3,___flge@ff1+3
  3649  000D3A  C092  F039         	movff	efgtoa@l,___flge@ff2
  3650  000D3E  C093  F03A         	movff	efgtoa@l+1,___flge@ff2+1
  3651  000D42  C094  F03B         	movff	efgtoa@l+2,___flge@ff2+2
  3652  000D46  C095  F03C         	movff	efgtoa@l+3,___flge@ff2+3
  3653  000D4A  EC32  F017         	call	___flge	;wreg free
  3654  000D4E  B0D8               	btfsc	status,0,c
  3655  000D50  EFAC  F006         	goto	u7781
  3656  000D54  EFAE  F006         	goto	u7780
  3657  000D58                     u7781:
  3658  000D58  EFB9  F006         	goto	l6294
  3659  000D5C                     u7780:
  3660  000D5C                     
  3661                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  3662  000D5C  0E00               	movlw	0
  3663  000D5E  0100               	movlb	0	; () banked
  3664  000D60  6F92               	movwf	efgtoa@l& (0+255),b
  3665  000D62  0E00               	movlw	0
  3666  000D64  6F93               	movwf	(efgtoa@l+1)& (0+255),b
  3667  000D66  0E00               	movlw	0
  3668  000D68  6F94               	movwf	(efgtoa@l+2)& (0+255),b
  3669  000D6A  0E00               	movlw	0
  3670  000D6C  6F95               	movwf	(efgtoa@l+3)& (0+255),b
  3671                           
  3672                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
  3673  000D6E  EFE2  F006         	goto	l6300
  3674  000D72                     l6294:
  3675                           
  3676                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  3677  000D72  C08E  F00E         	movff	efgtoa@h,___fleq@ff1
  3678  000D76  C08F  F00F         	movff	efgtoa@h+1,___fleq@ff1+1
  3679  000D7A  C090  F010         	movff	efgtoa@h+2,___fleq@ff1+2
  3680  000D7E  C091  F011         	movff	efgtoa@h+3,___fleq@ff1+3
  3681  000D82  C092  F012         	movff	efgtoa@l,___fleq@ff2
  3682  000D86  C093  F013         	movff	efgtoa@l+1,___fleq@ff2+1
  3683  000D8A  C094  F014         	movff	efgtoa@l+2,___fleq@ff2+2
  3684  000D8E  C095  F015         	movff	efgtoa@l+3,___fleq@ff2+3
  3685  000D92  EC9E  F01A         	call	___fleq	;wreg free
  3686  000D96  A0D8               	btfss	status,0,c
  3687  000D98  EFD0  F006         	goto	u7791
  3688  000D9C  EFD2  F006         	goto	u7790
  3689  000DA0                     u7791:
  3690  000DA0  EFE2  F006         	goto	l6300
  3691  000DA4                     u7790:
  3692  000DA4  0100               	movlb	0	; () banked
  3693  000DA6  B184               	btfsc	efgtoa@d& (0+255),0,b
  3694  000DA8  EFD8  F006         	goto	u7801
  3695  000DAC  EFDA  F006         	goto	u7800
  3696  000DB0                     u7801:
  3697  000DB0  EFE2  F006         	goto	l6300
  3698  000DB4                     u7800:
  3699  000DB4                     
  3700                           ; BSR set to: 0
  3701                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  3702  000DB4  0E00               	movlw	0
  3703  000DB6  6F92               	movwf	efgtoa@l& (0+255),b
  3704  000DB8  0E00               	movlw	0
  3705  000DBA  6F93               	movwf	(efgtoa@l+1)& (0+255),b
  3706  000DBC  0E00               	movlw	0
  3707  000DBE  6F94               	movwf	(efgtoa@l+2)& (0+255),b
  3708  000DC0  0E00               	movlw	0
  3709  000DC2  6F95               	movwf	(efgtoa@l+3)& (0+255),b
  3710  000DC4                     l6300:
  3711                           
  3712                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  3713  000DC4  C098  F00E         	movff	efgtoa@g,___fladd@b
  3714  000DC8  C099  F00F         	movff	efgtoa@g+1,___fladd@b+1
  3715  000DCC  C09A  F010         	movff	efgtoa@g+2,___fladd@b+2
  3716  000DD0  C09B  F011         	movff	efgtoa@g+3,___fladd@b+3
  3717  000DD4  C092  F012         	movff	efgtoa@l,___fladd@a
  3718  000DD8  C093  F013         	movff	efgtoa@l+1,___fladd@a+1
  3719  000DDC  C094  F014         	movff	efgtoa@l+2,___fladd@a+2
  3720  000DE0  C095  F015         	movff	efgtoa@l+3,___fladd@a+3
  3721  000DE4  EC2F  F009         	call	___fladd	;wreg free
  3722  000DE8  C00E  F08E         	movff	?___fladd,efgtoa@h
  3723  000DEC  C00F  F08F         	movff	?___fladd+1,efgtoa@h+1
  3724  000DF0  C010  F090         	movff	?___fladd+2,efgtoa@h+2
  3725  000DF4  C011  F091         	movff	?___fladd+3,efgtoa@h+3
  3726  000DF8                     
  3727                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  3728  000DF8  C06C  F0A0         	movff	efgtoa@ou,efgtoa@u
  3729  000DFC  C06D  F0A1         	movff	efgtoa@ou+1,efgtoa@u+1
  3730  000E00  C06E  F0A2         	movff	efgtoa@ou+2,efgtoa@u+2
  3731  000E04  C06F  F0A3         	movff	efgtoa@ou+3,efgtoa@u+3
  3732  000E08                     
  3733                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  3734  000E08  0E65               	movlw	101
  3735  000E0A  0100               	movlb	0	; () banked
  3736  000E0C  198A               	xorwf	efgtoa@nmode& (0+255),w,b
  3737  000E0E  B4D8               	btfsc	status,2,c
  3738  000E10  EF0C  F007         	goto	u7811
  3739  000E14  EF0E  F007         	goto	u7810
  3740  000E18                     u7811:
  3741  000E18  EF14  F007         	goto	l6308
  3742  000E1C                     u7810:
  3743  000E1C                     
  3744                           ; BSR set to: 0
  3745  000E1C  C09C  F082         	movff	efgtoa@e,efgtoa@ne
  3746  000E20  C09D  F083         	movff	efgtoa@e+1,efgtoa@ne+1
  3747  000E24  EF18  F007         	goto	l615
  3748  000E28                     l6308:
  3749                           
  3750                           ; BSR set to: 0
  3751  000E28  0E00               	movlw	0
  3752  000E2A  6F83               	movwf	(efgtoa@ne+1)& (0+255),b
  3753  000E2C  0E00               	movlw	0
  3754  000E2E  6F82               	movwf	efgtoa@ne& (0+255),b
  3755  000E30                     l615:
  3756                           
  3757                           ; BSR set to: 0
  3758                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  3759  000E30  0E00               	movlw	0
  3760  000E32  6F7F               	movwf	(efgtoa@pp+1)& (0+255),b
  3761  000E34  0E00               	movlw	0
  3762  000E36  6F7E               	movwf	efgtoa@pp& (0+255),b
  3763                           
  3764                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  3765  000E38  0E00               	movlw	0
  3766  000E3A  6F7D               	movwf	(efgtoa@t+1)& (0+255),b
  3767  000E3C  0E00               	movlw	0
  3768  000E3E  6F7C               	movwf	efgtoa@t& (0+255),b
  3769                           
  3770                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  3771  000E40  0E00               	movlw	0
  3772  000E42  6F97               	movwf	(efgtoa@i+1)& (0+255),b
  3773  000E44  0E00               	movlw	0
  3774  000E46  6F96               	movwf	efgtoa@i& (0+255),b
  3775                           
  3776                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  3777  000E48  EF14  F008         	goto	l6358
  3778  000E4C                     l6310:
  3779                           
  3780                           ; BSR set to: 0
  3781                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  3782  000E4C  C08E  F00E         	movff	efgtoa@h,___fldiv@b
  3783  000E50  C08F  F00F         	movff	efgtoa@h+1,___fldiv@b+1
  3784  000E54  C090  F010         	movff	efgtoa@h+2,___fldiv@b+2
  3785  000E58  C091  F011         	movff	efgtoa@h+3,___fldiv@b+3
  3786  000E5C  C0A0  F012         	movff	efgtoa@u,___fldiv@a
  3787  000E60  C0A1  F013         	movff	efgtoa@u+1,___fldiv@a+1
  3788  000E64  C0A2  F014         	movff	efgtoa@u+2,___fldiv@a+2
  3789  000E68  C0A3  F015         	movff	efgtoa@u+3,___fldiv@a+3
  3790  000E6C  ECB2  F011         	call	___fldiv	;wreg free
  3791  000E70  C00E  F027         	movff	?___fldiv,floorf@x
  3792  000E74  C00F  F028         	movff	?___fldiv+1,floorf@x+1
  3793  000E78  C010  F029         	movff	?___fldiv+2,floorf@x+2
  3794  000E7C  C011  F02A         	movff	?___fldiv+3,floorf@x+3
  3795  000E80  EC7F  F013         	call	_floorf	;wreg free
  3796  000E84  C027  F092         	movff	?_floorf,efgtoa@l
  3797  000E88  C028  F093         	movff	?_floorf+1,efgtoa@l+1
  3798  000E8C  C029  F094         	movff	?_floorf+2,efgtoa@l+2
  3799  000E90  C02A  F095         	movff	?_floorf+3,efgtoa@l+3
  3800                           
  3801                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  3802  000E94  C092  F00E         	movff	efgtoa@l,___fltol@f1
  3803  000E98  C093  F00F         	movff	efgtoa@l+1,___fltol@f1+1
  3804  000E9C  C094  F010         	movff	efgtoa@l+2,___fltol@f1+2
  3805  000EA0  C095  F011         	movff	efgtoa@l+3,___fltol@f1+3
  3806  000EA4  ECAF  F016         	call	___fltol	;wreg free
  3807  000EA8  C00E  F084         	movff	?___fltol,efgtoa@d
  3808  000EAC  C00F  F085         	movff	?___fltol+1,efgtoa@d+1
  3809  000EB0                     
  3810                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3811  000EB0  B849               	btfsc	_flags^0,4,c
  3812  000EB2  EF5D  F007         	goto	u7821
  3813  000EB6  EF5F  F007         	goto	u7820
  3814  000EBA                     u7821:
  3815  000EBA  EF7D  F007         	goto	l6322
  3816  000EBE                     u7820:
  3817  000EBE  0100               	movlb	0	; () banked
  3818  000EC0  5184               	movf	efgtoa@d& (0+255),w,b
  3819  000EC2  1185               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3820  000EC4  A4D8               	btfss	status,2,c
  3821  000EC6  EF67  F007         	goto	u7831
  3822  000ECA  EF69  F007         	goto	u7830
  3823  000ECE                     u7831:
  3824  000ECE  EF7D  F007         	goto	l6322
  3825  000ED2                     u7830:
  3826  000ED2                     
  3827                           ; BSR set to: 0
  3828  000ED2  0E67               	movlw	103
  3829  000ED4  198D               	xorwf	efgtoa@mode& (0+255),w,b
  3830  000ED6  A4D8               	btfss	status,2,c
  3831  000ED8  EF70  F007         	goto	u7841
  3832  000EDC  EF72  F007         	goto	u7840
  3833  000EE0                     u7841:
  3834  000EE0  EF7D  F007         	goto	l6322
  3835  000EE4                     u7840:
  3836  000EE4                     
  3837                           ; BSR set to: 0
  3838  000EE4  BF83               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3839  000EE6  EF79  F007         	goto	u7850
  3840  000EEA  EF77  F007         	goto	u7851
  3841  000EEE                     u7851:
  3842  000EEE  EF7D  F007         	goto	l6322
  3843  000EF2                     u7850:
  3844  000EF2                     
  3845                           ; BSR set to: 0
  3846                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  3847  000EF2  4B7C               	infsnz	efgtoa@t& (0+255),f,b
  3848  000EF4  2B7D               	incf	(efgtoa@t+1)& (0+255),f,b
  3849                           
  3850                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  3851  000EF6  EFC8  F007         	goto	l6350
  3852  000EFA                     l6322:
  3853                           
  3854                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  3855  000EFA  0100               	movlb	0	; () banked
  3856  000EFC  517E               	movf	efgtoa@pp& (0+255),w,b
  3857  000EFE  117F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3858  000F00  A4D8               	btfss	status,2,c
  3859  000F02  EF85  F007         	goto	u7861
  3860  000F06  EF87  F007         	goto	u7860
  3861  000F0A                     u7861:
  3862  000F0A  EFB1  F007         	goto	l6342
  3863  000F0E                     u7860:
  3864  000F0E                     
  3865                           ; BSR set to: 0
  3866  000F0E  BF83               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3867  000F10  EF8E  F007         	goto	u7870
  3868  000F14  EF8C  F007         	goto	u7871
  3869  000F18                     u7871:
  3870  000F18  EFB1  F007         	goto	l6342
  3871  000F1C                     u7870:
  3872  000F1C                     
  3873                           ; BSR set to: 0
  3874                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  3875  000F1C  0E08               	movlw	low _dbuf
  3876  000F1E  259E               	addwf	efgtoa@n& (0+255),w,b
  3877  000F20  6ED9               	movwf	fsr2l,c
  3878  000F22  0E01               	movlw	high _dbuf
  3879  000F24  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3880  000F26  6EDA               	movwf	fsr2h,c
  3881  000F28  0E2E               	movlw	46
  3882  000F2A  6EDF               	movwf	indf2,c
  3883  000F2C                     
  3884                           ; BSR set to: 0
  3885  000F2C  4B9E               	infsnz	efgtoa@n& (0+255),f,b
  3886  000F2E  2B9F               	incf	(efgtoa@n+1)& (0+255),f,b
  3887  000F30                     
  3888                           ; BSR set to: 0
  3889                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  3890  000F30  078B               	decf	efgtoa@w& (0+255),f,b
  3891  000F32  A0D8               	btfss	status,0,c
  3892  000F34  078C               	decf	(efgtoa@w+1)& (0+255),f,b
  3893  000F36                     
  3894                           ; BSR set to: 0
  3895                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  3896  000F36  0E00               	movlw	0
  3897  000F38  6F7F               	movwf	(efgtoa@pp+1)& (0+255),b
  3898  000F3A  0E01               	movlw	1
  3899  000F3C  6F7E               	movwf	efgtoa@pp& (0+255),b
  3900  000F3E  EFB1  F007         	goto	l6342
  3901  000F42                     l6334:
  3902                           
  3903                           ; BSR set to: 0
  3904                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  3905  000F42  0E08               	movlw	low _dbuf
  3906  000F44  259E               	addwf	efgtoa@n& (0+255),w,b
  3907  000F46  6ED9               	movwf	fsr2l,c
  3908  000F48  0E01               	movlw	high _dbuf
  3909  000F4A  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3910  000F4C  6EDA               	movwf	fsr2h,c
  3911  000F4E  0E30               	movlw	48
  3912  000F50  6EDF               	movwf	indf2,c
  3913  000F52                     
  3914                           ; BSR set to: 0
  3915  000F52  4B9E               	infsnz	efgtoa@n& (0+255),f,b
  3916  000F54  2B9F               	incf	(efgtoa@n+1)& (0+255),f,b
  3917  000F56                     
  3918                           ; BSR set to: 0
  3919                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  3920  000F56  078B               	decf	efgtoa@w& (0+255),f,b
  3921  000F58  A0D8               	btfss	status,0,c
  3922  000F5A  078C               	decf	(efgtoa@w+1)& (0+255),f,b
  3923  000F5C                     
  3924                           ; BSR set to: 0
  3925                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  3926  000F5C  077C               	decf	efgtoa@t& (0+255),f,b
  3927  000F5E  A0D8               	btfss	status,0,c
  3928  000F60  077D               	decf	(efgtoa@t+1)& (0+255),f,b
  3929  000F62                     l6342:
  3930                           
  3931                           ; BSR set to: 0
  3932                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  3933  000F62  517C               	movf	efgtoa@t& (0+255),w,b
  3934  000F64  117D               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3935  000F66  A4D8               	btfss	status,2,c
  3936  000F68  EFB8  F007         	goto	u7881
  3937  000F6C  EFBA  F007         	goto	u7880
  3938  000F70                     u7881:
  3939  000F70  EFA1  F007         	goto	l6334
  3940  000F74                     u7880:
  3941  000F74                     
  3942                           ; BSR set to: 0
  3943                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  3944  000F74  0E08               	movlw	low _dbuf
  3945  000F76  259E               	addwf	efgtoa@n& (0+255),w,b
  3946  000F78  6ED9               	movwf	fsr2l,c
  3947  000F7A  0E01               	movlw	high _dbuf
  3948  000F7C  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3949  000F7E  6EDA               	movwf	fsr2h,c
  3950  000F80  5184               	movf	efgtoa@d& (0+255),w,b
  3951  000F82  0F30               	addlw	48
  3952  000F84  6EDF               	movwf	indf2,c
  3953  000F86                     
  3954                           ; BSR set to: 0
  3955  000F86  4B9E               	infsnz	efgtoa@n& (0+255),f,b
  3956  000F88  2B9F               	incf	(efgtoa@n+1)& (0+255),f,b
  3957  000F8A                     
  3958                           ; BSR set to: 0
  3959                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  3960  000F8A  078B               	decf	efgtoa@w& (0+255),f,b
  3961  000F8C  A0D8               	btfss	status,0,c
  3962  000F8E  078C               	decf	(efgtoa@w+1)& (0+255),f,b
  3963  000F90                     l6350:
  3964                           
  3965                           ; BSR set to: 0
  3966                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  3967  000F90  C08E  F035         	movff	efgtoa@h,___flsub@b
  3968  000F94  C08F  F036         	movff	efgtoa@h+1,___flsub@b+1
  3969  000F98  C090  F037         	movff	efgtoa@h+2,___flsub@b+2
  3970  000F9C  C091  F038         	movff	efgtoa@h+3,___flsub@b+3
  3971  000FA0  C0A0  F020         	movff	efgtoa@u,___flmul@a
  3972  000FA4  C0A1  F021         	movff	efgtoa@u+1,___flmul@a+1
  3973  000FA8  C0A2  F022         	movff	efgtoa@u+2,___flmul@a+2
  3974  000FAC  C0A3  F023         	movff	efgtoa@u+3,___flmul@a+3
  3975  000FB0  C092  F01C         	movff	efgtoa@l,___flmul@b
  3976  000FB4  C093  F01D         	movff	efgtoa@l+1,___flmul@b+1
  3977  000FB8  C094  F01E         	movff	efgtoa@l+2,___flmul@b+2
  3978  000FBC  C095  F01F         	movff	efgtoa@l+3,___flmul@b+3
  3979  000FC0  ECC5  F00D         	call	___flmul	;wreg free
  3980  000FC4  C01C  F039         	movff	?___flmul,___flsub@a
  3981  000FC8  C01D  F03A         	movff	?___flmul+1,___flsub@a+1
  3982  000FCC  C01E  F03B         	movff	?___flmul+2,___flsub@a+2
  3983  000FD0  C01F  F03C         	movff	?___flmul+3,___flsub@a+3
  3984  000FD4  ECA1  F01C         	call	___flsub	;wreg free
  3985  000FD8  C035  F08E         	movff	?___flsub,efgtoa@h
  3986  000FDC  C036  F08F         	movff	?___flsub+1,efgtoa@h+1
  3987  000FE0  C037  F090         	movff	?___flsub+2,efgtoa@h+2
  3988  000FE4  C038  F091         	movff	?___flsub+3,efgtoa@h+3
  3989  000FE8                     
  3990                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  3991  000FE8  C0A0  F00E         	movff	efgtoa@u,___fldiv@b
  3992  000FEC  C0A1  F00F         	movff	efgtoa@u+1,___fldiv@b+1
  3993  000FF0  C0A2  F010         	movff	efgtoa@u+2,___fldiv@b+2
  3994  000FF4  C0A3  F011         	movff	efgtoa@u+3,___fldiv@b+3
  3995  000FF8  0E00               	movlw	0
  3996  000FFA  6E12               	movwf	___fldiv@a^0,c
  3997  000FFC  0E00               	movlw	0
  3998  000FFE  6E13               	movwf	(___fldiv@a+1)^0,c
  3999  001000  0E20               	movlw	32
  4000  001002  6E14               	movwf	(___fldiv@a+2)^0,c
  4001  001004  0E41               	movlw	65
  4002  001006  6E15               	movwf	(___fldiv@a+3)^0,c
  4003  001008  ECB2  F011         	call	___fldiv	;wreg free
  4004  00100C  C00E  F0A0         	movff	?___fldiv,efgtoa@u
  4005  001010  C00F  F0A1         	movff	?___fldiv+1,efgtoa@u+1
  4006  001014  C010  F0A2         	movff	?___fldiv+2,efgtoa@u+2
  4007  001018  C011  F0A3         	movff	?___fldiv+3,efgtoa@u+3
  4008  00101C                     
  4009                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  4010  00101C  0100               	movlb	0	; () banked
  4011  00101E  0782               	decf	efgtoa@ne& (0+255),f,b
  4012  001020  A0D8               	btfss	status,0,c
  4013  001022  0783               	decf	(efgtoa@ne+1)& (0+255),f,b
  4014  001024                     
  4015                           ; BSR set to: 0
  4016                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  4017  001024  4B96               	infsnz	efgtoa@i& (0+255),f,b
  4018  001026  2B97               	incf	(efgtoa@i+1)& (0+255),f,b
  4019  001028                     l6358:
  4020                           
  4021                           ; BSR set to: 0
  4022                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  4023  001028  5180               	movf	efgtoa@m& (0+255),w,b
  4024  00102A  5D96               	subwf	efgtoa@i& (0+255),w,b
  4025  00102C  5197               	movf	(efgtoa@i+1)& (0+255),w,b
  4026  00102E  0A80               	xorlw	128
  4027  001030  6F67               	movwf	??_efgtoa& (0+255),b
  4028  001032  5181               	movf	(efgtoa@m+1)& (0+255),w,b
  4029  001034  0A80               	xorlw	128
  4030  001036  5967               	subwfb	??_efgtoa& (0+255),w,b
  4031  001038  B0D8               	btfsc	status,0,c
  4032  00103A  EF21  F008         	goto	u7891
  4033  00103E  EF23  F008         	goto	u7890
  4034  001042                     u7891:
  4035  001042  EF31  F008         	goto	l6362
  4036  001046                     u7890:
  4037  001046                     
  4038                           ; BSR set to: 0
  4039  001046  BF9F               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4040  001048  EF2F  F008         	goto	u7901
  4041  00104C  519F               	movf	(efgtoa@n+1)& (0+255),w,b
  4042  00104E  E109               	bnz	u7900
  4043  001050  0E4B               	movlw	75
  4044  001052  5D9E               	subwf	efgtoa@n& (0+255),w,b
  4045  001054  A0D8               	btfss	status,0,c
  4046  001056  EF2F  F008         	goto	u7901
  4047  00105A  EF31  F008         	goto	u7900
  4048  00105E                     u7901:
  4049  00105E  EF26  F007         	goto	l6310
  4050  001062                     u7900:
  4051  001062                     l6362:
  4052                           
  4053                           ; BSR set to: 0
  4054                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  4055  001062  517E               	movf	efgtoa@pp& (0+255),w,b
  4056  001064  117F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4057  001066  A4D8               	btfss	status,2,c
  4058  001068  EF38  F008         	goto	u7911
  4059  00106C  EF3A  F008         	goto	u7910
  4060  001070                     u7911:
  4061  001070  EF4B  F008         	goto	l6370
  4062  001074                     u7910:
  4063  001074                     
  4064                           ; BSR set to: 0
  4065  001074  A849               	btfss	_flags^0,4,c
  4066  001076  EF3F  F008         	goto	u7921
  4067  00107A  EF41  F008         	goto	u7920
  4068  00107E                     u7921:
  4069  00107E  EF4B  F008         	goto	l6370
  4070  001082                     u7920:
  4071  001082                     
  4072                           ; BSR set to: 0
  4073                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  4074  001082  0E08               	movlw	low _dbuf
  4075  001084  259E               	addwf	efgtoa@n& (0+255),w,b
  4076  001086  6ED9               	movwf	fsr2l,c
  4077  001088  0E01               	movlw	high _dbuf
  4078  00108A  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4079  00108C  6EDA               	movwf	fsr2h,c
  4080  00108E  0E2E               	movlw	46
  4081  001090  6EDF               	movwf	indf2,c
  4082  001092                     
  4083                           ; BSR set to: 0
  4084  001092  4B9E               	infsnz	efgtoa@n& (0+255),f,b
  4085  001094  2B9F               	incf	(efgtoa@n+1)& (0+255),f,b
  4086  001096                     l6370:
  4087                           
  4088                           ; BSR set to: 0
  4089                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  4090  001096  0E08               	movlw	low _dbuf
  4091  001098  259E               	addwf	efgtoa@n& (0+255),w,b
  4092  00109A  6ED9               	movwf	fsr2l,c
  4093  00109C  0E01               	movlw	high _dbuf
  4094  00109E  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4095  0010A0  6EDA               	movwf	fsr2h,c
  4096  0010A2  0E00               	movlw	0
  4097  0010A4  6EDF               	movwf	indf2,c
  4098  0010A6                     
  4099                           ; BSR set to: 0
  4100                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  4101  0010A6  0E65               	movlw	101
  4102  0010A8  198A               	xorwf	efgtoa@nmode& (0+255),w,b
  4103  0010AA  A4D8               	btfss	status,2,c
  4104  0010AC  EF5A  F008         	goto	u7931
  4105  0010B0  EF5C  F008         	goto	u7930
  4106  0010B4                     u7931:
  4107  0010B4  EF09  F004         	goto	l6182
  4108  0010B8                     u7930:
  4109  0010B8                     
  4110                           ; BSR set to: 0
  4111                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  4112  0010B8  0E00               	movlw	0
  4113  0010BA  6F97               	movwf	(efgtoa@i+1)& (0+255),b
  4114  0010BC  0E4F               	movlw	79
  4115  0010BE  6F96               	movwf	efgtoa@i& (0+255),b
  4116  0010C0                     
  4117                           ; BSR set to: 0
  4118                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  4119  0010C0  0E08               	movlw	low _dbuf
  4120  0010C2  2596               	addwf	efgtoa@i& (0+255),w,b
  4121  0010C4  6ED9               	movwf	fsr2l,c
  4122  0010C6  0E01               	movlw	high _dbuf
  4123  0010C8  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4124  0010CA  6EDA               	movwf	fsr2h,c
  4125  0010CC  0E00               	movlw	0
  4126  0010CE  6EDF               	movwf	indf2,c
  4127  0010D0                     
  4128                           ; BSR set to: 0
  4129                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  4130  0010D0  0E00               	movlw	0
  4131  0010D2  6F87               	movwf	(efgtoa@sign+1)& (0+255),b
  4132  0010D4  0E00               	movlw	0
  4133  0010D6  6F86               	movwf	efgtoa@sign& (0+255),b
  4134  0010D8                     
  4135                           ; BSR set to: 0
  4136                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  4137  0010D8  BF9D               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4138  0010DA  EF73  F008         	goto	u7940
  4139  0010DE  EF71  F008         	goto	u7941
  4140  0010E2                     u7941:
  4141  0010E2  EF7B  F008         	goto	l6386
  4142  0010E6                     u7940:
  4143  0010E6                     
  4144                           ; BSR set to: 0
  4145                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  4146  0010E6  0E00               	movlw	0
  4147  0010E8  6F87               	movwf	(efgtoa@sign+1)& (0+255),b
  4148  0010EA  0E01               	movlw	1
  4149  0010EC  6F86               	movwf	efgtoa@sign& (0+255),b
  4150  0010EE                     
  4151                           ; BSR set to: 0
  4152                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  4153  0010EE  6D9C               	negf	efgtoa@e& (0+255),b
  4154  0010F0  1F9D               	comf	(efgtoa@e+1)& (0+255),f,b
  4155  0010F2  B0D8               	btfsc	status,0,c
  4156  0010F4  2B9D               	incf	(efgtoa@e+1)& (0+255),f,b
  4157  0010F6                     l6386:
  4158                           
  4159                           ; BSR set to: 0
  4160                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  4161  0010F6  0E00               	movlw	0
  4162  0010F8  6F89               	movwf	(efgtoa@p+1)& (0+255),b
  4163  0010FA  0E02               	movlw	2
  4164  0010FC  6F88               	movwf	efgtoa@p& (0+255),b
  4165                           
  4166                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  4167  0010FE  EFAC  F008         	goto	l6398
  4168  001102                     l6388:
  4169                           
  4170                           ; BSR set to: 0
  4171                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  4172  001102  0796               	decf	efgtoa@i& (0+255),f,b
  4173  001104  A0D8               	btfss	status,0,c
  4174  001106  0797               	decf	(efgtoa@i+1)& (0+255),f,b
  4175  001108                     
  4176                           ; BSR set to: 0
  4177                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  4178  001108  0E08               	movlw	low _dbuf
  4179  00110A  2596               	addwf	efgtoa@i& (0+255),w,b
  4180  00110C  6ED9               	movwf	fsr2l,c
  4181  00110E  0E01               	movlw	high _dbuf
  4182  001110  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4183  001112  6EDA               	movwf	fsr2h,c
  4184  001114  C09C  F00E         	movff	efgtoa@e,___awmod@dividend
  4185  001118  C09D  F00F         	movff	efgtoa@e+1,___awmod@dividend+1
  4186  00111C  0E00               	movlw	0
  4187  00111E  6E11               	movwf	(___awmod@divisor+1)^0,c
  4188  001120  0E0A               	movlw	10
  4189  001122  6E10               	movwf	___awmod@divisor^0,c
  4190  001124  EC46  F01A         	call	___awmod	;wreg free
  4191  001128  500E               	movf	?___awmod^0,w,c
  4192  00112A  0F30               	addlw	48
  4193  00112C  6EDF               	movwf	indf2,c
  4194  00112E                     
  4195                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  4196  00112E  C09C  F00E         	movff	efgtoa@e,___awdiv@dividend
  4197  001132  C09D  F00F         	movff	efgtoa@e+1,___awdiv@dividend+1
  4198  001136  0E00               	movlw	0
  4199  001138  6E11               	movwf	(___awdiv@divisor+1)^0,c
  4200  00113A  0E0A               	movlw	10
  4201  00113C  6E10               	movwf	___awdiv@divisor^0,c
  4202  00113E  EC83  F019         	call	___awdiv	;wreg free
  4203  001142  C00E  F09C         	movff	?___awdiv,efgtoa@e
  4204  001146  C00F  F09D         	movff	?___awdiv+1,efgtoa@e+1
  4205  00114A                     
  4206                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  4207  00114A  0100               	movlb	0	; () banked
  4208  00114C  0788               	decf	efgtoa@p& (0+255),f,b
  4209  00114E  A0D8               	btfss	status,0,c
  4210  001150  0789               	decf	(efgtoa@p+1)& (0+255),f,b
  4211  001152                     
  4212                           ; BSR set to: 0
  4213                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  4214  001152  078B               	decf	efgtoa@w& (0+255),f,b
  4215  001154  A0D8               	btfss	status,0,c
  4216  001156  078C               	decf	(efgtoa@w+1)& (0+255),f,b
  4217  001158                     l6398:
  4218                           
  4219                           ; BSR set to: 0
  4220                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  4221  001158  519C               	movf	efgtoa@e& (0+255),w,b
  4222  00115A  119D               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4223  00115C  A4D8               	btfss	status,2,c
  4224  00115E  EFB3  F008         	goto	u7951
  4225  001162  EFB5  F008         	goto	u7950
  4226  001166                     u7951:
  4227  001166  EF81  F008         	goto	l6388
  4228  00116A                     u7950:
  4229  00116A                     
  4230                           ; BSR set to: 0
  4231  00116A  BF89               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4232  00116C  EFC2  F008         	goto	u7960
  4233  001170  5189               	movf	(efgtoa@p+1)& (0+255),w,b
  4234  001172  E106               	bnz	u7961
  4235  001174  0588               	decf	efgtoa@p& (0+255),w,b
  4236  001176  B0D8               	btfsc	status,0,c
  4237  001178  EFC0  F008         	goto	u7961
  4238  00117C  EFC2  F008         	goto	u7960
  4239  001180                     u7961:
  4240  001180  EF81  F008         	goto	l6388
  4241  001184                     u7960:
  4242  001184                     
  4243                           ; BSR set to: 0
  4244                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  4245  001184  0796               	decf	efgtoa@i& (0+255),f,b
  4246  001186  A0D8               	btfss	status,0,c
  4247  001188  0797               	decf	(efgtoa@i+1)& (0+255),f,b
  4248  00118A                     
  4249                           ; BSR set to: 0
  4250                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  4251  00118A  5186               	movf	efgtoa@sign& (0+255),w,b
  4252  00118C  1187               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4253  00118E  A4D8               	btfss	status,2,c
  4254  001190  EFCC  F008         	goto	u7971
  4255  001194  EFCE  F008         	goto	u7970
  4256  001198                     u7971:
  4257  001198  EFD4  F008         	goto	l6408
  4258  00119C                     u7970:
  4259  00119C                     
  4260                           ; BSR set to: 0
  4261  00119C  0E00               	movlw	0
  4262  00119E  6F77               	movwf	(_efgtoa$1259+1)& (0+255),b
  4263  0011A0  0E2B               	movlw	43
  4264  0011A2  6F76               	movwf	_efgtoa$1259& (0+255),b
  4265  0011A4  EFD8  F008         	goto	l6410
  4266  0011A8                     l6408:
  4267                           
  4268                           ; BSR set to: 0
  4269  0011A8  0E00               	movlw	0
  4270  0011AA  6F77               	movwf	(_efgtoa$1259+1)& (0+255),b
  4271  0011AC  0E2D               	movlw	45
  4272  0011AE  6F76               	movwf	_efgtoa$1259& (0+255),b
  4273  0011B0                     l6410:
  4274                           
  4275                           ; BSR set to: 0
  4276  0011B0  0E08               	movlw	low _dbuf
  4277  0011B2  2596               	addwf	efgtoa@i& (0+255),w,b
  4278  0011B4  6ED9               	movwf	fsr2l,c
  4279  0011B6  0E01               	movlw	high _dbuf
  4280  0011B8  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4281  0011BA  6EDA               	movwf	fsr2h,c
  4282  0011BC  C076  FFDF         	movff	_efgtoa$1259,indf2
  4283  0011C0                     
  4284                           ; BSR set to: 0
  4285                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  4286  0011C0  078B               	decf	efgtoa@w& (0+255),f,b
  4287  0011C2  A0D8               	btfss	status,0,c
  4288  0011C4  078C               	decf	(efgtoa@w+1)& (0+255),f,b
  4289  0011C6                     
  4290                           ; BSR set to: 0
  4291                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4292  0011C6  0796               	decf	efgtoa@i& (0+255),f,b
  4293  0011C8  A0D8               	btfss	status,0,c
  4294  0011CA  0797               	decf	(efgtoa@i+1)& (0+255),f,b
  4295  0011CC                     
  4296                           ; BSR set to: 0
  4297  0011CC  0EBF               	movlw	191
  4298  0011CE  6F67               	movwf	??_efgtoa& (0+255),b
  4299  0011D0  0EFF               	movlw	255
  4300  0011D2  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  4301  0011D4  5166               	movf	efgtoa@c& (0+255),w,b
  4302  0011D6  6F69               	movwf	(??_efgtoa+2)& (0+255),b
  4303  0011D8  6B6A               	clrf	(??_efgtoa+3)& (0+255),b
  4304  0011DA  5167               	movf	??_efgtoa& (0+255),w,b
  4305  0011DC  2769               	addwf	(??_efgtoa+2)& (0+255),f,b
  4306  0011DE  5168               	movf	(??_efgtoa+1)& (0+255),w,b
  4307  0011E0  236A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4308  0011E2  516A               	movf	(??_efgtoa+3)& (0+255),w,b
  4309  0011E4  E10A               	bnz	u7980
  4310  0011E6  0E1A               	movlw	26
  4311  0011E8  5D69               	subwf	(??_efgtoa+2)& (0+255),w,b
  4312  0011EA  A0D8               	btfss	status,0,c
  4313  0011EC  EFFA  F008         	goto	u7981
  4314  0011F0  EFFD  F008         	goto	u7980
  4315  0011F4                     u7981:
  4316  0011F4  0E01               	movlw	1
  4317  0011F6  EFFE  F008         	goto	u7990
  4318  0011FA                     u7980:
  4319  0011FA  0E00               	movlw	0
  4320  0011FC                     u7990:
  4321  0011FC  6F7A               	movwf	_efgtoa$1261& (0+255),b
  4322  0011FE  6B7B               	clrf	(_efgtoa$1261+1)& (0+255),b
  4323  001200                     
  4324                           ; BSR set to: 0
  4325  001200  517A               	movf	_efgtoa$1261& (0+255),w,b
  4326  001202  117B               	iorwf	(_efgtoa$1261+1)& (0+255),w,b
  4327  001204  A4D8               	btfss	status,2,c
  4328  001206  EF07  F009         	goto	u8001
  4329  00120A  EF09  F009         	goto	u8000
  4330  00120E                     u8001:
  4331  00120E  EF0F  F009         	goto	l6424
  4332  001212                     u8000:
  4333  001212                     
  4334                           ; BSR set to: 0
  4335  001212  0E00               	movlw	0
  4336  001214  6F79               	movwf	(_efgtoa$1260+1)& (0+255),b
  4337  001216  0E65               	movlw	101
  4338  001218  6F78               	movwf	_efgtoa$1260& (0+255),b
  4339  00121A  EF13  F009         	goto	l6426
  4340  00121E                     l6424:
  4341                           
  4342                           ; BSR set to: 0
  4343  00121E  0E00               	movlw	0
  4344  001220  6F79               	movwf	(_efgtoa$1260+1)& (0+255),b
  4345  001222  0E45               	movlw	69
  4346  001224  6F78               	movwf	_efgtoa$1260& (0+255),b
  4347  001226                     l6426:
  4348                           
  4349                           ; BSR set to: 0
  4350  001226  0E08               	movlw	low _dbuf
  4351  001228  2596               	addwf	efgtoa@i& (0+255),w,b
  4352  00122A  6ED9               	movwf	fsr2l,c
  4353  00122C  0E01               	movlw	high _dbuf
  4354  00122E  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4355  001230  6EDA               	movwf	fsr2h,c
  4356  001232  C078  FFDF         	movff	_efgtoa$1260,indf2
  4357  001236                     
  4358                           ; BSR set to: 0
  4359                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  4360  001236  078B               	decf	efgtoa@w& (0+255),f,b
  4361  001238  A0D8               	btfss	status,0,c
  4362  00123A  078C               	decf	(efgtoa@w+1)& (0+255),f,b
  4363  00123C                     
  4364                           ; BSR set to: 0
  4365                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  4366  00123C  0E08               	movlw	low _dbuf
  4367  00123E  259E               	addwf	efgtoa@n& (0+255),w,b
  4368  001240  6E0E               	movwf	strcpy@dest^0,c
  4369  001242  0E01               	movlw	high _dbuf
  4370  001244  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4371  001246  6E0F               	movwf	(strcpy@dest+1)^0,c
  4372  001248  0E08               	movlw	low _dbuf
  4373  00124A  2596               	addwf	efgtoa@i& (0+255),w,b
  4374  00124C  6E10               	movwf	strcpy@src^0,c
  4375  00124E  0E01               	movlw	high _dbuf
  4376  001250  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4377  001252  6E11               	movwf	(strcpy@src+1)^0,c
  4378  001254  ECCD  F01B         	call	_strcpy	;wreg free
  4379  001258  EF09  F004         	goto	l6182
  4380  00125C                     l571:
  4381  00125C  0012               	return		;funcret
  4382  00125E                     __end_of_efgtoa:
  4383                           	opt callstack 0
  4384                           
  4385 ;; *************** function _tolower *****************
  4386 ;; Defined at:
  4387 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\tolower.c"
  4388 ;; Parameters:    Size  Location     Type
  4389 ;;  c               2   19[COMRAM] int 
  4390 ;; Auto vars:     Size  Location     Type
  4391 ;;		None
  4392 ;; Return value:  Size  Location     Type
  4393 ;;                  2   19[COMRAM] int 
  4394 ;; Registers used:
  4395 ;;		wreg, status,2, status,0
  4396 ;; Tracked objects:
  4397 ;;		On entry : 0/0
  4398 ;;		On exit  : 0/0
  4399 ;;		Unchanged: 0/0
  4400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4401 ;;      Params:         2       0       0       0       0       0       0
  4402 ;;      Locals:         2       0       0       0       0       0       0
  4403 ;;      Temps:          4       0       0       0       0       0       0
  4404 ;;      Totals:         8       0       0       0       0       0       0
  4405 ;;Total ram usage:        8 bytes
  4406 ;; Hardware stack levels used:    1
  4407 ;; Hardware stack levels required when called:    9
  4408 ;; This function calls:
  4409 ;;		_isupper
  4410 ;; This function is called by:
  4411 ;;		_efgtoa
  4412 ;;		_vfpfcnvrt
  4413 ;; This function uses a non-reentrant model
  4414 ;;
  4415                           
  4416                           	psect	text6
  4417  00373A                     __ptext6:
  4418                           	opt callstack 0
  4419  00373A                     _tolower:
  4420                           	opt callstack 18
  4421  00373A  0EBF               	movlw	191
  4422  00373C  6E16               	movwf	??_tolower^0,c
  4423  00373E  0EFF               	movlw	255
  4424  003740  6E17               	movwf	(??_tolower+1)^0,c
  4425  003742  C014  F018         	movff	tolower@c,??_tolower+2
  4426  003746  C015  F019         	movff	tolower@c+1,??_tolower+3
  4427  00374A  5016               	movf	??_tolower^0,w,c
  4428  00374C  2618               	addwf	(??_tolower+2)^0,f,c
  4429  00374E  5017               	movf	(??_tolower+1)^0,w,c
  4430  003750  2219               	addwfc	(??_tolower+3)^0,f,c
  4431  003752  5019               	movf	(??_tolower+3)^0,w,c
  4432  003754  E10A               	bnz	u6620
  4433  003756  0E1A               	movlw	26
  4434  003758  5C18               	subwf	(??_tolower+2)^0,w,c
  4435  00375A  A0D8               	btfss	status,0,c
  4436  00375C  EFB2  F01B         	goto	u6621
  4437  003760  EFB5  F01B         	goto	u6620
  4438  003764                     u6621:
  4439  003764  0E01               	movlw	1
  4440  003766  EFB6  F01B         	goto	u6630
  4441  00376A                     u6620:
  4442  00376A  0E00               	movlw	0
  4443  00376C                     u6630:
  4444  00376C  6E1A               	movwf	_tolower$1866^0,c
  4445  00376E  6A1B               	clrf	(_tolower$1866+1)^0,c
  4446  003770  501A               	movf	_tolower$1866^0,w,c
  4447  003772  101B               	iorwf	(_tolower$1866+1)^0,w,c
  4448  003774  B4D8               	btfsc	status,2,c
  4449  003776  EFBF  F01B         	goto	u6641
  4450  00377A  EFC1  F01B         	goto	u6640
  4451  00377E                     u6641:
  4452  00377E  EFC8  F01B         	goto	l1480
  4453  003782                     u6640:
  4454  003782  0E20               	movlw	32
  4455  003784  1014               	iorwf	tolower@c^0,w,c
  4456  003786  6E14               	movwf	?_tolower^0,c
  4457  003788  5015               	movf	(tolower@c+1)^0,w,c
  4458  00378A  6E15               	movwf	(?_tolower+1)^0,c
  4459  00378C  EFCC  F01B         	goto	l1485
  4460  003790                     l1480:
  4461  003790  C014  F014         	movff	tolower@c,?_tolower
  4462  003794  C015  F015         	movff	tolower@c+1,?_tolower+1
  4463  003798                     l1485:
  4464  003798  0012               	return		;funcret
  4465  00379A                     __end_of_tolower:
  4466                           	opt callstack 0
  4467                           
  4468 ;; *************** function _isupper *****************
  4469 ;; Defined at:
  4470 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  4471 ;; Parameters:    Size  Location     Type
  4472 ;;  c               2   13[COMRAM] int 
  4473 ;; Auto vars:     Size  Location     Type
  4474 ;;		None
  4475 ;; Return value:  Size  Location     Type
  4476 ;;                  2   13[COMRAM] int 
  4477 ;; Registers used:
  4478 ;;		wreg, status,2, status,0
  4479 ;; Tracked objects:
  4480 ;;		On entry : 0/0
  4481 ;;		On exit  : 0/0
  4482 ;;		Unchanged: 0/0
  4483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4484 ;;      Params:         2       0       0       0       0       0       0
  4485 ;;      Locals:         0       0       0       0       0       0       0
  4486 ;;      Temps:          4       0       0       0       0       0       0
  4487 ;;      Totals:         6       0       0       0       0       0       0
  4488 ;;Total ram usage:        6 bytes
  4489 ;; Hardware stack levels used:    1
  4490 ;; Hardware stack levels required when called:    8
  4491 ;; This function calls:
  4492 ;;		Nothing
  4493 ;; This function is called by:
  4494 ;;		_efgtoa
  4495 ;;		_vfpfcnvrt
  4496 ;;		_tolower
  4497 ;; This function uses a non-reentrant model
  4498 ;;
  4499                           
  4500                           	psect	text7
  4501  003AC6                     __ptext7:
  4502                           	opt callstack 0
  4503  003AC6                     _isupper:
  4504                           	opt callstack 18
  4505  003AC6  0EBF               	movlw	191
  4506  003AC8  6E10               	movwf	??_isupper^0,c
  4507  003ACA  0EFF               	movlw	255
  4508  003ACC  6E11               	movwf	(??_isupper+1)^0,c
  4509  003ACE  C00E  F012         	movff	isupper@c,??_isupper+2
  4510  003AD2  C00F  F013         	movff	isupper@c+1,??_isupper+3
  4511  003AD6  5010               	movf	??_isupper^0,w,c
  4512  003AD8  2612               	addwf	(??_isupper+2)^0,f,c
  4513  003ADA  5011               	movf	(??_isupper+1)^0,w,c
  4514  003ADC  2213               	addwfc	(??_isupper+3)^0,f,c
  4515  003ADE  5013               	movf	(??_isupper+3)^0,w,c
  4516  003AE0  E10A               	bnz	u6080
  4517  003AE2  0E1A               	movlw	26
  4518  003AE4  5C12               	subwf	(??_isupper+2)^0,w,c
  4519  003AE6  A0D8               	btfss	status,0,c
  4520  003AE8  EF78  F01D         	goto	u6081
  4521  003AEC  EF7B  F01D         	goto	u6080
  4522  003AF0                     u6081:
  4523  003AF0  0E01               	movlw	1
  4524  003AF2  EF7C  F01D         	goto	u6090
  4525  003AF6                     u6080:
  4526  003AF6  0E00               	movlw	0
  4527  003AF8                     u6090:
  4528  003AF8  6E0E               	movwf	?_isupper^0,c
  4529  003AFA  6A0F               	clrf	(?_isupper+1)^0,c
  4530  003AFC  0012               	return		;funcret
  4531  003AFE                     __end_of_isupper:
  4532                           	opt callstack 0
  4533                           
  4534 ;; *************** function _strcpy *****************
  4535 ;; Defined at:
  4536 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  4537 ;; Parameters:    Size  Location     Type
  4538 ;;  dest            2   13[COMRAM] PTR unsigned char 
  4539 ;;		 -> dbuf(80), 
  4540 ;;  src             2   15[COMRAM] PTR const unsigned char 
  4541 ;;		 -> STR_13(4), STR_12(4), STR_9(4), STR_8(4), 
  4542 ;;		 -> dbuf(80), 
  4543 ;; Auto vars:     Size  Location     Type
  4544 ;;  d               2   21[COMRAM] PTR unsigned char 
  4545 ;;		 -> dbuf(80), 
  4546 ;;  s               2   19[COMRAM] PTR const unsigned char 
  4547 ;;		 -> STR_13(4), STR_12(4), STR_9(4), STR_8(4), 
  4548 ;;		 -> dbuf(80), 
  4549 ;; Return value:  Size  Location     Type
  4550 ;;                  2   13[COMRAM] PTR unsigned char 
  4551 ;; Registers used:
  4552 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4553 ;; Tracked objects:
  4554 ;;		On entry : 0/0
  4555 ;;		On exit  : 0/0
  4556 ;;		Unchanged: 0/0
  4557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4558 ;;      Params:         4       0       0       0       0       0       0
  4559 ;;      Locals:         4       0       0       0       0       0       0
  4560 ;;      Temps:          2       0       0       0       0       0       0
  4561 ;;      Totals:        10       0       0       0       0       0       0
  4562 ;;Total ram usage:       10 bytes
  4563 ;; Hardware stack levels used:    1
  4564 ;; Hardware stack levels required when called:    8
  4565 ;; This function calls:
  4566 ;;		Nothing
  4567 ;; This function is called by:
  4568 ;;		_efgtoa
  4569 ;; This function uses a non-reentrant model
  4570 ;;
  4571                           
  4572                           	psect	text8
  4573  00379A                     __ptext8:
  4574                           	opt callstack 0
  4575  00379A                     _strcpy:
  4576                           	opt callstack 18
  4577  00379A  C010  F014         	movff	strcpy@src,strcpy@s
  4578  00379E  C011  F015         	movff	strcpy@src+1,strcpy@s+1
  4579  0037A2  C00E  F016         	movff	strcpy@dest,strcpy@d
  4580  0037A6  C00F  F017         	movff	strcpy@dest+1,strcpy@d+1
  4581  0037AA                     l5632:
  4582  0037AA  5014               	movf	strcpy@s^0,w,c
  4583  0037AC  6E12               	movwf	??_strcpy^0,c
  4584  0037AE  5015               	movf	(strcpy@s+1)^0,w,c
  4585  0037B0  6E13               	movwf	(??_strcpy+1)^0,c
  4586  0037B2  4A14               	infsnz	strcpy@s^0,f,c
  4587  0037B4  2A15               	incf	(strcpy@s+1)^0,f,c
  4588  0037B6  C012  FFF6         	movff	??_strcpy,tblptrl
  4589  0037BA  C013  FFF7         	movff	??_strcpy+1,tblptrh
  4590  0037BE  6AF8               	clrf	tblptru,c
  4591  0037C0  C016  FFD9         	movff	strcpy@d,fsr2l
  4592  0037C4  C017  FFDA         	movff	strcpy@d+1,fsr2h
  4593  0037C8  4A16               	infsnz	strcpy@d^0,f,c
  4594  0037CA  2A17               	incf	(strcpy@d+1)^0,f,c
  4595  0037CC  0E05               	movlw	(high __ramtop+-1)
  4596  0037CE  64F7               	cpfsgt	tblptrh,c
  4597  0037D0  D003               	bra	u6607
  4598  0037D2  0008               	tblrd		*
  4599  0037D4  50F5               	movf	tablat,w,c
  4600  0037D6  D005               	bra	u6600
  4601  0037D8                     u6607:
  4602  0037D8  CFF6 FFE1          	movff	tblptrl,fsr1l
  4603  0037DC  CFF7 FFE2          	movff	tblptrh,fsr1h
  4604  0037E0  50E7               	movf	indf1,w,c
  4605  0037E2                     u6600:
  4606  0037E2  6EDF               	movwf	indf2,c
  4607  0037E4  50DF               	movf	indf2,w,c
  4608  0037E6  A4D8               	btfss	status,2,c
  4609  0037E8  EFF8  F01B         	goto	u6611
  4610  0037EC  EFFA  F01B         	goto	u6610
  4611  0037F0                     u6611:
  4612  0037F0  EFD5  F01B         	goto	l5632
  4613  0037F4                     u6610:
  4614  0037F4  0012               	return		;funcret
  4615  0037F6                     __end_of_strcpy:
  4616                           	opt callstack 0
  4617                           
  4618 ;; *************** function _pad *****************
  4619 ;; Defined at:
  4620 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4621 ;; Parameters:    Size  Location     Type
  4622 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  4623 ;;		 -> sprintf@f(6), 
  4624 ;;  buf             2   31[COMRAM] PTR unsigned char 
  4625 ;;		 -> dbuf(80), 
  4626 ;;  p               2   33[COMRAM] int 
  4627 ;; Auto vars:     Size  Location     Type
  4628 ;;  w               2   38[COMRAM] int 
  4629 ;;  i               2   36[COMRAM] int 
  4630 ;; Return value:  Size  Location     Type
  4631 ;;                  2   29[COMRAM] int 
  4632 ;; Registers used:
  4633 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4634 ;; Tracked objects:
  4635 ;;		On entry : 0/0
  4636 ;;		On exit  : 0/0
  4637 ;;		Unchanged: 0/0
  4638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4639 ;;      Params:         6       0       0       0       0       0       0
  4640 ;;      Locals:         4       0       0       0       0       0       0
  4641 ;;      Temps:          1       0       0       0       0       0       0
  4642 ;;      Totals:        11       0       0       0       0       0       0
  4643 ;;Total ram usage:       11 bytes
  4644 ;; Hardware stack levels used:    1
  4645 ;; Hardware stack levels required when called:   11
  4646 ;; This function calls:
  4647 ;;		_fputc
  4648 ;;		_fputs
  4649 ;;		_strlen
  4650 ;; This function is called by:
  4651 ;;		_efgtoa
  4652 ;; This function uses a non-reentrant model
  4653 ;;
  4654                           
  4655                           	psect	text9
  4656  0033CA                     __ptext9:
  4657                           	opt callstack 0
  4658  0033CA                     _pad:
  4659                           	opt callstack 15
  4660  0033CA                     
  4661                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  4662  0033CA  A049               	btfss	_flags^0,0,c
  4663  0033CC  EFEA  F019         	goto	u6491
  4664  0033D0  EFEC  F019         	goto	u6490
  4665  0033D4                     u6491:
  4666  0033D4  EFF6  F019         	goto	l5590
  4667  0033D8                     u6490:
  4668  0033D8                     
  4669                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  4670  0033D8  C020  F017         	movff	pad@buf,fputs@s
  4671  0033DC  C021  F018         	movff	pad@buf+1,fputs@s+1
  4672  0033E0  C01E  F019         	movff	pad@fp,fputs@fp
  4673  0033E4  C01F  F01A         	movff	pad@fp+1,fputs@fp+1
  4674  0033E8  ECC4  F01C         	call	_fputs	;wreg free
  4675  0033EC                     l5590:
  4676                           
  4677                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  4678  0033EC  BE23               	btfsc	(pad@p+1)^0,7,c
  4679  0033EE  EFFB  F019         	goto	u6501
  4680  0033F2  EFFD  F019         	goto	u6500
  4681  0033F6                     u6501:
  4682  0033F6  EF03  F01A         	goto	l5594
  4683  0033FA                     u6500:
  4684  0033FA  C022  F027         	movff	pad@p,pad@w
  4685  0033FE  C023  F028         	movff	pad@p+1,pad@w+1
  4686  003402  EF07  F01A         	goto	l548
  4687  003406                     l5594:
  4688  003406  0E00               	movlw	0
  4689  003408  6E28               	movwf	(pad@w+1)^0,c
  4690  00340A  0E00               	movlw	0
  4691  00340C  6E27               	movwf	pad@w^0,c
  4692  00340E                     l548:
  4693                           
  4694                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  4695  00340E  0E00               	movlw	0
  4696  003410  6E26               	movwf	(pad@i+1)^0,c
  4697  003412  0E00               	movlw	0
  4698  003414  6E25               	movwf	pad@i^0,c
  4699                           
  4700                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4701  003416  EF19  F01A         	goto	l5600
  4702  00341A                     l5596:
  4703                           
  4704                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  4705  00341A  0E00               	movlw	0
  4706  00341C  6E0F               	movwf	(fputc@c+1)^0,c
  4707  00341E  0E20               	movlw	32
  4708  003420  6E0E               	movwf	fputc@c^0,c
  4709  003422  C01E  F010         	movff	pad@fp,fputc@fp
  4710  003426  C01F  F011         	movff	pad@fp+1,fputc@fp+1
  4711  00342A  EC1E  F019         	call	_fputc	;wreg free
  4712  00342E                     
  4713                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  4714  00342E  4A25               	infsnz	pad@i^0,f,c
  4715  003430  2A26               	incf	(pad@i+1)^0,f,c
  4716  003432                     l5600:
  4717                           
  4718                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4719  003432  5027               	movf	pad@w^0,w,c
  4720  003434  5C25               	subwf	pad@i^0,w,c
  4721  003436  5026               	movf	(pad@i+1)^0,w,c
  4722  003438  0A80               	xorlw	128
  4723  00343A  6E24               	movwf	??_pad^0,c
  4724  00343C  5028               	movf	(pad@w+1)^0,w,c
  4725  00343E  0A80               	xorlw	128
  4726  003440  5824               	subwfb	??_pad^0,w,c
  4727  003442  A0D8               	btfss	status,0,c
  4728  003444  EF26  F01A         	goto	u6511
  4729  003448  EF28  F01A         	goto	u6510
  4730  00344C                     u6511:
  4731  00344C  EF0D  F01A         	goto	l5596
  4732  003450                     u6510:
  4733  003450                     
  4734                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  4735  003450  B049               	btfsc	_flags^0,0,c
  4736  003452  EF2D  F01A         	goto	u6521
  4737  003456  EF2F  F01A         	goto	u6520
  4738  00345A                     u6521:
  4739  00345A  EF39  F01A         	goto	l5604
  4740  00345E                     u6520:
  4741  00345E                     
  4742                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  4743  00345E  C020  F017         	movff	pad@buf,fputs@s
  4744  003462  C021  F018         	movff	pad@buf+1,fputs@s+1
  4745  003466  C01E  F019         	movff	pad@fp,fputs@fp
  4746  00346A  C01F  F01A         	movff	pad@fp+1,fputs@fp+1
  4747  00346E  ECC4  F01C         	call	_fputs	;wreg free
  4748  003472                     l5604:
  4749                           
  4750                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  4751  003472  C020  F00E         	movff	pad@buf,strlen@s
  4752  003476  C021  F00F         	movff	pad@buf+1,strlen@s+1
  4753  00347A  ECB7  F01D         	call	_strlen	;wreg free
  4754  00347E  5027               	movf	pad@w^0,w,c
  4755  003480  240E               	addwf	?_strlen^0,w,c
  4756  003482  6E1E               	movwf	?_pad^0,c
  4757  003484  5028               	movf	(pad@w+1)^0,w,c
  4758  003486  200F               	addwfc	(?_strlen+1)^0,w,c
  4759  003488  6E1F               	movwf	(?_pad+1)^0,c
  4760  00348A  0012               	return		;funcret
  4761  00348C                     __end_of_pad:
  4762                           	opt callstack 0
  4763                           
  4764 ;; *************** function _strlen *****************
  4765 ;; Defined at:
  4766 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  4767 ;; Parameters:    Size  Location     Type
  4768 ;;  s               2   13[COMRAM] PTR const unsigned char 
  4769 ;;		 -> dbuf(80), 
  4770 ;; Auto vars:     Size  Location     Type
  4771 ;;  a               2   15[COMRAM] PTR const unsigned char 
  4772 ;;		 -> dbuf(80), 
  4773 ;; Return value:  Size  Location     Type
  4774 ;;                  2   13[COMRAM] unsigned int 
  4775 ;; Registers used:
  4776 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4777 ;; Tracked objects:
  4778 ;;		On entry : 0/0
  4779 ;;		On exit  : 0/0
  4780 ;;		Unchanged: 0/0
  4781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4782 ;;      Params:         2       0       0       0       0       0       0
  4783 ;;      Locals:         2       0       0       0       0       0       0
  4784 ;;      Temps:          0       0       0       0       0       0       0
  4785 ;;      Totals:         4       0       0       0       0       0       0
  4786 ;;Total ram usage:        4 bytes
  4787 ;; Hardware stack levels used:    1
  4788 ;; Hardware stack levels required when called:    8
  4789 ;; This function calls:
  4790 ;;		Nothing
  4791 ;; This function is called by:
  4792 ;;		_pad
  4793 ;; This function uses a non-reentrant model
  4794 ;;
  4795                           
  4796                           	psect	text10
  4797  003B6E                     __ptext10:
  4798                           	opt callstack 0
  4799  003B6E                     _strlen:
  4800                           	opt callstack 17
  4801  003B6E  C00E  F010         	movff	strlen@s,strlen@a
  4802  003B72  C00F  F011         	movff	strlen@s+1,strlen@a+1
  4803  003B76  EFBF  F01D         	goto	l5374
  4804  003B7A                     l5372:
  4805  003B7A  4A0E               	infsnz	strlen@s^0,f,c
  4806  003B7C  2A0F               	incf	(strlen@s+1)^0,f,c
  4807  003B7E                     l5374:
  4808  003B7E  C00E  FFD9         	movff	strlen@s,fsr2l
  4809  003B82  C00F  FFDA         	movff	strlen@s+1,fsr2h
  4810  003B86  50DF               	movf	indf2,w,c
  4811  003B88  A4D8               	btfss	status,2,c
  4812  003B8A  EFC9  F01D         	goto	u6071
  4813  003B8E  EFCB  F01D         	goto	u6070
  4814  003B92                     u6071:
  4815  003B92  EFBD  F01D         	goto	l5372
  4816  003B96                     u6070:
  4817  003B96  5010               	movf	strlen@a^0,w,c
  4818  003B98  5C0E               	subwf	strlen@s^0,w,c
  4819  003B9A  6E0E               	movwf	?_strlen^0,c
  4820  003B9C  5011               	movf	(strlen@a+1)^0,w,c
  4821  003B9E  580F               	subwfb	(strlen@s+1)^0,w,c
  4822  003BA0  6E0F               	movwf	(?_strlen+1)^0,c
  4823  003BA2  0012               	return		;funcret
  4824  003BA4                     __end_of_strlen:
  4825                           	opt callstack 0
  4826                           
  4827 ;; *************** function _fputs *****************
  4828 ;; Defined at:
  4829 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  4830 ;; Parameters:    Size  Location     Type
  4831 ;;  s               2   22[COMRAM] PTR const unsigned char 
  4832 ;;		 -> dbuf(80), 
  4833 ;;  fp              2   24[COMRAM] PTR struct _IO_FILE
  4834 ;;		 -> sprintf@f(6), 
  4835 ;; Auto vars:     Size  Location     Type
  4836 ;;  i               2   27[COMRAM] int 
  4837 ;;  c               1   26[COMRAM] unsigned char 
  4838 ;; Return value:  Size  Location     Type
  4839 ;;                  2   22[COMRAM] int 
  4840 ;; Registers used:
  4841 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4842 ;; Tracked objects:
  4843 ;;		On entry : 0/0
  4844 ;;		On exit  : 0/0
  4845 ;;		Unchanged: 0/0
  4846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4847 ;;      Params:         4       0       0       0       0       0       0
  4848 ;;      Locals:         3       0       0       0       0       0       0
  4849 ;;      Temps:          0       0       0       0       0       0       0
  4850 ;;      Totals:         7       0       0       0       0       0       0
  4851 ;;Total ram usage:        7 bytes
  4852 ;; Hardware stack levels used:    1
  4853 ;; Hardware stack levels required when called:   10
  4854 ;; This function calls:
  4855 ;;		_fputc
  4856 ;; This function is called by:
  4857 ;;		_pad
  4858 ;; This function uses a non-reentrant model
  4859 ;;
  4860                           
  4861                           	psect	text11
  4862  003988                     __ptext11:
  4863                           	opt callstack 0
  4864  003988                     _fputs:
  4865                           	opt callstack 15
  4866  003988  0E00               	movlw	0
  4867  00398A  6E1D               	movwf	(fputs@i+1)^0,c
  4868  00398C  0E00               	movlw	0
  4869  00398E  6E1C               	movwf	fputs@i^0,c
  4870  003990  EFD5  F01C         	goto	l5368
  4871  003994                     l5364:
  4872  003994  C01B  F00E         	movff	fputs@c,fputc@c
  4873  003998  6A0F               	clrf	(fputc@c+1)^0,c
  4874  00399A  C019  F010         	movff	fputs@fp,fputc@fp
  4875  00399E  C01A  F011         	movff	fputs@fp+1,fputc@fp+1
  4876  0039A2  EC1E  F019         	call	_fputc	;wreg free
  4877  0039A6  4A1C               	infsnz	fputs@i^0,f,c
  4878  0039A8  2A1D               	incf	(fputs@i+1)^0,f,c
  4879  0039AA                     l5368:
  4880  0039AA  501C               	movf	fputs@i^0,w,c
  4881  0039AC  2417               	addwf	fputs@s^0,w,c
  4882  0039AE  6ED9               	movwf	fsr2l,c
  4883  0039B0  501D               	movf	(fputs@i+1)^0,w,c
  4884  0039B2  2018               	addwfc	(fputs@s+1)^0,w,c
  4885  0039B4  6EDA               	movwf	fsr2h,c
  4886  0039B6  50DF               	movf	indf2,w,c
  4887  0039B8  6E1B               	movwf	fputs@c^0,c
  4888  0039BA  501B               	movf	fputs@c^0,w,c
  4889  0039BC  A4D8               	btfss	status,2,c
  4890  0039BE  EFE3  F01C         	goto	u6061
  4891  0039C2  EFE5  F01C         	goto	u6060
  4892  0039C6                     u6061:
  4893  0039C6  EFCA  F01C         	goto	l5364
  4894  0039CA                     u6060:
  4895  0039CA  0012               	return		;funcret
  4896  0039CC                     __end_of_fputs:
  4897                           	opt callstack 0
  4898                           
  4899 ;; *************** function _fputc *****************
  4900 ;; Defined at:
  4901 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  4902 ;; Parameters:    Size  Location     Type
  4903 ;;  c               2   13[COMRAM] int 
  4904 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  4905 ;;		 -> sprintf@f(6), 
  4906 ;; Auto vars:     Size  Location     Type
  4907 ;;		None
  4908 ;; Return value:  Size  Location     Type
  4909 ;;                  2   13[COMRAM] int 
  4910 ;; Registers used:
  4911 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4912 ;; Tracked objects:
  4913 ;;		On entry : 0/0
  4914 ;;		On exit  : 0/0
  4915 ;;		Unchanged: 0/0
  4916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4917 ;;      Params:         4       0       0       0       0       0       0
  4918 ;;      Locals:         0       0       0       0       0       0       0
  4919 ;;      Temps:          5       0       0       0       0       0       0
  4920 ;;      Totals:         9       0       0       0       0       0       0
  4921 ;;Total ram usage:        9 bytes
  4922 ;; Hardware stack levels used:    1
  4923 ;; Hardware stack levels required when called:    9
  4924 ;; This function calls:
  4925 ;;		_putch
  4926 ;; This function is called by:
  4927 ;;		_pad
  4928 ;;		_vfpfcnvrt
  4929 ;;		_fputs
  4930 ;; This function uses a non-reentrant model
  4931 ;;
  4932                           
  4933                           	psect	text12
  4934  00323C                     __ptext12:
  4935                           	opt callstack 0
  4936  00323C                     _fputc:
  4937                           	opt callstack 18
  4938  00323C  5010               	movf	fputc@fp^0,w,c
  4939  00323E  1011               	iorwf	(fputc@fp+1)^0,w,c
  4940  003240  B4D8               	btfsc	status,2,c
  4941  003242  EF25  F019         	goto	u6021
  4942  003246  EF27  F019         	goto	u6020
  4943  00324A                     u6021:
  4944  00324A  EF30  F019         	goto	l5352
  4945  00324E                     u6020:
  4946  00324E  5010               	movf	fputc@fp^0,w,c
  4947  003250  1011               	iorwf	(fputc@fp+1)^0,w,c
  4948  003252  A4D8               	btfss	status,2,c
  4949  003254  EF2E  F019         	goto	u6031
  4950  003258  EF30  F019         	goto	u6030
  4951  00325C                     u6031:
  4952  00325C  EF35  F019         	goto	l5354
  4953  003260                     u6030:
  4954  003260                     l5352:
  4955  003260  500E               	movf	fputc@c^0,w,c
  4956  003262  EC16  F01F         	call	_putch
  4957  003266  EF82  F019         	goto	l1436
  4958  00326A                     l5354:
  4959  00326A  EE20 F004          	lfsr	2,4
  4960  00326E  5010               	movf	fputc@fp^0,w,c
  4961  003270  26D9               	addwf	fsr2l,f,c
  4962  003272  5011               	movf	(fputc@fp+1)^0,w,c
  4963  003274  22DA               	addwfc	fsr2h,f,c
  4964  003276  50DE               	movf	postinc2,w,c
  4965  003278  10DE               	iorwf	postinc2,w,c
  4966  00327A  B4D8               	btfsc	status,2,c
  4967  00327C  EF42  F019         	goto	u6041
  4968  003280  EF44  F019         	goto	u6040
  4969  003284                     u6041:
  4970  003284  EF5F  F019         	goto	l5358
  4971  003288                     u6040:
  4972  003288  EE20 F004          	lfsr	2,4
  4973  00328C  5010               	movf	fputc@fp^0,w,c
  4974  00328E  26D9               	addwf	fsr2l,f,c
  4975  003290  5011               	movf	(fputc@fp+1)^0,w,c
  4976  003292  22DA               	addwfc	fsr2h,f,c
  4977  003294  EE10 F002          	lfsr	1,2
  4978  003298  5010               	movf	fputc@fp^0,w,c
  4979  00329A  26E1               	addwf	fsr1l,f,c
  4980  00329C  5011               	movf	(fputc@fp+1)^0,w,c
  4981  00329E  22E2               	addwfc	fsr1h,f,c
  4982  0032A0  50DE               	movf	postinc2,w,c
  4983  0032A2  5CE6               	subwf	postinc1,w,c
  4984  0032A4  50E6               	movf	postinc1,w,c
  4985  0032A6  0A80               	xorlw	128
  4986  0032A8  6E16               	movwf	(??_fputc+4)^0,c
  4987  0032AA  50DE               	movf	postinc2,w,c
  4988  0032AC  0A80               	xorlw	128
  4989  0032AE  5816               	subwfb	(??_fputc+4)^0,w,c
  4990  0032B0  B0D8               	btfsc	status,0,c
  4991  0032B2  EF5D  F019         	goto	u6051
  4992  0032B6  EF5F  F019         	goto	u6050
  4993  0032BA                     u6051:
  4994  0032BA  EF82  F019         	goto	l1436
  4995  0032BE                     u6050:
  4996  0032BE                     l5358:
  4997  0032BE  EE20 F002          	lfsr	2,2
  4998  0032C2  5010               	movf	fputc@fp^0,w,c
  4999  0032C4  26D9               	addwf	fsr2l,f,c
  5000  0032C6  5011               	movf	(fputc@fp+1)^0,w,c
  5001  0032C8  22DA               	addwfc	fsr2h,f,c
  5002  0032CA  CFDE F012          	movff	postinc2,??_fputc
  5003  0032CE  CFDD F013          	movff	postdec2,??_fputc+1
  5004  0032D2  C010  FFD9         	movff	fputc@fp,fsr2l
  5005  0032D6  C011  FFDA         	movff	fputc@fp+1,fsr2h
  5006  0032DA  CFDE F014          	movff	postinc2,??_fputc+2
  5007  0032DE  CFDD F015          	movff	postdec2,??_fputc+3
  5008  0032E2  5012               	movf	??_fputc^0,w,c
  5009  0032E4  2414               	addwf	(??_fputc+2)^0,w,c
  5010  0032E6  6ED9               	movwf	fsr2l,c
  5011  0032E8  5013               	movf	(??_fputc+1)^0,w,c
  5012  0032EA  2015               	addwfc	(??_fputc+3)^0,w,c
  5013  0032EC  6EDA               	movwf	fsr2h,c
  5014  0032EE  C00E  FFDF         	movff	fputc@c,indf2
  5015  0032F2  EE20 F002          	lfsr	2,2
  5016  0032F6  5010               	movf	fputc@fp^0,w,c
  5017  0032F8  26D9               	addwf	fsr2l,f,c
  5018  0032FA  5011               	movf	(fputc@fp+1)^0,w,c
  5019  0032FC  22DA               	addwfc	fsr2h,f,c
  5020  0032FE  2ADE               	incf	postinc2,f,c
  5021  003300  0E00               	movlw	0
  5022  003302  22DD               	addwfc	postdec2,f,c
  5023  003304                     l1436:
  5024  003304  0012               	return		;funcret
  5025  003306                     __end_of_fputc:
  5026                           	opt callstack 0
  5027                           
  5028 ;; *************** function _putch *****************
  5029 ;; Defined at:
  5030 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  5031 ;; Parameters:    Size  Location     Type
  5032 ;;  c               1    wreg     unsigned char 
  5033 ;; Auto vars:     Size  Location     Type
  5034 ;;  c               1    0[COMRAM] unsigned char 
  5035 ;; Return value:  Size  Location     Type
  5036 ;;                  1    wreg      void 
  5037 ;; Registers used:
  5038 ;;		wreg
  5039 ;; Tracked objects:
  5040 ;;		On entry : 0/0
  5041 ;;		On exit  : 0/0
  5042 ;;		Unchanged: 0/0
  5043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5044 ;;      Params:         0       0       0       0       0       0       0
  5045 ;;      Locals:         0       0       0       0       0       0       0
  5046 ;;      Temps:          0       0       0       0       0       0       0
  5047 ;;      Totals:         0       0       0       0       0       0       0
  5048 ;;Total ram usage:        0 bytes
  5049 ;; Hardware stack levels used:    1
  5050 ;; Hardware stack levels required when called:    8
  5051 ;; This function calls:
  5052 ;;		Nothing
  5053 ;; This function is called by:
  5054 ;;		_fputc
  5055 ;; This function uses a non-reentrant model
  5056 ;;
  5057                           
  5058                           	psect	text13
  5059  003E2C                     __ptext13:
  5060                           	opt callstack 0
  5061  003E2C                     _putch:
  5062                           	opt callstack 18
  5063  003E2C  0012               	return		;funcret
  5064  003E2E                     __end_of_putch:
  5065                           	opt callstack 0
  5066                           
  5067 ;; *************** function _floorf *****************
  5068 ;; Defined at:
  5069 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\floorf.c"
  5070 ;; Parameters:    Size  Location     Type
  5071 ;;  x               4   38[COMRAM] float 
  5072 ;; Auto vars:     Size  Location     Type
  5073 ;;  u               4   54[COMRAM] struct .
  5074 ;;  m               4   48[COMRAM] unsigned long 
  5075 ;;  e               2   52[COMRAM] int 
  5076 ;; Return value:  Size  Location     Type
  5077 ;;                  4   38[COMRAM] float 
  5078 ;; Registers used:
  5079 ;;		wreg, status,2, status,0
  5080 ;; Tracked objects:
  5081 ;;		On entry : 0/0
  5082 ;;		On exit  : 0/0
  5083 ;;		Unchanged: 0/0
  5084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5085 ;;      Params:         4       0       0       0       0       0       0
  5086 ;;      Locals:        10       0       0       0       0       0       0
  5087 ;;      Temps:          6       0       0       0       0       0       0
  5088 ;;      Totals:        20       0       0       0       0       0       0
  5089 ;;Total ram usage:       20 bytes
  5090 ;; Hardware stack levels used:    1
  5091 ;; Hardware stack levels required when called:    8
  5092 ;; This function calls:
  5093 ;;		Nothing
  5094 ;; This function is called by:
  5095 ;;		_efgtoa
  5096 ;; This function uses a non-reentrant model
  5097 ;;
  5098                           
  5099                           	psect	text14
  5100  0026FE                     __ptext14:
  5101                           	opt callstack 0
  5102  0026FE                     _floorf:
  5103                           	opt callstack 18
  5104  0026FE  C100  F037         	movff	floorf@F524,floorf@u
  5105  002702  C101  F038         	movff	floorf@F524+1,floorf@u+1
  5106  002706  C102  F039         	movff	floorf@F524+2,floorf@u+2
  5107  00270A  C103  F03A         	movff	floorf@F524+3,floorf@u+3
  5108  00270E  C027  F037         	movff	floorf@x,floorf@u
  5109  002712  C028  F038         	movff	floorf@x+1,floorf@u+1
  5110  002716  C029  F039         	movff	floorf@x+2,floorf@u+2
  5111  00271A  C02A  F03A         	movff	floorf@x+3,floorf@u+3
  5112  00271E  0E81               	movlw	129
  5113  002720  6E2B               	movwf	??_floorf^0,c
  5114  002722  0EFF               	movlw	255
  5115  002724  6E2C               	movwf	(??_floorf+1)^0,c
  5116  002726  C037  F02D         	movff	floorf@u,??_floorf+2
  5117  00272A  C038  F02E         	movff	floorf@u+1,??_floorf+3
  5118  00272E  C039  F02F         	movff	floorf@u+2,??_floorf+4
  5119  002732  C03A  F030         	movff	floorf@u+3,??_floorf+5
  5120  002736  0E18               	movlw	24
  5121  002738  EFA3  F013         	goto	u6650
  5122  00273C                     u6655:
  5123  00273C  90D8               	bcf	status,0,c
  5124  00273E  3230               	rrcf	(??_floorf+5)^0,f,c
  5125  002740  322F               	rrcf	(??_floorf+4)^0,f,c
  5126  002742  322E               	rrcf	(??_floorf+3)^0,f,c
  5127  002744  322D               	rrcf	(??_floorf+2)^0,f,c
  5128  002746                     u6650:
  5129  002746  2EE8               	decfsz	wreg,f,c
  5130  002748  EF9E  F013         	goto	u6655
  5131  00274C  502D               	movf	(??_floorf+2)^0,w,c
  5132  00274E  242B               	addwf	??_floorf^0,w,c
  5133  002750  6E35               	movwf	floorf@e^0,c
  5134  002752  0E00               	movlw	0
  5135  002754  202C               	addwfc	(??_floorf+1)^0,w,c
  5136  002756  6E36               	movwf	(floorf@e+1)^0,c
  5137  002758  BE36               	btfsc	(floorf@e+1)^0,7,c
  5138  00275A  EFB8  F013         	goto	u6661
  5139  00275E  5036               	movf	(floorf@e+1)^0,w,c
  5140  002760  E109               	bnz	u6660
  5141  002762  0E17               	movlw	23
  5142  002764  5C35               	subwf	floorf@e^0,w,c
  5143  002766  A0D8               	btfss	status,0,c
  5144  002768  EFB8  F013         	goto	u6661
  5145  00276C  EFBA  F013         	goto	u6660
  5146  002770                     u6661:
  5147  002770  EFC4  F013         	goto	l5650
  5148  002774                     u6660:
  5149  002774                     l5648:
  5150  002774  C027  F027         	movff	floorf@x,?_floorf
  5151  002778  C028  F028         	movff	floorf@x+1,?_floorf+1
  5152  00277C  C029  F029         	movff	floorf@x+2,?_floorf+2
  5153  002780  C02A  F02A         	movff	floorf@x+3,?_floorf+3
  5154  002784  EF87  F014         	goto	l1397
  5155  002788                     l5650:
  5156  002788  BE36               	btfsc	(floorf@e+1)^0,7,c
  5157  00278A  EFC9  F013         	goto	u6671
  5158  00278E  EFCB  F013         	goto	u6670
  5159  002792                     u6671:
  5160  002792  EF3B  F014         	goto	l5660
  5161  002796                     u6670:
  5162  002796  C035  F02B         	movff	floorf@e,??_floorf
  5163  00279A  0EFF               	movlw	255
  5164  00279C  6E2C               	movwf	(??_floorf+1)^0,c
  5165  00279E  0EFF               	movlw	255
  5166  0027A0  6E2D               	movwf	(??_floorf+2)^0,c
  5167  0027A2  0E7F               	movlw	127
  5168  0027A4  6E2E               	movwf	(??_floorf+3)^0,c
  5169  0027A6  0E00               	movlw	0
  5170  0027A8  6E2F               	movwf	(??_floorf+4)^0,c
  5171  0027AA                     u6685:
  5172  0027AA  662B               	tstfsz	??_floorf^0,c
  5173  0027AC  EFDA  F013         	goto	u6686
  5174  0027B0  EFE2  F013         	goto	u6687
  5175  0027B4                     u6686:
  5176  0027B4  342F               	rlcf	(??_floorf+4)^0,w,c
  5177  0027B6  322F               	rrcf	(??_floorf+4)^0,f,c
  5178  0027B8  322E               	rrcf	(??_floorf+3)^0,f,c
  5179  0027BA  322D               	rrcf	(??_floorf+2)^0,f,c
  5180  0027BC  322C               	rrcf	(??_floorf+1)^0,f,c
  5181  0027BE  2E2B               	decfsz	??_floorf^0,f,c
  5182  0027C0  EFD5  F013         	goto	u6685
  5183  0027C4                     u6687:
  5184  0027C4  C02C  F031         	movff	??_floorf+1,floorf@m
  5185  0027C8  C02D  F032         	movff	??_floorf+2,floorf@m+1
  5186  0027CC  C02E  F033         	movff	??_floorf+3,floorf@m+2
  5187  0027D0  C02F  F034         	movff	??_floorf+4,floorf@m+3
  5188  0027D4  5031               	movf	floorf@m^0,w,c
  5189  0027D6  1437               	andwf	floorf@u^0,w,c
  5190  0027D8  6E2B               	movwf	??_floorf^0,c
  5191  0027DA  5032               	movf	(floorf@m+1)^0,w,c
  5192  0027DC  1438               	andwf	(floorf@u+1)^0,w,c
  5193  0027DE  6E2C               	movwf	(??_floorf+1)^0,c
  5194  0027E0  5033               	movf	(floorf@m+2)^0,w,c
  5195  0027E2  1439               	andwf	(floorf@u+2)^0,w,c
  5196  0027E4  6E2D               	movwf	(??_floorf+2)^0,c
  5197  0027E6  5034               	movf	(floorf@m+3)^0,w,c
  5198  0027E8  143A               	andwf	(floorf@u+3)^0,w,c
  5199  0027EA  6E2E               	movwf	(??_floorf+3)^0,c
  5200  0027EC  502B               	movf	??_floorf^0,w,c
  5201  0027EE  102C               	iorwf	(??_floorf+1)^0,w,c
  5202  0027F0  102D               	iorwf	(??_floorf+2)^0,w,c
  5203  0027F2  102E               	iorwf	(??_floorf+3)^0,w,c
  5204  0027F4  A4D8               	btfss	status,2,c
  5205  0027F6  EFFF  F013         	goto	u6691
  5206  0027FA  EF01  F014         	goto	u6690
  5207  0027FE                     u6691:
  5208  0027FE  EF03  F014         	goto	l5656
  5209  002802                     u6690:
  5210  002802  EFBA  F013         	goto	l5648
  5211  002806                     l5656:
  5212  002806  C037  F02B         	movff	floorf@u,??_floorf
  5213  00280A  C038  F02C         	movff	floorf@u+1,??_floorf+1
  5214  00280E  C039  F02D         	movff	floorf@u+2,??_floorf+2
  5215  002812  C03A  F02E         	movff	floorf@u+3,??_floorf+3
  5216  002816  0E20               	movlw	32
  5217  002818  EF13  F014         	goto	u6700
  5218  00281C                     u6705:
  5219  00281C  90D8               	bcf	status,0,c
  5220  00281E  322E               	rrcf	(??_floorf+3)^0,f,c
  5221  002820  322D               	rrcf	(??_floorf+2)^0,f,c
  5222  002822  322C               	rrcf	(??_floorf+1)^0,f,c
  5223  002824  322B               	rrcf	??_floorf^0,f,c
  5224  002826                     u6700:
  5225  002826  2EE8               	decfsz	wreg,f,c
  5226  002828  EF0E  F014         	goto	u6705
  5227  00282C  502B               	movf	??_floorf^0,w,c
  5228  00282E  102C               	iorwf	(??_floorf+1)^0,w,c
  5229  002830  102D               	iorwf	(??_floorf+2)^0,w,c
  5230  002832  102E               	iorwf	(??_floorf+3)^0,w,c
  5231  002834  B4D8               	btfsc	status,2,c
  5232  002836  EF1F  F014         	goto	u6711
  5233  00283A  EF21  F014         	goto	u6710
  5234  00283E                     u6711:
  5235  00283E  EF29  F014         	goto	l1400
  5236  002842                     u6710:
  5237  002842  5031               	movf	floorf@m^0,w,c
  5238  002844  2637               	addwf	floorf@u^0,f,c
  5239  002846  5032               	movf	(floorf@m+1)^0,w,c
  5240  002848  2238               	addwfc	(floorf@u+1)^0,f,c
  5241  00284A  5033               	movf	(floorf@m+2)^0,w,c
  5242  00284C  2239               	addwfc	(floorf@u+2)^0,f,c
  5243  00284E  5034               	movf	(floorf@m+3)^0,w,c
  5244  002850  223A               	addwfc	(floorf@u+3)^0,f,c
  5245  002852                     l1400:
  5246  002852  1C31               	comf	floorf@m^0,w,c
  5247  002854  6E2B               	movwf	??_floorf^0,c
  5248  002856  1C32               	comf	(floorf@m+1)^0,w,c
  5249  002858  6E2C               	movwf	(??_floorf+1)^0,c
  5250  00285A  1C33               	comf	(floorf@m+2)^0,w,c
  5251  00285C  6E2D               	movwf	(??_floorf+2)^0,c
  5252  00285E  1C34               	comf	(floorf@m+3)^0,w,c
  5253  002860  6E2E               	movwf	(??_floorf+3)^0,c
  5254  002862  502B               	movf	??_floorf^0,w,c
  5255  002864  1637               	andwf	floorf@u^0,f,c
  5256  002866  502C               	movf	(??_floorf+1)^0,w,c
  5257  002868  1638               	andwf	(floorf@u+1)^0,f,c
  5258  00286A  502D               	movf	(??_floorf+2)^0,w,c
  5259  00286C  1639               	andwf	(floorf@u+2)^0,f,c
  5260  00286E  502E               	movf	(??_floorf+3)^0,w,c
  5261  002870  163A               	andwf	(floorf@u+3)^0,f,c
  5262  002872  EF7F  F014         	goto	l5668
  5263  002876                     l5660:
  5264  002876  C037  F02B         	movff	floorf@u,??_floorf
  5265  00287A  C038  F02C         	movff	floorf@u+1,??_floorf+1
  5266  00287E  C039  F02D         	movff	floorf@u+2,??_floorf+2
  5267  002882  C03A  F02E         	movff	floorf@u+3,??_floorf+3
  5268  002886  0E20               	movlw	32
  5269  002888  EF4B  F014         	goto	u6720
  5270  00288C                     u6725:
  5271  00288C  90D8               	bcf	status,0,c
  5272  00288E  322E               	rrcf	(??_floorf+3)^0,f,c
  5273  002890  322D               	rrcf	(??_floorf+2)^0,f,c
  5274  002892  322C               	rrcf	(??_floorf+1)^0,f,c
  5275  002894  322B               	rrcf	??_floorf^0,f,c
  5276  002896                     u6720:
  5277  002896  2EE8               	decfsz	wreg,f,c
  5278  002898  EF46  F014         	goto	u6725
  5279  00289C  502B               	movf	??_floorf^0,w,c
  5280  00289E  102C               	iorwf	(??_floorf+1)^0,w,c
  5281  0028A0  102D               	iorwf	(??_floorf+2)^0,w,c
  5282  0028A2  102E               	iorwf	(??_floorf+3)^0,w,c
  5283  0028A4  A4D8               	btfss	status,2,c
  5284  0028A6  EF57  F014         	goto	u6731
  5285  0028AA  EF59  F014         	goto	u6730
  5286  0028AE                     u6731:
  5287  0028AE  EF63  F014         	goto	l5664
  5288  0028B2                     u6730:
  5289  0028B2  0E00               	movlw	0
  5290  0028B4  6E37               	movwf	floorf@u^0,c
  5291  0028B6  0E00               	movlw	0
  5292  0028B8  6E38               	movwf	(floorf@u+1)^0,c
  5293  0028BA  0E00               	movlw	0
  5294  0028BC  6E39               	movwf	(floorf@u+2)^0,c
  5295  0028BE  0E00               	movlw	0
  5296  0028C0  6E3A               	movwf	(floorf@u+3)^0,c
  5297  0028C2  EF7F  F014         	goto	l5668
  5298  0028C6                     l5664:
  5299  0028C6  90D8               	bcf	status,0,c
  5300  0028C8  3437               	rlcf	floorf@u^0,w,c
  5301  0028CA  6E2B               	movwf	??_floorf^0,c
  5302  0028CC  3438               	rlcf	(floorf@u+1)^0,w,c
  5303  0028CE  6E2C               	movwf	(??_floorf+1)^0,c
  5304  0028D0  3439               	rlcf	(floorf@u+2)^0,w,c
  5305  0028D2  6E2D               	movwf	(??_floorf+2)^0,c
  5306  0028D4  343A               	rlcf	(floorf@u+3)^0,w,c
  5307  0028D6  6E2E               	movwf	(??_floorf+3)^0,c
  5308  0028D8  502B               	movf	??_floorf^0,w,c
  5309  0028DA  102C               	iorwf	(??_floorf+1)^0,w,c
  5310  0028DC  102D               	iorwf	(??_floorf+2)^0,w,c
  5311  0028DE  102E               	iorwf	(??_floorf+3)^0,w,c
  5312  0028E0  B4D8               	btfsc	status,2,c
  5313  0028E2  EF75  F014         	goto	u6741
  5314  0028E6  EF77  F014         	goto	u6740
  5315  0028EA                     u6741:
  5316  0028EA  EF7F  F014         	goto	l5668
  5317  0028EE                     u6740:
  5318  0028EE  0E00               	movlw	0
  5319  0028F0  6E37               	movwf	floorf@u^0,c
  5320  0028F2  0E00               	movlw	0
  5321  0028F4  6E38               	movwf	(floorf@u+1)^0,c
  5322  0028F6  0E80               	movlw	128
  5323  0028F8  6E39               	movwf	(floorf@u+2)^0,c
  5324  0028FA  0EBF               	movlw	191
  5325  0028FC  6E3A               	movwf	(floorf@u+3)^0,c
  5326  0028FE                     l5668:
  5327  0028FE  C037  F027         	movff	floorf@u,?_floorf
  5328  002902  C038  F028         	movff	floorf@u+1,?_floorf+1
  5329  002906  C039  F029         	movff	floorf@u+2,?_floorf+2
  5330  00290A  C03A  F02A         	movff	floorf@u+3,?_floorf+3
  5331  00290E                     l1397:
  5332  00290E  0012               	return		;funcret
  5333  002910                     __end_of_floorf:
  5334                           	opt callstack 0
  5335                           
  5336 ;; *************** function ___fpclassifyf *****************
  5337 ;; Defined at:
  5338 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__fpclassifyf.c"
  5339 ;; Parameters:    Size  Location     Type
  5340 ;;  x               4   13[COMRAM] float 
  5341 ;; Auto vars:     Size  Location     Type
  5342 ;;  u               4   23[COMRAM] struct .
  5343 ;;  e               2   21[COMRAM] int 
  5344 ;; Return value:  Size  Location     Type
  5345 ;;                  2   13[COMRAM] int 
  5346 ;; Registers used:
  5347 ;;		wreg, status,2, status,0
  5348 ;; Tracked objects:
  5349 ;;		On entry : 0/0
  5350 ;;		On exit  : 0/0
  5351 ;;		Unchanged: 0/0
  5352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5353 ;;      Params:         4       0       0       0       0       0       0
  5354 ;;      Locals:         6       0       0       0       0       0       0
  5355 ;;      Temps:          4       0       0       0       0       0       0
  5356 ;;      Totals:        14       0       0       0       0       0       0
  5357 ;;Total ram usage:       14 bytes
  5358 ;; Hardware stack levels used:    1
  5359 ;; Hardware stack levels required when called:    8
  5360 ;; This function calls:
  5361 ;;		Nothing
  5362 ;; This function is called by:
  5363 ;;		_efgtoa
  5364 ;; This function uses a non-reentrant model
  5365 ;;
  5366                           
  5367                           	psect	text15
  5368  003068                     __ptext15:
  5369                           	opt callstack 0
  5370  003068                     ___fpclassifyf:
  5371                           	opt callstack 18
  5372  003068  C104  F018         	movff	___fpclassifyf@F463,___fpclassifyf@u
  5373  00306C  C105  F019         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  5374  003070  C106  F01A         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  5375  003074  C107  F01B         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  5376  003078  C00E  F018         	movff	___fpclassifyf@x,___fpclassifyf@u
  5377  00307C  C00F  F019         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5378  003080  C010  F01A         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5379  003084  C011  F01B         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5380  003088  C018  F012         	movff	___fpclassifyf@u,??___fpclassifyf
  5381  00308C  C019  F013         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5382  003090  C01A  F014         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5383  003094  C01B  F015         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5384  003098  0E18               	movlw	24
  5385  00309A  EF54  F018         	goto	u6530
  5386  00309E                     u6535:
  5387  00309E  90D8               	bcf	status,0,c
  5388  0030A0  3215               	rrcf	(??___fpclassifyf+3)^0,f,c
  5389  0030A2  3214               	rrcf	(??___fpclassifyf+2)^0,f,c
  5390  0030A4  3213               	rrcf	(??___fpclassifyf+1)^0,f,c
  5391  0030A6  3212               	rrcf	??___fpclassifyf^0,f,c
  5392  0030A8                     u6530:
  5393  0030A8  2EE8               	decfsz	wreg,f,c
  5394  0030AA  EF4F  F018         	goto	u6535
  5395  0030AE  5012               	movf	??___fpclassifyf^0,w,c
  5396  0030B0  6E16               	movwf	___fpclassifyf@e^0,c
  5397  0030B2  6A17               	clrf	(___fpclassifyf@e+1)^0,c
  5398  0030B4  5016               	movf	___fpclassifyf@e^0,w,c
  5399  0030B6  1017               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5400  0030B8  A4D8               	btfss	status,2,c
  5401  0030BA  EF61  F018         	goto	u6541
  5402  0030BE  EF63  F018         	goto	u6540
  5403  0030C2                     u6541:
  5404  0030C2  EF83  F018         	goto	l5620
  5405  0030C6                     u6540:
  5406  0030C6  90D8               	bcf	status,0,c
  5407  0030C8  3418               	rlcf	___fpclassifyf@u^0,w,c
  5408  0030CA  6E12               	movwf	??___fpclassifyf^0,c
  5409  0030CC  3419               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5410  0030CE  6E13               	movwf	(??___fpclassifyf+1)^0,c
  5411  0030D0  341A               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5412  0030D2  6E14               	movwf	(??___fpclassifyf+2)^0,c
  5413  0030D4  341B               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5414  0030D6  6E15               	movwf	(??___fpclassifyf+3)^0,c
  5415  0030D8  5012               	movf	??___fpclassifyf^0,w,c
  5416  0030DA  1013               	iorwf	(??___fpclassifyf+1)^0,w,c
  5417  0030DC  1014               	iorwf	(??___fpclassifyf+2)^0,w,c
  5418  0030DE  1015               	iorwf	(??___fpclassifyf+3)^0,w,c
  5419  0030E0  A4D8               	btfss	status,2,c
  5420  0030E2  EF75  F018         	goto	u6551
  5421  0030E6  EF77  F018         	goto	u6550
  5422  0030EA                     u6551:
  5423  0030EA  EF7D  F018         	goto	l5616
  5424  0030EE                     u6550:
  5425  0030EE  0E00               	movlw	0
  5426  0030F0  6E0F               	movwf	(?___fpclassifyf+1)^0,c
  5427  0030F2  0E02               	movlw	2
  5428  0030F4  6E0E               	movwf	?___fpclassifyf^0,c
  5429  0030F6  EFB2  F018         	goto	l1359
  5430  0030FA                     l5616:
  5431  0030FA  0E00               	movlw	0
  5432  0030FC  6E0F               	movwf	(?___fpclassifyf+1)^0,c
  5433  0030FE  0E03               	movlw	3
  5434  003100  6E0E               	movwf	?___fpclassifyf^0,c
  5435  003102  EFB2  F018         	goto	l1359
  5436  003106                     l5620:
  5437  003106  2816               	incf	___fpclassifyf@e^0,w,c
  5438  003108  1017               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5439  00310A  A4D8               	btfss	status,2,c
  5440  00310C  EF8A  F018         	goto	u6561
  5441  003110  EF8C  F018         	goto	u6560
  5442  003114                     u6561:
  5443  003114  EFAE  F018         	goto	l5626
  5444  003118                     u6560:
  5445  003118  C018  F012         	movff	___fpclassifyf@u,??___fpclassifyf
  5446  00311C  C019  F013         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5447  003120  C01A  F014         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5448  003124  C01B  F015         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5449  003128  0E09               	movlw	9
  5450  00312A                     u6575:
  5451  00312A  90D8               	bcf	status,0,c
  5452  00312C  3612               	rlcf	??___fpclassifyf^0,f,c
  5453  00312E  3613               	rlcf	(??___fpclassifyf+1)^0,f,c
  5454  003130  3614               	rlcf	(??___fpclassifyf+2)^0,f,c
  5455  003132  3615               	rlcf	(??___fpclassifyf+3)^0,f,c
  5456  003134  2EE8               	decfsz	wreg,f,c
  5457  003136  EF95  F018         	goto	u6575
  5458  00313A  5012               	movf	??___fpclassifyf^0,w,c
  5459  00313C  1013               	iorwf	(??___fpclassifyf+1)^0,w,c
  5460  00313E  1014               	iorwf	(??___fpclassifyf+2)^0,w,c
  5461  003140  1015               	iorwf	(??___fpclassifyf+3)^0,w,c
  5462  003142  B4D8               	btfsc	status,2,c
  5463  003144  EFA6  F018         	goto	u6581
  5464  003148  EFA9  F018         	goto	u6580
  5465  00314C                     u6581:
  5466  00314C  0E01               	movlw	1
  5467  00314E  EFAA  F018         	goto	u6590
  5468  003152                     u6580:
  5469  003152  0E00               	movlw	0
  5470  003154                     u6590:
  5471  003154  6E0E               	movwf	?___fpclassifyf^0,c
  5472  003156  6A0F               	clrf	(?___fpclassifyf+1)^0,c
  5473  003158  EFB2  F018         	goto	l1359
  5474  00315C                     l5626:
  5475  00315C  0E00               	movlw	0
  5476  00315E  6E0F               	movwf	(?___fpclassifyf+1)^0,c
  5477  003160  0E04               	movlw	4
  5478  003162  6E0E               	movwf	?___fpclassifyf^0,c
  5479  003164                     l1359:
  5480  003164  0012               	return		;funcret
  5481  003166                     __end_of___fpclassifyf:
  5482                           	opt callstack 0
  5483                           
  5484 ;; *************** function ___fltol *****************
  5485 ;; Defined at:
  5486 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
  5487 ;; Parameters:    Size  Location     Type
  5488 ;;  f1              4   13[COMRAM] int 
  5489 ;; Auto vars:     Size  Location     Type
  5490 ;;  exp1            1   22[COMRAM] unsigned char 
  5491 ;;  sign1           1   21[COMRAM] unsigned char 
  5492 ;; Return value:  Size  Location     Type
  5493 ;;                  4   13[COMRAM] long 
  5494 ;; Registers used:
  5495 ;;		wreg, status,2, status,0
  5496 ;; Tracked objects:
  5497 ;;		On entry : 0/0
  5498 ;;		On exit  : 0/0
  5499 ;;		Unchanged: 0/0
  5500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5501 ;;      Params:         4       0       0       0       0       0       0
  5502 ;;      Locals:         2       0       0       0       0       0       0
  5503 ;;      Temps:          4       0       0       0       0       0       0
  5504 ;;      Totals:        10       0       0       0       0       0       0
  5505 ;;Total ram usage:       10 bytes
  5506 ;; Hardware stack levels used:    1
  5507 ;; Hardware stack levels required when called:    8
  5508 ;; This function calls:
  5509 ;;		Nothing
  5510 ;; This function is called by:
  5511 ;;		_efgtoa
  5512 ;; This function uses a non-reentrant model
  5513 ;;
  5514                           
  5515                           	psect	text16
  5516  002D5E                     __ptext16:
  5517                           	opt callstack 0
  5518  002D5E                     ___fltol:
  5519                           	opt callstack 18
  5520  002D5E  3410               	rlcf	(___fltol@f1+2)^0,w,c
  5521  002D60  3411               	rlcf	(___fltol@f1+3)^0,w,c
  5522  002D62  6E17               	movwf	___fltol@exp1^0,c
  5523  002D64  5017               	movf	___fltol@exp1^0,w,c
  5524  002D66  A4D8               	btfss	status,2,c
  5525  002D68  EFB8  F016         	goto	u7401
  5526  002D6C  EFBA  F016         	goto	u7400
  5527  002D70                     u7401:
  5528  002D70  EFC4  F016         	goto	l6088
  5529  002D74                     u7400:
  5530  002D74                     l6084:
  5531  002D74  0E00               	movlw	0
  5532  002D76  6E0E               	movwf	?___fltol^0,c
  5533  002D78  0E00               	movlw	0
  5534  002D7A  6E0F               	movwf	(?___fltol+1)^0,c
  5535  002D7C  0E00               	movlw	0
  5536  002D7E  6E10               	movwf	(?___fltol+2)^0,c
  5537  002D80  0E00               	movlw	0
  5538  002D82  6E11               	movwf	(?___fltol+3)^0,c
  5539  002D84  EF31  F017         	goto	l975
  5540  002D88                     l6088:
  5541  002D88  C00E  F012         	movff	___fltol@f1,??___fltol
  5542  002D8C  C00F  F013         	movff	___fltol@f1+1,??___fltol+1
  5543  002D90  C010  F014         	movff	___fltol@f1+2,??___fltol+2
  5544  002D94  C011  F015         	movff	___fltol@f1+3,??___fltol+3
  5545  002D98  0E20               	movlw	32
  5546  002D9A  EFD4  F016         	goto	u7410
  5547  002D9E                     u7415:
  5548  002D9E  90D8               	bcf	status,0,c
  5549  002DA0  3215               	rrcf	(??___fltol+3)^0,f,c
  5550  002DA2  3214               	rrcf	(??___fltol+2)^0,f,c
  5551  002DA4  3213               	rrcf	(??___fltol+1)^0,f,c
  5552  002DA6  3212               	rrcf	??___fltol^0,f,c
  5553  002DA8                     u7410:
  5554  002DA8  2EE8               	decfsz	wreg,f,c
  5555  002DAA  EFCF  F016         	goto	u7415
  5556  002DAE  5012               	movf	??___fltol^0,w,c
  5557  002DB0  6E16               	movwf	___fltol@sign1^0,c
  5558  002DB2  8E10               	bsf	(___fltol@f1+2)^0,7,c
  5559  002DB4  0EFF               	movlw	255
  5560  002DB6  160E               	andwf	___fltol@f1^0,f,c
  5561  002DB8  0EFF               	movlw	255
  5562  002DBA  160F               	andwf	(___fltol@f1+1)^0,f,c
  5563  002DBC  0EFF               	movlw	255
  5564  002DBE  1610               	andwf	(___fltol@f1+2)^0,f,c
  5565  002DC0  0E00               	movlw	0
  5566  002DC2  1611               	andwf	(___fltol@f1+3)^0,f,c
  5567  002DC4  0E96               	movlw	150
  5568  002DC6  5E17               	subwf	___fltol@exp1^0,f,c
  5569  002DC8  BE17               	btfsc	___fltol@exp1^0,7,c
  5570  002DCA  EFEB  F016         	goto	u7420
  5571  002DCE  EFE9  F016         	goto	u7421
  5572  002DD2                     u7421:
  5573  002DD2  EF01  F017         	goto	l6108
  5574  002DD6                     u7420:
  5575  002DD6  5017               	movf	___fltol@exp1^0,w,c
  5576  002DD8  0A80               	xorlw	128
  5577  002DDA  0F97               	addlw	151
  5578  002DDC  B0D8               	btfsc	status,0,c
  5579  002DDE  EFF3  F016         	goto	u7431
  5580  002DE2  EFF5  F016         	goto	u7430
  5581  002DE6                     u7431:
  5582  002DE6  EFF7  F016         	goto	l6104
  5583  002DEA                     u7430:
  5584  002DEA  EFBA  F016         	goto	l6084
  5585  002DEE                     l6104:
  5586  002DEE  90D8               	bcf	status,0,c
  5587  002DF0  3211               	rrcf	(___fltol@f1+3)^0,f,c
  5588  002DF2  3210               	rrcf	(___fltol@f1+2)^0,f,c
  5589  002DF4  320F               	rrcf	(___fltol@f1+1)^0,f,c
  5590  002DF6  320E               	rrcf	___fltol@f1^0,f,c
  5591  002DF8  3E17               	incfsz	___fltol@exp1^0,f,c
  5592  002DFA  EFF7  F016         	goto	l6104
  5593  002DFE  EF19  F017         	goto	l6118
  5594  002E02                     l6108:
  5595  002E02  0E1F               	movlw	31
  5596  002E04  6417               	cpfsgt	___fltol@exp1^0,c
  5597  002E06  EF07  F017         	goto	u7441
  5598  002E0A  EF09  F017         	goto	u7440
  5599  002E0E                     u7441:
  5600  002E0E  EF11  F017         	goto	l6116
  5601  002E12                     u7440:
  5602  002E12  EFBA  F016         	goto	l6084
  5603  002E16                     l6114:
  5604  002E16  90D8               	bcf	status,0,c
  5605  002E18  360E               	rlcf	___fltol@f1^0,f,c
  5606  002E1A  360F               	rlcf	(___fltol@f1+1)^0,f,c
  5607  002E1C  3610               	rlcf	(___fltol@f1+2)^0,f,c
  5608  002E1E  3611               	rlcf	(___fltol@f1+3)^0,f,c
  5609  002E20  0617               	decf	___fltol@exp1^0,f,c
  5610  002E22                     l6116:
  5611  002E22  5017               	movf	___fltol@exp1^0,w,c
  5612  002E24  A4D8               	btfss	status,2,c
  5613  002E26  EF17  F017         	goto	u7451
  5614  002E2A  EF19  F017         	goto	u7450
  5615  002E2E                     u7451:
  5616  002E2E  EF0B  F017         	goto	l6114
  5617  002E32                     u7450:
  5618  002E32                     l6118:
  5619  002E32  5016               	movf	___fltol@sign1^0,w,c
  5620  002E34  B4D8               	btfsc	status,2,c
  5621  002E36  EF1F  F017         	goto	u7461
  5622  002E3A  EF21  F017         	goto	u7460
  5623  002E3E                     u7461:
  5624  002E3E  EF29  F017         	goto	l6122
  5625  002E42                     u7460:
  5626  002E42  1E11               	comf	(___fltol@f1+3)^0,f,c
  5627  002E44  1E10               	comf	(___fltol@f1+2)^0,f,c
  5628  002E46  1E0F               	comf	(___fltol@f1+1)^0,f,c
  5629  002E48  6C0E               	negf	___fltol@f1^0,c
  5630  002E4A  0E00               	movlw	0
  5631  002E4C  220F               	addwfc	(___fltol@f1+1)^0,f,c
  5632  002E4E  2210               	addwfc	(___fltol@f1+2)^0,f,c
  5633  002E50  2211               	addwfc	(___fltol@f1+3)^0,f,c
  5634  002E52                     l6122:
  5635  002E52  C00E  F00E         	movff	___fltol@f1,?___fltol
  5636  002E56  C00F  F00F         	movff	___fltol@f1+1,?___fltol+1
  5637  002E5A  C010  F010         	movff	___fltol@f1+2,?___fltol+2
  5638  002E5E  C011  F011         	movff	___fltol@f1+3,?___fltol+3
  5639  002E62                     l975:
  5640  002E62  0012               	return		;funcret
  5641  002E64                     __end_of___fltol:
  5642                           	opt callstack 0
  5643                           
  5644 ;; *************** function ___flsub *****************
  5645 ;; Defined at:
  5646 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  5647 ;; Parameters:    Size  Location     Type
  5648 ;;  b               4   52[COMRAM] long 
  5649 ;;  a               4   56[COMRAM] long 
  5650 ;; Auto vars:     Size  Location     Type
  5651 ;;		None
  5652 ;; Return value:  Size  Location     Type
  5653 ;;                  4   52[COMRAM] long 
  5654 ;; Registers used:
  5655 ;;		wreg, status,2, status,0, cstack
  5656 ;; Tracked objects:
  5657 ;;		On entry : 0/0
  5658 ;;		On exit  : 0/0
  5659 ;;		Unchanged: 0/0
  5660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5661 ;;      Params:         8       0       0       0       0       0       0
  5662 ;;      Locals:         0       0       0       0       0       0       0
  5663 ;;      Temps:          0       0       0       0       0       0       0
  5664 ;;      Totals:         8       0       0       0       0       0       0
  5665 ;;Total ram usage:        8 bytes
  5666 ;; Hardware stack levels used:    1
  5667 ;; Hardware stack levels required when called:    9
  5668 ;; This function calls:
  5669 ;;		___fladd
  5670 ;; This function is called by:
  5671 ;;		_efgtoa
  5672 ;; This function uses a non-reentrant model
  5673 ;;
  5674                           
  5675                           	psect	text17
  5676  003942                     __ptext17:
  5677                           	opt callstack 0
  5678  003942                     ___flsub:
  5679                           	opt callstack 17
  5680  003942  0E00               	movlw	0
  5681  003944  1A39               	xorwf	___flsub@a^0,f,c
  5682  003946  0E00               	movlw	0
  5683  003948  1A3A               	xorwf	(___flsub@a+1)^0,f,c
  5684  00394A  0E00               	movlw	0
  5685  00394C  1A3B               	xorwf	(___flsub@a+2)^0,f,c
  5686  00394E  0E80               	movlw	128
  5687  003950  1A3C               	xorwf	(___flsub@a+3)^0,f,c
  5688  003952  C035  F00E         	movff	___flsub@b,___fladd@b
  5689  003956  C036  F00F         	movff	___flsub@b+1,___fladd@b+1
  5690  00395A  C037  F010         	movff	___flsub@b+2,___fladd@b+2
  5691  00395E  C038  F011         	movff	___flsub@b+3,___fladd@b+3
  5692  003962  C039  F012         	movff	___flsub@a,___fladd@a
  5693  003966  C03A  F013         	movff	___flsub@a+1,___fladd@a+1
  5694  00396A  C03B  F014         	movff	___flsub@a+2,___fladd@a+2
  5695  00396E  C03C  F015         	movff	___flsub@a+3,___fladd@a+3
  5696  003972  EC2F  F009         	call	___fladd	;wreg free
  5697  003976  C00E  F035         	movff	?___fladd,?___flsub
  5698  00397A  C00F  F036         	movff	?___fladd+1,?___flsub+1
  5699  00397E  C010  F037         	movff	?___fladd+2,?___flsub+2
  5700  003982  C011  F038         	movff	?___fladd+3,?___flsub+3
  5701  003986  0012               	return		;funcret
  5702  003988                     __end_of___flsub:
  5703                           	opt callstack 0
  5704                           
  5705 ;; *************** function ___fladd *****************
  5706 ;; Defined at:
  5707 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  5708 ;; Parameters:    Size  Location     Type
  5709 ;;  b               4   13[COMRAM] long 
  5710 ;;  a               4   17[COMRAM] long 
  5711 ;; Auto vars:     Size  Location     Type
  5712 ;;  grs             1   28[COMRAM] unsigned char 
  5713 ;;  bexp            1   27[COMRAM] unsigned char 
  5714 ;;  aexp            1   26[COMRAM] unsigned char 
  5715 ;;  signs           1   25[COMRAM] unsigned char 
  5716 ;; Return value:  Size  Location     Type
  5717 ;;                  4   13[COMRAM] unsigned char 
  5718 ;; Registers used:
  5719 ;;		wreg, status,2, status,0
  5720 ;; Tracked objects:
  5721 ;;		On entry : 0/0
  5722 ;;		On exit  : 0/0
  5723 ;;		Unchanged: 0/0
  5724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5725 ;;      Params:         8       0       0       0       0       0       0
  5726 ;;      Locals:         4       0       0       0       0       0       0
  5727 ;;      Temps:          4       0       0       0       0       0       0
  5728 ;;      Totals:        16       0       0       0       0       0       0
  5729 ;;Total ram usage:       16 bytes
  5730 ;; Hardware stack levels used:    1
  5731 ;; Hardware stack levels required when called:    8
  5732 ;; This function calls:
  5733 ;;		Nothing
  5734 ;; This function is called by:
  5735 ;;		_efgtoa
  5736 ;;		___flsub
  5737 ;; This function uses a non-reentrant model
  5738 ;;
  5739                           
  5740                           	psect	text18
  5741  00125E                     __ptext18:
  5742                           	opt callstack 0
  5743  00125E                     ___fladd:
  5744                           	opt callstack 17
  5745  00125E  5011               	movf	(___fladd@b+3)^0,w,c
  5746  001260  0B80               	andlw	128
  5747  001262  6E1A               	movwf	___fladd@signs^0,c
  5748  001264  5011               	movf	(___fladd@b+3)^0,w,c
  5749  001266  2411               	addwf	(___fladd@b+3)^0,w,c
  5750  001268  6E1C               	movwf	___fladd@bexp^0,c
  5751  00126A  AE10               	btfss	(___fladd@b+2)^0,7,c
  5752  00126C  EF3A  F009         	goto	u6101
  5753  001270  EF3C  F009         	goto	u6100
  5754  001274                     u6101:
  5755  001274  EF3D  F009         	goto	l5390
  5756  001278                     u6100:
  5757  001278  801C               	bsf	___fladd@bexp^0,0,c
  5758  00127A                     l5390:
  5759  00127A  501C               	movf	___fladd@bexp^0,w,c
  5760  00127C  B4D8               	btfsc	status,2,c
  5761  00127E  EF43  F009         	goto	u6111
  5762  001282  EF45  F009         	goto	u6110
  5763  001286                     u6111:
  5764  001286  EF5A  F009         	goto	l5400
  5765  00128A                     u6110:
  5766  00128A  281C               	incf	___fladd@bexp^0,w,c
  5767  00128C  A4D8               	btfss	status,2,c
  5768  00128E  EF4B  F009         	goto	u6121
  5769  001292  EF4D  F009         	goto	u6120
  5770  001296                     u6121:
  5771  001296  EF55  F009         	goto	l5396
  5772  00129A                     u6120:
  5773  00129A  0E00               	movlw	0
  5774  00129C  6E0E               	movwf	___fladd@b^0,c
  5775  00129E  0E00               	movlw	0
  5776  0012A0  6E0F               	movwf	(___fladd@b+1)^0,c
  5777  0012A2  0E00               	movlw	0
  5778  0012A4  6E10               	movwf	(___fladd@b+2)^0,c
  5779  0012A6  0E00               	movlw	0
  5780  0012A8  6E11               	movwf	(___fladd@b+3)^0,c
  5781  0012AA                     l5396:
  5782  0012AA  8E10               	bsf	(___fladd@b+2)^0,7,c
  5783  0012AC  0E00               	movlw	0
  5784  0012AE  6E11               	movwf	(___fladd@b+3)^0,c
  5785  0012B0  EF62  F009         	goto	l5402
  5786  0012B4                     l5400:
  5787  0012B4  0E00               	movlw	0
  5788  0012B6  6E0E               	movwf	___fladd@b^0,c
  5789  0012B8  0E00               	movlw	0
  5790  0012BA  6E0F               	movwf	(___fladd@b+1)^0,c
  5791  0012BC  0E00               	movlw	0
  5792  0012BE  6E10               	movwf	(___fladd@b+2)^0,c
  5793  0012C0  0E00               	movlw	0
  5794  0012C2  6E11               	movwf	(___fladd@b+3)^0,c
  5795  0012C4                     l5402:
  5796  0012C4  5015               	movf	(___fladd@a+3)^0,w,c
  5797  0012C6  0B80               	andlw	128
  5798  0012C8  6E1B               	movwf	___fladd@aexp^0,c
  5799  0012CA  501A               	movf	___fladd@signs^0,w,c
  5800  0012CC  181B               	xorwf	___fladd@aexp^0,w,c
  5801  0012CE  B4D8               	btfsc	status,2,c
  5802  0012D0  EF6C  F009         	goto	u6131
  5803  0012D4  EF6E  F009         	goto	u6130
  5804  0012D8                     u6131:
  5805  0012D8  EF6F  F009         	goto	l5408
  5806  0012DC                     u6130:
  5807  0012DC  8C1A               	bsf	___fladd@signs^0,6,c
  5808  0012DE                     l5408:
  5809  0012DE  5015               	movf	(___fladd@a+3)^0,w,c
  5810  0012E0  2415               	addwf	(___fladd@a+3)^0,w,c
  5811  0012E2  6E1B               	movwf	___fladd@aexp^0,c
  5812  0012E4  AE14               	btfss	(___fladd@a+2)^0,7,c
  5813  0012E6  EF77  F009         	goto	u6141
  5814  0012EA  EF79  F009         	goto	u6140
  5815  0012EE                     u6141:
  5816  0012EE  EF7A  F009         	goto	l5414
  5817  0012F2                     u6140:
  5818  0012F2  801B               	bsf	___fladd@aexp^0,0,c
  5819  0012F4                     l5414:
  5820  0012F4  501B               	movf	___fladd@aexp^0,w,c
  5821  0012F6  B4D8               	btfsc	status,2,c
  5822  0012F8  EF80  F009         	goto	u6151
  5823  0012FC  EF82  F009         	goto	u6150
  5824  001300                     u6151:
  5825  001300  EF97  F009         	goto	l5424
  5826  001304                     u6150:
  5827  001304  281B               	incf	___fladd@aexp^0,w,c
  5828  001306  A4D8               	btfss	status,2,c
  5829  001308  EF88  F009         	goto	u6161
  5830  00130C  EF8A  F009         	goto	u6160
  5831  001310                     u6161:
  5832  001310  EF92  F009         	goto	l5420
  5833  001314                     u6160:
  5834  001314  0E00               	movlw	0
  5835  001316  6E12               	movwf	___fladd@a^0,c
  5836  001318  0E00               	movlw	0
  5837  00131A  6E13               	movwf	(___fladd@a+1)^0,c
  5838  00131C  0E00               	movlw	0
  5839  00131E  6E14               	movwf	(___fladd@a+2)^0,c
  5840  001320  0E00               	movlw	0
  5841  001322  6E15               	movwf	(___fladd@a+3)^0,c
  5842  001324                     l5420:
  5843  001324  8E14               	bsf	(___fladd@a+2)^0,7,c
  5844  001326  0E00               	movlw	0
  5845  001328  6E15               	movwf	(___fladd@a+3)^0,c
  5846  00132A  EF9F  F009         	goto	l5426
  5847  00132E                     l5424:
  5848  00132E  0E00               	movlw	0
  5849  001330  6E12               	movwf	___fladd@a^0,c
  5850  001332  0E00               	movlw	0
  5851  001334  6E13               	movwf	(___fladd@a+1)^0,c
  5852  001336  0E00               	movlw	0
  5853  001338  6E14               	movwf	(___fladd@a+2)^0,c
  5854  00133A  0E00               	movlw	0
  5855  00133C  6E15               	movwf	(___fladd@a+3)^0,c
  5856  00133E                     l5426:
  5857  00133E  501C               	movf	___fladd@bexp^0,w,c
  5858  001340  5C1B               	subwf	___fladd@aexp^0,w,c
  5859  001342  B0D8               	btfsc	status,0,c
  5860  001344  EFA6  F009         	goto	u6171
  5861  001348  EFA8  F009         	goto	u6170
  5862  00134C                     u6171:
  5863  00134C  EFCF  F009         	goto	l5462
  5864  001350                     u6170:
  5865  001350  AC1A               	btfss	___fladd@signs^0,6,c
  5866  001352  EFAD  F009         	goto	u6181
  5867  001356  EFAF  F009         	goto	u6180
  5868  00135A                     u6181:
  5869  00135A  EFB1  F009         	goto	l5432
  5870  00135E                     u6180:
  5871  00135E  0E80               	movlw	128
  5872  001360  1A1A               	xorwf	___fladd@signs^0,f,c
  5873  001362                     l5432:
  5874  001362  C01C  F01D         	movff	___fladd@bexp,___fladd@grs
  5875  001366  C01B  F01C         	movff	___fladd@aexp,___fladd@bexp
  5876  00136A  C01D  F01B         	movff	___fladd@grs,___fladd@aexp
  5877  00136E  C00E  F01D         	movff	___fladd@b,___fladd@grs
  5878  001372  C012  F00E         	movff	___fladd@a,___fladd@b
  5879  001376  C01D  F012         	movff	___fladd@grs,___fladd@a
  5880  00137A  C00F  F01D         	movff	___fladd@b+1,___fladd@grs
  5881  00137E  C013  F00F         	movff	___fladd@a+1,___fladd@b+1
  5882  001382  C01D  F013         	movff	___fladd@grs,___fladd@a+1
  5883  001386  C010  F01D         	movff	___fladd@b+2,___fladd@grs
  5884  00138A  C014  F010         	movff	___fladd@a+2,___fladd@b+2
  5885  00138E  C01D  F014         	movff	___fladd@grs,___fladd@a+2
  5886  001392  C011  F01D         	movff	___fladd@b+3,___fladd@grs
  5887  001396  C015  F011         	movff	___fladd@a+3,___fladd@b+3
  5888  00139A  C01D  F015         	movff	___fladd@grs,___fladd@a+3
  5889  00139E                     l5462:
  5890  00139E  0E00               	movlw	0
  5891  0013A0  6E1D               	movwf	___fladd@grs^0,c
  5892  0013A2  501C               	movf	___fladd@bexp^0,w,c
  5893  0013A4  C01B  F016         	movff	___fladd@aexp,??___fladd
  5894  0013A8  6A17               	clrf	(??___fladd+1)^0,c
  5895  0013AA  5E16               	subwf	??___fladd^0,f,c
  5896  0013AC  0E00               	movlw	0
  5897  0013AE  5A17               	subwfb	(??___fladd+1)^0,f,c
  5898  0013B0  BE17               	btfsc	(??___fladd+1)^0,7,c
  5899  0013B2  EFE4  F009         	goto	u6191
  5900  0013B6  5017               	movf	(??___fladd+1)^0,w,c
  5901  0013B8  E109               	bnz	u6190
  5902  0013BA  0E1A               	movlw	26
  5903  0013BC  5C16               	subwf	??___fladd^0,w,c
  5904  0013BE  A0D8               	btfss	status,0,c
  5905  0013C0  EFE4  F009         	goto	u6191
  5906  0013C4  EFE6  F009         	goto	u6190
  5907  0013C8                     u6191:
  5908  0013C8  EF1D  F00A         	goto	l1207
  5909  0013CC                     u6190:
  5910  0013CC  500E               	movf	___fladd@b^0,w,c
  5911  0013CE  100F               	iorwf	(___fladd@b+1)^0,w,c
  5912  0013D0  1010               	iorwf	(___fladd@b+2)^0,w,c
  5913  0013D2  1011               	iorwf	(___fladd@b+3)^0,w,c
  5914  0013D4  A4D8               	btfss	status,2,c
  5915  0013D6  EFEF  F009         	goto	u6201
  5916  0013DA  EFF2  F009         	goto	u6200
  5917  0013DE                     u6201:
  5918  0013DE  0E01               	movlw	1
  5919  0013E0  EFF3  F009         	goto	u6210
  5920  0013E4                     u6200:
  5921  0013E4  0E00               	movlw	0
  5922  0013E6                     u6210:
  5923  0013E6  6E1D               	movwf	___fladd@grs^0,c
  5924  0013E8  0E00               	movlw	0
  5925  0013EA  6E0E               	movwf	___fladd@b^0,c
  5926  0013EC  0E00               	movlw	0
  5927  0013EE  6E0F               	movwf	(___fladd@b+1)^0,c
  5928  0013F0  0E00               	movlw	0
  5929  0013F2  6E10               	movwf	(___fladd@b+2)^0,c
  5930  0013F4  0E00               	movlw	0
  5931  0013F6  6E11               	movwf	(___fladd@b+3)^0,c
  5932  0013F8  C01B  F01C         	movff	___fladd@aexp,___fladd@bexp
  5933  0013FC  EF26  F00A         	goto	l1206
  5934  001400                     l1208:
  5935  001400  A01D               	btfss	___fladd@grs^0,0,c
  5936  001402  EF05  F00A         	goto	u6221
  5937  001406  EF07  F00A         	goto	u6220
  5938  00140A                     u6221:
  5939  00140A  EF0D  F00A         	goto	l5474
  5940  00140E                     u6220:
  5941  00140E  90D8               	bcf	status,0,c
  5942  001410  301D               	rrcf	___fladd@grs^0,w,c
  5943  001412  0901               	iorlw	1
  5944  001414  6E1D               	movwf	___fladd@grs^0,c
  5945  001416  EF0F  F00A         	goto	l5476
  5946  00141A                     l5474:
  5947  00141A  90D8               	bcf	status,0,c
  5948  00141C  321D               	rrcf	___fladd@grs^0,f,c
  5949  00141E                     l5476:
  5950  00141E  A00E               	btfss	___fladd@b^0,0,c
  5951  001420  EF14  F00A         	goto	u6231
  5952  001424  EF16  F00A         	goto	u6230
  5953  001428                     u6231:
  5954  001428  EF17  F00A         	goto	l5480
  5955  00142C                     u6230:
  5956  00142C  8E1D               	bsf	___fladd@grs^0,7,c
  5957  00142E                     l5480:
  5958  00142E  3411               	rlcf	(___fladd@b+3)^0,w,c
  5959  001430  3211               	rrcf	(___fladd@b+3)^0,f,c
  5960  001432  3210               	rrcf	(___fladd@b+2)^0,f,c
  5961  001434  320F               	rrcf	(___fladd@b+1)^0,f,c
  5962  001436  320E               	rrcf	___fladd@b^0,f,c
  5963  001438  2A1C               	incf	___fladd@bexp^0,f,c
  5964  00143A                     l1207:
  5965  00143A  501B               	movf	___fladd@aexp^0,w,c
  5966  00143C  5C1C               	subwf	___fladd@bexp^0,w,c
  5967  00143E  A0D8               	btfss	status,0,c
  5968  001440  EF24  F00A         	goto	u6241
  5969  001444  EF26  F00A         	goto	u6240
  5970  001448                     u6241:
  5971  001448  EF00  F00A         	goto	l1208
  5972  00144C                     u6240:
  5973  00144C                     l1206:
  5974  00144C  BC1A               	btfsc	___fladd@signs^0,6,c
  5975  00144E  EF2B  F00A         	goto	u6251
  5976  001452  EF2D  F00A         	goto	u6250
  5977  001456                     u6251:
  5978  001456  EF6D  F00A         	goto	l5508
  5979  00145A                     u6250:
  5980  00145A  501C               	movf	___fladd@bexp^0,w,c
  5981  00145C  A4D8               	btfss	status,2,c
  5982  00145E  EF33  F00A         	goto	u6261
  5983  001462  EF35  F00A         	goto	u6260
  5984  001466                     u6261:
  5985  001466  EF3F  F00A         	goto	l5490
  5986  00146A                     u6260:
  5987  00146A  0E00               	movlw	0
  5988  00146C  6E0E               	movwf	?___fladd^0,c
  5989  00146E  0E00               	movlw	0
  5990  001470  6E0F               	movwf	(?___fladd+1)^0,c
  5991  001472  0E00               	movlw	0
  5992  001474  6E10               	movwf	(?___fladd+2)^0,c
  5993  001476  0E00               	movlw	0
  5994  001478  6E11               	movwf	(?___fladd+3)^0,c
  5995  00147A  EF8E  F00B         	goto	l1215
  5996  00147E                     l5490:
  5997  00147E  5012               	movf	___fladd@a^0,w,c
  5998  001480  260E               	addwf	___fladd@b^0,f,c
  5999  001482  5013               	movf	(___fladd@a+1)^0,w,c
  6000  001484  220F               	addwfc	(___fladd@b+1)^0,f,c
  6001  001486  5014               	movf	(___fladd@a+2)^0,w,c
  6002  001488  2210               	addwfc	(___fladd@b+2)^0,f,c
  6003  00148A  5015               	movf	(___fladd@a+3)^0,w,c
  6004  00148C  2211               	addwfc	(___fladd@b+3)^0,f,c
  6005  00148E  A011               	btfss	(___fladd@b+3)^0,0,c
  6006  001490  EF4C  F00A         	goto	u6271
  6007  001494  EF4E  F00A         	goto	u6270
  6008  001498                     u6271:
  6009  001498  EFFA  F00A         	goto	l5544
  6010  00149C                     u6270:
  6011  00149C  A01D               	btfss	___fladd@grs^0,0,c
  6012  00149E  EF53  F00A         	goto	u6281
  6013  0014A2  EF55  F00A         	goto	u6280
  6014  0014A6                     u6281:
  6015  0014A6  EF5B  F00A         	goto	l5498
  6016  0014AA                     u6280:
  6017  0014AA  90D8               	bcf	status,0,c
  6018  0014AC  301D               	rrcf	___fladd@grs^0,w,c
  6019  0014AE  0901               	iorlw	1
  6020  0014B0  6E1D               	movwf	___fladd@grs^0,c
  6021  0014B2  EF5D  F00A         	goto	l5500
  6022  0014B6                     l5498:
  6023  0014B6  90D8               	bcf	status,0,c
  6024  0014B8  321D               	rrcf	___fladd@grs^0,f,c
  6025  0014BA                     l5500:
  6026  0014BA  A00E               	btfss	___fladd@b^0,0,c
  6027  0014BC  EF62  F00A         	goto	u6291
  6028  0014C0  EF64  F00A         	goto	u6290
  6029  0014C4                     u6291:
  6030  0014C4  EF65  F00A         	goto	l5504
  6031  0014C8                     u6290:
  6032  0014C8  8E1D               	bsf	___fladd@grs^0,7,c
  6033  0014CA                     l5504:
  6034  0014CA  3411               	rlcf	(___fladd@b+3)^0,w,c
  6035  0014CC  3211               	rrcf	(___fladd@b+3)^0,f,c
  6036  0014CE  3210               	rrcf	(___fladd@b+2)^0,f,c
  6037  0014D0  320F               	rrcf	(___fladd@b+1)^0,f,c
  6038  0014D2  320E               	rrcf	___fladd@b^0,f,c
  6039  0014D4  2A1C               	incf	___fladd@bexp^0,f,c
  6040  0014D6  EFFA  F00A         	goto	l5544
  6041  0014DA                     l5508:
  6042  0014DA  5012               	movf	___fladd@a^0,w,c
  6043  0014DC  5C0E               	subwf	___fladd@b^0,w,c
  6044  0014DE  5013               	movf	(___fladd@a+1)^0,w,c
  6045  0014E0  580F               	subwfb	(___fladd@b+1)^0,w,c
  6046  0014E2  5014               	movf	(___fladd@a+2)^0,w,c
  6047  0014E4  5810               	subwfb	(___fladd@b+2)^0,w,c
  6048  0014E6  5011               	movf	(___fladd@b+3)^0,w,c
  6049  0014E8  0A80               	xorlw	128
  6050  0014EA  6E16               	movwf	??___fladd^0,c
  6051  0014EC  5015               	movf	(___fladd@a+3)^0,w,c
  6052  0014EE  0A80               	xorlw	128
  6053  0014F0  5816               	subwfb	??___fladd^0,w,c
  6054  0014F2  B0D8               	btfsc	status,0,c
  6055  0014F4  EF7E  F00A         	goto	u6301
  6056  0014F8  EF80  F00A         	goto	u6300
  6057  0014FC                     u6301:
  6058  0014FC  EFAB  F00A         	goto	l5518
  6059  001500                     u6300:
  6060  001500  500E               	movf	___fladd@b^0,w,c
  6061  001502  5C12               	subwf	___fladd@a^0,w,c
  6062  001504  6E16               	movwf	??___fladd^0,c
  6063  001506  500F               	movf	(___fladd@b+1)^0,w,c
  6064  001508  5813               	subwfb	(___fladd@a+1)^0,w,c
  6065  00150A  6E17               	movwf	(??___fladd+1)^0,c
  6066  00150C  5010               	movf	(___fladd@b+2)^0,w,c
  6067  00150E  5814               	subwfb	(___fladd@a+2)^0,w,c
  6068  001510  6E18               	movwf	(??___fladd+2)^0,c
  6069  001512  5011               	movf	(___fladd@b+3)^0,w,c
  6070  001514  5815               	subwfb	(___fladd@a+3)^0,w,c
  6071  001516  6E19               	movwf	(??___fladd+3)^0,c
  6072  001518  0EFF               	movlw	255
  6073  00151A  2416               	addwf	??___fladd^0,w,c
  6074  00151C  6E0E               	movwf	___fladd@b^0,c
  6075  00151E  0EFF               	movlw	255
  6076  001520  2017               	addwfc	(??___fladd+1)^0,w,c
  6077  001522  6E0F               	movwf	(___fladd@b+1)^0,c
  6078  001524  0EFF               	movlw	255
  6079  001526  2018               	addwfc	(??___fladd+2)^0,w,c
  6080  001528  6E10               	movwf	(___fladd@b+2)^0,c
  6081  00152A  0EFF               	movlw	255
  6082  00152C  2019               	addwfc	(??___fladd+3)^0,w,c
  6083  00152E  6E11               	movwf	(___fladd@b+3)^0,c
  6084  001530  0E80               	movlw	128
  6085  001532  1A1A               	xorwf	___fladd@signs^0,f,c
  6086  001534  6C1D               	negf	___fladd@grs^0,c
  6087  001536  501D               	movf	___fladd@grs^0,w,c
  6088  001538  A4D8               	btfss	status,2,c
  6089  00153A  EFA1  F00A         	goto	u6311
  6090  00153E  EFA3  F00A         	goto	u6310
  6091  001542                     u6311:
  6092  001542  EFB3  F00A         	goto	l1223
  6093  001546                     u6310:
  6094  001546  0E01               	movlw	1
  6095  001548  260E               	addwf	___fladd@b^0,f,c
  6096  00154A  0E00               	movlw	0
  6097  00154C  220F               	addwfc	(___fladd@b+1)^0,f,c
  6098  00154E  2210               	addwfc	(___fladd@b+2)^0,f,c
  6099  001550  2211               	addwfc	(___fladd@b+3)^0,f,c
  6100  001552  EFB3  F00A         	goto	l1223
  6101  001556                     l5518:
  6102  001556  5012               	movf	___fladd@a^0,w,c
  6103  001558  5E0E               	subwf	___fladd@b^0,f,c
  6104  00155A  5013               	movf	(___fladd@a+1)^0,w,c
  6105  00155C  5A0F               	subwfb	(___fladd@b+1)^0,f,c
  6106  00155E  5014               	movf	(___fladd@a+2)^0,w,c
  6107  001560  5A10               	subwfb	(___fladd@b+2)^0,f,c
  6108  001562  5015               	movf	(___fladd@a+3)^0,w,c
  6109  001564  5A11               	subwfb	(___fladd@b+3)^0,f,c
  6110  001566                     l1223:
  6111  001566  500E               	movf	___fladd@b^0,w,c
  6112  001568  100F               	iorwf	(___fladd@b+1)^0,w,c
  6113  00156A  1010               	iorwf	(___fladd@b+2)^0,w,c
  6114  00156C  1011               	iorwf	(___fladd@b+3)^0,w,c
  6115  00156E  A4D8               	btfss	status,2,c
  6116  001570  EFBC  F00A         	goto	u6321
  6117  001574  EFBE  F00A         	goto	u6320
  6118  001578                     u6321:
  6119  001578  EFF3  F00A         	goto	l5542
  6120  00157C                     u6320:
  6121  00157C  501D               	movf	___fladd@grs^0,w,c
  6122  00157E  A4D8               	btfss	status,2,c
  6123  001580  EFC4  F00A         	goto	u6331
  6124  001584  EFC6  F00A         	goto	u6330
  6125  001588                     u6331:
  6126  001588  EFF3  F00A         	goto	l5542
  6127  00158C                     u6330:
  6128  00158C  0E00               	movlw	0
  6129  00158E  6E0E               	movwf	?___fladd^0,c
  6130  001590  0E00               	movlw	0
  6131  001592  6E0F               	movwf	(?___fladd+1)^0,c
  6132  001594  0E00               	movlw	0
  6133  001596  6E10               	movwf	(?___fladd+2)^0,c
  6134  001598  0E00               	movlw	0
  6135  00159A  6E11               	movwf	(?___fladd+3)^0,c
  6136  00159C  EF8E  F00B         	goto	l1215
  6137  0015A0                     l5526:
  6138  0015A0  90D8               	bcf	status,0,c
  6139  0015A2  360E               	rlcf	___fladd@b^0,f,c
  6140  0015A4  360F               	rlcf	(___fladd@b+1)^0,f,c
  6141  0015A6  3610               	rlcf	(___fladd@b+2)^0,f,c
  6142  0015A8  3611               	rlcf	(___fladd@b+3)^0,f,c
  6143  0015AA  AE1D               	btfss	___fladd@grs^0,7,c
  6144  0015AC  EFDA  F00A         	goto	u6341
  6145  0015B0  EFDC  F00A         	goto	u6340
  6146  0015B4                     u6341:
  6147  0015B4  EFDD  F00A         	goto	l5532
  6148  0015B8                     u6340:
  6149  0015B8  800E               	bsf	___fladd@b^0,0,c
  6150  0015BA                     l5532:
  6151  0015BA  A01D               	btfss	___fladd@grs^0,0,c
  6152  0015BC  EFE2  F00A         	goto	u6351
  6153  0015C0  EFE4  F00A         	goto	u6350
  6154  0015C4                     u6351:
  6155  0015C4  EFE8  F00A         	goto	l5536
  6156  0015C8                     u6350:
  6157  0015C8  80D8               	bsf	status,0,c
  6158  0015CA  361D               	rlcf	___fladd@grs^0,f,c
  6159  0015CC  EFEA  F00A         	goto	l5538
  6160  0015D0                     l5536:
  6161  0015D0  90D8               	bcf	status,0,c
  6162  0015D2  361D               	rlcf	___fladd@grs^0,f,c
  6163  0015D4                     l5538:
  6164  0015D4  501C               	movf	___fladd@bexp^0,w,c
  6165  0015D6  B4D8               	btfsc	status,2,c
  6166  0015D8  EFF0  F00A         	goto	u6361
  6167  0015DC  EFF2  F00A         	goto	u6360
  6168  0015E0                     u6361:
  6169  0015E0  EFF3  F00A         	goto	l5542
  6170  0015E4                     u6360:
  6171  0015E4  061C               	decf	___fladd@bexp^0,f,c
  6172  0015E6                     l5542:
  6173  0015E6  AE10               	btfss	(___fladd@b+2)^0,7,c
  6174  0015E8  EFF8  F00A         	goto	u6371
  6175  0015EC  EFFA  F00A         	goto	u6370
  6176  0015F0                     u6371:
  6177  0015F0  EFD0  F00A         	goto	l5526
  6178  0015F4                     u6370:
  6179  0015F4                     l5544:
  6180  0015F4  0E00               	movlw	0
  6181  0015F6  6E1B               	movwf	___fladd@aexp^0,c
  6182  0015F8  AE1D               	btfss	___fladd@grs^0,7,c
  6183  0015FA  EF01  F00B         	goto	u6381
  6184  0015FE  EF03  F00B         	goto	u6380
  6185  001602                     u6381:
  6186  001602  EF1B  F00B         	goto	l1232
  6187  001606                     u6380:
  6188  001606  C01D  F016         	movff	___fladd@grs,??___fladd
  6189  00160A  0E7F               	movlw	127
  6190  00160C  1616               	andwf	??___fladd^0,f,c
  6191  00160E  B4D8               	btfsc	status,2,c
  6192  001610  EF0C  F00B         	goto	u6391
  6193  001614  EF0E  F00B         	goto	u6390
  6194  001618                     u6391:
  6195  001618  EF12  F00B         	goto	l1233
  6196  00161C                     u6390:
  6197  00161C                     l5550:
  6198  00161C  0E01               	movlw	1
  6199  00161E  6E1B               	movwf	___fladd@aexp^0,c
  6200  001620  EF1B  F00B         	goto	l1232
  6201  001624                     l1233:
  6202  001624  A00E               	btfss	___fladd@b^0,0,c
  6203  001626  EF17  F00B         	goto	u6401
  6204  00162A  EF19  F00B         	goto	u6400
  6205  00162E                     u6401:
  6206  00162E  EF1B  F00B         	goto	l1232
  6207  001632                     u6400:
  6208  001632  EF0E  F00B         	goto	l5550
  6209  001636                     l1232:
  6210  001636  501B               	movf	___fladd@aexp^0,w,c
  6211  001638  B4D8               	btfsc	status,2,c
  6212  00163A  EF21  F00B         	goto	u6411
  6213  00163E  EF23  F00B         	goto	u6410
  6214  001642                     u6411:
  6215  001642  EF4E  F00B         	goto	l5562
  6216  001646                     u6410:
  6217  001646  0E01               	movlw	1
  6218  001648  260E               	addwf	___fladd@b^0,f,c
  6219  00164A  0E00               	movlw	0
  6220  00164C  220F               	addwfc	(___fladd@b+1)^0,f,c
  6221  00164E  2210               	addwfc	(___fladd@b+2)^0,f,c
  6222  001650  2211               	addwfc	(___fladd@b+3)^0,f,c
  6223  001652  A011               	btfss	(___fladd@b+3)^0,0,c
  6224  001654  EF2E  F00B         	goto	u6421
  6225  001658  EF30  F00B         	goto	u6420
  6226  00165C                     u6421:
  6227  00165C  EF4E  F00B         	goto	l5562
  6228  001660                     u6420:
  6229  001660  C00E  F016         	movff	___fladd@b,??___fladd
  6230  001664  C00F  F017         	movff	___fladd@b+1,??___fladd+1
  6231  001668  C010  F018         	movff	___fladd@b+2,??___fladd+2
  6232  00166C  C011  F019         	movff	___fladd@b+3,??___fladd+3
  6233  001670  3419               	rlcf	(??___fladd+3)^0,w,c
  6234  001672  3219               	rrcf	(??___fladd+3)^0,f,c
  6235  001674  3218               	rrcf	(??___fladd+2)^0,f,c
  6236  001676  3217               	rrcf	(??___fladd+1)^0,f,c
  6237  001678  3216               	rrcf	??___fladd^0,f,c
  6238  00167A  C016  F00E         	movff	??___fladd,___fladd@b
  6239  00167E  C017  F00F         	movff	??___fladd+1,___fladd@b+1
  6240  001682  C018  F010         	movff	??___fladd+2,___fladd@b+2
  6241  001686  C019  F011         	movff	??___fladd+3,___fladd@b+3
  6242  00168A  281C               	incf	___fladd@bexp^0,w,c
  6243  00168C  B4D8               	btfsc	status,2,c
  6244  00168E  EF4B  F00B         	goto	u6431
  6245  001692  EF4D  F00B         	goto	u6430
  6246  001696                     u6431:
  6247  001696  EF4E  F00B         	goto	l5562
  6248  00169A                     u6430:
  6249  00169A  2A1C               	incf	___fladd@bexp^0,f,c
  6250  00169C                     l5562:
  6251  00169C  281C               	incf	___fladd@bexp^0,w,c
  6252  00169E  B4D8               	btfsc	status,2,c
  6253  0016A0  EF54  F00B         	goto	u6441
  6254  0016A4  EF56  F00B         	goto	u6440
  6255  0016A8                     u6441:
  6256  0016A8  EF5E  F00B         	goto	l5566
  6257  0016AC                     u6440:
  6258  0016AC  501C               	movf	___fladd@bexp^0,w,c
  6259  0016AE  A4D8               	btfss	status,2,c
  6260  0016B0  EF5C  F00B         	goto	u6451
  6261  0016B4  EF5E  F00B         	goto	u6450
  6262  0016B8                     u6451:
  6263  0016B8  EF70  F00B         	goto	l5570
  6264  0016BC                     u6450:
  6265  0016BC                     l5566:
  6266  0016BC  0E00               	movlw	0
  6267  0016BE  6E0E               	movwf	___fladd@b^0,c
  6268  0016C0  0E00               	movlw	0
  6269  0016C2  6E0F               	movwf	(___fladd@b+1)^0,c
  6270  0016C4  0E00               	movlw	0
  6271  0016C6  6E10               	movwf	(___fladd@b+2)^0,c
  6272  0016C8  0E00               	movlw	0
  6273  0016CA  6E11               	movwf	(___fladd@b+3)^0,c
  6274  0016CC  501C               	movf	___fladd@bexp^0,w,c
  6275  0016CE  A4D8               	btfss	status,2,c
  6276  0016D0  EF6C  F00B         	goto	u6461
  6277  0016D4  EF6E  F00B         	goto	u6460
  6278  0016D8                     u6461:
  6279  0016D8  EF70  F00B         	goto	l5570
  6280  0016DC                     u6460:
  6281  0016DC  0E00               	movlw	0
  6282  0016DE  6E1A               	movwf	___fladd@signs^0,c
  6283  0016E0                     l5570:
  6284  0016E0  A01C               	btfss	___fladd@bexp^0,0,c
  6285  0016E2  EF75  F00B         	goto	u6471
  6286  0016E6  EF77  F00B         	goto	u6470
  6287  0016EA                     u6471:
  6288  0016EA  EF7A  F00B         	goto	l5574
  6289  0016EE                     u6470:
  6290  0016EE  8E10               	bsf	(___fladd@b+2)^0,7,c
  6291  0016F0  EF7B  F00B         	goto	l5576
  6292  0016F4                     l5574:
  6293  0016F4  9E10               	bcf	(___fladd@b+2)^0,7,c
  6294  0016F6                     l5576:
  6295  0016F6  90D8               	bcf	status,0,c
  6296  0016F8  301C               	rrcf	___fladd@bexp^0,w,c
  6297  0016FA  6E11               	movwf	(___fladd@b+3)^0,c
  6298  0016FC  AE1A               	btfss	___fladd@signs^0,7,c
  6299  0016FE  EF83  F00B         	goto	u6481
  6300  001702  EF85  F00B         	goto	u6480
  6301  001706                     u6481:
  6302  001706  EF86  F00B         	goto	l5582
  6303  00170A                     u6480:
  6304  00170A  8E11               	bsf	(___fladd@b+3)^0,7,c
  6305  00170C                     l5582:
  6306  00170C  C00E  F00E         	movff	___fladd@b,?___fladd
  6307  001710  C00F  F00F         	movff	___fladd@b+1,?___fladd+1
  6308  001714  C010  F010         	movff	___fladd@b+2,?___fladd+2
  6309  001718  C011  F011         	movff	___fladd@b+3,?___fladd+3
  6310  00171C                     l1215:
  6311  00171C  0012               	return		;funcret
  6312  00171E                     __end_of___fladd:
  6313                           	opt callstack 0
  6314                           
  6315 ;; *************** function ___flneg *****************
  6316 ;; Defined at:
  6317 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
  6318 ;; Parameters:    Size  Location     Type
  6319 ;;  f1              4   13[COMRAM] unsigned char 
  6320 ;; Auto vars:     Size  Location     Type
  6321 ;;		None
  6322 ;; Return value:  Size  Location     Type
  6323 ;;                  4   13[COMRAM] unsigned char 
  6324 ;; Registers used:
  6325 ;;		wreg, status,2, status,0
  6326 ;; Tracked objects:
  6327 ;;		On entry : 0/0
  6328 ;;		On exit  : 0/0
  6329 ;;		Unchanged: 0/0
  6330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6331 ;;      Params:         4       0       0       0       0       0       0
  6332 ;;      Locals:         0       0       0       0       0       0       0
  6333 ;;      Temps:          0       0       0       0       0       0       0
  6334 ;;      Totals:         4       0       0       0       0       0       0
  6335 ;;Total ram usage:        4 bytes
  6336 ;; Hardware stack levels used:    1
  6337 ;; Hardware stack levels required when called:    8
  6338 ;; This function calls:
  6339 ;;		Nothing
  6340 ;; This function is called by:
  6341 ;;		_efgtoa
  6342 ;; This function uses a non-reentrant model
  6343 ;;
  6344                           
  6345                           	psect	text19
  6346  003AFE                     __ptext19:
  6347                           	opt callstack 0
  6348  003AFE                     ___flneg:
  6349                           	opt callstack 18
  6350  003AFE  500E               	movf	___flneg@f1^0,w,c
  6351  003B00  100F               	iorwf	(___flneg@f1+1)^0,w,c
  6352  003B02  1010               	iorwf	(___flneg@f1+2)^0,w,c
  6353  003B04  1011               	iorwf	(___flneg@f1+3)^0,w,c
  6354  003B06  B4D8               	btfsc	status,2,c
  6355  003B08  EF88  F01D         	goto	u7391
  6356  003B0C  EF8A  F01D         	goto	u7390
  6357  003B10                     u7391:
  6358  003B10  EF92  F01D         	goto	l6078
  6359  003B14                     u7390:
  6360  003B14  0E00               	movlw	0
  6361  003B16  1A0E               	xorwf	___flneg@f1^0,f,c
  6362  003B18  0E00               	movlw	0
  6363  003B1A  1A0F               	xorwf	(___flneg@f1+1)^0,f,c
  6364  003B1C  0E00               	movlw	0
  6365  003B1E  1A10               	xorwf	(___flneg@f1+2)^0,f,c
  6366  003B20  0E80               	movlw	128
  6367  003B22  1A11               	xorwf	(___flneg@f1+3)^0,f,c
  6368  003B24                     l6078:
  6369  003B24  C00E  F00E         	movff	___flneg@f1,?___flneg
  6370  003B28  C00F  F00F         	movff	___flneg@f1+1,?___flneg+1
  6371  003B2C  C010  F010         	movff	___flneg@f1+2,?___flneg+2
  6372  003B30  C011  F011         	movff	___flneg@f1+3,?___flneg+3
  6373  003B34  0012               	return		;funcret
  6374  003B36                     __end_of___flneg:
  6375                           	opt callstack 0
  6376                           
  6377 ;; *************** function ___flmul *****************
  6378 ;; Defined at:
  6379 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
  6380 ;; Parameters:    Size  Location     Type
  6381 ;;  b               4   27[COMRAM] unsigned char 
  6382 ;;  a               4   31[COMRAM] unsigned char 
  6383 ;; Auto vars:     Size  Location     Type
  6384 ;;  prod            4   46[COMRAM] struct .
  6385 ;;  grs             4   41[COMRAM] unsigned long 
  6386 ;;  temp            2   50[COMRAM] struct .
  6387 ;;  bexp            1   45[COMRAM] unsigned char 
  6388 ;;  aexp            1   40[COMRAM] unsigned char 
  6389 ;;  sign            1   39[COMRAM] unsigned char 
  6390 ;; Return value:  Size  Location     Type
  6391 ;;                  4   27[COMRAM] unsigned char 
  6392 ;; Registers used:
  6393 ;;		wreg, status,2, status,0, prodl, prodh
  6394 ;; Tracked objects:
  6395 ;;		On entry : 0/0
  6396 ;;		On exit  : 0/0
  6397 ;;		Unchanged: 0/0
  6398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6399 ;;      Params:         8       0       0       0       0       0       0
  6400 ;;      Locals:        13       0       0       0       0       0       0
  6401 ;;      Temps:          4       0       0       0       0       0       0
  6402 ;;      Totals:        25       0       0       0       0       0       0
  6403 ;;Total ram usage:       25 bytes
  6404 ;; Hardware stack levels used:    1
  6405 ;; Hardware stack levels required when called:    8
  6406 ;; This function calls:
  6407 ;;		Nothing
  6408 ;; This function is called by:
  6409 ;;		_main
  6410 ;;		_efgtoa
  6411 ;; This function uses a non-reentrant model
  6412 ;;
  6413                           
  6414                           	psect	text20
  6415  001B8A                     __ptext20:
  6416                           	opt callstack 0
  6417  001B8A                     ___flmul:
  6418                           	opt callstack 18
  6419  001B8A  501F               	movf	(___flmul@b+3)^0,w,c
  6420  001B8C  0B80               	andlw	128
  6421  001B8E  6E28               	movwf	___flmul@sign^0,c
  6422  001B90  501F               	movf	(___flmul@b+3)^0,w,c
  6423  001B92  241F               	addwf	(___flmul@b+3)^0,w,c
  6424  001B94  6E2E               	movwf	___flmul@bexp^0,c
  6425  001B96  AE1E               	btfss	(___flmul@b+2)^0,7,c
  6426  001B98  EFD0  F00D         	goto	u7001
  6427  001B9C  EFD2  F00D         	goto	u7000
  6428  001BA0                     u7001:
  6429  001BA0  EFD3  F00D         	goto	l5826
  6430  001BA4                     u7000:
  6431  001BA4  802E               	bsf	___flmul@bexp^0,0,c
  6432  001BA6                     l5826:
  6433  001BA6  502E               	movf	___flmul@bexp^0,w,c
  6434  001BA8  B4D8               	btfsc	status,2,c
  6435  001BAA  EFD9  F00D         	goto	u7011
  6436  001BAE  EFDB  F00D         	goto	u7010
  6437  001BB2                     u7011:
  6438  001BB2  EFEE  F00D         	goto	l5834
  6439  001BB6                     u7010:
  6440  001BB6  282E               	incf	___flmul@bexp^0,w,c
  6441  001BB8  A4D8               	btfss	status,2,c
  6442  001BBA  EFE1  F00D         	goto	u7021
  6443  001BBE  EFE3  F00D         	goto	u7020
  6444  001BC2                     u7021:
  6445  001BC2  EFEB  F00D         	goto	l5832
  6446  001BC6                     u7020:
  6447  001BC6  0E00               	movlw	0
  6448  001BC8  6E1C               	movwf	___flmul@b^0,c
  6449  001BCA  0E00               	movlw	0
  6450  001BCC  6E1D               	movwf	(___flmul@b+1)^0,c
  6451  001BCE  0E00               	movlw	0
  6452  001BD0  6E1E               	movwf	(___flmul@b+2)^0,c
  6453  001BD2  0E00               	movlw	0
  6454  001BD4  6E1F               	movwf	(___flmul@b+3)^0,c
  6455  001BD6                     l5832:
  6456  001BD6  8E1E               	bsf	(___flmul@b+2)^0,7,c
  6457  001BD8  EFF6  F00D         	goto	l5836
  6458  001BDC                     l5834:
  6459  001BDC  0E00               	movlw	0
  6460  001BDE  6E1C               	movwf	___flmul@b^0,c
  6461  001BE0  0E00               	movlw	0
  6462  001BE2  6E1D               	movwf	(___flmul@b+1)^0,c
  6463  001BE4  0E00               	movlw	0
  6464  001BE6  6E1E               	movwf	(___flmul@b+2)^0,c
  6465  001BE8  0E00               	movlw	0
  6466  001BEA  6E1F               	movwf	(___flmul@b+3)^0,c
  6467  001BEC                     l5836:
  6468  001BEC  5023               	movf	(___flmul@a+3)^0,w,c
  6469  001BEE  0B80               	andlw	128
  6470  001BF0  1A28               	xorwf	___flmul@sign^0,f,c
  6471  001BF2  5023               	movf	(___flmul@a+3)^0,w,c
  6472  001BF4  2423               	addwf	(___flmul@a+3)^0,w,c
  6473  001BF6  6E29               	movwf	___flmul@aexp^0,c
  6474  001BF8  AE22               	btfss	(___flmul@a+2)^0,7,c
  6475  001BFA  EF01  F00E         	goto	u7031
  6476  001BFE  EF03  F00E         	goto	u7030
  6477  001C02                     u7031:
  6478  001C02  EF04  F00E         	goto	l5844
  6479  001C06                     u7030:
  6480  001C06  8029               	bsf	___flmul@aexp^0,0,c
  6481  001C08                     l5844:
  6482  001C08  5029               	movf	___flmul@aexp^0,w,c
  6483  001C0A  B4D8               	btfsc	status,2,c
  6484  001C0C  EF0A  F00E         	goto	u7041
  6485  001C10  EF0C  F00E         	goto	u7040
  6486  001C14                     u7041:
  6487  001C14  EF1F  F00E         	goto	l5852
  6488  001C18                     u7040:
  6489  001C18  2829               	incf	___flmul@aexp^0,w,c
  6490  001C1A  A4D8               	btfss	status,2,c
  6491  001C1C  EF12  F00E         	goto	u7051
  6492  001C20  EF14  F00E         	goto	u7050
  6493  001C24                     u7051:
  6494  001C24  EF1C  F00E         	goto	l5850
  6495  001C28                     u7050:
  6496  001C28  0E00               	movlw	0
  6497  001C2A  6E20               	movwf	___flmul@a^0,c
  6498  001C2C  0E00               	movlw	0
  6499  001C2E  6E21               	movwf	(___flmul@a+1)^0,c
  6500  001C30  0E00               	movlw	0
  6501  001C32  6E22               	movwf	(___flmul@a+2)^0,c
  6502  001C34  0E00               	movlw	0
  6503  001C36  6E23               	movwf	(___flmul@a+3)^0,c
  6504  001C38                     l5850:
  6505  001C38  8E22               	bsf	(___flmul@a+2)^0,7,c
  6506  001C3A  EF27  F00E         	goto	l1292
  6507  001C3E                     l5852:
  6508  001C3E  0E00               	movlw	0
  6509  001C40  6E20               	movwf	___flmul@a^0,c
  6510  001C42  0E00               	movlw	0
  6511  001C44  6E21               	movwf	(___flmul@a+1)^0,c
  6512  001C46  0E00               	movlw	0
  6513  001C48  6E22               	movwf	(___flmul@a+2)^0,c
  6514  001C4A  0E00               	movlw	0
  6515  001C4C  6E23               	movwf	(___flmul@a+3)^0,c
  6516  001C4E                     l1292:
  6517  001C4E  5029               	movf	___flmul@aexp^0,w,c
  6518  001C50  B4D8               	btfsc	status,2,c
  6519  001C52  EF2D  F00E         	goto	u7061
  6520  001C56  EF2F  F00E         	goto	u7060
  6521  001C5A                     u7061:
  6522  001C5A  EF37  F00E         	goto	l5856
  6523  001C5E                     u7060:
  6524  001C5E  502E               	movf	___flmul@bexp^0,w,c
  6525  001C60  A4D8               	btfss	status,2,c
  6526  001C62  EF35  F00E         	goto	u7071
  6527  001C66  EF37  F00E         	goto	u7070
  6528  001C6A                     u7071:
  6529  001C6A  EF41  F00E         	goto	l5860
  6530  001C6E                     u7070:
  6531  001C6E                     l5856:
  6532  001C6E  0E00               	movlw	0
  6533  001C70  6E1C               	movwf	?___flmul^0,c
  6534  001C72  0E00               	movlw	0
  6535  001C74  6E1D               	movwf	(?___flmul+1)^0,c
  6536  001C76  0E00               	movlw	0
  6537  001C78  6E1E               	movwf	(?___flmul+2)^0,c
  6538  001C7A  0E00               	movlw	0
  6539  001C7C  6E1F               	movwf	(?___flmul+3)^0,c
  6540  001C7E  EFD9  F00F         	goto	l1296
  6541  001C82                     l5860:
  6542  001C82  5022               	movf	(___flmul@a+2)^0,w,c
  6543  001C84  021C               	mulwf	___flmul@b^0,c
  6544  001C86  CFF3 F033          	movff	prodl,___flmul@temp
  6545  001C8A  CFF4 F034          	movff	prodh,___flmul@temp+1
  6546  001C8E  5033               	movf	___flmul@temp^0,w,c
  6547  001C90  6E2A               	movwf	___flmul@grs^0,c
  6548  001C92  6A2B               	clrf	(___flmul@grs+1)^0,c
  6549  001C94  6A2C               	clrf	(___flmul@grs+2)^0,c
  6550  001C96  6A2D               	clrf	(___flmul@grs+3)^0,c
  6551  001C98  5034               	movf	(___flmul@temp+1)^0,w,c
  6552  001C9A  6E2F               	movwf	___flmul@prod^0,c
  6553  001C9C  6A30               	clrf	(___flmul@prod+1)^0,c
  6554  001C9E  6A31               	clrf	(___flmul@prod+2)^0,c
  6555  001CA0  6A32               	clrf	(___flmul@prod+3)^0,c
  6556  001CA2  5021               	movf	(___flmul@a+1)^0,w,c
  6557  001CA4  021D               	mulwf	(___flmul@b+1)^0,c
  6558  001CA6  CFF3 F033          	movff	prodl,___flmul@temp
  6559  001CAA  CFF4 F034          	movff	prodh,___flmul@temp+1
  6560  001CAE  5033               	movf	___flmul@temp^0,w,c
  6561  001CB0  262A               	addwf	___flmul@grs^0,f,c
  6562  001CB2  0E00               	movlw	0
  6563  001CB4  222B               	addwfc	(___flmul@grs+1)^0,f,c
  6564  001CB6  222C               	addwfc	(___flmul@grs+2)^0,f,c
  6565  001CB8  222D               	addwfc	(___flmul@grs+3)^0,f,c
  6566  001CBA  5034               	movf	(___flmul@temp+1)^0,w,c
  6567  001CBC  262F               	addwf	___flmul@prod^0,f,c
  6568  001CBE  0E00               	movlw	0
  6569  001CC0  2230               	addwfc	(___flmul@prod+1)^0,f,c
  6570  001CC2  2231               	addwfc	(___flmul@prod+2)^0,f,c
  6571  001CC4  2232               	addwfc	(___flmul@prod+3)^0,f,c
  6572  001CC6  5020               	movf	___flmul@a^0,w,c
  6573  001CC8  021E               	mulwf	(___flmul@b+2)^0,c
  6574  001CCA  CFF3 F033          	movff	prodl,___flmul@temp
  6575  001CCE  CFF4 F034          	movff	prodh,___flmul@temp+1
  6576  001CD2  5033               	movf	___flmul@temp^0,w,c
  6577  001CD4  262A               	addwf	___flmul@grs^0,f,c
  6578  001CD6  0E00               	movlw	0
  6579  001CD8  222B               	addwfc	(___flmul@grs+1)^0,f,c
  6580  001CDA  222C               	addwfc	(___flmul@grs+2)^0,f,c
  6581  001CDC  222D               	addwfc	(___flmul@grs+3)^0,f,c
  6582  001CDE  5034               	movf	(___flmul@temp+1)^0,w,c
  6583  001CE0  262F               	addwf	___flmul@prod^0,f,c
  6584  001CE2  0E00               	movlw	0
  6585  001CE4  2230               	addwfc	(___flmul@prod+1)^0,f,c
  6586  001CE6  2231               	addwfc	(___flmul@prod+2)^0,f,c
  6587  001CE8  2232               	addwfc	(___flmul@prod+3)^0,f,c
  6588  001CEA  C02C  F02D         	movff	___flmul@grs+2,___flmul@grs+3
  6589  001CEE  C02B  F02C         	movff	___flmul@grs+1,___flmul@grs+2
  6590  001CF2  C02A  F02B         	movff	___flmul@grs,___flmul@grs+1
  6591  001CF6  6A2A               	clrf	___flmul@grs^0,c
  6592  001CF8  5020               	movf	___flmul@a^0,w,c
  6593  001CFA  021D               	mulwf	(___flmul@b+1)^0,c
  6594  001CFC  CFF3 F033          	movff	prodl,___flmul@temp
  6595  001D00  CFF4 F034          	movff	prodh,___flmul@temp+1
  6596  001D04  5033               	movf	___flmul@temp^0,w,c
  6597  001D06  262A               	addwf	___flmul@grs^0,f,c
  6598  001D08  5034               	movf	(___flmul@temp+1)^0,w,c
  6599  001D0A  222B               	addwfc	(___flmul@grs+1)^0,f,c
  6600  001D0C  0E00               	movlw	0
  6601  001D0E  222C               	addwfc	(___flmul@grs+2)^0,f,c
  6602  001D10  0E00               	movlw	0
  6603  001D12  222D               	addwfc	(___flmul@grs+3)^0,f,c
  6604  001D14  5021               	movf	(___flmul@a+1)^0,w,c
  6605  001D16  021C               	mulwf	___flmul@b^0,c
  6606  001D18  CFF3 F033          	movff	prodl,___flmul@temp
  6607  001D1C  CFF4 F034          	movff	prodh,___flmul@temp+1
  6608  001D20  5033               	movf	___flmul@temp^0,w,c
  6609  001D22  262A               	addwf	___flmul@grs^0,f,c
  6610  001D24  5034               	movf	(___flmul@temp+1)^0,w,c
  6611  001D26  222B               	addwfc	(___flmul@grs+1)^0,f,c
  6612  001D28  0E00               	movlw	0
  6613  001D2A  222C               	addwfc	(___flmul@grs+2)^0,f,c
  6614  001D2C  0E00               	movlw	0
  6615  001D2E  222D               	addwfc	(___flmul@grs+3)^0,f,c
  6616  001D30  C02C  F02D         	movff	___flmul@grs+2,___flmul@grs+3
  6617  001D34  C02B  F02C         	movff	___flmul@grs+1,___flmul@grs+2
  6618  001D38  C02A  F02B         	movff	___flmul@grs,___flmul@grs+1
  6619  001D3C  6A2A               	clrf	___flmul@grs^0,c
  6620  001D3E  5020               	movf	___flmul@a^0,w,c
  6621  001D40  021C               	mulwf	___flmul@b^0,c
  6622  001D42  CFF3 F033          	movff	prodl,___flmul@temp
  6623  001D46  CFF4 F034          	movff	prodh,___flmul@temp+1
  6624  001D4A  5033               	movf	___flmul@temp^0,w,c
  6625  001D4C  262A               	addwf	___flmul@grs^0,f,c
  6626  001D4E  5034               	movf	(___flmul@temp+1)^0,w,c
  6627  001D50  222B               	addwfc	(___flmul@grs+1)^0,f,c
  6628  001D52  0E00               	movlw	0
  6629  001D54  222C               	addwfc	(___flmul@grs+2)^0,f,c
  6630  001D56  0E00               	movlw	0
  6631  001D58  222D               	addwfc	(___flmul@grs+3)^0,f,c
  6632  001D5A  5022               	movf	(___flmul@a+2)^0,w,c
  6633  001D5C  021D               	mulwf	(___flmul@b+1)^0,c
  6634  001D5E  CFF3 F033          	movff	prodl,___flmul@temp
  6635  001D62  CFF4 F034          	movff	prodh,___flmul@temp+1
  6636  001D66  5033               	movf	___flmul@temp^0,w,c
  6637  001D68  262F               	addwf	___flmul@prod^0,f,c
  6638  001D6A  5034               	movf	(___flmul@temp+1)^0,w,c
  6639  001D6C  2230               	addwfc	(___flmul@prod+1)^0,f,c
  6640  001D6E  0E00               	movlw	0
  6641  001D70  2231               	addwfc	(___flmul@prod+2)^0,f,c
  6642  001D72  0E00               	movlw	0
  6643  001D74  2232               	addwfc	(___flmul@prod+3)^0,f,c
  6644  001D76  5021               	movf	(___flmul@a+1)^0,w,c
  6645  001D78  021E               	mulwf	(___flmul@b+2)^0,c
  6646  001D7A  CFF3 F033          	movff	prodl,___flmul@temp
  6647  001D7E  CFF4 F034          	movff	prodh,___flmul@temp+1
  6648  001D82  5033               	movf	___flmul@temp^0,w,c
  6649  001D84  262F               	addwf	___flmul@prod^0,f,c
  6650  001D86  5034               	movf	(___flmul@temp+1)^0,w,c
  6651  001D88  2230               	addwfc	(___flmul@prod+1)^0,f,c
  6652  001D8A  0E00               	movlw	0
  6653  001D8C  2231               	addwfc	(___flmul@prod+2)^0,f,c
  6654  001D8E  0E00               	movlw	0
  6655  001D90  2232               	addwfc	(___flmul@prod+3)^0,f,c
  6656  001D92  5022               	movf	(___flmul@a+2)^0,w,c
  6657  001D94  021E               	mulwf	(___flmul@b+2)^0,c
  6658  001D96  CFF3 F033          	movff	prodl,___flmul@temp
  6659  001D9A  CFF4 F034          	movff	prodh,___flmul@temp+1
  6660  001D9E  5033               	movf	___flmul@temp^0,w,c
  6661  001DA0  6E24               	movwf	??___flmul^0,c
  6662  001DA2  5034               	movf	(___flmul@temp+1)^0,w,c
  6663  001DA4  6E25               	movwf	(??___flmul+1)^0,c
  6664  001DA6  6A26               	clrf	(??___flmul+2)^0,c
  6665  001DA8  6A27               	clrf	(??___flmul+3)^0,c
  6666  001DAA  C026  F027         	movff	??___flmul+2,??___flmul+3
  6667  001DAE  C025  F026         	movff	??___flmul+1,??___flmul+2
  6668  001DB2  C024  F025         	movff	??___flmul,??___flmul+1
  6669  001DB6  6A24               	clrf	??___flmul^0,c
  6670  001DB8  5024               	movf	??___flmul^0,w,c
  6671  001DBA  262F               	addwf	___flmul@prod^0,f,c
  6672  001DBC  5025               	movf	(??___flmul+1)^0,w,c
  6673  001DBE  2230               	addwfc	(___flmul@prod+1)^0,f,c
  6674  001DC0  5026               	movf	(??___flmul+2)^0,w,c
  6675  001DC2  2231               	addwfc	(___flmul@prod+2)^0,f,c
  6676  001DC4  5027               	movf	(??___flmul+3)^0,w,c
  6677  001DC6  2232               	addwfc	(___flmul@prod+3)^0,f,c
  6678  001DC8  C02A  F024         	movff	___flmul@grs,??___flmul
  6679  001DCC  C02B  F025         	movff	___flmul@grs+1,??___flmul+1
  6680  001DD0  C02C  F026         	movff	___flmul@grs+2,??___flmul+2
  6681  001DD4  C02D  F027         	movff	___flmul@grs+3,??___flmul+3
  6682  001DD8  0E19               	movlw	25
  6683  001DDA  EFF4  F00E         	goto	u7080
  6684  001DDE                     u7085:
  6685  001DDE  90D8               	bcf	status,0,c
  6686  001DE0  3227               	rrcf	(??___flmul+3)^0,f,c
  6687  001DE2  3226               	rrcf	(??___flmul+2)^0,f,c
  6688  001DE4  3225               	rrcf	(??___flmul+1)^0,f,c
  6689  001DE6  3224               	rrcf	??___flmul^0,f,c
  6690  001DE8                     u7080:
  6691  001DE8  2EE8               	decfsz	wreg,f,c
  6692  001DEA  EFEF  F00E         	goto	u7085
  6693  001DEE  5024               	movf	??___flmul^0,w,c
  6694  001DF0  262F               	addwf	___flmul@prod^0,f,c
  6695  001DF2  5025               	movf	(??___flmul+1)^0,w,c
  6696  001DF4  2230               	addwfc	(___flmul@prod+1)^0,f,c
  6697  001DF6  5026               	movf	(??___flmul+2)^0,w,c
  6698  001DF8  2231               	addwfc	(___flmul@prod+2)^0,f,c
  6699  001DFA  5027               	movf	(??___flmul+3)^0,w,c
  6700  001DFC  2232               	addwfc	(___flmul@prod+3)^0,f,c
  6701  001DFE  C02C  F02D         	movff	___flmul@grs+2,___flmul@grs+3
  6702  001E02  C02B  F02C         	movff	___flmul@grs+1,___flmul@grs+2
  6703  001E06  C02A  F02B         	movff	___flmul@grs,___flmul@grs+1
  6704  001E0A  6A2A               	clrf	___flmul@grs^0,c
  6705  001E0C  5029               	movf	___flmul@aexp^0,w,c
  6706  001E0E  C02E  F024         	movff	___flmul@bexp,??___flmul
  6707  001E12  6A25               	clrf	(??___flmul+1)^0,c
  6708  001E14  2624               	addwf	??___flmul^0,f,c
  6709  001E16  0E00               	movlw	0
  6710  001E18  2225               	addwfc	(??___flmul+1)^0,f,c
  6711  001E1A  0E82               	movlw	130
  6712  001E1C  2424               	addwf	??___flmul^0,w,c
  6713  001E1E  6E33               	movwf	___flmul@temp^0,c
  6714  001E20  0EFF               	movlw	255
  6715  001E22  2025               	addwfc	(??___flmul+1)^0,w,c
  6716  001E24  6E34               	movwf	(___flmul@temp+1)^0,c
  6717  001E26  EF2A  F00F         	goto	l5908
  6718  001E2A                     l5902:
  6719  001E2A  90D8               	bcf	status,0,c
  6720  001E2C  362F               	rlcf	___flmul@prod^0,f,c
  6721  001E2E  3630               	rlcf	(___flmul@prod+1)^0,f,c
  6722  001E30  3631               	rlcf	(___flmul@prod+2)^0,f,c
  6723  001E32  3632               	rlcf	(___flmul@prod+3)^0,f,c
  6724  001E34  AE2D               	btfss	(___flmul@grs+3)^0,7,c
  6725  001E36  EF1F  F00F         	goto	u7091
  6726  001E3A  EF21  F00F         	goto	u7090
  6727  001E3E                     u7091:
  6728  001E3E  EF22  F00F         	goto	l1299
  6729  001E42                     u7090:
  6730  001E42  802F               	bsf	___flmul@prod^0,0,c
  6731  001E44                     l1299:
  6732  001E44  90D8               	bcf	status,0,c
  6733  001E46  362A               	rlcf	___flmul@grs^0,f,c
  6734  001E48  362B               	rlcf	(___flmul@grs+1)^0,f,c
  6735  001E4A  362C               	rlcf	(___flmul@grs+2)^0,f,c
  6736  001E4C  362D               	rlcf	(___flmul@grs+3)^0,f,c
  6737  001E4E  0633               	decf	___flmul@temp^0,f,c
  6738  001E50  A0D8               	btfss	status,0,c
  6739  001E52  0634               	decf	(___flmul@temp+1)^0,f,c
  6740  001E54                     l5908:
  6741  001E54  AE31               	btfss	(___flmul@prod+2)^0,7,c
  6742  001E56  EF2F  F00F         	goto	u7101
  6743  001E5A  EF31  F00F         	goto	u7100
  6744  001E5E                     u7101:
  6745  001E5E  EF15  F00F         	goto	l5902
  6746  001E62                     u7100:
  6747  001E62  0E00               	movlw	0
  6748  001E64  6E29               	movwf	___flmul@aexp^0,c
  6749  001E66  AE2D               	btfss	(___flmul@grs+3)^0,7,c
  6750  001E68  EF38  F00F         	goto	u7111
  6751  001E6C  EF3A  F00F         	goto	u7110
  6752  001E70                     u7111:
  6753  001E70  EF5E  F00F         	goto	l1301
  6754  001E74                     u7110:
  6755  001E74  0EFF               	movlw	255
  6756  001E76  142A               	andwf	___flmul@grs^0,w,c
  6757  001E78  6E24               	movwf	??___flmul^0,c
  6758  001E7A  0EFF               	movlw	255
  6759  001E7C  142B               	andwf	(___flmul@grs+1)^0,w,c
  6760  001E7E  6E25               	movwf	(??___flmul+1)^0,c
  6761  001E80  0EFF               	movlw	255
  6762  001E82  142C               	andwf	(___flmul@grs+2)^0,w,c
  6763  001E84  6E26               	movwf	(??___flmul+2)^0,c
  6764  001E86  0E7F               	movlw	127
  6765  001E88  142D               	andwf	(___flmul@grs+3)^0,w,c
  6766  001E8A  6E27               	movwf	(??___flmul+3)^0,c
  6767  001E8C  5024               	movf	??___flmul^0,w,c
  6768  001E8E  1025               	iorwf	(??___flmul+1)^0,w,c
  6769  001E90  1026               	iorwf	(??___flmul+2)^0,w,c
  6770  001E92  1027               	iorwf	(??___flmul+3)^0,w,c
  6771  001E94  B4D8               	btfsc	status,2,c
  6772  001E96  EF4F  F00F         	goto	u7121
  6773  001E9A  EF51  F00F         	goto	u7120
  6774  001E9E                     u7121:
  6775  001E9E  EF55  F00F         	goto	l1302
  6776  001EA2                     u7120:
  6777  001EA2                     l5916:
  6778  001EA2  0E01               	movlw	1
  6779  001EA4  6E29               	movwf	___flmul@aexp^0,c
  6780  001EA6  EF5E  F00F         	goto	l1301
  6781  001EAA                     l1302:
  6782  001EAA  A02F               	btfss	___flmul@prod^0,0,c
  6783  001EAC  EF5A  F00F         	goto	u7131
  6784  001EB0  EF5C  F00F         	goto	u7130
  6785  001EB4                     u7131:
  6786  001EB4  EF5E  F00F         	goto	l1301
  6787  001EB8                     u7130:
  6788  001EB8  EF51  F00F         	goto	l5916
  6789  001EBC                     l1301:
  6790  001EBC  5029               	movf	___flmul@aexp^0,w,c
  6791  001EBE  B4D8               	btfsc	status,2,c
  6792  001EC0  EF64  F00F         	goto	u7141
  6793  001EC4  EF66  F00F         	goto	u7140
  6794  001EC8                     u7141:
  6795  001EC8  EF8A  F00F         	goto	l5928
  6796  001ECC                     u7140:
  6797  001ECC  0E01               	movlw	1
  6798  001ECE  262F               	addwf	___flmul@prod^0,f,c
  6799  001ED0  0E00               	movlw	0
  6800  001ED2  2230               	addwfc	(___flmul@prod+1)^0,f,c
  6801  001ED4  2231               	addwfc	(___flmul@prod+2)^0,f,c
  6802  001ED6  2232               	addwfc	(___flmul@prod+3)^0,f,c
  6803  001ED8  A032               	btfss	(___flmul@prod+3)^0,0,c
  6804  001EDA  EF71  F00F         	goto	u7151
  6805  001EDE  EF73  F00F         	goto	u7150
  6806  001EE2                     u7151:
  6807  001EE2  EF8A  F00F         	goto	l5928
  6808  001EE6                     u7150:
  6809  001EE6  C02F  F024         	movff	___flmul@prod,??___flmul
  6810  001EEA  C030  F025         	movff	___flmul@prod+1,??___flmul+1
  6811  001EEE  C031  F026         	movff	___flmul@prod+2,??___flmul+2
  6812  001EF2  C032  F027         	movff	___flmul@prod+3,??___flmul+3
  6813  001EF6  3427               	rlcf	(??___flmul+3)^0,w,c
  6814  001EF8  3227               	rrcf	(??___flmul+3)^0,f,c
  6815  001EFA  3226               	rrcf	(??___flmul+2)^0,f,c
  6816  001EFC  3225               	rrcf	(??___flmul+1)^0,f,c
  6817  001EFE  3224               	rrcf	??___flmul^0,f,c
  6818  001F00  C024  F02F         	movff	??___flmul,___flmul@prod
  6819  001F04  C025  F030         	movff	??___flmul+1,___flmul@prod+1
  6820  001F08  C026  F031         	movff	??___flmul+2,___flmul@prod+2
  6821  001F0C  C027  F032         	movff	??___flmul+3,___flmul@prod+3
  6822  001F10  4A33               	infsnz	___flmul@temp^0,f,c
  6823  001F12  2A34               	incf	(___flmul@temp+1)^0,f,c
  6824  001F14                     l5928:
  6825  001F14  BE34               	btfsc	(___flmul@temp+1)^0,7,c
  6826  001F16  EF95  F00F         	goto	u7161
  6827  001F1A  5034               	movf	(___flmul@temp+1)^0,w,c
  6828  001F1C  E108               	bnz	u7160
  6829  001F1E  2833               	incf	___flmul@temp^0,w,c
  6830  001F20  A0D8               	btfss	status,0,c
  6831  001F22  EF95  F00F         	goto	u7161
  6832  001F26  EF97  F00F         	goto	u7160
  6833  001F2A                     u7161:
  6834  001F2A  EFA1  F00F         	goto	l5932
  6835  001F2E                     u7160:
  6836  001F2E  0E00               	movlw	0
  6837  001F30  6E2F               	movwf	___flmul@prod^0,c
  6838  001F32  0E00               	movlw	0
  6839  001F34  6E30               	movwf	(___flmul@prod+1)^0,c
  6840  001F36  0E80               	movlw	128
  6841  001F38  6E31               	movwf	(___flmul@prod+2)^0,c
  6842  001F3A  0E7F               	movlw	127
  6843  001F3C  6E32               	movwf	(___flmul@prod+3)^0,c
  6844  001F3E  EFCF  F00F         	goto	l5944
  6845  001F42                     l5932:
  6846  001F42  BE34               	btfsc	(___flmul@temp+1)^0,7,c
  6847  001F44  EFAE  F00F         	goto	u7170
  6848  001F48  5034               	movf	(___flmul@temp+1)^0,w,c
  6849  001F4A  E106               	bnz	u7171
  6850  001F4C  0433               	decf	___flmul@temp^0,w,c
  6851  001F4E  B0D8               	btfsc	status,0,c
  6852  001F50  EFAC  F00F         	goto	u7171
  6853  001F54  EFAE  F00F         	goto	u7170
  6854  001F58                     u7171:
  6855  001F58  EFBA  F00F         	goto	l1309
  6856  001F5C                     u7170:
  6857  001F5C  0E00               	movlw	0
  6858  001F5E  6E2F               	movwf	___flmul@prod^0,c
  6859  001F60  0E00               	movlw	0
  6860  001F62  6E30               	movwf	(___flmul@prod+1)^0,c
  6861  001F64  0E00               	movlw	0
  6862  001F66  6E31               	movwf	(___flmul@prod+2)^0,c
  6863  001F68  0E00               	movlw	0
  6864  001F6A  6E32               	movwf	(___flmul@prod+3)^0,c
  6865  001F6C  0E00               	movlw	0
  6866  001F6E  6E28               	movwf	___flmul@sign^0,c
  6867  001F70  EFCF  F00F         	goto	l5944
  6868  001F74                     l1309:
  6869  001F74  C033  F02E         	movff	___flmul@temp,___flmul@bexp
  6870  001F78  0EFF               	movlw	255
  6871  001F7A  162F               	andwf	___flmul@prod^0,f,c
  6872  001F7C  0EFF               	movlw	255
  6873  001F7E  1630               	andwf	(___flmul@prod+1)^0,f,c
  6874  001F80  0E7F               	movlw	127
  6875  001F82  1631               	andwf	(___flmul@prod+2)^0,f,c
  6876  001F84  0E00               	movlw	0
  6877  001F86  1632               	andwf	(___flmul@prod+3)^0,f,c
  6878  001F88  A02E               	btfss	___flmul@bexp^0,0,c
  6879  001F8A  EFC9  F00F         	goto	u7181
  6880  001F8E  EFCB  F00F         	goto	u7180
  6881  001F92                     u7181:
  6882  001F92  EFCC  F00F         	goto	l5942
  6883  001F96                     u7180:
  6884  001F96  8E31               	bsf	(___flmul@prod+2)^0,7,c
  6885  001F98                     l5942:
  6886  001F98  90D8               	bcf	status,0,c
  6887  001F9A  302E               	rrcf	___flmul@bexp^0,w,c
  6888  001F9C  6E32               	movwf	(___flmul@prod+3)^0,c
  6889  001F9E                     l5944:
  6890  001F9E  5028               	movf	___flmul@sign^0,w,c
  6891  001FA0  1232               	iorwf	(___flmul@prod+3)^0,f,c
  6892  001FA2  C02F  F01C         	movff	___flmul@prod,?___flmul
  6893  001FA6  C030  F01D         	movff	___flmul@prod+1,?___flmul+1
  6894  001FAA  C031  F01E         	movff	___flmul@prod+2,?___flmul+2
  6895  001FAE  C032  F01F         	movff	___flmul@prod+3,?___flmul+3
  6896  001FB2                     l1296:
  6897  001FB2  0012               	return		;funcret
  6898  001FB4                     __end_of___flmul:
  6899                           	opt callstack 0
  6900                           
  6901 ;; *************** function ___flge *****************
  6902 ;; Defined at:
  6903 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
  6904 ;; Parameters:    Size  Location     Type
  6905 ;;  ff1             4   52[COMRAM] unsigned char 
  6906 ;;  ff2             4   56[COMRAM] unsigned char 
  6907 ;; Auto vars:     Size  Location     Type
  6908 ;;		None
  6909 ;; Return value:  Size  Location     Type
  6910 ;;		None               void
  6911 ;; Registers used:
  6912 ;;		wreg, status,2, status,0
  6913 ;; Tracked objects:
  6914 ;;		On entry : 0/0
  6915 ;;		On exit  : 0/0
  6916 ;;		Unchanged: 0/0
  6917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6918 ;;      Params:         8       0       0       0       0       0       0
  6919 ;;      Locals:         0       0       0       0       0       0       0
  6920 ;;      Temps:          4       0       0       0       0       0       0
  6921 ;;      Totals:        12       0       0       0       0       0       0
  6922 ;;Total ram usage:       12 bytes
  6923 ;; Hardware stack levels used:    1
  6924 ;; Hardware stack levels required when called:    8
  6925 ;; This function calls:
  6926 ;;		Nothing
  6927 ;; This function is called by:
  6928 ;;		_efgtoa
  6929 ;; This function uses a non-reentrant model
  6930 ;;
  6931                           
  6932                           	psect	text21
  6933  002E64                     __ptext21:
  6934                           	opt callstack 0
  6935  002E64                     ___flge:
  6936                           	opt callstack 18
  6937  002E64  0E00               	movlw	0
  6938  002E66  1435               	andwf	___flge@ff1^0,w,c
  6939  002E68  6E3D               	movwf	??___flge^0,c
  6940  002E6A  0E00               	movlw	0
  6941  002E6C  1436               	andwf	(___flge@ff1+1)^0,w,c
  6942  002E6E  6E3E               	movwf	(??___flge+1)^0,c
  6943  002E70  0E80               	movlw	128
  6944  002E72  1437               	andwf	(___flge@ff1+2)^0,w,c
  6945  002E74  6E3F               	movwf	(??___flge+2)^0,c
  6946  002E76  0E7F               	movlw	127
  6947  002E78  1438               	andwf	(___flge@ff1+3)^0,w,c
  6948  002E7A  6E40               	movwf	(??___flge+3)^0,c
  6949  002E7C  503D               	movf	??___flge^0,w,c
  6950  002E7E  103E               	iorwf	(??___flge+1)^0,w,c
  6951  002E80  103F               	iorwf	(??___flge+2)^0,w,c
  6952  002E82  1040               	iorwf	(??___flge+3)^0,w,c
  6953  002E84  A4D8               	btfss	status,2,c
  6954  002E86  EF47  F017         	goto	u7341
  6955  002E8A  EF49  F017         	goto	u7340
  6956  002E8E                     u7341:
  6957  002E8E  EF51  F017         	goto	l6056
  6958  002E92                     u7340:
  6959  002E92  0E00               	movlw	0
  6960  002E94  6E35               	movwf	___flge@ff1^0,c
  6961  002E96  0E00               	movlw	0
  6962  002E98  6E36               	movwf	(___flge@ff1+1)^0,c
  6963  002E9A  0E00               	movlw	0
  6964  002E9C  6E37               	movwf	(___flge@ff1+2)^0,c
  6965  002E9E  0E00               	movlw	0
  6966  002EA0  6E38               	movwf	(___flge@ff1+3)^0,c
  6967  002EA2                     l6056:
  6968  002EA2  0E00               	movlw	0
  6969  002EA4  1439               	andwf	___flge@ff2^0,w,c
  6970  002EA6  6E3D               	movwf	??___flge^0,c
  6971  002EA8  0E00               	movlw	0
  6972  002EAA  143A               	andwf	(___flge@ff2+1)^0,w,c
  6973  002EAC  6E3E               	movwf	(??___flge+1)^0,c
  6974  002EAE  0E80               	movlw	128
  6975  002EB0  143B               	andwf	(___flge@ff2+2)^0,w,c
  6976  002EB2  6E3F               	movwf	(??___flge+2)^0,c
  6977  002EB4  0E7F               	movlw	127
  6978  002EB6  143C               	andwf	(___flge@ff2+3)^0,w,c
  6979  002EB8  6E40               	movwf	(??___flge+3)^0,c
  6980  002EBA  503D               	movf	??___flge^0,w,c
  6981  002EBC  103E               	iorwf	(??___flge+1)^0,w,c
  6982  002EBE  103F               	iorwf	(??___flge+2)^0,w,c
  6983  002EC0  1040               	iorwf	(??___flge+3)^0,w,c
  6984  002EC2  A4D8               	btfss	status,2,c
  6985  002EC4  EF66  F017         	goto	u7351
  6986  002EC8  EF68  F017         	goto	u7350
  6987  002ECC                     u7351:
  6988  002ECC  EF70  F017         	goto	l6060
  6989  002ED0                     u7350:
  6990  002ED0  0E00               	movlw	0
  6991  002ED2  6E39               	movwf	___flge@ff2^0,c
  6992  002ED4  0E00               	movlw	0
  6993  002ED6  6E3A               	movwf	(___flge@ff2+1)^0,c
  6994  002ED8  0E00               	movlw	0
  6995  002EDA  6E3B               	movwf	(___flge@ff2+2)^0,c
  6996  002EDC  0E00               	movlw	0
  6997  002EDE  6E3C               	movwf	(___flge@ff2+3)^0,c
  6998  002EE0                     l6060:
  6999  002EE0  AE38               	btfss	(___flge@ff1+3)^0,7,c
  7000  002EE2  EF75  F017         	goto	u7361
  7001  002EE6  EF77  F017         	goto	u7360
  7002  002EEA                     u7361:
  7003  002EEA  EF80  F017         	goto	l6064
  7004  002EEE                     u7360:
  7005  002EEE  6C35               	negf	___flge@ff1^0,c
  7006  002EF0  1E36               	comf	(___flge@ff1+1)^0,f,c
  7007  002EF2  B0D8               	btfsc	status,0,c
  7008  002EF4  2A36               	incf	(___flge@ff1+1)^0,f,c
  7009  002EF6  1E37               	comf	(___flge@ff1+2)^0,f,c
  7010  002EF8  B0D8               	btfsc	status,0,c
  7011  002EFA  2A37               	incf	(___flge@ff1+2)^0,f,c
  7012  002EFC  0E80               	movlw	128
  7013  002EFE  5638               	subfwb	(___flge@ff1+3)^0,f,c
  7014  002F00                     l6064:
  7015  002F00  AE3C               	btfss	(___flge@ff2+3)^0,7,c
  7016  002F02  EF85  F017         	goto	u7371
  7017  002F06  EF87  F017         	goto	u7370
  7018  002F0A                     u7371:
  7019  002F0A  EF90  F017         	goto	l943
  7020  002F0E                     u7370:
  7021  002F0E  6C39               	negf	___flge@ff2^0,c
  7022  002F10  1E3A               	comf	(___flge@ff2+1)^0,f,c
  7023  002F12  B0D8               	btfsc	status,0,c
  7024  002F14  2A3A               	incf	(___flge@ff2+1)^0,f,c
  7025  002F16  1E3B               	comf	(___flge@ff2+2)^0,f,c
  7026  002F18  B0D8               	btfsc	status,0,c
  7027  002F1A  2A3B               	incf	(___flge@ff2+2)^0,f,c
  7028  002F1C  0E80               	movlw	128
  7029  002F1E  563C               	subfwb	(___flge@ff2+3)^0,f,c
  7030  002F20                     l943:
  7031  002F20  0E00               	movlw	0
  7032  002F22  1A35               	xorwf	___flge@ff1^0,f,c
  7033  002F24  0E00               	movlw	0
  7034  002F26  1A36               	xorwf	(___flge@ff1+1)^0,f,c
  7035  002F28  0E00               	movlw	0
  7036  002F2A  1A37               	xorwf	(___flge@ff1+2)^0,f,c
  7037  002F2C  0E80               	movlw	128
  7038  002F2E  1A38               	xorwf	(___flge@ff1+3)^0,f,c
  7039  002F30  0E00               	movlw	0
  7040  002F32  1A39               	xorwf	___flge@ff2^0,f,c
  7041  002F34  0E00               	movlw	0
  7042  002F36  1A3A               	xorwf	(___flge@ff2+1)^0,f,c
  7043  002F38  0E00               	movlw	0
  7044  002F3A  1A3B               	xorwf	(___flge@ff2+2)^0,f,c
  7045  002F3C  0E80               	movlw	128
  7046  002F3E  1A3C               	xorwf	(___flge@ff2+3)^0,f,c
  7047  002F40  5039               	movf	___flge@ff2^0,w,c
  7048  002F42  5C35               	subwf	___flge@ff1^0,w,c
  7049  002F44  503A               	movf	(___flge@ff2+1)^0,w,c
  7050  002F46  5836               	subwfb	(___flge@ff1+1)^0,w,c
  7051  002F48  503B               	movf	(___flge@ff2+2)^0,w,c
  7052  002F4A  5837               	subwfb	(___flge@ff1+2)^0,w,c
  7053  002F4C  503C               	movf	(___flge@ff2+3)^0,w,c
  7054  002F4E  5838               	subwfb	(___flge@ff1+3)^0,w,c
  7055  002F50  B0D8               	btfsc	status,0,c
  7056  002F52  EFAD  F017         	goto	u7381
  7057  002F56  EFAF  F017         	goto	u7380
  7058  002F5A                     u7381:
  7059  002F5A  EFB2  F017         	goto	l6070
  7060  002F5E                     u7380:
  7061  002F5E  90D8               	bcf	status,0,c
  7062  002F60  EFB3  F017         	goto	l948
  7063  002F64                     l6070:
  7064  002F64  80D8               	bsf	status,0,c
  7065  002F66                     l948:
  7066  002F66  0012               	return		;funcret
  7067  002F68                     __end_of___flge:
  7068                           	opt callstack 0
  7069                           
  7070 ;; *************** function ___fleq *****************
  7071 ;; Defined at:
  7072 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
  7073 ;; Parameters:    Size  Location     Type
  7074 ;;  ff1             4   13[COMRAM] unsigned char 
  7075 ;;  ff2             4   17[COMRAM] unsigned char 
  7076 ;; Auto vars:     Size  Location     Type
  7077 ;;		None
  7078 ;; Return value:  Size  Location     Type
  7079 ;;		None               void
  7080 ;; Registers used:
  7081 ;;		wreg, status,2, status,0
  7082 ;; Tracked objects:
  7083 ;;		On entry : 0/0
  7084 ;;		On exit  : 0/0
  7085 ;;		Unchanged: 0/0
  7086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7087 ;;      Params:         8       0       0       0       0       0       0
  7088 ;;      Locals:         0       0       0       0       0       0       0
  7089 ;;      Temps:          4       0       0       0       0       0       0
  7090 ;;      Totals:        12       0       0       0       0       0       0
  7091 ;;Total ram usage:       12 bytes
  7092 ;; Hardware stack levels used:    1
  7093 ;; Hardware stack levels required when called:    8
  7094 ;; This function calls:
  7095 ;;		Nothing
  7096 ;; This function is called by:
  7097 ;;		_efgtoa
  7098 ;; This function uses a non-reentrant model
  7099 ;;
  7100                           
  7101                           	psect	text22
  7102  00353C                     __ptext22:
  7103                           	opt callstack 0
  7104  00353C                     ___fleq:
  7105                           	opt callstack 18
  7106  00353C  0E00               	movlw	0
  7107  00353E  140E               	andwf	___fleq@ff1^0,w,c
  7108  003540  6E16               	movwf	??___fleq^0,c
  7109  003542  0E00               	movlw	0
  7110  003544  140F               	andwf	(___fleq@ff1+1)^0,w,c
  7111  003546  6E17               	movwf	(??___fleq+1)^0,c
  7112  003548  0E80               	movlw	128
  7113  00354A  1410               	andwf	(___fleq@ff1+2)^0,w,c
  7114  00354C  6E18               	movwf	(??___fleq+2)^0,c
  7115  00354E  0E7F               	movlw	127
  7116  003550  1411               	andwf	(___fleq@ff1+3)^0,w,c
  7117  003552  6E19               	movwf	(??___fleq+3)^0,c
  7118  003554  5016               	movf	??___fleq^0,w,c
  7119  003556  1017               	iorwf	(??___fleq+1)^0,w,c
  7120  003558  1018               	iorwf	(??___fleq+2)^0,w,c
  7121  00355A  1019               	iorwf	(??___fleq+3)^0,w,c
  7122  00355C  A4D8               	btfss	status,2,c
  7123  00355E  EFB3  F01A         	goto	u7311
  7124  003562  EFB5  F01A         	goto	u7310
  7125  003566                     u7311:
  7126  003566  EFBD  F01A         	goto	l6040
  7127  00356A                     u7310:
  7128  00356A  0E00               	movlw	0
  7129  00356C  6E0E               	movwf	___fleq@ff1^0,c
  7130  00356E  0E00               	movlw	0
  7131  003570  6E0F               	movwf	(___fleq@ff1+1)^0,c
  7132  003572  0E00               	movlw	0
  7133  003574  6E10               	movwf	(___fleq@ff1+2)^0,c
  7134  003576  0E00               	movlw	0
  7135  003578  6E11               	movwf	(___fleq@ff1+3)^0,c
  7136  00357A                     l6040:
  7137  00357A  0E00               	movlw	0
  7138  00357C  1412               	andwf	___fleq@ff2^0,w,c
  7139  00357E  6E16               	movwf	??___fleq^0,c
  7140  003580  0E00               	movlw	0
  7141  003582  1413               	andwf	(___fleq@ff2+1)^0,w,c
  7142  003584  6E17               	movwf	(??___fleq+1)^0,c
  7143  003586  0E80               	movlw	128
  7144  003588  1414               	andwf	(___fleq@ff2+2)^0,w,c
  7145  00358A  6E18               	movwf	(??___fleq+2)^0,c
  7146  00358C  0E7F               	movlw	127
  7147  00358E  1415               	andwf	(___fleq@ff2+3)^0,w,c
  7148  003590  6E19               	movwf	(??___fleq+3)^0,c
  7149  003592  5016               	movf	??___fleq^0,w,c
  7150  003594  1017               	iorwf	(??___fleq+1)^0,w,c
  7151  003596  1018               	iorwf	(??___fleq+2)^0,w,c
  7152  003598  1019               	iorwf	(??___fleq+3)^0,w,c
  7153  00359A  A4D8               	btfss	status,2,c
  7154  00359C  EFD2  F01A         	goto	u7321
  7155  0035A0  EFD4  F01A         	goto	u7320
  7156  0035A4                     u7321:
  7157  0035A4  EFDC  F01A         	goto	l6044
  7158  0035A8                     u7320:
  7159  0035A8  0E00               	movlw	0
  7160  0035AA  6E12               	movwf	___fleq@ff2^0,c
  7161  0035AC  0E00               	movlw	0
  7162  0035AE  6E13               	movwf	(___fleq@ff2+1)^0,c
  7163  0035B0  0E00               	movlw	0
  7164  0035B2  6E14               	movwf	(___fleq@ff2+2)^0,c
  7165  0035B4  0E00               	movlw	0
  7166  0035B6  6E15               	movwf	(___fleq@ff2+3)^0,c
  7167  0035B8                     l6044:
  7168  0035B8  5012               	movf	___fleq@ff2^0,w,c
  7169  0035BA  180E               	xorwf	___fleq@ff1^0,w,c
  7170  0035BC  E10F               	bnz	u7330
  7171  0035BE  5013               	movf	(___fleq@ff2+1)^0,w,c
  7172  0035C0  180F               	xorwf	(___fleq@ff1+1)^0,w,c
  7173  0035C2  E10C               	bnz	u7330
  7174  0035C4  5014               	movf	(___fleq@ff2+2)^0,w,c
  7175  0035C6  1810               	xorwf	(___fleq@ff1+2)^0,w,c
  7176  0035C8  E109               	bnz	u7330
  7177  0035CA  5015               	movf	(___fleq@ff2+3)^0,w,c
  7178  0035CC  1811               	xorwf	(___fleq@ff1+3)^0,w,c
  7179  0035CE  B4D8               	btfsc	status,2,c
  7180  0035D0  EFEC  F01A         	goto	u7331
  7181  0035D4  EFEE  F01A         	goto	u7330
  7182  0035D8                     u7331:
  7183  0035D8  EFF1  F01A         	goto	l6048
  7184  0035DC                     u7330:
  7185  0035DC  90D8               	bcf	status,0,c
  7186  0035DE  EFF2  F01A         	goto	l937
  7187  0035E2                     l6048:
  7188  0035E2  80D8               	bsf	status,0,c
  7189  0035E4                     l937:
  7190  0035E4  0012               	return		;funcret
  7191  0035E6                     __end_of___fleq:
  7192                           	opt callstack 0
  7193                           
  7194 ;; *************** function ___fldiv *****************
  7195 ;; Defined at:
  7196 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
  7197 ;; Parameters:    Size  Location     Type
  7198 ;;  b               4   13[COMRAM] unsigned char 
  7199 ;;  a               4   17[COMRAM] unsigned char 
  7200 ;; Auto vars:     Size  Location     Type
  7201 ;;  grs             4   32[COMRAM] unsigned long 
  7202 ;;  rem             4   25[COMRAM] unsigned long 
  7203 ;;  new_exp         2   30[COMRAM] short 
  7204 ;;  aexp            1   37[COMRAM] unsigned char 
  7205 ;;  bexp            1   36[COMRAM] unsigned char 
  7206 ;;  sign            1   29[COMRAM] unsigned char 
  7207 ;; Return value:  Size  Location     Type
  7208 ;;                  4   13[COMRAM] unsigned char 
  7209 ;; Registers used:
  7210 ;;		wreg, status,2, status,0
  7211 ;; Tracked objects:
  7212 ;;		On entry : 0/0
  7213 ;;		On exit  : 0/0
  7214 ;;		Unchanged: 0/0
  7215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7216 ;;      Params:         8       0       0       0       0       0       0
  7217 ;;      Locals:        13       0       0       0       0       0       0
  7218 ;;      Temps:          4       0       0       0       0       0       0
  7219 ;;      Totals:        25       0       0       0       0       0       0
  7220 ;;Total ram usage:       25 bytes
  7221 ;; Hardware stack levels used:    1
  7222 ;; Hardware stack levels required when called:    8
  7223 ;; This function calls:
  7224 ;;		Nothing
  7225 ;; This function is called by:
  7226 ;;		_efgtoa
  7227 ;; This function uses a non-reentrant model
  7228 ;;
  7229                           
  7230                           	psect	text23
  7231  002364                     __ptext23:
  7232                           	opt callstack 0
  7233  002364                     ___fldiv:
  7234                           	opt callstack 18
  7235  002364  5011               	movf	(___fldiv@b+3)^0,w,c
  7236  002366  0B80               	andlw	128
  7237  002368  6E1E               	movwf	___fldiv@sign^0,c
  7238  00236A  5011               	movf	(___fldiv@b+3)^0,w,c
  7239  00236C  2411               	addwf	(___fldiv@b+3)^0,w,c
  7240  00236E  6E25               	movwf	___fldiv@bexp^0,c
  7241  002370  AE10               	btfss	(___fldiv@b+2)^0,7,c
  7242  002372  EFBD  F011         	goto	u6771
  7243  002376  EFBF  F011         	goto	u6770
  7244  00237A                     u6771:
  7245  00237A  EFC0  F011         	goto	l5688
  7246  00237E                     u6770:
  7247  00237E  8025               	bsf	___fldiv@bexp^0,0,c
  7248  002380                     l5688:
  7249  002380  5025               	movf	___fldiv@bexp^0,w,c
  7250  002382  B4D8               	btfsc	status,2,c
  7251  002384  EFC6  F011         	goto	u6781
  7252  002388  EFC8  F011         	goto	u6780
  7253  00238C                     u6781:
  7254  00238C  EFDD  F011         	goto	l5698
  7255  002390                     u6780:
  7256  002390  2825               	incf	___fldiv@bexp^0,w,c
  7257  002392  A4D8               	btfss	status,2,c
  7258  002394  EFCE  F011         	goto	u6791
  7259  002398  EFD0  F011         	goto	u6790
  7260  00239C                     u6791:
  7261  00239C  EFD8  F011         	goto	l5694
  7262  0023A0                     u6790:
  7263  0023A0  0E00               	movlw	0
  7264  0023A2  6E0E               	movwf	___fldiv@b^0,c
  7265  0023A4  0E00               	movlw	0
  7266  0023A6  6E0F               	movwf	(___fldiv@b+1)^0,c
  7267  0023A8  0E00               	movlw	0
  7268  0023AA  6E10               	movwf	(___fldiv@b+2)^0,c
  7269  0023AC  0E00               	movlw	0
  7270  0023AE  6E11               	movwf	(___fldiv@b+3)^0,c
  7271  0023B0                     l5694:
  7272  0023B0  8E10               	bsf	(___fldiv@b+2)^0,7,c
  7273  0023B2  0E00               	movlw	0
  7274  0023B4  6E11               	movwf	(___fldiv@b+3)^0,c
  7275  0023B6  EFE5  F011         	goto	l5700
  7276  0023BA                     l5698:
  7277  0023BA  0E00               	movlw	0
  7278  0023BC  6E0E               	movwf	___fldiv@b^0,c
  7279  0023BE  0E00               	movlw	0
  7280  0023C0  6E0F               	movwf	(___fldiv@b+1)^0,c
  7281  0023C2  0E00               	movlw	0
  7282  0023C4  6E10               	movwf	(___fldiv@b+2)^0,c
  7283  0023C6  0E00               	movlw	0
  7284  0023C8  6E11               	movwf	(___fldiv@b+3)^0,c
  7285  0023CA                     l5700:
  7286  0023CA  5015               	movf	(___fldiv@a+3)^0,w,c
  7287  0023CC  0B80               	andlw	128
  7288  0023CE  1A1E               	xorwf	___fldiv@sign^0,f,c
  7289  0023D0  5015               	movf	(___fldiv@a+3)^0,w,c
  7290  0023D2  2415               	addwf	(___fldiv@a+3)^0,w,c
  7291  0023D4  6E26               	movwf	___fldiv@aexp^0,c
  7292  0023D6  AE14               	btfss	(___fldiv@a+2)^0,7,c
  7293  0023D8  EFF0  F011         	goto	u6801
  7294  0023DC  EFF2  F011         	goto	u6800
  7295  0023E0                     u6801:
  7296  0023E0  EFF3  F011         	goto	l5708
  7297  0023E4                     u6800:
  7298  0023E4  8026               	bsf	___fldiv@aexp^0,0,c
  7299  0023E6                     l5708:
  7300  0023E6  5026               	movf	___fldiv@aexp^0,w,c
  7301  0023E8  B4D8               	btfsc	status,2,c
  7302  0023EA  EFF9  F011         	goto	u6811
  7303  0023EE  EFFB  F011         	goto	u6810
  7304  0023F2                     u6811:
  7305  0023F2  EF10  F012         	goto	l5718
  7306  0023F6                     u6810:
  7307  0023F6  2826               	incf	___fldiv@aexp^0,w,c
  7308  0023F8  A4D8               	btfss	status,2,c
  7309  0023FA  EF01  F012         	goto	u6821
  7310  0023FE  EF03  F012         	goto	u6820
  7311  002402                     u6821:
  7312  002402  EF0B  F012         	goto	l5714
  7313  002406                     u6820:
  7314  002406  0E00               	movlw	0
  7315  002408  6E12               	movwf	___fldiv@a^0,c
  7316  00240A  0E00               	movlw	0
  7317  00240C  6E13               	movwf	(___fldiv@a+1)^0,c
  7318  00240E  0E00               	movlw	0
  7319  002410  6E14               	movwf	(___fldiv@a+2)^0,c
  7320  002412  0E00               	movlw	0
  7321  002414  6E15               	movwf	(___fldiv@a+3)^0,c
  7322  002416                     l5714:
  7323  002416  8E14               	bsf	(___fldiv@a+2)^0,7,c
  7324  002418  0E00               	movlw	0
  7325  00241A  6E15               	movwf	(___fldiv@a+3)^0,c
  7326  00241C  EF18  F012         	goto	l5720
  7327  002420                     l5718:
  7328  002420  0E00               	movlw	0
  7329  002422  6E12               	movwf	___fldiv@a^0,c
  7330  002424  0E00               	movlw	0
  7331  002426  6E13               	movwf	(___fldiv@a+1)^0,c
  7332  002428  0E00               	movlw	0
  7333  00242A  6E14               	movwf	(___fldiv@a+2)^0,c
  7334  00242C  0E00               	movlw	0
  7335  00242E  6E15               	movwf	(___fldiv@a+3)^0,c
  7336  002430                     l5720:
  7337  002430  5012               	movf	___fldiv@a^0,w,c
  7338  002432  1013               	iorwf	(___fldiv@a+1)^0,w,c
  7339  002434  1014               	iorwf	(___fldiv@a+2)^0,w,c
  7340  002436  1015               	iorwf	(___fldiv@a+3)^0,w,c
  7341  002438  A4D8               	btfss	status,2,c
  7342  00243A  EF21  F012         	goto	u6831
  7343  00243E  EF23  F012         	goto	u6830
  7344  002442                     u6831:
  7345  002442  EF3B  F012         	goto	l5732
  7346  002446                     u6830:
  7347  002446  0E00               	movlw	0
  7348  002448  6E0E               	movwf	___fldiv@b^0,c
  7349  00244A  0E00               	movlw	0
  7350  00244C  6E0F               	movwf	(___fldiv@b+1)^0,c
  7351  00244E  0E00               	movlw	0
  7352  002450  6E10               	movwf	(___fldiv@b+2)^0,c
  7353  002452  0E00               	movlw	0
  7354  002454  6E11               	movwf	(___fldiv@b+3)^0,c
  7355  002456  0E80               	movlw	128
  7356  002458  1210               	iorwf	(___fldiv@b+2)^0,f,c
  7357  00245A  0E7F               	movlw	127
  7358  00245C  1211               	iorwf	(___fldiv@b+3)^0,f,c
  7359  00245E                     l5726:
  7360  00245E  501E               	movf	___fldiv@sign^0,w,c
  7361  002460  1211               	iorwf	(___fldiv@b+3)^0,f,c
  7362  002462  C00E  F00E         	movff	___fldiv@b,?___fldiv
  7363  002466  C00F  F00F         	movff	___fldiv@b+1,?___fldiv+1
  7364  00246A  C010  F010         	movff	___fldiv@b+2,?___fldiv+2
  7365  00246E  C011  F011         	movff	___fldiv@b+3,?___fldiv+3
  7366  002472  EF7E  F013         	goto	l1260
  7367  002476                     l5732:
  7368  002476  5025               	movf	___fldiv@bexp^0,w,c
  7369  002478  A4D8               	btfss	status,2,c
  7370  00247A  EF41  F012         	goto	u6841
  7371  00247E  EF43  F012         	goto	u6840
  7372  002482                     u6841:
  7373  002482  EF4D  F012         	goto	l5740
  7374  002486                     u6840:
  7375  002486  0E00               	movlw	0
  7376  002488  6E0E               	movwf	?___fldiv^0,c
  7377  00248A  0E00               	movlw	0
  7378  00248C  6E0F               	movwf	(?___fldiv+1)^0,c
  7379  00248E  0E00               	movlw	0
  7380  002490  6E10               	movwf	(?___fldiv+2)^0,c
  7381  002492  0E00               	movlw	0
  7382  002494  6E11               	movwf	(?___fldiv+3)^0,c
  7383  002496  EF7E  F013         	goto	l1260
  7384  00249A                     l5740:
  7385  00249A  5026               	movf	___fldiv@aexp^0,w,c
  7386  00249C  C025  F016         	movff	___fldiv@bexp,??___fldiv
  7387  0024A0  6A17               	clrf	(??___fldiv+1)^0,c
  7388  0024A2  5E16               	subwf	??___fldiv^0,f,c
  7389  0024A4  0E00               	movlw	0
  7390  0024A6  5A17               	subwfb	(??___fldiv+1)^0,f,c
  7391  0024A8  0E7F               	movlw	127
  7392  0024AA  2416               	addwf	??___fldiv^0,w,c
  7393  0024AC  6E1F               	movwf	___fldiv@new_exp^0,c
  7394  0024AE  0E00               	movlw	0
  7395  0024B0  2017               	addwfc	(??___fldiv+1)^0,w,c
  7396  0024B2  6E20               	movwf	(___fldiv@new_exp+1)^0,c
  7397  0024B4  C00E  F01A         	movff	___fldiv@b,___fldiv@rem
  7398  0024B8  C00F  F01B         	movff	___fldiv@b+1,___fldiv@rem+1
  7399  0024BC  C010  F01C         	movff	___fldiv@b+2,___fldiv@rem+2
  7400  0024C0  C011  F01D         	movff	___fldiv@b+3,___fldiv@rem+3
  7401  0024C4  0E00               	movlw	0
  7402  0024C6  6E0E               	movwf	___fldiv@b^0,c
  7403  0024C8  0E00               	movlw	0
  7404  0024CA  6E0F               	movwf	(___fldiv@b+1)^0,c
  7405  0024CC  0E00               	movlw	0
  7406  0024CE  6E10               	movwf	(___fldiv@b+2)^0,c
  7407  0024D0  0E00               	movlw	0
  7408  0024D2  6E11               	movwf	(___fldiv@b+3)^0,c
  7409  0024D4  0E00               	movlw	0
  7410  0024D6  6E21               	movwf	___fldiv@grs^0,c
  7411  0024D8  0E00               	movlw	0
  7412  0024DA  6E22               	movwf	(___fldiv@grs+1)^0,c
  7413  0024DC  0E00               	movlw	0
  7414  0024DE  6E23               	movwf	(___fldiv@grs+2)^0,c
  7415  0024E0  0E00               	movlw	0
  7416  0024E2  6E24               	movwf	(___fldiv@grs+3)^0,c
  7417  0024E4  0E00               	movlw	0
  7418  0024E6  6E26               	movwf	___fldiv@aexp^0,c
  7419  0024E8  EFAE  F012         	goto	l1262
  7420  0024EC                     l5750:
  7421  0024EC  5026               	movf	___fldiv@aexp^0,w,c
  7422  0024EE  B4D8               	btfsc	status,2,c
  7423  0024F0  EF7C  F012         	goto	u6851
  7424  0024F4  EF7E  F012         	goto	u6850
  7425  0024F8                     u6851:
  7426  0024F8  EF95  F012         	goto	l5758
  7427  0024FC                     u6850:
  7428  0024FC  90D8               	bcf	status,0,c
  7429  0024FE  361A               	rlcf	___fldiv@rem^0,f,c
  7430  002500  361B               	rlcf	(___fldiv@rem+1)^0,f,c
  7431  002502  361C               	rlcf	(___fldiv@rem+2)^0,f,c
  7432  002504  361D               	rlcf	(___fldiv@rem+3)^0,f,c
  7433  002506  90D8               	bcf	status,0,c
  7434  002508  360E               	rlcf	___fldiv@b^0,f,c
  7435  00250A  360F               	rlcf	(___fldiv@b+1)^0,f,c
  7436  00250C  3610               	rlcf	(___fldiv@b+2)^0,f,c
  7437  00250E  3611               	rlcf	(___fldiv@b+3)^0,f,c
  7438  002510  AE24               	btfss	(___fldiv@grs+3)^0,7,c
  7439  002512  EF8D  F012         	goto	u6861
  7440  002516  EF8F  F012         	goto	u6860
  7441  00251A                     u6861:
  7442  00251A  EF90  F012         	goto	l1265
  7443  00251E                     u6860:
  7444  00251E  800E               	bsf	___fldiv@b^0,0,c
  7445  002520                     l1265:
  7446  002520  90D8               	bcf	status,0,c
  7447  002522  3621               	rlcf	___fldiv@grs^0,f,c
  7448  002524  3622               	rlcf	(___fldiv@grs+1)^0,f,c
  7449  002526  3623               	rlcf	(___fldiv@grs+2)^0,f,c
  7450  002528  3624               	rlcf	(___fldiv@grs+3)^0,f,c
  7451  00252A                     l5758:
  7452  00252A  5012               	movf	___fldiv@a^0,w,c
  7453  00252C  5C1A               	subwf	___fldiv@rem^0,w,c
  7454  00252E  5013               	movf	(___fldiv@a+1)^0,w,c
  7455  002530  581B               	subwfb	(___fldiv@rem+1)^0,w,c
  7456  002532  5014               	movf	(___fldiv@a+2)^0,w,c
  7457  002534  581C               	subwfb	(___fldiv@rem+2)^0,w,c
  7458  002536  5015               	movf	(___fldiv@a+3)^0,w,c
  7459  002538  581D               	subwfb	(___fldiv@rem+3)^0,w,c
  7460  00253A  A0D8               	btfss	status,0,c
  7461  00253C  EFA2  F012         	goto	u6871
  7462  002540  EFA4  F012         	goto	u6870
  7463  002544                     u6871:
  7464  002544  EFAD  F012         	goto	l5764
  7465  002548                     u6870:
  7466  002548  8C24               	bsf	(___fldiv@grs+3)^0,6,c
  7467  00254A  5012               	movf	___fldiv@a^0,w,c
  7468  00254C  5E1A               	subwf	___fldiv@rem^0,f,c
  7469  00254E  5013               	movf	(___fldiv@a+1)^0,w,c
  7470  002550  5A1B               	subwfb	(___fldiv@rem+1)^0,f,c
  7471  002552  5014               	movf	(___fldiv@a+2)^0,w,c
  7472  002554  5A1C               	subwfb	(___fldiv@rem+2)^0,f,c
  7473  002556  5015               	movf	(___fldiv@a+3)^0,w,c
  7474  002558  5A1D               	subwfb	(___fldiv@rem+3)^0,f,c
  7475  00255A                     l5764:
  7476  00255A  2A26               	incf	___fldiv@aexp^0,f,c
  7477  00255C                     l1262:
  7478  00255C  0E19               	movlw	25
  7479  00255E  6426               	cpfsgt	___fldiv@aexp^0,c
  7480  002560  EFB4  F012         	goto	u6881
  7481  002564  EFB6  F012         	goto	u6880
  7482  002568                     u6881:
  7483  002568  EF76  F012         	goto	l5750
  7484  00256C                     u6880:
  7485  00256C  501A               	movf	___fldiv@rem^0,w,c
  7486  00256E  101B               	iorwf	(___fldiv@rem+1)^0,w,c
  7487  002570  101C               	iorwf	(___fldiv@rem+2)^0,w,c
  7488  002572  101D               	iorwf	(___fldiv@rem+3)^0,w,c
  7489  002574  B4D8               	btfsc	status,2,c
  7490  002576  EFBF  F012         	goto	u6891
  7491  00257A  EFC1  F012         	goto	u6890
  7492  00257E                     u6891:
  7493  00257E  EFD9  F012         	goto	l5776
  7494  002582                     u6890:
  7495  002582  8021               	bsf	___fldiv@grs^0,0,c
  7496  002584  EFD9  F012         	goto	l5776
  7497  002588                     l5770:
  7498  002588  90D8               	bcf	status,0,c
  7499  00258A  360E               	rlcf	___fldiv@b^0,f,c
  7500  00258C  360F               	rlcf	(___fldiv@b+1)^0,f,c
  7501  00258E  3610               	rlcf	(___fldiv@b+2)^0,f,c
  7502  002590  3611               	rlcf	(___fldiv@b+3)^0,f,c
  7503  002592  AE24               	btfss	(___fldiv@grs+3)^0,7,c
  7504  002594  EFCE  F012         	goto	u6901
  7505  002598  EFD0  F012         	goto	u6900
  7506  00259C                     u6901:
  7507  00259C  EFD1  F012         	goto	l1271
  7508  0025A0                     u6900:
  7509  0025A0  800E               	bsf	___fldiv@b^0,0,c
  7510  0025A2                     l1271:
  7511  0025A2  90D8               	bcf	status,0,c
  7512  0025A4  3621               	rlcf	___fldiv@grs^0,f,c
  7513  0025A6  3622               	rlcf	(___fldiv@grs+1)^0,f,c
  7514  0025A8  3623               	rlcf	(___fldiv@grs+2)^0,f,c
  7515  0025AA  3624               	rlcf	(___fldiv@grs+3)^0,f,c
  7516  0025AC  061F               	decf	___fldiv@new_exp^0,f,c
  7517  0025AE  A0D8               	btfss	status,0,c
  7518  0025B0  0620               	decf	(___fldiv@new_exp+1)^0,f,c
  7519  0025B2                     l5776:
  7520  0025B2  AE10               	btfss	(___fldiv@b+2)^0,7,c
  7521  0025B4  EFDE  F012         	goto	u6911
  7522  0025B8  EFE0  F012         	goto	u6910
  7523  0025BC                     u6911:
  7524  0025BC  EFC4  F012         	goto	l5770
  7525  0025C0                     u6910:
  7526  0025C0  0E00               	movlw	0
  7527  0025C2  6E26               	movwf	___fldiv@aexp^0,c
  7528  0025C4  AE24               	btfss	(___fldiv@grs+3)^0,7,c
  7529  0025C6  EFE7  F012         	goto	u6921
  7530  0025CA  EFE9  F012         	goto	u6920
  7531  0025CE                     u6921:
  7532  0025CE  EF0D  F013         	goto	l1273
  7533  0025D2                     u6920:
  7534  0025D2  0EFF               	movlw	255
  7535  0025D4  1421               	andwf	___fldiv@grs^0,w,c
  7536  0025D6  6E16               	movwf	??___fldiv^0,c
  7537  0025D8  0EFF               	movlw	255
  7538  0025DA  1422               	andwf	(___fldiv@grs+1)^0,w,c
  7539  0025DC  6E17               	movwf	(??___fldiv+1)^0,c
  7540  0025DE  0EFF               	movlw	255
  7541  0025E0  1423               	andwf	(___fldiv@grs+2)^0,w,c
  7542  0025E2  6E18               	movwf	(??___fldiv+2)^0,c
  7543  0025E4  0E7F               	movlw	127
  7544  0025E6  1424               	andwf	(___fldiv@grs+3)^0,w,c
  7545  0025E8  6E19               	movwf	(??___fldiv+3)^0,c
  7546  0025EA  5016               	movf	??___fldiv^0,w,c
  7547  0025EC  1017               	iorwf	(??___fldiv+1)^0,w,c
  7548  0025EE  1018               	iorwf	(??___fldiv+2)^0,w,c
  7549  0025F0  1019               	iorwf	(??___fldiv+3)^0,w,c
  7550  0025F2  B4D8               	btfsc	status,2,c
  7551  0025F4  EFFE  F012         	goto	u6931
  7552  0025F8  EF00  F013         	goto	u6930
  7553  0025FC                     u6931:
  7554  0025FC  EF04  F013         	goto	l1274
  7555  002600                     u6930:
  7556  002600                     l5784:
  7557  002600  0E01               	movlw	1
  7558  002602  6E26               	movwf	___fldiv@aexp^0,c
  7559  002604  EF0D  F013         	goto	l1273
  7560  002608                     l1274:
  7561  002608  A00E               	btfss	___fldiv@b^0,0,c
  7562  00260A  EF09  F013         	goto	u6941
  7563  00260E  EF0B  F013         	goto	u6940
  7564  002612                     u6941:
  7565  002612  EF0D  F013         	goto	l1273
  7566  002616                     u6940:
  7567  002616  EF00  F013         	goto	l5784
  7568  00261A                     l1273:
  7569  00261A  5026               	movf	___fldiv@aexp^0,w,c
  7570  00261C  B4D8               	btfsc	status,2,c
  7571  00261E  EF13  F013         	goto	u6951
  7572  002622  EF15  F013         	goto	u6950
  7573  002626                     u6951:
  7574  002626  EF39  F013         	goto	l5796
  7575  00262A                     u6950:
  7576  00262A  0E01               	movlw	1
  7577  00262C  260E               	addwf	___fldiv@b^0,f,c
  7578  00262E  0E00               	movlw	0
  7579  002630  220F               	addwfc	(___fldiv@b+1)^0,f,c
  7580  002632  2210               	addwfc	(___fldiv@b+2)^0,f,c
  7581  002634  2211               	addwfc	(___fldiv@b+3)^0,f,c
  7582  002636  A011               	btfss	(___fldiv@b+3)^0,0,c
  7583  002638  EF20  F013         	goto	u6961
  7584  00263C  EF22  F013         	goto	u6960
  7585  002640                     u6961:
  7586  002640  EF39  F013         	goto	l5796
  7587  002644                     u6960:
  7588  002644  C00E  F016         	movff	___fldiv@b,??___fldiv
  7589  002648  C00F  F017         	movff	___fldiv@b+1,??___fldiv+1
  7590  00264C  C010  F018         	movff	___fldiv@b+2,??___fldiv+2
  7591  002650  C011  F019         	movff	___fldiv@b+3,??___fldiv+3
  7592  002654  3419               	rlcf	(??___fldiv+3)^0,w,c
  7593  002656  3219               	rrcf	(??___fldiv+3)^0,f,c
  7594  002658  3218               	rrcf	(??___fldiv+2)^0,f,c
  7595  00265A  3217               	rrcf	(??___fldiv+1)^0,f,c
  7596  00265C  3216               	rrcf	??___fldiv^0,f,c
  7597  00265E  C016  F00E         	movff	??___fldiv,___fldiv@b
  7598  002662  C017  F00F         	movff	??___fldiv+1,___fldiv@b+1
  7599  002666  C018  F010         	movff	??___fldiv+2,___fldiv@b+2
  7600  00266A  C019  F011         	movff	??___fldiv+3,___fldiv@b+3
  7601  00266E  4A1F               	infsnz	___fldiv@new_exp^0,f,c
  7602  002670  2A20               	incf	(___fldiv@new_exp+1)^0,f,c
  7603  002672                     l5796:
  7604  002672  BE20               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7605  002674  EF44  F013         	goto	u6971
  7606  002678  5020               	movf	(___fldiv@new_exp+1)^0,w,c
  7607  00267A  E108               	bnz	u6970
  7608  00267C  281F               	incf	___fldiv@new_exp^0,w,c
  7609  00267E  A0D8               	btfss	status,0,c
  7610  002680  EF44  F013         	goto	u6971
  7611  002684  EF46  F013         	goto	u6970
  7612  002688                     u6971:
  7613  002688  EF51  F013         	goto	l5800
  7614  00268C                     u6970:
  7615  00268C  0E00               	movlw	0
  7616  00268E  6E20               	movwf	(___fldiv@new_exp+1)^0,c
  7617  002690  681F               	setf	___fldiv@new_exp^0,c
  7618  002692  0E00               	movlw	0
  7619  002694  6E0E               	movwf	___fldiv@b^0,c
  7620  002696  0E00               	movlw	0
  7621  002698  6E0F               	movwf	(___fldiv@b+1)^0,c
  7622  00269A  0E00               	movlw	0
  7623  00269C  6E10               	movwf	(___fldiv@b+2)^0,c
  7624  00269E  0E00               	movlw	0
  7625  0026A0  6E11               	movwf	(___fldiv@b+3)^0,c
  7626  0026A2                     l5800:
  7627  0026A2  BE20               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7628  0026A4  EF5E  F013         	goto	u6980
  7629  0026A8  5020               	movf	(___fldiv@new_exp+1)^0,w,c
  7630  0026AA  E106               	bnz	u6981
  7631  0026AC  041F               	decf	___fldiv@new_exp^0,w,c
  7632  0026AE  B0D8               	btfsc	status,0,c
  7633  0026B0  EF5C  F013         	goto	u6981
  7634  0026B4  EF5E  F013         	goto	u6980
  7635  0026B8                     u6981:
  7636  0026B8  EF6C  F013         	goto	l5804
  7637  0026BC                     u6980:
  7638  0026BC  0E00               	movlw	0
  7639  0026BE  6E20               	movwf	(___fldiv@new_exp+1)^0,c
  7640  0026C0  0E00               	movlw	0
  7641  0026C2  6E1F               	movwf	___fldiv@new_exp^0,c
  7642  0026C4  0E00               	movlw	0
  7643  0026C6  6E0E               	movwf	___fldiv@b^0,c
  7644  0026C8  0E00               	movlw	0
  7645  0026CA  6E0F               	movwf	(___fldiv@b+1)^0,c
  7646  0026CC  0E00               	movlw	0
  7647  0026CE  6E10               	movwf	(___fldiv@b+2)^0,c
  7648  0026D0  0E00               	movlw	0
  7649  0026D2  6E11               	movwf	(___fldiv@b+3)^0,c
  7650  0026D4  0E00               	movlw	0
  7651  0026D6  6E1E               	movwf	___fldiv@sign^0,c
  7652  0026D8                     l5804:
  7653  0026D8  C01F  F025         	movff	___fldiv@new_exp,___fldiv@bexp
  7654  0026DC  A025               	btfss	___fldiv@bexp^0,0,c
  7655  0026DE  EF73  F013         	goto	u6991
  7656  0026E2  EF75  F013         	goto	u6990
  7657  0026E6                     u6991:
  7658  0026E6  EF78  F013         	goto	l5810
  7659  0026EA                     u6990:
  7660  0026EA  8E10               	bsf	(___fldiv@b+2)^0,7,c
  7661  0026EC  EF79  F013         	goto	l5812
  7662  0026F0                     l5810:
  7663  0026F0  9E10               	bcf	(___fldiv@b+2)^0,7,c
  7664  0026F2                     l5812:
  7665  0026F2  90D8               	bcf	status,0,c
  7666  0026F4  3025               	rrcf	___fldiv@bexp^0,w,c
  7667  0026F6  6E11               	movwf	(___fldiv@b+3)^0,c
  7668  0026F8  EF2F  F012         	goto	l5726
  7669  0026FC                     l1260:
  7670  0026FC  0012               	return		;funcret
  7671  0026FE                     __end_of___fldiv:
  7672                           	opt callstack 0
  7673                           
  7674 ;; *************** function ___awmod *****************
  7675 ;; Defined at:
  7676 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  7677 ;; Parameters:    Size  Location     Type
  7678 ;;  dividend        2   13[COMRAM] int 
  7679 ;;  divisor         2   15[COMRAM] int 
  7680 ;; Auto vars:     Size  Location     Type
  7681 ;;  sign            1   18[COMRAM] unsigned char 
  7682 ;;  counter         1   17[COMRAM] unsigned char 
  7683 ;; Return value:  Size  Location     Type
  7684 ;;                  2   13[COMRAM] int 
  7685 ;; Registers used:
  7686 ;;		wreg, status,2, status,0
  7687 ;; Tracked objects:
  7688 ;;		On entry : 0/0
  7689 ;;		On exit  : 0/0
  7690 ;;		Unchanged: 0/0
  7691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7692 ;;      Params:         4       0       0       0       0       0       0
  7693 ;;      Locals:         2       0       0       0       0       0       0
  7694 ;;      Temps:          0       0       0       0       0       0       0
  7695 ;;      Totals:         6       0       0       0       0       0       0
  7696 ;;Total ram usage:        6 bytes
  7697 ;; Hardware stack levels used:    1
  7698 ;; Hardware stack levels required when called:    8
  7699 ;; This function calls:
  7700 ;;		Nothing
  7701 ;; This function is called by:
  7702 ;;		_efgtoa
  7703 ;; This function uses a non-reentrant model
  7704 ;;
  7705                           
  7706                           	psect	text24
  7707  00348C                     __ptext24:
  7708                           	opt callstack 0
  7709  00348C                     ___awmod:
  7710                           	opt callstack 18
  7711  00348C  0E00               	movlw	0
  7712  00348E  6E13               	movwf	___awmod@sign^0,c
  7713  003490  BE0F               	btfsc	(___awmod@dividend+1)^0,7,c
  7714  003492  EF4F  F01A         	goto	u7250
  7715  003496  EF4D  F01A         	goto	u7251
  7716  00349A                     u7251:
  7717  00349A  EF55  F01A         	goto	l6008
  7718  00349E                     u7250:
  7719  00349E  6C0E               	negf	___awmod@dividend^0,c
  7720  0034A0  1E0F               	comf	(___awmod@dividend+1)^0,f,c
  7721  0034A2  B0D8               	btfsc	status,0,c
  7722  0034A4  2A0F               	incf	(___awmod@dividend+1)^0,f,c
  7723  0034A6  0E01               	movlw	1
  7724  0034A8  6E13               	movwf	___awmod@sign^0,c
  7725  0034AA                     l6008:
  7726  0034AA  BE11               	btfsc	(___awmod@divisor+1)^0,7,c
  7727  0034AC  EF5C  F01A         	goto	u7260
  7728  0034B0  EF5A  F01A         	goto	u7261
  7729  0034B4                     u7261:
  7730  0034B4  EF60  F01A         	goto	l6012
  7731  0034B8                     u7260:
  7732  0034B8  6C10               	negf	___awmod@divisor^0,c
  7733  0034BA  1E11               	comf	(___awmod@divisor+1)^0,f,c
  7734  0034BC  B0D8               	btfsc	status,0,c
  7735  0034BE  2A11               	incf	(___awmod@divisor+1)^0,f,c
  7736  0034C0                     l6012:
  7737  0034C0  5010               	movf	___awmod@divisor^0,w,c
  7738  0034C2  1011               	iorwf	(___awmod@divisor+1)^0,w,c
  7739  0034C4  B4D8               	btfsc	status,2,c
  7740  0034C6  EF67  F01A         	goto	u7271
  7741  0034CA  EF69  F01A         	goto	u7270
  7742  0034CE                     u7271:
  7743  0034CE  EF8D  F01A         	goto	l6028
  7744  0034D2                     u7270:
  7745  0034D2  0E01               	movlw	1
  7746  0034D4  6E12               	movwf	___awmod@counter^0,c
  7747  0034D6  EF71  F01A         	goto	l6018
  7748  0034DA                     l6016:
  7749  0034DA  90D8               	bcf	status,0,c
  7750  0034DC  3610               	rlcf	___awmod@divisor^0,f,c
  7751  0034DE  3611               	rlcf	(___awmod@divisor+1)^0,f,c
  7752  0034E0  2A12               	incf	___awmod@counter^0,f,c
  7753  0034E2                     l6018:
  7754  0034E2  AE11               	btfss	(___awmod@divisor+1)^0,7,c
  7755  0034E4  EF76  F01A         	goto	u7281
  7756  0034E8  EF78  F01A         	goto	u7280
  7757  0034EC                     u7281:
  7758  0034EC  EF6D  F01A         	goto	l6016
  7759  0034F0                     u7280:
  7760  0034F0                     l6020:
  7761  0034F0  5010               	movf	___awmod@divisor^0,w,c
  7762  0034F2  5C0E               	subwf	___awmod@dividend^0,w,c
  7763  0034F4  5011               	movf	(___awmod@divisor+1)^0,w,c
  7764  0034F6  580F               	subwfb	(___awmod@dividend+1)^0,w,c
  7765  0034F8  A0D8               	btfss	status,0,c
  7766  0034FA  EF81  F01A         	goto	u7291
  7767  0034FE  EF83  F01A         	goto	u7290
  7768  003502                     u7291:
  7769  003502  EF87  F01A         	goto	l6024
  7770  003506                     u7290:
  7771  003506  5010               	movf	___awmod@divisor^0,w,c
  7772  003508  5E0E               	subwf	___awmod@dividend^0,f,c
  7773  00350A  5011               	movf	(___awmod@divisor+1)^0,w,c
  7774  00350C  5A0F               	subwfb	(___awmod@dividend+1)^0,f,c
  7775  00350E                     l6024:
  7776  00350E  90D8               	bcf	status,0,c
  7777  003510  3211               	rrcf	(___awmod@divisor+1)^0,f,c
  7778  003512  3210               	rrcf	___awmod@divisor^0,f,c
  7779  003514  2E12               	decfsz	___awmod@counter^0,f,c
  7780  003516  EF78  F01A         	goto	l6020
  7781  00351A                     l6028:
  7782  00351A  5013               	movf	___awmod@sign^0,w,c
  7783  00351C  B4D8               	btfsc	status,2,c
  7784  00351E  EF93  F01A         	goto	u7301
  7785  003522  EF95  F01A         	goto	u7300
  7786  003526                     u7301:
  7787  003526  EF99  F01A         	goto	l6032
  7788  00352A                     u7300:
  7789  00352A  6C0E               	negf	___awmod@dividend^0,c
  7790  00352C  1E0F               	comf	(___awmod@dividend+1)^0,f,c
  7791  00352E  B0D8               	btfsc	status,0,c
  7792  003530  2A0F               	incf	(___awmod@dividend+1)^0,f,c
  7793  003532                     l6032:
  7794  003532  C00E  F00E         	movff	___awmod@dividend,?___awmod
  7795  003536  C00F  F00F         	movff	___awmod@dividend+1,?___awmod+1
  7796  00353A  0012               	return		;funcret
  7797  00353C                     __end_of___awmod:
  7798                           	opt callstack 0
  7799                           
  7800 ;; *************** function ___awdiv *****************
  7801 ;; Defined at:
  7802 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  7803 ;; Parameters:    Size  Location     Type
  7804 ;;  dividend        2   13[COMRAM] int 
  7805 ;;  divisor         2   15[COMRAM] int 
  7806 ;; Auto vars:     Size  Location     Type
  7807 ;;  quotient        2   19[COMRAM] int 
  7808 ;;  sign            1   18[COMRAM] unsigned char 
  7809 ;;  counter         1   17[COMRAM] unsigned char 
  7810 ;; Return value:  Size  Location     Type
  7811 ;;                  2   13[COMRAM] int 
  7812 ;; Registers used:
  7813 ;;		wreg, status,2, status,0
  7814 ;; Tracked objects:
  7815 ;;		On entry : 0/0
  7816 ;;		On exit  : 0/0
  7817 ;;		Unchanged: 0/0
  7818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7819 ;;      Params:         4       0       0       0       0       0       0
  7820 ;;      Locals:         4       0       0       0       0       0       0
  7821 ;;      Temps:          0       0       0       0       0       0       0
  7822 ;;      Totals:         8       0       0       0       0       0       0
  7823 ;;Total ram usage:        8 bytes
  7824 ;; Hardware stack levels used:    1
  7825 ;; Hardware stack levels required when called:    8
  7826 ;; This function calls:
  7827 ;;		Nothing
  7828 ;; This function is called by:
  7829 ;;		_efgtoa
  7830 ;; This function uses a non-reentrant model
  7831 ;;
  7832                           
  7833                           	psect	text25
  7834  003306                     __ptext25:
  7835                           	opt callstack 0
  7836  003306                     ___awdiv:
  7837                           	opt callstack 18
  7838  003306  0E00               	movlw	0
  7839  003308  6E13               	movwf	___awdiv@sign^0,c
  7840  00330A  BE11               	btfsc	(___awdiv@divisor+1)^0,7,c
  7841  00330C  EF8C  F019         	goto	u7190
  7842  003310  EF8A  F019         	goto	u7191
  7843  003314                     u7191:
  7844  003314  EF92  F019         	goto	l5964
  7845  003318                     u7190:
  7846  003318  6C10               	negf	___awdiv@divisor^0,c
  7847  00331A  1E11               	comf	(___awdiv@divisor+1)^0,f,c
  7848  00331C  B0D8               	btfsc	status,0,c
  7849  00331E  2A11               	incf	(___awdiv@divisor+1)^0,f,c
  7850  003320  0E01               	movlw	1
  7851  003322  6E13               	movwf	___awdiv@sign^0,c
  7852  003324                     l5964:
  7853  003324  BE0F               	btfsc	(___awdiv@dividend+1)^0,7,c
  7854  003326  EF99  F019         	goto	u7200
  7855  00332A  EF97  F019         	goto	u7201
  7856  00332E                     u7201:
  7857  00332E  EF9F  F019         	goto	l5970
  7858  003332                     u7200:
  7859  003332  6C0E               	negf	___awdiv@dividend^0,c
  7860  003334  1E0F               	comf	(___awdiv@dividend+1)^0,f,c
  7861  003336  B0D8               	btfsc	status,0,c
  7862  003338  2A0F               	incf	(___awdiv@dividend+1)^0,f,c
  7863  00333A  0E01               	movlw	1
  7864  00333C  1A13               	xorwf	___awdiv@sign^0,f,c
  7865  00333E                     l5970:
  7866  00333E  0E00               	movlw	0
  7867  003340  6E15               	movwf	(___awdiv@quotient+1)^0,c
  7868  003342  0E00               	movlw	0
  7869  003344  6E14               	movwf	___awdiv@quotient^0,c
  7870  003346  5010               	movf	___awdiv@divisor^0,w,c
  7871  003348  1011               	iorwf	(___awdiv@divisor+1)^0,w,c
  7872  00334A  B4D8               	btfsc	status,2,c
  7873  00334C  EFAA  F019         	goto	u7211
  7874  003350  EFAC  F019         	goto	u7210
  7875  003354                     u7211:
  7876  003354  EFD4  F019         	goto	l5992
  7877  003358                     u7210:
  7878  003358  0E01               	movlw	1
  7879  00335A  6E12               	movwf	___awdiv@counter^0,c
  7880  00335C  EFB4  F019         	goto	l5978
  7881  003360                     l5976:
  7882  003360  90D8               	bcf	status,0,c
  7883  003362  3610               	rlcf	___awdiv@divisor^0,f,c
  7884  003364  3611               	rlcf	(___awdiv@divisor+1)^0,f,c
  7885  003366  2A12               	incf	___awdiv@counter^0,f,c
  7886  003368                     l5978:
  7887  003368  AE11               	btfss	(___awdiv@divisor+1)^0,7,c
  7888  00336A  EFB9  F019         	goto	u7221
  7889  00336E  EFBB  F019         	goto	u7220
  7890  003372                     u7221:
  7891  003372  EFB0  F019         	goto	l5976
  7892  003376                     u7220:
  7893  003376                     l5980:
  7894  003376  90D8               	bcf	status,0,c
  7895  003378  3614               	rlcf	___awdiv@quotient^0,f,c
  7896  00337A  3615               	rlcf	(___awdiv@quotient+1)^0,f,c
  7897  00337C  5010               	movf	___awdiv@divisor^0,w,c
  7898  00337E  5C0E               	subwf	___awdiv@dividend^0,w,c
  7899  003380  5011               	movf	(___awdiv@divisor+1)^0,w,c
  7900  003382  580F               	subwfb	(___awdiv@dividend+1)^0,w,c
  7901  003384  A0D8               	btfss	status,0,c
  7902  003386  EFC7  F019         	goto	u7231
  7903  00338A  EFC9  F019         	goto	u7230
  7904  00338E                     u7231:
  7905  00338E  EFCE  F019         	goto	l5988
  7906  003392                     u7230:
  7907  003392  5010               	movf	___awdiv@divisor^0,w,c
  7908  003394  5E0E               	subwf	___awdiv@dividend^0,f,c
  7909  003396  5011               	movf	(___awdiv@divisor+1)^0,w,c
  7910  003398  5A0F               	subwfb	(___awdiv@dividend+1)^0,f,c
  7911  00339A  8014               	bsf	___awdiv@quotient^0,0,c
  7912  00339C                     l5988:
  7913  00339C  90D8               	bcf	status,0,c
  7914  00339E  3211               	rrcf	(___awdiv@divisor+1)^0,f,c
  7915  0033A0  3210               	rrcf	___awdiv@divisor^0,f,c
  7916  0033A2  2E12               	decfsz	___awdiv@counter^0,f,c
  7917  0033A4  EFBB  F019         	goto	l5980
  7918  0033A8                     l5992:
  7919  0033A8  5013               	movf	___awdiv@sign^0,w,c
  7920  0033AA  B4D8               	btfsc	status,2,c
  7921  0033AC  EFDA  F019         	goto	u7241
  7922  0033B0  EFDC  F019         	goto	u7240
  7923  0033B4                     u7241:
  7924  0033B4  EFE0  F019         	goto	l5996
  7925  0033B8                     u7240:
  7926  0033B8  6C14               	negf	___awdiv@quotient^0,c
  7927  0033BA  1E15               	comf	(___awdiv@quotient+1)^0,f,c
  7928  0033BC  B0D8               	btfsc	status,0,c
  7929  0033BE  2A15               	incf	(___awdiv@quotient+1)^0,f,c
  7930  0033C0                     l5996:
  7931  0033C0  C014  F00E         	movff	___awdiv@quotient,?___awdiv
  7932  0033C4  C015  F00F         	movff	___awdiv@quotient+1,?___awdiv+1
  7933  0033C8  0012               	return		;funcret
  7934  0033CA                     __end_of___awdiv:
  7935                           	opt callstack 0
  7936                           
  7937 ;; *************** function _atoi *****************
  7938 ;; Defined at:
  7939 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  7940 ;; Parameters:    Size  Location     Type
  7941 ;;  s               2   20[COMRAM] PTR const unsigned char 
  7942 ;;		 -> STR_7(22), 
  7943 ;; Auto vars:     Size  Location     Type
  7944 ;;  n               2   33[COMRAM] int 
  7945 ;;  neg             2   26[COMRAM] int 
  7946 ;; Return value:  Size  Location     Type
  7947 ;;                  2   20[COMRAM] int 
  7948 ;; Registers used:
  7949 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7950 ;; Tracked objects:
  7951 ;;		On entry : 0/0
  7952 ;;		On exit  : 0/0
  7953 ;;		Unchanged: 0/0
  7954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7955 ;;      Params:         2       0       0       0       0       0       0
  7956 ;;      Locals:         9       0       0       0       0       0       0
  7957 ;;      Temps:          4       0       0       0       0       0       0
  7958 ;;      Totals:        15       0       0       0       0       0       0
  7959 ;;Total ram usage:       15 bytes
  7960 ;; Hardware stack levels used:    1
  7961 ;; Hardware stack levels required when called:    9
  7962 ;; This function calls:
  7963 ;;		___wmul
  7964 ;;		_isdigit
  7965 ;;		_isspace
  7966 ;; This function is called by:
  7967 ;;		_vfpfcnvrt
  7968 ;; This function uses a non-reentrant model
  7969 ;;
  7970                           
  7971                           	psect	text26
  7972  002AC4                     __ptext26:
  7973                           	opt callstack 0
  7974  002AC4                     _atoi:
  7975                           	opt callstack 18
  7976  002AC4  0E00               	movlw	0
  7977  002AC6  6E23               	movwf	(atoi@n+1)^0,c
  7978  002AC8  0E00               	movlw	0
  7979  002ACA  6E22               	movwf	atoi@n^0,c
  7980  002ACC  0E00               	movlw	0
  7981  002ACE  6E1C               	movwf	(atoi@neg+1)^0,c
  7982  002AD0  0E00               	movlw	0
  7983  002AD2  6E1B               	movwf	atoi@neg^0,c
  7984  002AD4  EF6E  F015         	goto	l6440
  7985  002AD8                     l6438:
  7986  002AD8  4A15               	infsnz	atoi@s^0,f,c
  7987  002ADA  2A16               	incf	(atoi@s+1)^0,f,c
  7988  002ADC                     l6440:
  7989  002ADC  0E01               	movlw	1
  7990  002ADE  6E21               	movwf	_atoi$1751^0,c
  7991  002AE0  C015  FFF6         	movff	atoi@s,tblptrl
  7992  002AE4  C016  FFF7         	movff	atoi@s+1,tblptrh
  7993  002AE8                     	if	0	;tblptru may be non-zero
  7994  002AE8                     	endif
  7995  002AE8                     	if	0	;tblptru may be non-zero
  7996  002AE8                     	endif
  7997  002AE8  0008               	tblrd		*
  7998  002AEA  50F5               	movf	tablat,w,c
  7999  002AEC  0A20               	xorlw	32
  8000  002AEE  B4D8               	btfsc	status,2,c
  8001  002AF0  EF7C  F015         	goto	u8011
  8002  002AF4  EF7E  F015         	goto	u8010
  8003  002AF8                     u8011:
  8004  002AF8  EF9B  F015         	goto	l6448
  8005  002AFC                     u8010:
  8006  002AFC  0EF7               	movlw	247
  8007  002AFE  6E17               	movwf	??_atoi^0,c
  8008  002B00  0EFF               	movlw	255
  8009  002B02  6E18               	movwf	(??_atoi+1)^0,c
  8010  002B04  C015  FFF6         	movff	atoi@s,tblptrl
  8011  002B08  C016  FFF7         	movff	atoi@s+1,tblptrh
  8012  002B0C                     	if	0	;tblptru may be non-zero
  8013  002B0C                     	endif
  8014  002B0C                     	if	0	;tblptru may be non-zero
  8015  002B0C                     	endif
  8016  002B0C  0008               	tblrd		*
  8017  002B0E  50F5               	movf	tablat,w,c
  8018  002B10  6E19               	movwf	(??_atoi+2)^0,c
  8019  002B12  6A1A               	clrf	(??_atoi+3)^0,c
  8020  002B14  5017               	movf	??_atoi^0,w,c
  8021  002B16  2619               	addwf	(??_atoi+2)^0,f,c
  8022  002B18  5018               	movf	(??_atoi+1)^0,w,c
  8023  002B1A  221A               	addwfc	(??_atoi+3)^0,f,c
  8024  002B1C  501A               	movf	(??_atoi+3)^0,w,c
  8025  002B1E  E109               	bnz	u8020
  8026  002B20  0E05               	movlw	5
  8027  002B22  5C19               	subwf	(??_atoi+2)^0,w,c
  8028  002B24  A0D8               	btfss	status,0,c
  8029  002B26  EF97  F015         	goto	u8021
  8030  002B2A  EF99  F015         	goto	u8020
  8031  002B2E                     u8021:
  8032  002B2E  EF9B  F015         	goto	l6448
  8033  002B32                     u8020:
  8034  002B32  0E00               	movlw	0
  8035  002B34  6E21               	movwf	_atoi$1751^0,c
  8036  002B36                     l6448:
  8037  002B36  C021  F01D         	movff	_atoi$1751,_atoi$1750
  8038  002B3A  6A1E               	clrf	(_atoi$1750+1)^0,c
  8039  002B3C  501D               	movf	_atoi$1750^0,w,c
  8040  002B3E  101E               	iorwf	(_atoi$1750+1)^0,w,c
  8041  002B40  A4D8               	btfss	status,2,c
  8042  002B42  EFA5  F015         	goto	u8031
  8043  002B46  EFA7  F015         	goto	u8030
  8044  002B4A                     u8031:
  8045  002B4A  EF6C  F015         	goto	l6438
  8046  002B4E                     u8030:
  8047  002B4E  EFB1  F015         	goto	l6458
  8048  002B52                     l6454:
  8049  002B52  0E00               	movlw	0
  8050  002B54  6E1C               	movwf	(atoi@neg+1)^0,c
  8051  002B56  0E01               	movlw	1
  8052  002B58  6E1B               	movwf	atoi@neg^0,c
  8053  002B5A                     l6456:
  8054  002B5A  4A15               	infsnz	atoi@s^0,f,c
  8055  002B5C  2A16               	incf	(atoi@s+1)^0,f,c
  8056  002B5E  EFE6  F015         	goto	l6464
  8057  002B62                     l6458:
  8058  002B62  C015  FFF6         	movff	atoi@s,tblptrl
  8059  002B66  C016  FFF7         	movff	atoi@s+1,tblptrh
  8060  002B6A                     	if	0	;tblptru may be non-zero
  8061  002B6A                     	endif
  8062  002B6A                     	if	0	;tblptru may be non-zero
  8063  002B6A                     	endif
  8064  002B6A  0008               	tblrd		*
  8065  002B6C  50F5               	movf	tablat,w,c
  8066  002B6E  6E17               	movwf	??_atoi^0,c
  8067  002B70  6A18               	clrf	(??_atoi+1)^0,c
  8068                           
  8069                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8070                           ; Switch size 1, requested type "simple"
  8071                           ; Number of cases is 1, Range of values is 0 to 0
  8072                           ; switch strategies available:
  8073                           ; Name         Instructions Cycles
  8074                           ; simple_byte            4     3 (average)
  8075                           ;	Chosen strategy is simple_byte
  8076  002B72  5018               	movf	(??_atoi+1)^0,w,c
  8077  002B74  0A00               	xorlw	0	; case 0
  8078  002B76  B4D8               	btfsc	status,2,c
  8079  002B78  EFC0  F015         	goto	l7164
  8080  002B7C  EFE6  F015         	goto	l6464
  8081  002B80                     l7164:
  8082                           
  8083                           ; Switch size 1, requested type "simple"
  8084                           ; Number of cases is 2, Range of values is 43 to 45
  8085                           ; switch strategies available:
  8086                           ; Name         Instructions Cycles
  8087                           ; simple_byte            7     4 (average)
  8088                           ;	Chosen strategy is simple_byte
  8089  002B80  5017               	movf	??_atoi^0,w,c
  8090  002B82  0A2B               	xorlw	43	; case 43
  8091  002B84  B4D8               	btfsc	status,2,c
  8092  002B86  EFAD  F015         	goto	l6456
  8093  002B8A  0A06               	xorlw	6	; case 45
  8094  002B8C  B4D8               	btfsc	status,2,c
  8095  002B8E  EFA9  F015         	goto	l6454
  8096  002B92  EFE6  F015         	goto	l6464
  8097  002B96                     l6460:
  8098  002B96  C022  F00E         	movff	atoi@n,___wmul@multiplier
  8099  002B9A  C023  F00F         	movff	atoi@n+1,___wmul@multiplier+1
  8100  002B9E  0E00               	movlw	0
  8101  002BA0  6E11               	movwf	(___wmul@multiplicand+1)^0,c
  8102  002BA2  0E0A               	movlw	10
  8103  002BA4  6E10               	movwf	___wmul@multiplicand^0,c
  8104  002BA6  EC70  F01E         	call	___wmul	;wreg free
  8105  002BAA  C015  FFF6         	movff	atoi@s,tblptrl
  8106  002BAE  C016  FFF7         	movff	atoi@s+1,tblptrh
  8107  002BB2                     	if	0	;tblptru may be non-zero
  8108  002BB2                     	endif
  8109  002BB2                     	if	0	;tblptru may be non-zero
  8110  002BB2                     	endif
  8111  002BB2  0008               	tblrd		*
  8112  002BB4  50F5               	movf	tablat,w,c
  8113  002BB6  5E0E               	subwf	?___wmul^0,f,c
  8114  002BB8  0E00               	movlw	0
  8115  002BBA  5A0F               	subwfb	(?___wmul+1)^0,f,c
  8116  002BBC  0E30               	movlw	48
  8117  002BBE  240E               	addwf	?___wmul^0,w,c
  8118  002BC0  6E22               	movwf	atoi@n^0,c
  8119  002BC2  0E00               	movlw	0
  8120  002BC4  200F               	addwfc	(?___wmul+1)^0,w,c
  8121  002BC6  6E23               	movwf	(atoi@n+1)^0,c
  8122  002BC8  EFAD  F015         	goto	l6456
  8123  002BCC                     l6464:
  8124  002BCC  0ED0               	movlw	208
  8125  002BCE  6E17               	movwf	??_atoi^0,c
  8126  002BD0  0EFF               	movlw	255
  8127  002BD2  6E18               	movwf	(??_atoi+1)^0,c
  8128  002BD4  C015  FFF6         	movff	atoi@s,tblptrl
  8129  002BD8  C016  FFF7         	movff	atoi@s+1,tblptrh
  8130  002BDC                     	if	0	;tblptru may be non-zero
  8131  002BDC                     	endif
  8132  002BDC                     	if	0	;tblptru may be non-zero
  8133  002BDC                     	endif
  8134  002BDC  0008               	tblrd		*
  8135  002BDE  50F5               	movf	tablat,w,c
  8136  002BE0  6E19               	movwf	(??_atoi+2)^0,c
  8137  002BE2  6A1A               	clrf	(??_atoi+3)^0,c
  8138  002BE4  5017               	movf	??_atoi^0,w,c
  8139  002BE6  2619               	addwf	(??_atoi+2)^0,f,c
  8140  002BE8  5018               	movf	(??_atoi+1)^0,w,c
  8141  002BEA  221A               	addwfc	(??_atoi+3)^0,f,c
  8142  002BEC  501A               	movf	(??_atoi+3)^0,w,c
  8143  002BEE  E10A               	bnz	u8040
  8144  002BF0  0E0A               	movlw	10
  8145  002BF2  5C19               	subwf	(??_atoi+2)^0,w,c
  8146  002BF4  A0D8               	btfss	status,0,c
  8147  002BF6  EFFF  F015         	goto	u8041
  8148  002BFA  EF02  F016         	goto	u8040
  8149  002BFE                     u8041:
  8150  002BFE  0E01               	movlw	1
  8151  002C00  EF03  F016         	goto	u8050
  8152  002C04                     u8040:
  8153  002C04  0E00               	movlw	0
  8154  002C06                     u8050:
  8155  002C06  6E1F               	movwf	_atoi$1752^0,c
  8156  002C08  6A20               	clrf	(_atoi$1752+1)^0,c
  8157  002C0A  501F               	movf	_atoi$1752^0,w,c
  8158  002C0C  1020               	iorwf	(_atoi$1752+1)^0,w,c
  8159  002C0E  A4D8               	btfss	status,2,c
  8160  002C10  EF0C  F016         	goto	u8061
  8161  002C14  EF0E  F016         	goto	u8060
  8162  002C18                     u8061:
  8163  002C18  EFCB  F015         	goto	l6460
  8164  002C1C                     u8060:
  8165  002C1C  501B               	movf	atoi@neg^0,w,c
  8166  002C1E  101C               	iorwf	(atoi@neg+1)^0,w,c
  8167  002C20  A4D8               	btfss	status,2,c
  8168  002C22  EF15  F016         	goto	u8071
  8169  002C26  EF17  F016         	goto	u8070
  8170  002C2A                     u8071:
  8171  002C2A  EF25  F016         	goto	l1388
  8172  002C2E                     u8070:
  8173  002C2E  C022  F017         	movff	atoi@n,??_atoi
  8174  002C32  C023  F018         	movff	atoi@n+1,??_atoi+1
  8175  002C36  1E17               	comf	??_atoi^0,f,c
  8176  002C38  1E18               	comf	(??_atoi+1)^0,f,c
  8177  002C3A  4A17               	infsnz	??_atoi^0,f,c
  8178  002C3C  2A18               	incf	(??_atoi+1)^0,f,c
  8179  002C3E  C017  F015         	movff	??_atoi,?_atoi
  8180  002C42  C018  F016         	movff	??_atoi+1,?_atoi+1
  8181  002C46  EF29  F016         	goto	l1391
  8182  002C4A                     l1388:
  8183  002C4A  C022  F015         	movff	atoi@n,?_atoi
  8184  002C4E  C023  F016         	movff	atoi@n+1,?_atoi+1
  8185  002C52                     l1391:
  8186  002C52  0012               	return		;funcret
  8187  002C54                     __end_of_atoi:
  8188                           	opt callstack 0
  8189                           
  8190 ;; *************** function _isspace *****************
  8191 ;; Defined at:
  8192 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  8193 ;; Parameters:    Size  Location     Type
  8194 ;;  c               2   13[COMRAM] int 
  8195 ;; Auto vars:     Size  Location     Type
  8196 ;;		None
  8197 ;; Return value:  Size  Location     Type
  8198 ;;                  2   13[COMRAM] int 
  8199 ;; Registers used:
  8200 ;;		wreg, status,2, status,0
  8201 ;; Tracked objects:
  8202 ;;		On entry : 0/0
  8203 ;;		On exit  : 0/0
  8204 ;;		Unchanged: 0/0
  8205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8206 ;;      Params:         2       0       0       0       0       0       0
  8207 ;;      Locals:         1       0       0       0       0       0       0
  8208 ;;      Temps:          4       0       0       0       0       0       0
  8209 ;;      Totals:         7       0       0       0       0       0       0
  8210 ;;Total ram usage:        7 bytes
  8211 ;; Hardware stack levels used:    1
  8212 ;; Hardware stack levels required when called:    8
  8213 ;; This function calls:
  8214 ;;		Nothing
  8215 ;; This function is called by:
  8216 ;;		_atoi
  8217 ;; This function uses a non-reentrant model
  8218 ;;
  8219                           
  8220                           	psect	text27
  8221  0038A2                     __ptext27:
  8222                           	opt callstack 0
  8223  0038A2                     _isspace:
  8224                           	opt callstack 18
  8225  0038A2  0E01               	movlw	1
  8226  0038A4  6E14               	movwf	_isspace$1781^0,c
  8227  0038A6  0E20               	movlw	32
  8228  0038A8  180E               	xorwf	isspace@c^0,w,c
  8229  0038AA  100F               	iorwf	(isspace@c+1)^0,w,c
  8230  0038AC  B4D8               	btfsc	status,2,c
  8231  0038AE  EF5B  F01C         	goto	u7471
  8232  0038B2  EF5D  F01C         	goto	u7470
  8233  0038B6                     u7471:
  8234  0038B6  EF76  F01C         	goto	l6134
  8235  0038BA                     u7470:
  8236  0038BA  0EF7               	movlw	247
  8237  0038BC  6E10               	movwf	??_isspace^0,c
  8238  0038BE  0EFF               	movlw	255
  8239  0038C0  6E11               	movwf	(??_isspace+1)^0,c
  8240  0038C2  C00E  F012         	movff	isspace@c,??_isspace+2
  8241  0038C6  C00F  F013         	movff	isspace@c+1,??_isspace+3
  8242  0038CA  5010               	movf	??_isspace^0,w,c
  8243  0038CC  2612               	addwf	(??_isspace+2)^0,f,c
  8244  0038CE  5011               	movf	(??_isspace+1)^0,w,c
  8245  0038D0  2213               	addwfc	(??_isspace+3)^0,f,c
  8246  0038D2  5013               	movf	(??_isspace+3)^0,w,c
  8247  0038D4  E109               	bnz	u7480
  8248  0038D6  0E05               	movlw	5
  8249  0038D8  5C12               	subwf	(??_isspace+2)^0,w,c
  8250  0038DA  A0D8               	btfss	status,0,c
  8251  0038DC  EF72  F01C         	goto	u7481
  8252  0038E0  EF74  F01C         	goto	u7480
  8253  0038E4                     u7481:
  8254  0038E4  EF76  F01C         	goto	l6134
  8255  0038E8                     u7480:
  8256  0038E8  0E00               	movlw	0
  8257  0038EA  6E14               	movwf	_isspace$1781^0,c
  8258  0038EC                     l6134:
  8259  0038EC  C014  F00E         	movff	_isspace$1781,?_isspace
  8260  0038F0  6A0F               	clrf	(?_isspace+1)^0,c
  8261  0038F2  0012               	return		;funcret
  8262  0038F4                     __end_of_isspace:
  8263                           	opt callstack 0
  8264                           
  8265 ;; *************** function _isdigit *****************
  8266 ;; Defined at:
  8267 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  8268 ;; Parameters:    Size  Location     Type
  8269 ;;  c               2   13[COMRAM] int 
  8270 ;; Auto vars:     Size  Location     Type
  8271 ;;		None
  8272 ;; Return value:  Size  Location     Type
  8273 ;;                  2   13[COMRAM] int 
  8274 ;; Registers used:
  8275 ;;		wreg, status,2, status,0
  8276 ;; Tracked objects:
  8277 ;;		On entry : 0/0
  8278 ;;		On exit  : 0/0
  8279 ;;		Unchanged: 0/0
  8280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8281 ;;      Params:         2       0       0       0       0       0       0
  8282 ;;      Locals:         0       0       0       0       0       0       0
  8283 ;;      Temps:          4       0       0       0       0       0       0
  8284 ;;      Totals:         6       0       0       0       0       0       0
  8285 ;;Total ram usage:        6 bytes
  8286 ;; Hardware stack levels used:    1
  8287 ;; Hardware stack levels required when called:    8
  8288 ;; This function calls:
  8289 ;;		Nothing
  8290 ;; This function is called by:
  8291 ;;		_vfpfcnvrt
  8292 ;;		_atoi
  8293 ;; This function uses a non-reentrant model
  8294 ;;
  8295                           
  8296                           	psect	text28
  8297  003B36                     __ptext28:
  8298                           	opt callstack 0
  8299  003B36                     _isdigit:
  8300                           	opt callstack 19
  8301  003B36  0ED0               	movlw	208
  8302  003B38  6E10               	movwf	??_isdigit^0,c
  8303  003B3A  0EFF               	movlw	255
  8304  003B3C  6E11               	movwf	(??_isdigit+1)^0,c
  8305  003B3E  C00E  F012         	movff	isdigit@c,??_isdigit+2
  8306  003B42  C00F  F013         	movff	isdigit@c+1,??_isdigit+3
  8307  003B46  5010               	movf	??_isdigit^0,w,c
  8308  003B48  2612               	addwf	(??_isdigit+2)^0,f,c
  8309  003B4A  5011               	movf	(??_isdigit+1)^0,w,c
  8310  003B4C  2213               	addwfc	(??_isdigit+3)^0,f,c
  8311  003B4E  5013               	movf	(??_isdigit+3)^0,w,c
  8312  003B50  E10A               	bnz	u6750
  8313  003B52  0E0A               	movlw	10
  8314  003B54  5C12               	subwf	(??_isdigit+2)^0,w,c
  8315  003B56  A0D8               	btfss	status,0,c
  8316  003B58  EFB0  F01D         	goto	u6751
  8317  003B5C  EFB3  F01D         	goto	u6750
  8318  003B60                     u6751:
  8319  003B60  0E01               	movlw	1
  8320  003B62  EFB4  F01D         	goto	u6760
  8321  003B66                     u6750:
  8322  003B66  0E00               	movlw	0
  8323  003B68                     u6760:
  8324  003B68  6E0E               	movwf	?_isdigit^0,c
  8325  003B6A  6A0F               	clrf	(?_isdigit+1)^0,c
  8326  003B6C  0012               	return		;funcret
  8327  003B6E                     __end_of_isdigit:
  8328                           	opt callstack 0
  8329                           
  8330 ;; *************** function ___wmul *****************
  8331 ;; Defined at:
  8332 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  8333 ;; Parameters:    Size  Location     Type
  8334 ;;  multiplier      2   13[COMRAM] unsigned int 
  8335 ;;  multiplicand    2   15[COMRAM] unsigned int 
  8336 ;; Auto vars:     Size  Location     Type
  8337 ;;  product         2   17[COMRAM] unsigned int 
  8338 ;; Return value:  Size  Location     Type
  8339 ;;                  2   13[COMRAM] unsigned int 
  8340 ;; Registers used:
  8341 ;;		wreg, status,2, status,0, prodl, prodh
  8342 ;; Tracked objects:
  8343 ;;		On entry : 0/0
  8344 ;;		On exit  : 0/0
  8345 ;;		Unchanged: 0/0
  8346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8347 ;;      Params:         4       0       0       0       0       0       0
  8348 ;;      Locals:         2       0       0       0       0       0       0
  8349 ;;      Temps:          0       0       0       0       0       0       0
  8350 ;;      Totals:         6       0       0       0       0       0       0
  8351 ;;Total ram usage:        6 bytes
  8352 ;; Hardware stack levels used:    1
  8353 ;; Hardware stack levels required when called:    8
  8354 ;; This function calls:
  8355 ;;		Nothing
  8356 ;; This function is called by:
  8357 ;;		_atoi
  8358 ;; This function uses a non-reentrant model
  8359 ;;
  8360                           
  8361                           	psect	text29
  8362  003CE0                     __ptext29:
  8363                           	opt callstack 0
  8364  003CE0                     ___wmul:
  8365                           	opt callstack 18
  8366  003CE0  500E               	movf	___wmul@multiplier^0,w,c
  8367  003CE2  0210               	mulwf	___wmul@multiplicand^0,c
  8368  003CE4  CFF3 F012          	movff	prodl,___wmul@product
  8369  003CE8  CFF4 F013          	movff	prodh,___wmul@product+1
  8370  003CEC  500E               	movf	___wmul@multiplier^0,w,c
  8371  003CEE  0211               	mulwf	(___wmul@multiplicand+1)^0,c
  8372  003CF0  50F3               	movf	243,w,c
  8373  003CF2  2613               	addwf	(___wmul@product+1)^0,f,c
  8374  003CF4  500F               	movf	(___wmul@multiplier+1)^0,w,c
  8375  003CF6  0210               	mulwf	___wmul@multiplicand^0,c
  8376  003CF8  50F3               	movf	243,w,c
  8377  003CFA  2613               	addwf	(___wmul@product+1)^0,f,c
  8378  003CFC  C012  F00E         	movff	___wmul@product,?___wmul
  8379  003D00  C013  F00F         	movff	___wmul@product+1,?___wmul+1
  8380  003D04  0012               	return		;funcret
  8381  003D06                     __end_of___wmul:
  8382                           	opt callstack 0
  8383                           
  8384 ;; *************** function _putsXLCD *****************
  8385 ;; Defined at:
  8386 ;;		line 309 in file "xlcd.c"
  8387 ;; Parameters:    Size  Location     Type
  8388 ;;  buffer          2   14[COMRAM] PTR unsigned char 
  8389 ;;		 -> main@valor_analog(5), STR_6(31), STR_5(26), STR_4(25), 
  8390 ;;		 -> STR_3(3), STR_2(20), STR_1(23), main@name2(21), 
  8391 ;;		 -> main@name1(21), 
  8392 ;; Auto vars:     Size  Location     Type
  8393 ;;		None
  8394 ;; Return value:  Size  Location     Type
  8395 ;;                  1    wreg      void 
  8396 ;; Registers used:
  8397 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8398 ;; Tracked objects:
  8399 ;;		On entry : 0/0
  8400 ;;		On exit  : 0/0
  8401 ;;		Unchanged: 0/0
  8402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8403 ;;      Params:         2       0       0       0       0       0       0
  8404 ;;      Locals:         0       0       0       0       0       0       0
  8405 ;;      Temps:          0       0       0       0       0       0       0
  8406 ;;      Totals:         2       0       0       0       0       0       0
  8407 ;;Total ram usage:        2 bytes
  8408 ;; Hardware stack levels used:    1
  8409 ;; Hardware stack levels required when called:   10
  8410 ;; This function calls:
  8411 ;;		_BusyXLCD
  8412 ;;		_WriteDataXLCD
  8413 ;; This function is called by:
  8414 ;;		_main
  8415 ;; This function uses a non-reentrant model
  8416 ;;
  8417                           
  8418                           	psect	text30
  8419  003666                     __ptext30:
  8420                           	opt callstack 0
  8421  003666                     _putsXLCD:
  8422                           	opt callstack 20
  8423  003666                     
  8424                           ;xlcd.c: 310:     while (*buffer)
  8425  003666  EF53  F01B         	goto	l6882
  8426  00366A                     l6876:
  8427  00366A  ECC9  F01E         	call	_BusyXLCD	;wreg free
  8428  00366E  0900               	iorlw	0
  8429  003670  A4D8               	btfss	status,2,c
  8430  003672  EF3D  F01B         	goto	u8451
  8431  003676  EF3F  F01B         	goto	u8450
  8432  00367A                     u8451:
  8433  00367A  EF35  F01B         	goto	l6876
  8434  00367E                     u8450:
  8435  00367E                     
  8436                           ;xlcd.c: 313:         WriteDataXLCD(*buffer);
  8437  00367E  C00F  FFF6         	movff	putsXLCD@buffer,tblptrl
  8438  003682  C010  FFF7         	movff	putsXLCD@buffer+1,tblptrh
  8439  003686  6AF8               	clrf	tblptru,c
  8440  003688  0E05               	movlw	(high __ramtop+-1)
  8441  00368A  64F7               	cpfsgt	tblptrh,c
  8442  00368C  D003               	bra	u8467
  8443  00368E  0008               	tblrd		*
  8444  003690  50F5               	movf	tablat,w,c
  8445  003692  D005               	bra	u8460
  8446  003694                     u8467:
  8447  003694  CFF6 FFE1          	movff	tblptrl,fsr1l
  8448  003698  CFF7 FFE2          	movff	tblptrh,fsr1h
  8449  00369C  50E7               	movf	indf1,w,c
  8450  00369E                     u8460:
  8451  00369E  EC25  F01D         	call	_WriteDataXLCD
  8452  0036A2                     
  8453                           ;xlcd.c: 314:         buffer++;
  8454  0036A2  4A0F               	infsnz	putsXLCD@buffer^0,f,c
  8455  0036A4  2A10               	incf	(putsXLCD@buffer+1)^0,f,c
  8456  0036A6                     l6882:
  8457                           
  8458                           ;xlcd.c: 310:     while (*buffer)
  8459  0036A6  C00F  FFF6         	movff	putsXLCD@buffer,tblptrl
  8460  0036AA  C010  FFF7         	movff	putsXLCD@buffer+1,tblptrh
  8461  0036AE  6AF8               	clrf	tblptru,c
  8462  0036B0  0E05               	movlw	(high __ramtop+-1)
  8463  0036B2  64F7               	cpfsgt	tblptrh,c
  8464  0036B4  D003               	bra	u8477
  8465  0036B6  0008               	tblrd		*
  8466  0036B8  50F5               	movf	tablat,w,c
  8467  0036BA  D005               	bra	u8470
  8468  0036BC                     u8477:
  8469  0036BC  CFF6 FFE1          	movff	tblptrl,fsr1l
  8470  0036C0  CFF7 FFE2          	movff	tblptrh,fsr1h
  8471  0036C4  50E7               	movf	indf1,w,c
  8472  0036C6                     u8470:
  8473  0036C6  0900               	iorlw	0
  8474  0036C8  A4D8               	btfss	status,2,c
  8475  0036CA  EF69  F01B         	goto	u8481
  8476  0036CE  EF6B  F01B         	goto	u8480
  8477  0036D2                     u8481:
  8478  0036D2  EF35  F01B         	goto	l6876
  8479  0036D6                     u8480:
  8480  0036D6  0012               	return		;funcret
  8481  0036D8                     __end_of_putsXLCD:
  8482                           	opt callstack 0
  8483                           
  8484 ;; *************** function ___xxtofl *****************
  8485 ;; Defined at:
  8486 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
  8487 ;; Parameters:    Size  Location     Type
  8488 ;;  sign            1    wreg     unsigned char 
  8489 ;;  val             4   13[COMRAM] long 
  8490 ;; Auto vars:     Size  Location     Type
  8491 ;;  sign            1   21[COMRAM] unsigned char 
  8492 ;;  arg             4   23[COMRAM] unsigned long 
  8493 ;;  exp             1   22[COMRAM] unsigned char 
  8494 ;; Return value:  Size  Location     Type
  8495 ;;                  4   13[COMRAM] unsigned char 
  8496 ;; Registers used:
  8497 ;;		wreg, status,2, status,0
  8498 ;; Tracked objects:
  8499 ;;		On entry : 0/0
  8500 ;;		On exit  : 0/0
  8501 ;;		Unchanged: 0/0
  8502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8503 ;;      Params:         4       0       0       0       0       0       0
  8504 ;;      Locals:         6       0       0       0       0       0       0
  8505 ;;      Temps:          4       0       0       0       0       0       0
  8506 ;;      Totals:        14       0       0       0       0       0       0
  8507 ;;Total ram usage:       14 bytes
  8508 ;; Hardware stack levels used:    1
  8509 ;; Hardware stack levels required when called:    8
  8510 ;; This function calls:
  8511 ;;		Nothing
  8512 ;; This function is called by:
  8513 ;;		_main
  8514 ;; This function uses a non-reentrant model
  8515 ;;
  8516                           
  8517                           	psect	text31
  8518  002910                     __ptext31:
  8519                           	opt callstack 0
  8520  002910                     ___xxtofl:
  8521                           	opt callstack 22
  8522                           
  8523                           ;incstack = 0
  8524                           ;___xxtofl@sign stored from wreg
  8525  002910  6E16               	movwf	___xxtofl@sign^0,c
  8526  002912  5016               	movf	___xxtofl@sign^0,w,c
  8527  002914  B4D8               	btfsc	status,2,c
  8528  002916  EF8F  F014         	goto	u8491
  8529  00291A  EF91  F014         	goto	u8490
  8530  00291E                     u8491:
  8531  00291E  EFB3  F014         	goto	l1333
  8532  002922                     u8490:
  8533  002922  BE11               	btfsc	(___xxtofl@val+3)^0,7,c
  8534  002924  EF98  F014         	goto	u8500
  8535  002928  EF96  F014         	goto	u8501
  8536  00292C                     u8501:
  8537  00292C  EFB3  F014         	goto	l1333
  8538  002930                     u8500:
  8539  002930  C00E  F012         	movff	___xxtofl@val,??___xxtofl
  8540  002934  C00F  F013         	movff	___xxtofl@val+1,??___xxtofl+1
  8541  002938  C010  F014         	movff	___xxtofl@val+2,??___xxtofl+2
  8542  00293C  C011  F015         	movff	___xxtofl@val+3,??___xxtofl+3
  8543  002940  1E12               	comf	??___xxtofl^0,f,c
  8544  002942  1E13               	comf	(??___xxtofl+1)^0,f,c
  8545  002944  1E14               	comf	(??___xxtofl+2)^0,f,c
  8546  002946  1E15               	comf	(??___xxtofl+3)^0,f,c
  8547  002948  2A12               	incf	??___xxtofl^0,f,c
  8548  00294A  0E00               	movlw	0
  8549  00294C  2213               	addwfc	(??___xxtofl+1)^0,f,c
  8550  00294E  2214               	addwfc	(??___xxtofl+2)^0,f,c
  8551  002950  2215               	addwfc	(??___xxtofl+3)^0,f,c
  8552  002952  C012  F018         	movff	??___xxtofl,___xxtofl@arg
  8553  002956  C013  F019         	movff	??___xxtofl+1,___xxtofl@arg+1
  8554  00295A  C014  F01A         	movff	??___xxtofl+2,___xxtofl@arg+2
  8555  00295E  C015  F01B         	movff	??___xxtofl+3,___xxtofl@arg+3
  8556  002962  EFBB  F014         	goto	l6902
  8557  002966                     l1333:
  8558  002966  C00E  F018         	movff	___xxtofl@val,___xxtofl@arg
  8559  00296A  C00F  F019         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8560  00296E  C010  F01A         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8561  002972  C011  F01B         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8562  002976                     l6902:
  8563  002976  500E               	movf	___xxtofl@val^0,w,c
  8564  002978  100F               	iorwf	(___xxtofl@val+1)^0,w,c
  8565  00297A  1010               	iorwf	(___xxtofl@val+2)^0,w,c
  8566  00297C  1011               	iorwf	(___xxtofl@val+3)^0,w,c
  8567  00297E  A4D8               	btfss	status,2,c
  8568  002980  EFC4  F014         	goto	u8511
  8569  002984  EFC6  F014         	goto	u8510
  8570  002988                     u8511:
  8571  002988  EFD0  F014         	goto	l6908
  8572  00298C                     u8510:
  8573  00298C  0E00               	movlw	0
  8574  00298E  6E0E               	movwf	?___xxtofl^0,c
  8575  002990  0E00               	movlw	0
  8576  002992  6E0F               	movwf	(?___xxtofl+1)^0,c
  8577  002994  0E00               	movlw	0
  8578  002996  6E10               	movwf	(?___xxtofl+2)^0,c
  8579  002998  0E00               	movlw	0
  8580  00299A  6E11               	movwf	(?___xxtofl+3)^0,c
  8581  00299C  EF61  F015         	goto	l1336
  8582  0029A0                     l6908:
  8583  0029A0  0E96               	movlw	150
  8584  0029A2  6E17               	movwf	___xxtofl@exp^0,c
  8585  0029A4  EFDA  F014         	goto	l6912
  8586  0029A8                     l6910:
  8587  0029A8  2A17               	incf	___xxtofl@exp^0,f,c
  8588  0029AA  90D8               	bcf	status,0,c
  8589  0029AC  321B               	rrcf	(___xxtofl@arg+3)^0,f,c
  8590  0029AE  321A               	rrcf	(___xxtofl@arg+2)^0,f,c
  8591  0029B0  3219               	rrcf	(___xxtofl@arg+1)^0,f,c
  8592  0029B2  3218               	rrcf	___xxtofl@arg^0,f,c
  8593  0029B4                     l6912:
  8594  0029B4  0E00               	movlw	0
  8595  0029B6  1418               	andwf	___xxtofl@arg^0,w,c
  8596  0029B8  6E12               	movwf	??___xxtofl^0,c
  8597  0029BA  0E00               	movlw	0
  8598  0029BC  1419               	andwf	(___xxtofl@arg+1)^0,w,c
  8599  0029BE  6E13               	movwf	(??___xxtofl+1)^0,c
  8600  0029C0  0E00               	movlw	0
  8601  0029C2  141A               	andwf	(___xxtofl@arg+2)^0,w,c
  8602  0029C4  6E14               	movwf	(??___xxtofl+2)^0,c
  8603  0029C6  0EFE               	movlw	254
  8604  0029C8  141B               	andwf	(___xxtofl@arg+3)^0,w,c
  8605  0029CA  6E15               	movwf	(??___xxtofl+3)^0,c
  8606  0029CC  5012               	movf	??___xxtofl^0,w,c
  8607  0029CE  1013               	iorwf	(??___xxtofl+1)^0,w,c
  8608  0029D0  1014               	iorwf	(??___xxtofl+2)^0,w,c
  8609  0029D2  1015               	iorwf	(??___xxtofl+3)^0,w,c
  8610  0029D4  A4D8               	btfss	status,2,c
  8611  0029D6  EFEF  F014         	goto	u8521
  8612  0029DA  EFF1  F014         	goto	u8520
  8613  0029DE                     u8521:
  8614  0029DE  EFD4  F014         	goto	l6910
  8615  0029E2                     u8520:
  8616  0029E2  EFFF  F014         	goto	l1340
  8617  0029E6                     l6914:
  8618  0029E6  2A17               	incf	___xxtofl@exp^0,f,c
  8619  0029E8  0E01               	movlw	1
  8620  0029EA  2618               	addwf	___xxtofl@arg^0,f,c
  8621  0029EC  0E00               	movlw	0
  8622  0029EE  2219               	addwfc	(___xxtofl@arg+1)^0,f,c
  8623  0029F0  221A               	addwfc	(___xxtofl@arg+2)^0,f,c
  8624  0029F2  221B               	addwfc	(___xxtofl@arg+3)^0,f,c
  8625  0029F4  90D8               	bcf	status,0,c
  8626  0029F6  321B               	rrcf	(___xxtofl@arg+3)^0,f,c
  8627  0029F8  321A               	rrcf	(___xxtofl@arg+2)^0,f,c
  8628  0029FA  3219               	rrcf	(___xxtofl@arg+1)^0,f,c
  8629  0029FC  3218               	rrcf	___xxtofl@arg^0,f,c
  8630  0029FE                     l1340:
  8631  0029FE  0E00               	movlw	0
  8632  002A00  1418               	andwf	___xxtofl@arg^0,w,c
  8633  002A02  6E12               	movwf	??___xxtofl^0,c
  8634  002A04  0E00               	movlw	0
  8635  002A06  1419               	andwf	(___xxtofl@arg+1)^0,w,c
  8636  002A08  6E13               	movwf	(??___xxtofl+1)^0,c
  8637  002A0A  0E00               	movlw	0
  8638  002A0C  141A               	andwf	(___xxtofl@arg+2)^0,w,c
  8639  002A0E  6E14               	movwf	(??___xxtofl+2)^0,c
  8640  002A10  0EFF               	movlw	255
  8641  002A12  141B               	andwf	(___xxtofl@arg+3)^0,w,c
  8642  002A14  6E15               	movwf	(??___xxtofl+3)^0,c
  8643  002A16  5012               	movf	??___xxtofl^0,w,c
  8644  002A18  1013               	iorwf	(??___xxtofl+1)^0,w,c
  8645  002A1A  1014               	iorwf	(??___xxtofl+2)^0,w,c
  8646  002A1C  1015               	iorwf	(??___xxtofl+3)^0,w,c
  8647  002A1E  A4D8               	btfss	status,2,c
  8648  002A20  EF14  F015         	goto	u8531
  8649  002A24  EF16  F015         	goto	u8530
  8650  002A28                     u8531:
  8651  002A28  EFF3  F014         	goto	l6914
  8652  002A2C                     u8530:
  8653  002A2C  EF1E  F015         	goto	l6922
  8654  002A30                     l6920:
  8655  002A30  0617               	decf	___xxtofl@exp^0,f,c
  8656  002A32  90D8               	bcf	status,0,c
  8657  002A34  3618               	rlcf	___xxtofl@arg^0,f,c
  8658  002A36  3619               	rlcf	(___xxtofl@arg+1)^0,f,c
  8659  002A38  361A               	rlcf	(___xxtofl@arg+2)^0,f,c
  8660  002A3A  361B               	rlcf	(___xxtofl@arg+3)^0,f,c
  8661  002A3C                     l6922:
  8662  002A3C  BE1A               	btfsc	(___xxtofl@arg+2)^0,7,c
  8663  002A3E  EF23  F015         	goto	u8541
  8664  002A42  EF25  F015         	goto	u8540
  8665  002A46                     u8541:
  8666  002A46  EF2D  F015         	goto	l1347
  8667  002A4A                     u8540:
  8668  002A4A  0E02               	movlw	2
  8669  002A4C  6017               	cpfslt	___xxtofl@exp^0,c
  8670  002A4E  EF2B  F015         	goto	u8551
  8671  002A52  EF2D  F015         	goto	u8550
  8672  002A56                     u8551:
  8673  002A56  EF18  F015         	goto	l6920
  8674  002A5A                     u8550:
  8675  002A5A                     l1347:
  8676  002A5A  B017               	btfsc	___xxtofl@exp^0,0,c
  8677  002A5C  EF32  F015         	goto	u8561
  8678  002A60  EF34  F015         	goto	u8560
  8679  002A64                     u8561:
  8680  002A64  EF35  F015         	goto	l6928
  8681  002A68                     u8560:
  8682  002A68  9E1A               	bcf	(___xxtofl@arg+2)^0,7,c
  8683  002A6A                     l6928:
  8684  002A6A  90D8               	bcf	status,0,c
  8685  002A6C  3217               	rrcf	___xxtofl@exp^0,f,c
  8686  002A6E  C017  F012         	movff	___xxtofl@exp,??___xxtofl
  8687  002A72  6A13               	clrf	(??___xxtofl+1)^0,c
  8688  002A74  6A14               	clrf	(??___xxtofl+2)^0,c
  8689  002A76  6A15               	clrf	(??___xxtofl+3)^0,c
  8690  002A78  C012  F015         	movff	??___xxtofl,??___xxtofl+3
  8691  002A7C  6A14               	clrf	(??___xxtofl+2)^0,c
  8692  002A7E  6A13               	clrf	(??___xxtofl+1)^0,c
  8693  002A80  6A12               	clrf	??___xxtofl^0,c
  8694  002A82  5012               	movf	??___xxtofl^0,w,c
  8695  002A84  1218               	iorwf	___xxtofl@arg^0,f,c
  8696  002A86  5013               	movf	(??___xxtofl+1)^0,w,c
  8697  002A88  1219               	iorwf	(___xxtofl@arg+1)^0,f,c
  8698  002A8A  5014               	movf	(??___xxtofl+2)^0,w,c
  8699  002A8C  121A               	iorwf	(___xxtofl@arg+2)^0,f,c
  8700  002A8E  5015               	movf	(??___xxtofl+3)^0,w,c
  8701  002A90  121B               	iorwf	(___xxtofl@arg+3)^0,f,c
  8702  002A92  5016               	movf	___xxtofl@sign^0,w,c
  8703  002A94  B4D8               	btfsc	status,2,c
  8704  002A96  EF4F  F015         	goto	u8571
  8705  002A9A  EF51  F015         	goto	u8570
  8706  002A9E                     u8571:
  8707  002A9E  EF59  F015         	goto	l6938
  8708  002AA2                     u8570:
  8709  002AA2  BE11               	btfsc	(___xxtofl@val+3)^0,7,c
  8710  002AA4  EF58  F015         	goto	u8580
  8711  002AA8  EF56  F015         	goto	u8581
  8712  002AAC                     u8581:
  8713  002AAC  EF59  F015         	goto	l6938
  8714  002AB0                     u8580:
  8715  002AB0  8E1B               	bsf	(___xxtofl@arg+3)^0,7,c
  8716  002AB2                     l6938:
  8717  002AB2  C018  F00E         	movff	___xxtofl@arg,?___xxtofl
  8718  002AB6  C019  F00F         	movff	___xxtofl@arg+1,?___xxtofl+1
  8719  002ABA  C01A  F010         	movff	___xxtofl@arg+2,?___xxtofl+2
  8720  002ABE  C01B  F011         	movff	___xxtofl@arg+3,?___xxtofl+3
  8721  002AC2                     l1336:
  8722  002AC2  0012               	return		;funcret
  8723  002AC4                     __end_of___xxtofl:
  8724                           	opt callstack 0
  8725                           
  8726 ;; *************** function _SYSTEM_Initialize *****************
  8727 ;; Defined at:
  8728 ;;		line 50 in file "mcc_generated_files/mcc.c"
  8729 ;; Parameters:    Size  Location     Type
  8730 ;;		None
  8731 ;; Auto vars:     Size  Location     Type
  8732 ;;		None
  8733 ;; Return value:  Size  Location     Type
  8734 ;;                  1    wreg      void 
  8735 ;; Registers used:
  8736 ;;		wreg, status,2, status,0, cstack
  8737 ;; Tracked objects:
  8738 ;;		On entry : 0/0
  8739 ;;		On exit  : 0/0
  8740 ;;		Unchanged: 0/0
  8741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8742 ;;      Params:         0       0       0       0       0       0       0
  8743 ;;      Locals:         0       0       0       0       0       0       0
  8744 ;;      Temps:          0       0       0       0       0       0       0
  8745 ;;      Totals:         0       0       0       0       0       0       0
  8746 ;;Total ram usage:        0 bytes
  8747 ;; Hardware stack levels used:    1
  8748 ;; Hardware stack levels required when called:   10
  8749 ;; This function calls:
  8750 ;;		_ADC_Initialize
  8751 ;;		_CCP5_Initialize
  8752 ;;		_EXT_INT_Initialize
  8753 ;;		_INTERRUPT_Initialize
  8754 ;;		_OSCILLATOR_Initialize
  8755 ;;		_PIN_MANAGER_Initialize
  8756 ;;		_TMR1_Initialize
  8757 ;; This function is called by:
  8758 ;;		_main
  8759 ;; This function uses a non-reentrant model
  8760 ;;
  8761                           
  8762                           	psect	text32
  8763  003D2C                     __ptext32:
  8764                           	opt callstack 0
  8765  003D2C                     _SYSTEM_Initialize:
  8766                           	opt callstack 20
  8767  003D2C                     
  8768                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  8769  003D2C  ECF6  F01E         	call	_INTERRUPT_Initialize	;wreg free
  8770  003D30                     
  8771                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  8772  003D30  ECE6  F01C         	call	_PIN_MANAGER_Initialize	;wreg free
  8773  003D34                     
  8774                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  8775  003D34  ECEA  F01E         	call	_OSCILLATOR_Initialize	;wreg free
  8776  003D38                     
  8777                           ;mcc_generated_files/mcc.c: 56:     EXT_INT_Initialize();
  8778  003D38  EC83  F01E         	call	_EXT_INT_Initialize	;wreg free
  8779  003D3C                     
  8780                           ;mcc_generated_files/mcc.c: 57:     TMR1_Initialize();
  8781  003D3C  EC47  F01E         	call	_TMR1_Initialize	;wreg free
  8782  003D40                     
  8783                           ;mcc_generated_files/mcc.c: 58:     ADC_Initialize();
  8784  003D40  ECB3  F01E         	call	_ADC_Initialize	;wreg free
  8785  003D44                     
  8786                           ;mcc_generated_files/mcc.c: 59:     CCP5_Initialize();
  8787  003D44  ECD2  F01E         	call	_CCP5_Initialize	;wreg free
  8788  003D48  0012               	return		;funcret
  8789  003D4A                     __end_of_SYSTEM_Initialize:
  8790                           	opt callstack 0
  8791                           
  8792 ;; *************** function _TMR1_Initialize *****************
  8793 ;; Defined at:
  8794 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  8795 ;; Parameters:    Size  Location     Type
  8796 ;;		None
  8797 ;; Auto vars:     Size  Location     Type
  8798 ;;		None
  8799 ;; Return value:  Size  Location     Type
  8800 ;;                  1    wreg      void 
  8801 ;; Registers used:
  8802 ;;		wreg, status,2, status,0, cstack
  8803 ;; Tracked objects:
  8804 ;;		On entry : 0/0
  8805 ;;		On exit  : 0/0
  8806 ;;		Unchanged: 0/0
  8807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8808 ;;      Params:         0       0       0       0       0       0       0
  8809 ;;      Locals:         0       0       0       0       0       0       0
  8810 ;;      Temps:          0       0       0       0       0       0       0
  8811 ;;      Totals:         0       0       0       0       0       0       0
  8812 ;;Total ram usage:        0 bytes
  8813 ;; Hardware stack levels used:    1
  8814 ;; Hardware stack levels required when called:    9
  8815 ;; This function calls:
  8816 ;;		_TMR1_SetInterruptHandler
  8817 ;; This function is called by:
  8818 ;;		_SYSTEM_Initialize
  8819 ;; This function uses a non-reentrant model
  8820 ;;
  8821                           
  8822                           	psect	text33
  8823  003C8E                     __ptext33:
  8824                           	opt callstack 0
  8825  003C8E                     _TMR1_Initialize:
  8826                           	opt callstack 20
  8827  003C8E                     
  8828                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  8829  003C8E  0E00               	movlw	0
  8830  003C90  6ECC               	movwf	204,c	;volatile
  8831                           
  8832                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0x24;
  8833  003C92  0E24               	movlw	36
  8834  003C94  6ECF               	movwf	207,c	;volatile
  8835                           
  8836                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0x46;
  8837  003C96  0E46               	movlw	70
  8838  003C98  6ECE               	movwf	206,c	;volatile
  8839  003C9A                     
  8840                           ;mcc_generated_files/tmr1.c: 78:     timer1ReloadVal=TMR1;
  8841  003C9A  CFCE F04F          	movff	4046,_timer1ReloadVal	;volatile
  8842  003C9E  CFCF F050          	movff	4047,_timer1ReloadVal+1	;volatile
  8843  003CA2                     
  8844                           ;mcc_generated_files/tmr1.c: 81:     PIR1bits.TMR1IF = 0;
  8845  003CA2  909E               	bcf	158,0,c	;volatile
  8846  003CA4                     
  8847                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  8848  003CA4  809D               	bsf	157,0,c	;volatile
  8849  003CA6                     
  8850                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  8851  003CA6  0E30               	movlw	low _TMR1_DefaultInterruptHandler
  8852  003CA8  6E0E               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
  8853  003CAA  0E3E               	movlw	high _TMR1_DefaultInterruptHandler
  8854  003CAC  6E0F               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
  8855  003CAE  ECF1  F01E         	call	_TMR1_SetInterruptHandler	;wreg free
  8856  003CB2                     
  8857                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x31;
  8858  003CB2  0E31               	movlw	49
  8859  003CB4  6ECD               	movwf	205,c	;volatile
  8860  003CB6  0012               	return		;funcret
  8861  003CB8                     __end_of_TMR1_Initialize:
  8862                           	opt callstack 0
  8863                           
  8864 ;; *************** function _TMR1_SetInterruptHandler *****************
  8865 ;; Defined at:
  8866 ;;		line 172 in file "mcc_generated_files/tmr1.c"
  8867 ;; Parameters:    Size  Location     Type
  8868 ;;  InterruptHan    2   13[COMRAM] PTR FTN()void 
  8869 ;;		 -> TMR1_DefaultInterruptHandler(1), convert_timer(1), 
  8870 ;; Auto vars:     Size  Location     Type
  8871 ;;		None
  8872 ;; Return value:  Size  Location     Type
  8873 ;;                  1    wreg      void 
  8874 ;; Registers used:
  8875 ;;		wreg, status,2, status,0
  8876 ;; Tracked objects:
  8877 ;;		On entry : 0/0
  8878 ;;		On exit  : 0/0
  8879 ;;		Unchanged: 0/0
  8880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8881 ;;      Params:         2       0       0       0       0       0       0
  8882 ;;      Locals:         0       0       0       0       0       0       0
  8883 ;;      Temps:          0       0       0       0       0       0       0
  8884 ;;      Totals:         2       0       0       0       0       0       0
  8885 ;;Total ram usage:        2 bytes
  8886 ;; Hardware stack levels used:    1
  8887 ;; Hardware stack levels required when called:    8
  8888 ;; This function calls:
  8889 ;;		Nothing
  8890 ;; This function is called by:
  8891 ;;		_main
  8892 ;;		_TMR1_Initialize
  8893 ;; This function uses a non-reentrant model
  8894 ;;
  8895                           
  8896                           	psect	text34
  8897  003DE2                     __ptext34:
  8898                           	opt callstack 0
  8899  003DE2                     _TMR1_SetInterruptHandler:
  8900                           	opt callstack 22
  8901  003DE2                     
  8902                           ;mcc_generated_files/tmr1.c: 173:     TMR1_InterruptHandler = InterruptHandler;
  8903  003DE2  C00E  F1B9         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  8904  003DE6  C00F  F1BA         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  8905  003DEA  0012               	return		;funcret
  8906  003DEC                     __end_of_TMR1_SetInterruptHandler:
  8907                           	opt callstack 0
  8908                           
  8909 ;; *************** function _PIN_MANAGER_Initialize *****************
  8910 ;; Defined at:
  8911 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  8912 ;; Parameters:    Size  Location     Type
  8913 ;;		None
  8914 ;; Auto vars:     Size  Location     Type
  8915 ;;		None
  8916 ;; Return value:  Size  Location     Type
  8917 ;;                  1    wreg      void 
  8918 ;; Registers used:
  8919 ;;		wreg, status,2
  8920 ;; Tracked objects:
  8921 ;;		On entry : 0/0
  8922 ;;		On exit  : 0/0
  8923 ;;		Unchanged: 0/0
  8924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8925 ;;      Params:         0       0       0       0       0       0       0
  8926 ;;      Locals:         0       0       0       0       0       0       0
  8927 ;;      Temps:          0       0       0       0       0       0       0
  8928 ;;      Totals:         0       0       0       0       0       0       0
  8929 ;;Total ram usage:        0 bytes
  8930 ;; Hardware stack levels used:    1
  8931 ;; Hardware stack levels required when called:    8
  8932 ;; This function calls:
  8933 ;;		Nothing
  8934 ;; This function is called by:
  8935 ;;		_SYSTEM_Initialize
  8936 ;; This function uses a non-reentrant model
  8937 ;;
  8938                           
  8939                           	psect	text35
  8940  0039CC                     __ptext35:
  8941                           	opt callstack 0
  8942  0039CC                     _PIN_MANAGER_Initialize:
  8943                           	opt callstack 21
  8944  0039CC                     
  8945                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  8946  0039CC  0E00               	movlw	0
  8947  0039CE  6E8D               	movwf	141,c	;volatile
  8948                           
  8949                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  8950  0039D0  0E00               	movlw	0
  8951  0039D2  6E8C               	movwf	140,c	;volatile
  8952                           
  8953                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  8954  0039D4  0E00               	movlw	0
  8955  0039D6  6E89               	movwf	137,c	;volatile
  8956                           
  8957                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  8958  0039D8  0E00               	movlw	0
  8959  0039DA  6E8A               	movwf	138,c	;volatile
  8960                           
  8961                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  8962  0039DC  0E00               	movlw	0
  8963  0039DE  6E8B               	movwf	139,c	;volatile
  8964                           
  8965                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  8966  0039E0  0E07               	movlw	7
  8967  0039E2  6E96               	movwf	150,c	;volatile
  8968  0039E4                     
  8969                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  8970  0039E4  6892               	setf	146,c	;volatile
  8971  0039E6                     
  8972                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  8973  0039E6  6893               	setf	147,c	;volatile
  8974  0039E8                     
  8975                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
  8976  0039E8  6894               	setf	148,c	;volatile
  8977                           
  8978                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0x00;
  8979  0039EA  0E00               	movlw	0
  8980  0039EC  6E95               	movwf	149,c	;volatile
  8981                           
  8982                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x00;
  8983  0039EE  0E00               	movlw	0
  8984  0039F0  010F               	movlb	15	; () banked
  8985  0039F2  6F3B               	movwf	59,b	;volatile
  8986                           
  8987                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xFC;
  8988  0039F4  0EFC               	movlw	252
  8989  0039F6  6F3A               	movwf	58,b	;volatile
  8990                           
  8991                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x3C;
  8992  0039F8  0E3C               	movlw	60
  8993  0039FA  6F39               	movwf	57,b	;volatile
  8994                           
  8995                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  8996  0039FC  0E07               	movlw	7
  8997  0039FE  6F3C               	movwf	60,b	;volatile
  8998                           
  8999                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x2F;
  9000  003A00  0E2F               	movlw	47
  9001  003A02  6F38               	movwf	56,b	;volatile
  9002                           
  9003                           ;mcc_generated_files/pin_manager.c: 87:     WPUB = 0x03;
  9004  003A04  0E03               	movlw	3
  9005  003A06  6E61               	movwf	97,c	;volatile
  9006  003A08                     
  9007                           ; BSR set to: 15
  9008                           ;mcc_generated_files/pin_manager.c: 88:     INTCON2bits.nRBPU = 0;
  9009  003A08  9EF1               	bcf	241,7,c	;volatile
  9010  003A0A                     
  9011                           ; BSR set to: 15
  9012  003A0A  0012               	return		;funcret
  9013  003A0C                     __end_of_PIN_MANAGER_Initialize:
  9014                           	opt callstack 0
  9015                           
  9016 ;; *************** function _OSCILLATOR_Initialize *****************
  9017 ;; Defined at:
  9018 ;;		line 62 in file "mcc_generated_files/mcc.c"
  9019 ;; Parameters:    Size  Location     Type
  9020 ;;		None
  9021 ;; Auto vars:     Size  Location     Type
  9022 ;;		None
  9023 ;; Return value:  Size  Location     Type
  9024 ;;                  1    wreg      void 
  9025 ;; Registers used:
  9026 ;;		wreg, status,2
  9027 ;; Tracked objects:
  9028 ;;		On entry : 0/0
  9029 ;;		On exit  : 0/0
  9030 ;;		Unchanged: 0/0
  9031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9032 ;;      Params:         0       0       0       0       0       0       0
  9033 ;;      Locals:         0       0       0       0       0       0       0
  9034 ;;      Temps:          0       0       0       0       0       0       0
  9035 ;;      Totals:         0       0       0       0       0       0       0
  9036 ;;Total ram usage:        0 bytes
  9037 ;; Hardware stack levels used:    1
  9038 ;; Hardware stack levels required when called:    8
  9039 ;; This function calls:
  9040 ;;		Nothing
  9041 ;; This function is called by:
  9042 ;;		_SYSTEM_Initialize
  9043 ;; This function uses a non-reentrant model
  9044 ;;
  9045                           
  9046                           	psect	text36
  9047  003DD4                     __ptext36:
  9048                           	opt callstack 0
  9049  003DD4                     _OSCILLATOR_Initialize:
  9050                           	opt callstack 21
  9051  003DD4                     
  9052                           ;mcc_generated_files/mcc.c: 65:     OSCCON = 0x30;
  9053  003DD4  0E30               	movlw	48
  9054  003DD6  6ED3               	movwf	211,c	;volatile
  9055                           
  9056                           ;mcc_generated_files/mcc.c: 67:     OSCCON2 = 0x04;
  9057  003DD8  0E04               	movlw	4
  9058  003DDA  6ED2               	movwf	210,c	;volatile
  9059                           
  9060                           ;mcc_generated_files/mcc.c: 69:     OSCTUNE = 0x00;
  9061  003DDC  0E00               	movlw	0
  9062  003DDE  6E9B               	movwf	155,c	;volatile
  9063  003DE0  0012               	return		;funcret
  9064  003DE2                     __end_of_OSCILLATOR_Initialize:
  9065                           	opt callstack 0
  9066                           
  9067 ;; *************** function _INTERRUPT_Initialize *****************
  9068 ;; Defined at:
  9069 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  9070 ;; Parameters:    Size  Location     Type
  9071 ;;		None
  9072 ;; Auto vars:     Size  Location     Type
  9073 ;;		None
  9074 ;; Return value:  Size  Location     Type
  9075 ;;                  1    wreg      void 
  9076 ;; Registers used:
  9077 ;;		None
  9078 ;; Tracked objects:
  9079 ;;		On entry : 0/0
  9080 ;;		On exit  : 0/0
  9081 ;;		Unchanged: 0/0
  9082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9083 ;;      Params:         0       0       0       0       0       0       0
  9084 ;;      Locals:         0       0       0       0       0       0       0
  9085 ;;      Temps:          0       0       0       0       0       0       0
  9086 ;;      Totals:         0       0       0       0       0       0       0
  9087 ;;Total ram usage:        0 bytes
  9088 ;; Hardware stack levels used:    1
  9089 ;; Hardware stack levels required when called:    8
  9090 ;; This function calls:
  9091 ;;		Nothing
  9092 ;; This function is called by:
  9093 ;;		_SYSTEM_Initialize
  9094 ;; This function uses a non-reentrant model
  9095 ;;
  9096                           
  9097                           	psect	text37
  9098  003DEC                     __ptext37:
  9099                           	opt callstack 0
  9100  003DEC                     _INTERRUPT_Initialize:
  9101                           	opt callstack 21
  9102  003DEC                     
  9103                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 1;
  9104  003DEC  8ED0               	bsf	208,7,c	;volatile
  9105                           
  9106                           ;mcc_generated_files/interrupt_manager.c: 60:     IPR1bits.ADIP = 1;
  9107  003DEE  8C9F               	bsf	159,6,c	;volatile
  9108                           
  9109                           ;mcc_generated_files/interrupt_manager.c: 65:     IPR1bits.TMR1IP = 1;
  9110  003DF0  809F               	bsf	159,0,c	;volatile
  9111                           
  9112                           ;mcc_generated_files/interrupt_manager.c: 69:     INTCON3bits.INT1IP = 0;
  9113  003DF2  9CF0               	bcf	240,6,c	;volatile
  9114  003DF4  0012               	return		;funcret
  9115  003DF6                     __end_of_INTERRUPT_Initialize:
  9116                           	opt callstack 0
  9117                           
  9118 ;; *************** function _EXT_INT_Initialize *****************
  9119 ;; Defined at:
  9120 ;;		line 86 in file "mcc_generated_files/ext_int.c"
  9121 ;; Parameters:    Size  Location     Type
  9122 ;;		None
  9123 ;; Auto vars:     Size  Location     Type
  9124 ;;		None
  9125 ;; Return value:  Size  Location     Type
  9126 ;;                  1    wreg      void 
  9127 ;; Registers used:
  9128 ;;		wreg, status,2, status,0, cstack
  9129 ;; Tracked objects:
  9130 ;;		On entry : 0/0
  9131 ;;		On exit  : 0/0
  9132 ;;		Unchanged: 0/0
  9133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9134 ;;      Params:         0       0       0       0       0       0       0
  9135 ;;      Locals:         0       0       0       0       0       0       0
  9136 ;;      Temps:          0       0       0       0       0       0       0
  9137 ;;      Totals:         0       0       0       0       0       0       0
  9138 ;;Total ram usage:        0 bytes
  9139 ;; Hardware stack levels used:    1
  9140 ;; Hardware stack levels required when called:    9
  9141 ;; This function calls:
  9142 ;;		_INT0_SetInterruptHandler
  9143 ;;		_INT1_SetInterruptHandler
  9144 ;; This function is called by:
  9145 ;;		_SYSTEM_Initialize
  9146 ;; This function uses a non-reentrant model
  9147 ;;
  9148                           
  9149                           	psect	text38
  9150  003D06                     __ptext38:
  9151                           	opt callstack 0
  9152  003D06                     _EXT_INT_Initialize:
  9153                           	opt callstack 20
  9154  003D06                     
  9155                           ;mcc_generated_files/ext_int.c: 91:     (INTCONbits.INT0IF = 0);
  9156  003D06  92F2               	bcf	242,1,c	;volatile
  9157                           
  9158                           ;mcc_generated_files/ext_int.c: 92:     (INTCON2bits.INTEDG0 = 0);
  9159  003D08  9CF1               	bcf	241,6,c	;volatile
  9160  003D0A                     
  9161                           ;mcc_generated_files/ext_int.c: 94:     INT0_SetInterruptHandler(INT0_DefaultInterruptHa
      +                          ndler);
  9162  003D0A  0E32               	movlw	low _INT0_DefaultInterruptHandler
  9163  003D0C  6E0E               	movwf	INT0_SetInterruptHandler@InterruptHandler^0,c
  9164  003D0E  0E3E               	movlw	high _INT0_DefaultInterruptHandler
  9165  003D10  6E0F               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)^0,c
  9166  003D12  EC00  F01F         	call	_INT0_SetInterruptHandler	;wreg free
  9167  003D16                     
  9168                           ;mcc_generated_files/ext_int.c: 95:     (INTCONbits.INT0IE = 1);
  9169  003D16  88F2               	bsf	242,4,c	;volatile
  9170  003D18                     
  9171                           ;mcc_generated_files/ext_int.c: 100:     (INTCON3bits.INT1IF = 0);
  9172  003D18  90F0               	bcf	240,0,c	;volatile
  9173  003D1A                     
  9174                           ;mcc_generated_files/ext_int.c: 101:     (INTCON2bits.INTEDG1 = 0);
  9175  003D1A  9AF1               	bcf	241,5,c	;volatile
  9176                           
  9177                           ;mcc_generated_files/ext_int.c: 103:     INT1_SetInterruptHandler(INT1_DefaultInterruptH
      +                          andler);
  9178  003D1C  0E2E               	movlw	low _INT1_DefaultInterruptHandler
  9179  003D1E  6E0E               	movwf	INT1_SetInterruptHandler@InterruptHandler^0,c
  9180  003D20  0E3E               	movlw	high _INT1_DefaultInterruptHandler
  9181  003D22  6E0F               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)^0,c
  9182  003D24  ECFB  F01E         	call	_INT1_SetInterruptHandler	;wreg free
  9183  003D28                     
  9184                           ;mcc_generated_files/ext_int.c: 104:     (INTCON3bits.INT1IE = 1);
  9185  003D28  86F0               	bsf	240,3,c	;volatile
  9186  003D2A  0012               	return		;funcret
  9187  003D2C                     __end_of_EXT_INT_Initialize:
  9188                           	opt callstack 0
  9189                           
  9190 ;; *************** function _INT1_SetInterruptHandler *****************
  9191 ;; Defined at:
  9192 ;;		line 77 in file "mcc_generated_files/ext_int.c"
  9193 ;; Parameters:    Size  Location     Type
  9194 ;;  InterruptHan    2   13[COMRAM] PTR FTN()void 
  9195 ;;		 -> start(1), INT1_DefaultInterruptHandler(1), 
  9196 ;; Auto vars:     Size  Location     Type
  9197 ;;		None
  9198 ;; Return value:  Size  Location     Type
  9199 ;;                  1    wreg      void 
  9200 ;; Registers used:
  9201 ;;		wreg, status,2, status,0
  9202 ;; Tracked objects:
  9203 ;;		On entry : 0/0
  9204 ;;		On exit  : 0/0
  9205 ;;		Unchanged: 0/0
  9206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9207 ;;      Params:         2       0       0       0       0       0       0
  9208 ;;      Locals:         0       0       0       0       0       0       0
  9209 ;;      Temps:          0       0       0       0       0       0       0
  9210 ;;      Totals:         2       0       0       0       0       0       0
  9211 ;;Total ram usage:        2 bytes
  9212 ;; Hardware stack levels used:    1
  9213 ;; Hardware stack levels required when called:    8
  9214 ;; This function calls:
  9215 ;;		Nothing
  9216 ;; This function is called by:
  9217 ;;		_EXT_INT_Initialize
  9218 ;;		_main
  9219 ;; This function uses a non-reentrant model
  9220 ;;
  9221                           
  9222                           	psect	text39
  9223  003DF6                     __ptext39:
  9224                           	opt callstack 0
  9225  003DF6                     _INT1_SetInterruptHandler:
  9226                           	opt callstack 20
  9227  003DF6                     
  9228                           ;mcc_generated_files/ext_int.c: 78:     INT1_InterruptHandler = InterruptHandler;
  9229  003DF6  C00E  F1BB         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  9230  003DFA  C00F  F1BC         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  9231  003DFE  0012               	return		;funcret
  9232  003E00                     __end_of_INT1_SetInterruptHandler:
  9233                           	opt callstack 0
  9234                           
  9235 ;; *************** function _INT0_SetInterruptHandler *****************
  9236 ;; Defined at:
  9237 ;;		line 51 in file "mcc_generated_files/ext_int.c"
  9238 ;; Parameters:    Size  Location     Type
  9239 ;;  InterruptHan    2   13[COMRAM] PTR FTN()void 
  9240 ;;		 -> emrgencia(1), INT0_DefaultInterruptHandler(1), 
  9241 ;; Auto vars:     Size  Location     Type
  9242 ;;		None
  9243 ;; Return value:  Size  Location     Type
  9244 ;;                  1    wreg      void 
  9245 ;; Registers used:
  9246 ;;		wreg, status,2, status,0
  9247 ;; Tracked objects:
  9248 ;;		On entry : 0/0
  9249 ;;		On exit  : 0/0
  9250 ;;		Unchanged: 0/0
  9251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9252 ;;      Params:         2       0       0       0       0       0       0
  9253 ;;      Locals:         0       0       0       0       0       0       0
  9254 ;;      Temps:          0       0       0       0       0       0       0
  9255 ;;      Totals:         2       0       0       0       0       0       0
  9256 ;;Total ram usage:        2 bytes
  9257 ;; Hardware stack levels used:    1
  9258 ;; Hardware stack levels required when called:    8
  9259 ;; This function calls:
  9260 ;;		Nothing
  9261 ;; This function is called by:
  9262 ;;		_EXT_INT_Initialize
  9263 ;;		_main
  9264 ;; This function uses a non-reentrant model
  9265 ;;
  9266                           
  9267                           	psect	text40
  9268  003E00                     __ptext40:
  9269                           	opt callstack 0
  9270  003E00                     _INT0_SetInterruptHandler:
  9271                           	opt callstack 20
  9272  003E00                     
  9273                           ;mcc_generated_files/ext_int.c: 52:     INT0_InterruptHandler = InterruptHandler;
  9274  003E00  C00E  F1BD         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
  9275  003E04  C00F  F1BE         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
  9276  003E08  0012               	return		;funcret
  9277  003E0A                     __end_of_INT0_SetInterruptHandler:
  9278                           	opt callstack 0
  9279                           
  9280 ;; *************** function _CCP5_Initialize *****************
  9281 ;; Defined at:
  9282 ;;		line 49 in file "mcc_generated_files/ccp5.c"
  9283 ;; Parameters:    Size  Location     Type
  9284 ;;		None
  9285 ;; Auto vars:     Size  Location     Type
  9286 ;;		None
  9287 ;; Return value:  Size  Location     Type
  9288 ;;                  1    wreg      void 
  9289 ;; Registers used:
  9290 ;;		wreg, status,2
  9291 ;; Tracked objects:
  9292 ;;		On entry : 0/0
  9293 ;;		On exit  : 0/0
  9294 ;;		Unchanged: 0/0
  9295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9296 ;;      Params:         0       0       0       0       0       0       0
  9297 ;;      Locals:         0       0       0       0       0       0       0
  9298 ;;      Temps:          0       0       0       0       0       0       0
  9299 ;;      Totals:         0       0       0       0       0       0       0
  9300 ;;Total ram usage:        0 bytes
  9301 ;; Hardware stack levels used:    1
  9302 ;; Hardware stack levels required when called:    8
  9303 ;; This function calls:
  9304 ;;		Nothing
  9305 ;; This function is called by:
  9306 ;;		_SYSTEM_Initialize
  9307 ;; This function uses a non-reentrant model
  9308 ;;
  9309                           
  9310                           	psect	text41
  9311  003DA4                     __ptext41:
  9312                           	opt callstack 0
  9313  003DA4                     _CCP5_Initialize:
  9314                           	opt callstack 21
  9315  003DA4                     
  9316                           ;mcc_generated_files/ccp5.c: 53:  CCP5CON = 0x00;
  9317  003DA4  0E00               	movlw	0
  9318  003DA6  010F               	movlb	15	; () banked
  9319  003DA8  6F54               	movwf	84,b	;volatile
  9320                           
  9321                           ;mcc_generated_files/ccp5.c: 56:  CCPR5L = 0x00;
  9322  003DAA  0E00               	movlw	0
  9323  003DAC  6F55               	movwf	85,b	;volatile
  9324                           
  9325                           ;mcc_generated_files/ccp5.c: 59:  CCPR5H = 0x00;
  9326  003DAE  0E00               	movlw	0
  9327  003DB0  6F56               	movwf	86,b	;volatile
  9328  003DB2                     
  9329                           ; BSR set to: 15
  9330  003DB2  0012               	return		;funcret
  9331  003DB4                     __end_of_CCP5_Initialize:
  9332                           	opt callstack 0
  9333                           
  9334 ;; *************** function _ADC_Initialize *****************
  9335 ;; Defined at:
  9336 ;;		line 61 in file "mcc_generated_files/adc.c"
  9337 ;; Parameters:    Size  Location     Type
  9338 ;;		None
  9339 ;; Auto vars:     Size  Location     Type
  9340 ;;		None
  9341 ;; Return value:  Size  Location     Type
  9342 ;;                  1    wreg      void 
  9343 ;; Registers used:
  9344 ;;		wreg, status,2
  9345 ;; Tracked objects:
  9346 ;;		On entry : 0/0
  9347 ;;		On exit  : 0/0
  9348 ;;		Unchanged: 0/0
  9349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9350 ;;      Params:         0       0       0       0       0       0       0
  9351 ;;      Locals:         0       0       0       0       0       0       0
  9352 ;;      Temps:          0       0       0       0       0       0       0
  9353 ;;      Totals:         0       0       0       0       0       0       0
  9354 ;;Total ram usage:        0 bytes
  9355 ;; Hardware stack levels used:    1
  9356 ;; Hardware stack levels required when called:    8
  9357 ;; This function calls:
  9358 ;;		Nothing
  9359 ;; This function is called by:
  9360 ;;		_SYSTEM_Initialize
  9361 ;; This function uses a non-reentrant model
  9362 ;;
  9363                           
  9364                           	psect	text42
  9365  003D66                     __ptext42:
  9366                           	opt callstack 0
  9367  003D66                     _ADC_Initialize:
  9368                           	opt callstack 21
  9369  003D66                     
  9370                           ;mcc_generated_files/adc.c: 66:     ADCON0 = 0x01;
  9371  003D66  0E01               	movlw	1
  9372  003D68  6EC2               	movwf	194,c	;volatile
  9373                           
  9374                           ;mcc_generated_files/adc.c: 69:     ADCON1 = 0x05;
  9375  003D6A  0E05               	movlw	5
  9376  003D6C  6EC1               	movwf	193,c	;volatile
  9377                           
  9378                           ;mcc_generated_files/adc.c: 72:     ADCON2 = 0x8D;
  9379  003D6E  0E8D               	movlw	141
  9380  003D70  6EC0               	movwf	192,c	;volatile
  9381                           
  9382                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  9383  003D72  0E00               	movlw	0
  9384  003D74  6EC3               	movwf	195,c	;volatile
  9385                           
  9386                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  9387  003D76  0E00               	movlw	0
  9388  003D78  6EC4               	movwf	196,c	;volatile
  9389  003D7A                     
  9390                           ;mcc_generated_files/adc.c: 81:     PIE1bits.ADIE = 1;
  9391  003D7A  8C9D               	bsf	157,6,c	;volatile
  9392  003D7C  0012               	return		;funcret
  9393  003D7E                     __end_of_ADC_Initialize:
  9394                           	opt callstack 0
  9395                           
  9396 ;; *************** function _OpenXLCD *****************
  9397 ;; Defined at:
  9398 ;;		line 57 in file "xlcd.c"
  9399 ;; Parameters:    Size  Location     Type
  9400 ;;  lcdtype         1    wreg     unsigned char 
  9401 ;; Auto vars:     Size  Location     Type
  9402 ;;  lcdtype         1    0[COMRAM] unsigned char 
  9403 ;; Return value:  Size  Location     Type
  9404 ;;                  1    wreg      void 
  9405 ;; Registers used:
  9406 ;;		wreg, status,2, status,0, cstack
  9407 ;; Tracked objects:
  9408 ;;		On entry : 0/0
  9409 ;;		On exit  : 0/0
  9410 ;;		Unchanged: 0/0
  9411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9412 ;;      Params:         0       0       0       0       0       0       0
  9413 ;;      Locals:         0       0       0       0       0       0       0
  9414 ;;      Temps:          0       0       0       0       0       0       0
  9415 ;;      Totals:         0       0       0       0       0       0       0
  9416 ;;Total ram usage:        0 bytes
  9417 ;; Hardware stack levels used:    1
  9418 ;; Hardware stack levels required when called:   10
  9419 ;; This function calls:
  9420 ;;		_BusyXLCD
  9421 ;;		_DelayFor18TCY
  9422 ;;		_DelayPORXLCD
  9423 ;;		_DelayXLCD
  9424 ;;		_WriteCmdXLCD
  9425 ;; This function is called by:
  9426 ;;		_main
  9427 ;; This function uses a non-reentrant model
  9428 ;;
  9429                           
  9430                           	psect	text43
  9431  002C54                     __ptext43:
  9432                           	opt callstack 0
  9433  002C54                     _OpenXLCD:
  9434                           	opt callstack 20
  9435  002C54                     
  9436                           ;xlcd.c: 61:     DelayPORXLCD();
  9437  002C54  ECE2  F01E         	call	_DelayPORXLCD	;wreg free
  9438  002C58                     
  9439                           ;xlcd.c: 73:     PORTD &= 0xf0;
  9440  002C58  0EF0               	movlw	240
  9441  002C5A  1683               	andwf	131,f,c	;volatile
  9442  002C5C                     
  9443                           ;xlcd.c: 74:     TRISD |= 0x0f;
  9444  002C5C  0E0F               	movlw	15
  9445  002C5E  1295               	iorwf	149,f,c	;volatile
  9446  002C60                     
  9447                           ;xlcd.c: 77:     TRISDbits.TRISD5 = 0;
  9448  002C60  9A95               	bcf	149,5,c	;volatile
  9449  002C62                     
  9450                           ;xlcd.c: 78:     TRISDbits.TRISD4 = 0;
  9451  002C62  9895               	bcf	149,4,c	;volatile
  9452  002C64                     
  9453                           ;xlcd.c: 79:     TRISDbits.TRISD6 = 0;
  9454  002C64  9C95               	bcf	149,6,c	;volatile
  9455  002C66                     
  9456                           ;xlcd.c: 80:     LATDbits.LATD5 = 0;
  9457  002C66  9A8C               	bcf	140,5,c	;volatile
  9458  002C68                     
  9459                           ;xlcd.c: 81:     LATDbits.LATD4 = 0;
  9460  002C68  988C               	bcf	140,4,c	;volatile
  9461  002C6A                     
  9462                           ;xlcd.c: 82:     LATDbits.LATD6 = 0;
  9463  002C6A  9C8C               	bcf	140,6,c	;volatile
  9464                           
  9465                           ;xlcd.c: 85:     DelayPORXLCD();
  9466  002C6C  ECE2  F01E         	call	_DelayPORXLCD	;wreg free
  9467  002C70                     
  9468                           ;xlcd.c: 98:     TRISD &= 0xf0;
  9469  002C70  0EF0               	movlw	240
  9470  002C72  1695               	andwf	149,f,c	;volatile
  9471  002C74                     
  9472                           ;xlcd.c: 99:     PORTD &= 0xf0;
  9473  002C74  0EF0               	movlw	240
  9474  002C76  1683               	andwf	131,f,c	;volatile
  9475  002C78                     
  9476                           ;xlcd.c: 100:     PORTD |= 0b00000011;
  9477  002C78  0E03               	movlw	3
  9478  002C7A  1283               	iorwf	131,f,c	;volatile
  9479  002C7C                     
  9480                           ;xlcd.c: 103:     LATDbits.LATD6 = 1;
  9481  002C7C  8C8C               	bsf	140,6,c	;volatile
  9482  002C7E                     
  9483                           ;xlcd.c: 104:     DelayFor18TCY();
  9484  002C7E  EC05  F01F         	call	_DelayFor18TCY	;wreg free
  9485  002C82                     
  9486                           ;xlcd.c: 105:     LATDbits.LATD6 = 0;
  9487  002C82  9C8C               	bcf	140,6,c	;volatile
  9488  002C84                     
  9489                           ;xlcd.c: 108:     DelayXLCD();
  9490  002C84  ECDA  F01E         	call	_DelayXLCD	;wreg free
  9491  002C88                     
  9492                           ;xlcd.c: 119:     TRISD &= 0xf0;
  9493  002C88  0EF0               	movlw	240
  9494  002C8A  1695               	andwf	149,f,c	;volatile
  9495  002C8C                     
  9496                           ;xlcd.c: 120:     PORTD &= 0xf0;
  9497  002C8C  0EF0               	movlw	240
  9498  002C8E  1683               	andwf	131,f,c	;volatile
  9499  002C90                     
  9500                           ;xlcd.c: 121:     PORTD |= 0b00000011;
  9501  002C90  0E03               	movlw	3
  9502  002C92  1283               	iorwf	131,f,c	;volatile
  9503  002C94                     
  9504                           ;xlcd.c: 124:     LATDbits.LATD6 = 1;
  9505  002C94  8C8C               	bsf	140,6,c	;volatile
  9506                           
  9507                           ;xlcd.c: 125:     DelayFor18TCY();
  9508  002C96  EC05  F01F         	call	_DelayFor18TCY	;wreg free
  9509  002C9A                     
  9510                           ;xlcd.c: 126:     LATDbits.LATD6 = 0;
  9511  002C9A  9C8C               	bcf	140,6,c	;volatile
  9512                           
  9513                           ;xlcd.c: 129:     DelayXLCD();
  9514  002C9C  ECDA  F01E         	call	_DelayXLCD	;wreg free
  9515  002CA0                     
  9516                           ;xlcd.c: 139:     PORTD &= 0xf0;
  9517  002CA0  0EF0               	movlw	240
  9518  002CA2  1683               	andwf	131,f,c	;volatile
  9519  002CA4                     
  9520                           ;xlcd.c: 140:     PORTD |= 0b00000011;
  9521  002CA4  0E03               	movlw	3
  9522  002CA6  1283               	iorwf	131,f,c	;volatile
  9523  002CA8                     
  9524                           ;xlcd.c: 143:     LATDbits.LATD6 = 1;
  9525  002CA8  8C8C               	bsf	140,6,c	;volatile
  9526                           
  9527                           ;xlcd.c: 144:     DelayFor18TCY();
  9528  002CAA  EC05  F01F         	call	_DelayFor18TCY	;wreg free
  9529  002CAE                     
  9530                           ;xlcd.c: 145:     LATDbits.LATD6 = 0;
  9531  002CAE  9C8C               	bcf	140,6,c	;volatile
  9532                           
  9533                           ;xlcd.c: 148:     DelayXLCD();
  9534  002CB0  ECDA  F01E         	call	_DelayXLCD	;wreg free
  9535  002CB4                     
  9536                           ;xlcd.c: 160:     PORTD &= 0xf0;
  9537  002CB4  0EF0               	movlw	240
  9538  002CB6  1683               	andwf	131,f,c	;volatile
  9539  002CB8                     
  9540                           ;xlcd.c: 161:     PORTD |= 0b00000010;
  9541  002CB8  8283               	bsf	131,1,c	;volatile
  9542  002CBA                     
  9543                           ;xlcd.c: 164:     LATDbits.LATD6 = 1;
  9544  002CBA  8C8C               	bsf	140,6,c	;volatile
  9545  002CBC                     
  9546                           ;xlcd.c: 165:     DelayFor18TCY();
  9547  002CBC  EC05  F01F         	call	_DelayFor18TCY	;wreg free
  9548  002CC0                     
  9549                           ;xlcd.c: 166:     LATDbits.LATD6 = 0;
  9550  002CC0  9C8C               	bcf	140,6,c	;volatile
  9551  002CC2                     
  9552                           ;xlcd.c: 175:     TRISD |= 0x0f;
  9553  002CC2  0E0F               	movlw	15
  9554  002CC4  1295               	iorwf	149,f,c	;volatile
  9555  002CC6                     l6850:
  9556  002CC6  ECC9  F01E         	call	_BusyXLCD	;wreg free
  9557  002CCA  0900               	iorlw	0
  9558  002CCC  A4D8               	btfss	status,2,c
  9559  002CCE  EF6B  F016         	goto	u8391
  9560  002CD2  EF6D  F016         	goto	u8390
  9561  002CD6                     u8391:
  9562  002CD6  EF63  F016         	goto	l6850
  9563  002CDA                     u8390:
  9564  002CDA                     
  9565                           ;xlcd.c: 183:     WriteCmdXLCD(0x28);
  9566  002CDA  0E28               	movlw	40
  9567  002CDC  EC06  F01D         	call	_WriteCmdXLCD
  9568  002CE0                     l6854:
  9569  002CE0  ECC9  F01E         	call	_BusyXLCD	;wreg free
  9570  002CE4  0900               	iorlw	0
  9571  002CE6  A4D8               	btfss	status,2,c
  9572  002CE8  EF78  F016         	goto	u8401
  9573  002CEC  EF7A  F016         	goto	u8400
  9574  002CF0                     u8401:
  9575  002CF0  EF70  F016         	goto	l6854
  9576  002CF4                     u8400:
  9577  002CF4                     
  9578                           ;xlcd.c: 189:     WriteCmdXLCD(0x0D);
  9579  002CF4  0E0D               	movlw	13
  9580  002CF6  EC06  F01D         	call	_WriteCmdXLCD
  9581  002CFA                     l6858:
  9582  002CFA  ECC9  F01E         	call	_BusyXLCD	;wreg free
  9583  002CFE  0900               	iorlw	0
  9584  002D00  A4D8               	btfss	status,2,c
  9585  002D02  EF85  F016         	goto	u8411
  9586  002D06  EF87  F016         	goto	u8410
  9587  002D0A                     u8411:
  9588  002D0A  EF7D  F016         	goto	l6858
  9589  002D0E                     u8410:
  9590  002D0E                     l6860:
  9591  002D0E  ECC9  F01E         	call	_BusyXLCD	;wreg free
  9592  002D12  0900               	iorlw	0
  9593  002D14  A4D8               	btfss	status,2,c
  9594  002D16  EF8F  F016         	goto	u8421
  9595  002D1A  EF91  F016         	goto	u8420
  9596  002D1E                     u8421:
  9597  002D1E  EF87  F016         	goto	l6860
  9598  002D22                     u8420:
  9599  002D22                     
  9600                           ;xlcd.c: 197:     WriteCmdXLCD(0x01);
  9601  002D22  0E01               	movlw	1
  9602  002D24  EC06  F01D         	call	_WriteCmdXLCD
  9603  002D28                     l6864:
  9604  002D28  ECC9  F01E         	call	_BusyXLCD	;wreg free
  9605  002D2C  0900               	iorlw	0
  9606  002D2E  A4D8               	btfss	status,2,c
  9607  002D30  EF9C  F016         	goto	u8431
  9608  002D34  EF9E  F016         	goto	u8430
  9609  002D38                     u8431:
  9610  002D38  EF94  F016         	goto	l6864
  9611  002D3C                     u8430:
  9612  002D3C                     
  9613                           ;xlcd.c: 202:     WriteCmdXLCD(0x06);
  9614  002D3C  0E06               	movlw	6
  9615  002D3E  EC06  F01D         	call	_WriteCmdXLCD
  9616  002D42                     l6868:
  9617  002D42  ECC9  F01E         	call	_BusyXLCD	;wreg free
  9618  002D46  0900               	iorlw	0
  9619  002D48  A4D8               	btfss	status,2,c
  9620  002D4A  EFA9  F016         	goto	u8441
  9621  002D4E  EFAB  F016         	goto	u8440
  9622  002D52                     u8441:
  9623  002D52  EFA1  F016         	goto	l6868
  9624  002D56                     u8440:
  9625  002D56                     
  9626                           ;xlcd.c: 208:     WriteCmdXLCD(0x80);
  9627  002D56  0E80               	movlw	128
  9628  002D58  EC06  F01D         	call	_WriteCmdXLCD
  9629  002D5C  0012               	return		;funcret
  9630  002D5E                     __end_of_OpenXLCD:
  9631                           	opt callstack 0
  9632                           
  9633 ;; *************** function _WriteCmdXLCD *****************
  9634 ;; Defined at:
  9635 ;;		line 545 in file "xlcd.c"
  9636 ;; Parameters:    Size  Location     Type
  9637 ;;  cmd             1    wreg     unsigned char 
  9638 ;; Auto vars:     Size  Location     Type
  9639 ;;  cmd             1   13[COMRAM] unsigned char 
  9640 ;; Return value:  Size  Location     Type
  9641 ;;                  1    wreg      void 
  9642 ;; Registers used:
  9643 ;;		wreg, status,2, status,0, cstack
  9644 ;; Tracked objects:
  9645 ;;		On entry : 0/0
  9646 ;;		On exit  : 0/0
  9647 ;;		Unchanged: 0/0
  9648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9649 ;;      Params:         0       0       0       0       0       0       0
  9650 ;;      Locals:         1       0       0       0       0       0       0
  9651 ;;      Temps:          0       0       0       0       0       0       0
  9652 ;;      Totals:         1       0       0       0       0       0       0
  9653 ;;Total ram usage:        1 bytes
  9654 ;; Hardware stack levels used:    1
  9655 ;; Hardware stack levels required when called:    9
  9656 ;; This function calls:
  9657 ;;		_DelayFor18TCY
  9658 ;; This function is called by:
  9659 ;;		_main
  9660 ;;		_OpenXLCD
  9661 ;; This function uses a non-reentrant model
  9662 ;;
  9663                           
  9664                           	psect	text44
  9665  003A0C                     __ptext44:
  9666                           	opt callstack 0
  9667  003A0C                     _WriteCmdXLCD:
  9668                           	opt callstack 21
  9669                           
  9670                           ;incstack = 0
  9671                           ;WriteCmdXLCD@cmd stored from wreg
  9672  003A0C  6E0E               	movwf	WriteCmdXLCD@cmd^0,c
  9673  003A0E                     
  9674                           ;xlcd.c: 563:     TRISD &= 0xf0;
  9675  003A0E  0EF0               	movlw	240
  9676  003A10  1695               	andwf	149,f,c	;volatile
  9677                           
  9678                           ;xlcd.c: 564:     PORTD &= 0xf0;
  9679  003A12  0EF0               	movlw	240
  9680  003A14  1683               	andwf	131,f,c	;volatile
  9681                           
  9682                           ;xlcd.c: 565:     PORTD |= (cmd >> 4)&0x0f;
  9683  003A16  380E               	swapf	WriteCmdXLCD@cmd^0,w,c
  9684  003A18  0B0F               	andlw	15
  9685  003A1A  0B0F               	andlw	15
  9686  003A1C  1283               	iorwf	131,f,c	;volatile
  9687  003A1E                     
  9688                           ;xlcd.c: 567:     LATDbits.LATD5 = 0;
  9689  003A1E  9A8C               	bcf	140,5,c	;volatile
  9690  003A20                     
  9691                           ;xlcd.c: 568:     LATDbits.LATD4 = 0;
  9692  003A20  988C               	bcf	140,4,c	;volatile
  9693  003A22                     
  9694                           ;xlcd.c: 569:     DelayFor18TCY();
  9695  003A22  EC05  F01F         	call	_DelayFor18TCY	;wreg free
  9696  003A26                     
  9697                           ;xlcd.c: 570:     LATDbits.LATD6 = 1;
  9698  003A26  8C8C               	bsf	140,6,c	;volatile
  9699  003A28                     
  9700                           ;xlcd.c: 571:     DelayFor18TCY();
  9701  003A28  EC05  F01F         	call	_DelayFor18TCY	;wreg free
  9702  003A2C                     
  9703                           ;xlcd.c: 572:     LATDbits.LATD6 = 0;
  9704  003A2C  9C8C               	bcf	140,6,c	;volatile
  9705                           
  9706                           ;xlcd.c: 577:     PORTD &= 0xf0;
  9707  003A2E  0EF0               	movlw	240
  9708  003A30  1683               	andwf	131,f,c	;volatile
  9709                           
  9710                           ;xlcd.c: 578:     PORTD |= cmd & 0x0f;
  9711  003A32  500E               	movf	WriteCmdXLCD@cmd^0,w,c
  9712  003A34  0B0F               	andlw	15
  9713  003A36  1283               	iorwf	131,f,c	;volatile
  9714  003A38                     
  9715                           ;xlcd.c: 580:     DelayFor18TCY();
  9716  003A38  EC05  F01F         	call	_DelayFor18TCY	;wreg free
  9717  003A3C                     
  9718                           ;xlcd.c: 581:     LATDbits.LATD6 = 1;
  9719  003A3C  8C8C               	bsf	140,6,c	;volatile
  9720  003A3E                     
  9721                           ;xlcd.c: 582:     DelayFor18TCY();
  9722  003A3E  EC05  F01F         	call	_DelayFor18TCY	;wreg free
  9723  003A42                     
  9724                           ;xlcd.c: 583:     LATDbits.LATD6 = 0;
  9725  003A42  9C8C               	bcf	140,6,c	;volatile
  9726                           
  9727                           ;xlcd.c: 587:     TRISD |= 0x0f;
  9728  003A44  0E0F               	movlw	15
  9729  003A46  1295               	iorwf	149,f,c	;volatile
  9730  003A48  0012               	return		;funcret
  9731  003A4A                     __end_of_WriteCmdXLCD:
  9732                           	opt callstack 0
  9733                           
  9734 ;; *************** function _DelayXLCD *****************
  9735 ;; Defined at:
  9736 ;;		line 33 in file "xlcd.c"
  9737 ;; Parameters:    Size  Location     Type
  9738 ;;		None
  9739 ;; Auto vars:     Size  Location     Type
  9740 ;;		None
  9741 ;; Return value:  Size  Location     Type
  9742 ;;                  1    wreg      void 
  9743 ;; Registers used:
  9744 ;;		wreg
  9745 ;; Tracked objects:
  9746 ;;		On entry : 0/0
  9747 ;;		On exit  : 0/0
  9748 ;;		Unchanged: 0/0
  9749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9750 ;;      Params:         0       0       0       0       0       0       0
  9751 ;;      Locals:         0       0       0       0       0       0       0
  9752 ;;      Temps:          1       0       0       0       0       0       0
  9753 ;;      Totals:         1       0       0       0       0       0       0
  9754 ;;Total ram usage:        1 bytes
  9755 ;; Hardware stack levels used:    1
  9756 ;; Hardware stack levels required when called:    8
  9757 ;; This function calls:
  9758 ;;		Nothing
  9759 ;; This function is called by:
  9760 ;;		_OpenXLCD
  9761 ;; This function uses a non-reentrant model
  9762 ;;
  9763                           
  9764                           	psect	text45
  9765  003DB4                     __ptext45:
  9766                           	opt callstack 0
  9767  003DB4                     _DelayXLCD:
  9768                           	opt callstack 21
  9769  003DB4                     
  9770                           ;xlcd.c: 36:     _delay((unsigned long)((15)*(12000000/4000.0)));
  9771  003DB4  0E3B               	movlw	59
  9772  003DB6  6E0E               	movwf	??_DelayXLCD^0,c
  9773  003DB8  0E70               	movlw	112
  9774  003DBA                     u8867:
  9775  003DBA  2EE8               	decfsz	wreg,f,c
  9776  003DBC  D7FE               	bra	u8867
  9777  003DBE  2E0E               	decfsz	??_DelayXLCD^0,f,c
  9778  003DC0  D7FC               	bra	u8867
  9779  003DC2  0012               	return		;funcret
  9780  003DC4                     __end_of_DelayXLCD:
  9781                           	opt callstack 0
  9782                           
  9783 ;; *************** function _DelayPORXLCD *****************
  9784 ;; Defined at:
  9785 ;;		line 25 in file "xlcd.c"
  9786 ;; Parameters:    Size  Location     Type
  9787 ;;		None
  9788 ;; Auto vars:     Size  Location     Type
  9789 ;;		None
  9790 ;; Return value:  Size  Location     Type
  9791 ;;                  1    wreg      void 
  9792 ;; Registers used:
  9793 ;;		wreg
  9794 ;; Tracked objects:
  9795 ;;		On entry : 0/0
  9796 ;;		On exit  : 0/0
  9797 ;;		Unchanged: 0/0
  9798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9799 ;;      Params:         0       0       0       0       0       0       0
  9800 ;;      Locals:         0       0       0       0       0       0       0
  9801 ;;      Temps:          1       0       0       0       0       0       0
  9802 ;;      Totals:         1       0       0       0       0       0       0
  9803 ;;Total ram usage:        1 bytes
  9804 ;; Hardware stack levels used:    1
  9805 ;; Hardware stack levels required when called:    8
  9806 ;; This function calls:
  9807 ;;		Nothing
  9808 ;; This function is called by:
  9809 ;;		_OpenXLCD
  9810 ;; This function uses a non-reentrant model
  9811 ;;
  9812                           
  9813                           	psect	text46
  9814  003DC4                     __ptext46:
  9815                           	opt callstack 0
  9816  003DC4                     _DelayPORXLCD:
  9817                           	opt callstack 21
  9818  003DC4                     
  9819                           ;xlcd.c: 28:     _delay((unsigned long)((15)*(12000000/4000.0)));
  9820  003DC4  0E3B               	movlw	59
  9821  003DC6  6E0E               	movwf	??_DelayPORXLCD^0,c
  9822  003DC8  0E70               	movlw	112
  9823  003DCA                     u8877:
  9824  003DCA  2EE8               	decfsz	wreg,f,c
  9825  003DCC  D7FE               	bra	u8877
  9826  003DCE  2E0E               	decfsz	??_DelayPORXLCD^0,f,c
  9827  003DD0  D7FC               	bra	u8877
  9828  003DD2  0012               	return		;funcret
  9829  003DD4                     __end_of_DelayPORXLCD:
  9830                           	opt callstack 0
  9831                           
  9832 ;; *************** function _CGRamAddr0 *****************
  9833 ;; Defined at:
  9834 ;;		line 93 in file "main.c"
  9835 ;; Parameters:    Size  Location     Type
  9836 ;;		None
  9837 ;; Auto vars:     Size  Location     Type
  9838 ;;		None
  9839 ;; Return value:  Size  Location     Type
  9840 ;;                  1    wreg      void 
  9841 ;; Registers used:
  9842 ;;		wreg, status,2, status,0, cstack
  9843 ;; Tracked objects:
  9844 ;;		On entry : 0/0
  9845 ;;		On exit  : 0/0
  9846 ;;		Unchanged: 0/0
  9847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9848 ;;      Params:         0       0       0       0       0       0       0
  9849 ;;      Locals:         0       0       0       0       0       0       0
  9850 ;;      Temps:          0       0       0       0       0       0       0
  9851 ;;      Totals:         0       0       0       0       0       0       0
  9852 ;;Total ram usage:        0 bytes
  9853 ;; Hardware stack levels used:    1
  9854 ;; Hardware stack levels required when called:   10
  9855 ;; This function calls:
  9856 ;;		_BusyXLCD
  9857 ;;		_SetCGRamAddr
  9858 ;;		_WriteDataXLCD
  9859 ;; This function is called by:
  9860 ;;		_main
  9861 ;; This function uses a non-reentrant model
  9862 ;;
  9863                           
  9864                           	psect	text47
  9865  002F68                     __ptext47:
  9866                           	opt callstack 0
  9867  002F68                     _CGRamAddr0:
  9868                           	opt callstack 20
  9869  002F68                     l6750:
  9870  002F68  ECC9  F01E         	call	_BusyXLCD	;wreg free
  9871  002F6C  0900               	iorlw	0
  9872  002F6E  A4D8               	btfss	status,2,c
  9873  002F70  EFBC  F017         	goto	u8291
  9874  002F74  EFBE  F017         	goto	u8290
  9875  002F78                     u8291:
  9876  002F78  EFB4  F017         	goto	l6750
  9877  002F7C                     u8290:
  9878  002F7C                     
  9879                           ;main.c: 102:     SetCGRamAddr(0b00000000);
  9880  002F7C  0E00               	movlw	0
  9881  002F7E  ECFB  F01B         	call	_SetCGRamAddr
  9882  002F82                     l6754:
  9883  002F82  ECC9  F01E         	call	_BusyXLCD	;wreg free
  9884  002F86  0900               	iorlw	0
  9885  002F88  A4D8               	btfss	status,2,c
  9886  002F8A  EFC9  F017         	goto	u8301
  9887  002F8E  EFCB  F017         	goto	u8300
  9888  002F92                     u8301:
  9889  002F92  EFC1  F017         	goto	l6754
  9890  002F96                     u8300:
  9891  002F96                     
  9892                           ;main.c: 107:     WriteDataXLCD(0b00000111);
  9893  002F96  0E07               	movlw	7
  9894  002F98  EC25  F01D         	call	_WriteDataXLCD
  9895  002F9C                     l6758:
  9896  002F9C  ECC9  F01E         	call	_BusyXLCD	;wreg free
  9897  002FA0  0900               	iorlw	0
  9898  002FA2  A4D8               	btfss	status,2,c
  9899  002FA4  EFD6  F017         	goto	u8311
  9900  002FA8  EFD8  F017         	goto	u8310
  9901  002FAC                     u8311:
  9902  002FAC  EFCE  F017         	goto	l6758
  9903  002FB0                     u8310:
  9904  002FB0                     
  9905                           ;main.c: 109:     WriteDataXLCD(0b00001000);
  9906  002FB0  0E08               	movlw	8
  9907  002FB2  EC25  F01D         	call	_WriteDataXLCD
  9908  002FB6                     l6762:
  9909  002FB6  ECC9  F01E         	call	_BusyXLCD	;wreg free
  9910  002FBA  0900               	iorlw	0
  9911  002FBC  A4D8               	btfss	status,2,c
  9912  002FBE  EFE3  F017         	goto	u8321
  9913  002FC2  EFE5  F017         	goto	u8320
  9914  002FC6                     u8321:
  9915  002FC6  EFDB  F017         	goto	l6762
  9916  002FCA                     u8320:
  9917  002FCA                     
  9918                           ;main.c: 111:     WriteDataXLCD(0b00010000);
  9919  002FCA  0E10               	movlw	16
  9920  002FCC  EC25  F01D         	call	_WriteDataXLCD
  9921  002FD0                     l6766:
  9922  002FD0  ECC9  F01E         	call	_BusyXLCD	;wreg free
  9923  002FD4  0900               	iorlw	0
  9924  002FD6  A4D8               	btfss	status,2,c
  9925  002FD8  EFF0  F017         	goto	u8331
  9926  002FDC  EFF2  F017         	goto	u8330
  9927  002FE0                     u8331:
  9928  002FE0  EFE8  F017         	goto	l6766
  9929  002FE4                     u8330:
  9930  002FE4                     
  9931                           ;main.c: 113:     WriteDataXLCD(0b00010000);
  9932  002FE4  0E10               	movlw	16
  9933  002FE6  EC25  F01D         	call	_WriteDataXLCD
  9934  002FEA                     l6770:
  9935  002FEA  ECC9  F01E         	call	_BusyXLCD	;wreg free
  9936  002FEE  0900               	iorlw	0
  9937  002FF0  A4D8               	btfss	status,2,c
  9938  002FF2  EFFD  F017         	goto	u8341
  9939  002FF6  EFFF  F017         	goto	u8340
  9940  002FFA                     u8341:
  9941  002FFA  EFF5  F017         	goto	l6770
  9942  002FFE                     u8340:
  9943  002FFE                     
  9944                           ;main.c: 115:     WriteDataXLCD(0b00010000);
  9945  002FFE  0E10               	movlw	16
  9946  003000  EC25  F01D         	call	_WriteDataXLCD
  9947  003004                     l6774:
  9948  003004  ECC9  F01E         	call	_BusyXLCD	;wreg free
  9949  003008  0900               	iorlw	0
  9950  00300A  A4D8               	btfss	status,2,c
  9951  00300C  EF0A  F018         	goto	u8351
  9952  003010  EF0C  F018         	goto	u8350
  9953  003014                     u8351:
  9954  003014  EF02  F018         	goto	l6774
  9955  003018                     u8350:
  9956  003018                     
  9957                           ;main.c: 117:     WriteDataXLCD(0b00001000);
  9958  003018  0E08               	movlw	8
  9959  00301A  EC25  F01D         	call	_WriteDataXLCD
  9960  00301E                     l6778:
  9961  00301E  ECC9  F01E         	call	_BusyXLCD	;wreg free
  9962  003022  0900               	iorlw	0
  9963  003024  A4D8               	btfss	status,2,c
  9964  003026  EF17  F018         	goto	u8361
  9965  00302A  EF19  F018         	goto	u8360
  9966  00302E                     u8361:
  9967  00302E  EF0F  F018         	goto	l6778
  9968  003032                     u8360:
  9969  003032                     
  9970                           ;main.c: 119:     WriteDataXLCD(0b00010111);
  9971  003032  0E17               	movlw	23
  9972  003034  EC25  F01D         	call	_WriteDataXLCD
  9973  003038                     l6782:
  9974  003038  ECC9  F01E         	call	_BusyXLCD	;wreg free
  9975  00303C  0900               	iorlw	0
  9976  00303E  A4D8               	btfss	status,2,c
  9977  003040  EF24  F018         	goto	u8371
  9978  003044  EF26  F018         	goto	u8370
  9979  003048                     u8371:
  9980  003048  EF1C  F018         	goto	l6782
  9981  00304C                     u8370:
  9982  00304C                     
  9983                           ;main.c: 121:     WriteDataXLCD(0b00000000);
  9984  00304C  0E00               	movlw	0
  9985  00304E  EC25  F01D         	call	_WriteDataXLCD
  9986  003052                     l6786:
  9987  003052  ECC9  F01E         	call	_BusyXLCD	;wreg free
  9988  003056  0900               	iorlw	0
  9989  003058  A4D8               	btfss	status,2,c
  9990  00305A  EF31  F018         	goto	u8381
  9991  00305E  EF33  F018         	goto	u8380
  9992  003062                     u8381:
  9993  003062  EF29  F018         	goto	l6786
  9994  003066                     u8380:
  9995  003066  0012               	return		;funcret
  9996  003068                     __end_of_CGRamAddr0:
  9997                           	opt callstack 0
  9998                           
  9999 ;; *************** function _WriteDataXLCD *****************
 10000 ;; Defined at:
 10001 ;;		line 605 in file "xlcd.c"
 10002 ;; Parameters:    Size  Location     Type
 10003 ;;  data            1    wreg     unsigned char 
 10004 ;; Auto vars:     Size  Location     Type
 10005 ;;  data            1   13[COMRAM] unsigned char 
 10006 ;; Return value:  Size  Location     Type
 10007 ;;                  1    wreg      void 
 10008 ;; Registers used:
 10009 ;;		wreg, status,2, status,0, cstack
 10010 ;; Tracked objects:
 10011 ;;		On entry : 0/0
 10012 ;;		On exit  : 0/0
 10013 ;;		Unchanged: 0/0
 10014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10015 ;;      Params:         0       0       0       0       0       0       0
 10016 ;;      Locals:         1       0       0       0       0       0       0
 10017 ;;      Temps:          0       0       0       0       0       0       0
 10018 ;;      Totals:         1       0       0       0       0       0       0
 10019 ;;Total ram usage:        1 bytes
 10020 ;; Hardware stack levels used:    1
 10021 ;; Hardware stack levels required when called:    9
 10022 ;; This function calls:
 10023 ;;		_DelayFor18TCY
 10024 ;; This function is called by:
 10025 ;;		_CGRamAddr0
 10026 ;;		_main
 10027 ;;		_putsXLCD
 10028 ;; This function uses a non-reentrant model
 10029 ;;
 10030                           
 10031                           	psect	text48
 10032  003A4A                     __ptext48:
 10033                           	opt callstack 0
 10034  003A4A                     _WriteDataXLCD:
 10035                           	opt callstack 20
 10036                           
 10037                           ;incstack = 0
 10038                           ;WriteDataXLCD@data stored from wreg
 10039  003A4A  6E0E               	movwf	WriteDataXLCD@data^0,c
 10040  003A4C                     
 10041                           ;xlcd.c: 623:     TRISD &= 0xf0;
 10042  003A4C  0EF0               	movlw	240
 10043  003A4E  1695               	andwf	149,f,c	;volatile
 10044                           
 10045                           ;xlcd.c: 624:     PORTD &= 0xf0;
 10046  003A50  0EF0               	movlw	240
 10047  003A52  1683               	andwf	131,f,c	;volatile
 10048                           
 10049                           ;xlcd.c: 625:     PORTD |= ((data >> 4)&0x0f);
 10050  003A54  380E               	swapf	WriteDataXLCD@data^0,w,c
 10051  003A56  0B0F               	andlw	15
 10052  003A58  0B0F               	andlw	15
 10053  003A5A  1283               	iorwf	131,f,c	;volatile
 10054  003A5C                     
 10055                           ;xlcd.c: 627:     LATDbits.LATD4 = 1;
 10056  003A5C  888C               	bsf	140,4,c	;volatile
 10057  003A5E                     
 10058                           ;xlcd.c: 628:     LATDbits.LATD5 = 0;
 10059  003A5E  9A8C               	bcf	140,5,c	;volatile
 10060  003A60                     
 10061                           ;xlcd.c: 629:     DelayFor18TCY();
 10062  003A60  EC05  F01F         	call	_DelayFor18TCY	;wreg free
 10063  003A64                     
 10064                           ;xlcd.c: 630:     LATDbits.LATD6 = 1;
 10065  003A64  8C8C               	bsf	140,6,c	;volatile
 10066  003A66                     
 10067                           ;xlcd.c: 631:     DelayFor18TCY();
 10068  003A66  EC05  F01F         	call	_DelayFor18TCY	;wreg free
 10069  003A6A                     
 10070                           ;xlcd.c: 632:     LATDbits.LATD6 = 0;
 10071  003A6A  9C8C               	bcf	140,6,c	;volatile
 10072                           
 10073                           ;xlcd.c: 637:     PORTD &= 0xf0;
 10074  003A6C  0EF0               	movlw	240
 10075  003A6E  1683               	andwf	131,f,c	;volatile
 10076                           
 10077                           ;xlcd.c: 638:     PORTD |= (data & 0x0f);
 10078  003A70  500E               	movf	WriteDataXLCD@data^0,w,c
 10079  003A72  0B0F               	andlw	15
 10080  003A74  1283               	iorwf	131,f,c	;volatile
 10081  003A76                     
 10082                           ;xlcd.c: 640:     DelayFor18TCY();
 10083  003A76  EC05  F01F         	call	_DelayFor18TCY	;wreg free
 10084  003A7A                     
 10085                           ;xlcd.c: 641:     LATDbits.LATD6 = 1;
 10086  003A7A  8C8C               	bsf	140,6,c	;volatile
 10087  003A7C                     
 10088                           ;xlcd.c: 642:     DelayFor18TCY();
 10089  003A7C  EC05  F01F         	call	_DelayFor18TCY	;wreg free
 10090  003A80                     
 10091                           ;xlcd.c: 643:     LATDbits.LATD6 = 0;
 10092  003A80  9C8C               	bcf	140,6,c	;volatile
 10093                           
 10094                           ;xlcd.c: 647:     TRISD |= 0x0f;
 10095  003A82  0E0F               	movlw	15
 10096  003A84  1295               	iorwf	149,f,c	;volatile
 10097  003A86  0012               	return		;funcret
 10098  003A88                     __end_of_WriteDataXLCD:
 10099                           	opt callstack 0
 10100                           
 10101 ;; *************** function _SetCGRamAddr *****************
 10102 ;; Defined at:
 10103 ;;		line 431 in file "xlcd.c"
 10104 ;; Parameters:    Size  Location     Type
 10105 ;;  CGaddr          1    wreg     unsigned char 
 10106 ;; Auto vars:     Size  Location     Type
 10107 ;;  CGaddr          1   16[COMRAM] unsigned char 
 10108 ;; Return value:  Size  Location     Type
 10109 ;;                  1    wreg      void 
 10110 ;; Registers used:
 10111 ;;		wreg, status,2, status,0, cstack
 10112 ;; Tracked objects:
 10113 ;;		On entry : 0/0
 10114 ;;		On exit  : 0/0
 10115 ;;		Unchanged: 0/0
 10116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10117 ;;      Params:         0       0       0       0       0       0       0
 10118 ;;      Locals:         1       0       0       0       0       0       0
 10119 ;;      Temps:          3       0       0       0       0       0       0
 10120 ;;      Totals:         4       0       0       0       0       0       0
 10121 ;;Total ram usage:        4 bytes
 10122 ;; Hardware stack levels used:    1
 10123 ;; Hardware stack levels required when called:    9
 10124 ;; This function calls:
 10125 ;;		_DelayFor18TCY
 10126 ;; This function is called by:
 10127 ;;		_CGRamAddr0
 10128 ;; This function uses a non-reentrant model
 10129 ;;
 10130                           
 10131                           	psect	text49
 10132  0037F6                     __ptext49:
 10133                           	opt callstack 0
 10134  0037F6                     _SetCGRamAddr:
 10135                           	opt callstack 20
 10136                           
 10137                           ;incstack = 0
 10138                           ;SetCGRamAddr@CGaddr stored from wreg
 10139  0037F6  6E11               	movwf	SetCGRamAddr@CGaddr^0,c
 10140  0037F8                     
 10141                           ;xlcd.c: 449:     TRISD &= 0xf0;
 10142  0037F8  0EF0               	movlw	240
 10143  0037FA  1695               	andwf	149,f,c	;volatile
 10144                           
 10145                           ;xlcd.c: 450:     PORTD &= 0xf0;
 10146  0037FC  0EF0               	movlw	240
 10147  0037FE  1683               	andwf	131,f,c	;volatile
 10148                           
 10149                           ;xlcd.c: 451:     PORTD |= (((CGaddr | 0b01000000) >> 4) & 0x0f);
 10150  003800  5011               	movf	SetCGRamAddr@CGaddr^0,w,c
 10151  003802  6E0E               	movwf	??_SetCGRamAddr^0,c
 10152  003804  6A0F               	clrf	(??_SetCGRamAddr+1)^0,c
 10153  003806  0E40               	movlw	64
 10154  003808  120E               	iorwf	??_SetCGRamAddr^0,f,c
 10155  00380A  0E00               	movlw	0
 10156  00380C  120F               	iorwf	(??_SetCGRamAddr+1)^0,f,c
 10157  00380E  0E04               	movlw	4
 10158  003810  6E10               	movwf	(??_SetCGRamAddr+2)^0,c
 10159  003812                     u8275:
 10160  003812  340F               	rlcf	(??_SetCGRamAddr+1)^0,w,c
 10161  003814  320F               	rrcf	(??_SetCGRamAddr+1)^0,f,c
 10162  003816  320E               	rrcf	??_SetCGRamAddr^0,f,c
 10163  003818  2E10               	decfsz	(??_SetCGRamAddr+2)^0,f,c
 10164  00381A  EF09  F01C         	goto	u8275
 10165  00381E  500E               	movf	??_SetCGRamAddr^0,w,c
 10166  003820  0B0F               	andlw	15
 10167  003822  1283               	iorwf	131,f,c	;volatile
 10168  003824                     
 10169                           ;xlcd.c: 453:     LATDbits.LATD5 = 0;
 10170  003824  9A8C               	bcf	140,5,c	;volatile
 10171  003826                     
 10172                           ;xlcd.c: 454:     LATDbits.LATD4 = 0;
 10173  003826  988C               	bcf	140,4,c	;volatile
 10174  003828                     
 10175                           ;xlcd.c: 455:     DelayFor18TCY();
 10176  003828  EC05  F01F         	call	_DelayFor18TCY	;wreg free
 10177  00382C                     
 10178                           ;xlcd.c: 456:     LATDbits.LATD6 = 1;
 10179  00382C  8C8C               	bsf	140,6,c	;volatile
 10180  00382E                     
 10181                           ;xlcd.c: 457:     DelayFor18TCY();
 10182  00382E  EC05  F01F         	call	_DelayFor18TCY	;wreg free
 10183  003832                     
 10184                           ;xlcd.c: 458:     LATDbits.LATD6 = 0;
 10185  003832  9C8C               	bcf	140,6,c	;volatile
 10186                           
 10187                           ;xlcd.c: 463:     PORTD &= 0xf0;
 10188  003834  0EF0               	movlw	240
 10189  003836  1683               	andwf	131,f,c	;volatile
 10190                           
 10191                           ;xlcd.c: 464:     PORTD |= (CGaddr & 0x0f);
 10192  003838  5011               	movf	SetCGRamAddr@CGaddr^0,w,c
 10193  00383A  0B0F               	andlw	15
 10194  00383C  1283               	iorwf	131,f,c	;volatile
 10195  00383E                     
 10196                           ;xlcd.c: 466:     DelayFor18TCY();
 10197  00383E  EC05  F01F         	call	_DelayFor18TCY	;wreg free
 10198  003842                     
 10199                           ;xlcd.c: 467:     LATDbits.LATD6 = 1;
 10200  003842  8C8C               	bsf	140,6,c	;volatile
 10201  003844                     
 10202                           ;xlcd.c: 468:     DelayFor18TCY();
 10203  003844  EC05  F01F         	call	_DelayFor18TCY	;wreg free
 10204  003848                     
 10205                           ;xlcd.c: 469:     LATDbits.LATD6 = 0;
 10206  003848  9C8C               	bcf	140,6,c	;volatile
 10207                           
 10208                           ;xlcd.c: 473:     TRISD |= 0x0f;
 10209  00384A  0E0F               	movlw	15
 10210  00384C  1295               	iorwf	149,f,c	;volatile
 10211  00384E  0012               	return		;funcret
 10212  003850                     __end_of_SetCGRamAddr:
 10213                           	opt callstack 0
 10214                           
 10215 ;; *************** function _DelayFor18TCY *****************
 10216 ;; Defined at:
 10217 ;;		line 18 in file "xlcd.c"
 10218 ;; Parameters:    Size  Location     Type
 10219 ;;		None
 10220 ;; Auto vars:     Size  Location     Type
 10221 ;;		None
 10222 ;; Return value:  Size  Location     Type
 10223 ;;                  1    wreg      void 
 10224 ;; Registers used:
 10225 ;;		wreg
 10226 ;; Tracked objects:
 10227 ;;		On entry : 0/0
 10228 ;;		On exit  : 0/0
 10229 ;;		Unchanged: 0/0
 10230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10231 ;;      Params:         0       0       0       0       0       0       0
 10232 ;;      Locals:         0       0       0       0       0       0       0
 10233 ;;      Temps:          0       0       0       0       0       0       0
 10234 ;;      Totals:         0       0       0       0       0       0       0
 10235 ;;Total ram usage:        0 bytes
 10236 ;; Hardware stack levels used:    1
 10237 ;; Hardware stack levels required when called:    8
 10238 ;; This function calls:
 10239 ;;		Nothing
 10240 ;; This function is called by:
 10241 ;;		_OpenXLCD
 10242 ;;		_SetCGRamAddr
 10243 ;;		_WriteCmdXLCD
 10244 ;;		_WriteDataXLCD
 10245 ;;		_ReadAddrXLCD
 10246 ;;		_ReadDataXLCD
 10247 ;;		_SetDDRamAddr
 10248 ;; This function uses a non-reentrant model
 10249 ;;
 10250                           
 10251                           	psect	text50
 10252  003E0A                     __ptext50:
 10253                           	opt callstack 0
 10254  003E0A                     _DelayFor18TCY:
 10255                           	opt callstack 20
 10256  003E0A                     
 10257                           ;xlcd.c: 20:     _delay((unsigned long)((18)*(12000000/4000000.0)));
 10258  003E0A  0E12               	movlw	18
 10259  003E0C                     u8887:
 10260  003E0C  2EE8               	decfsz	wreg,f,c
 10261  003E0E  D7FE               	bra	u8887
 10262  003E10  0012               	return		;funcret
 10263  003E12                     __end_of_DelayFor18TCY:
 10264                           	opt callstack 0
 10265                           
 10266 ;; *************** function _BusyXLCD *****************
 10267 ;; Defined at:
 10268 ;;		line 219 in file "xlcd.c"
 10269 ;; Parameters:    Size  Location     Type
 10270 ;;		None
 10271 ;; Auto vars:     Size  Location     Type
 10272 ;;		None
 10273 ;; Return value:  Size  Location     Type
 10274 ;;                  1    wreg      unsigned char 
 10275 ;; Registers used:
 10276 ;;		wreg
 10277 ;; Tracked objects:
 10278 ;;		On entry : 0/0
 10279 ;;		On exit  : 0/0
 10280 ;;		Unchanged: 0/0
 10281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10282 ;;      Params:         0       0       0       0       0       0       0
 10283 ;;      Locals:         0       0       0       0       0       0       0
 10284 ;;      Temps:          1       0       0       0       0       0       0
 10285 ;;      Totals:         1       0       0       0       0       0       0
 10286 ;;Total ram usage:        1 bytes
 10287 ;; Hardware stack levels used:    1
 10288 ;; Hardware stack levels required when called:    8
 10289 ;; This function calls:
 10290 ;;		Nothing
 10291 ;; This function is called by:
 10292 ;;		_CGRamAddr0
 10293 ;;		_main
 10294 ;;		_OpenXLCD
 10295 ;;		_putsXLCD
 10296 ;; This function uses a non-reentrant model
 10297 ;;
 10298                           
 10299                           	psect	text51
 10300  003D92                     __ptext51:
 10301                           	opt callstack 0
 10302  003D92                     _BusyXLCD:
 10303                           	opt callstack 21
 10304  003D92                     
 10305                           ;xlcd.c: 221:     _delay((unsigned long)((15)*(12000000/4000.0)));
 10306  003D92  0E3B               	movlw	59
 10307  003D94  6E0E               	movwf	??_BusyXLCD^0,c
 10308  003D96  0E70               	movlw	112
 10309  003D98                     u8897:
 10310  003D98  2EE8               	decfsz	wreg,f,c
 10311  003D9A  D7FE               	bra	u8897
 10312  003D9C  2E0E               	decfsz	??_BusyXLCD^0,f,c
 10313  003D9E  D7FC               	bra	u8897
 10314                           
 10315                           ;xlcd.c: 223:  return 0;
 10316  003DA0  0E00               	movlw	0
 10317  003DA2  0012               	return		;funcret
 10318  003DA4                     __end_of_BusyXLCD:
 10319                           	opt callstack 0
 10320                           
 10321 ;; *************** function _INTERRUPT_InterruptManagerLow *****************
 10322 ;; Defined at:
 10323 ;;		line 94 in file "mcc_generated_files/interrupt_manager.c"
 10324 ;; Parameters:    Size  Location     Type
 10325 ;;		None
 10326 ;; Auto vars:     Size  Location     Type
 10327 ;;		None
 10328 ;; Return value:  Size  Location     Type
 10329 ;;                  1    wreg      void 
 10330 ;; Registers used:
 10331 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 10332 ;; Tracked objects:
 10333 ;;		On entry : 0/0
 10334 ;;		On exit  : 0/0
 10335 ;;		Unchanged: 0/0
 10336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10337 ;;      Params:         0       0       0       0       0       0       0
 10338 ;;      Locals:         0       0       0       0       0       0       0
 10339 ;;      Temps:          5       0       0       0       0       0       0
 10340 ;;      Totals:         5       0       0       0       0       0       0
 10341 ;;Total ram usage:        5 bytes
 10342 ;; Hardware stack levels used:    1
 10343 ;; Hardware stack levels required when called:    7
 10344 ;; This function calls:
 10345 ;;		_INT1_ISR
 10346 ;; This function is called by:
 10347 ;;		Interrupt level 1
 10348 ;; This function uses a non-reentrant model
 10349 ;;
 10350                           
 10351                           	psect	intcodelo
 10352  000018                     __pintcodelo:
 10353                           	opt callstack 0
 10354  000018                     _INTERRUPT_InterruptManagerLow:
 10355                           	opt callstack 15
 10356                           
 10357                           ;incstack = 0
 10358  000018  8051               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
 10359  00001A  CFD8 F009          	movff	status,??_INTERRUPT_InterruptManagerLow
 10360  00001E  CFE8 F00A          	movff	wreg,??_INTERRUPT_InterruptManagerLow+1
 10361  000022  CFE0 F00B          	movff	bsr,??_INTERRUPT_InterruptManagerLow+2
 10362  000026  CFFA F00C          	movff	pclath,??_INTERRUPT_InterruptManagerLow+3
 10363  00002A  CFFB F00D          	movff	pclatu,??_INTERRUPT_InterruptManagerLow+4
 10364  00002E                     
 10365                           ;mcc_generated_files/interrupt_manager.c: 97:     if(INTCON3bits.INT1IE == 1 && INTCON3b
      +                          its.INT1IF == 1)
 10366  00002E  A6F0               	btfss	240,3,c	;volatile
 10367  000030  EF1C  F000         	goto	i1u575_21
 10368  000034  EF1E  F000         	goto	i1u575_20
 10369  000038                     i1u575_21:
 10370  000038  EF27  F000         	goto	i1l152
 10371  00003C                     i1u575_20:
 10372  00003C  A0F0               	btfss	240,0,c	;volatile
 10373  00003E  EF23  F000         	goto	i1u576_21
 10374  000042  EF25  F000         	goto	i1u576_20
 10375  000046                     i1u576_21:
 10376  000046  EF27  F000         	goto	i1l152
 10377  00004A                     i1u576_20:
 10378  00004A                     
 10379                           ;mcc_generated_files/interrupt_manager.c: 98:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 99:         INT1_ISR();
 10380  00004A  EC09  F01F         	call	_INT1_ISR	;wreg free
 10381  00004E                     i1l152:
 10382  00004E  C00D  FFFB         	movff	??_INTERRUPT_InterruptManagerLow+4,pclatu
 10383  000052  C00C  FFFA         	movff	??_INTERRUPT_InterruptManagerLow+3,pclath
 10384  000056  C00B  FFE0         	movff	??_INTERRUPT_InterruptManagerLow+2,bsr
 10385  00005A  C00A  FFE8         	movff	??_INTERRUPT_InterruptManagerLow+1,wreg
 10386  00005E  C009  FFD8         	movff	??_INTERRUPT_InterruptManagerLow,status
 10387  000062  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
 10388  000064  0010               	retfie	
 10389  000066                     __end_of_INTERRUPT_InterruptManagerLow:
 10390                           	opt callstack 0
 10391                           
 10392 ;; *************** function _INT1_ISR *****************
 10393 ;; Defined at:
 10394 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 10395 ;; Parameters:    Size  Location     Type
 10396 ;;		None
 10397 ;; Auto vars:     Size  Location     Type
 10398 ;;		None
 10399 ;; Return value:  Size  Location     Type
 10400 ;;                  1    wreg      void 
 10401 ;; Registers used:
 10402 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 10403 ;; Tracked objects:
 10404 ;;		On entry : 0/0
 10405 ;;		On exit  : 0/0
 10406 ;;		Unchanged: 0/0
 10407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10408 ;;      Params:         0       0       0       0       0       0       0
 10409 ;;      Locals:         0       0       0       0       0       0       0
 10410 ;;      Temps:          0       0       0       0       0       0       0
 10411 ;;      Totals:         0       0       0       0       0       0       0
 10412 ;;Total ram usage:        0 bytes
 10413 ;; Hardware stack levels used:    1
 10414 ;; Hardware stack levels required when called:    6
 10415 ;; This function calls:
 10416 ;;		_INT1_CallBack
 10417 ;; This function is called by:
 10418 ;;		_INTERRUPT_InterruptManagerLow
 10419 ;; This function uses a non-reentrant model
 10420 ;;
 10421                           
 10422                           	psect	text53
 10423  003E12                     __ptext53:
 10424                           	opt callstack 0
 10425  003E12                     _INT1_ISR:
 10426                           	opt callstack 15
 10427  003E12                     
 10428                           ;mcc_generated_files/ext_int.c: 61:     (INTCON3bits.INT1IF = 0);
 10429  003E12  90F0               	bcf	240,0,c	;volatile
 10430  003E14                     
 10431                           ;mcc_generated_files/ext_int.c: 64:     INT1_CallBack();
 10432  003E14  ECEC  F01D         	call	_INT1_CallBack	;wreg free
 10433  003E18  0012               	return		;funcret
 10434  003E1A                     __end_of_INT1_ISR:
 10435                           	opt callstack 0
 10436                           
 10437 ;; *************** function _INT1_CallBack *****************
 10438 ;; Defined at:
 10439 ;;		line 68 in file "mcc_generated_files/ext_int.c"
 10440 ;; Parameters:    Size  Location     Type
 10441 ;;		None
 10442 ;; Auto vars:     Size  Location     Type
 10443 ;;		None
 10444 ;; Return value:  Size  Location     Type
 10445 ;;                  1    wreg      void 
 10446 ;; Registers used:
 10447 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 10448 ;; Tracked objects:
 10449 ;;		On entry : 0/0
 10450 ;;		On exit  : 0/0
 10451 ;;		Unchanged: 0/0
 10452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10453 ;;      Params:         0       0       0       0       0       0       0
 10454 ;;      Locals:         0       0       0       0       0       0       0
 10455 ;;      Temps:          0       0       0       0       0       0       0
 10456 ;;      Totals:         0       0       0       0       0       0       0
 10457 ;;Total ram usage:        0 bytes
 10458 ;; Hardware stack levels used:    1
 10459 ;; Hardware stack levels required when called:    5
 10460 ;; This function calls:
 10461 ;;		Absolute function
 10462 ;;		_INT1_DefaultInterruptHandler
 10463 ;;		_start
 10464 ;; This function is called by:
 10465 ;;		_INT1_ISR
 10466 ;; This function uses a non-reentrant model
 10467 ;;
 10468                           
 10469                           	psect	text54
 10470  003BD8                     __ptext54:
 10471                           	opt callstack 0
 10472  003BD8                     _INT1_CallBack:
 10473                           	opt callstack 15
 10474  003BD8                     
 10475                           ;mcc_generated_files/ext_int.c: 71:     if(INT1_InterruptHandler)
 10476  003BD8  0101               	movlb	1	; () banked
 10477  003BDA  51BB               	movf	_INT1_InterruptHandler& (0+255),w,b
 10478  003BDC  11BC               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 10479  003BDE  B4D8               	btfsc	status,2,c
 10480  003BE0  EFF4  F01D         	goto	i1u532_21
 10481  003BE4  EFF6  F01D         	goto	i1u532_20
 10482  003BE8                     i1u532_21:
 10483  003BE8  EF03  F01E         	goto	i1l102
 10484  003BEC                     i1u532_20:
 10485  003BEC                     
 10486                           ; BSR set to: 1
 10487                           ;mcc_generated_files/ext_int.c: 72:     {;mcc_generated_files/ext_int.c: 73:         INT
      +                          1_InterruptHandler();
 10488  003BEC  D802               	call	i1u533_28
 10489  003BEE  EF03  F01E         	goto	i1u533_29
 10490  003BF2                     i1u533_28:
 10491  003BF2  0005               	push	
 10492  003BF4  6EFA               	movwf	pclath,c
 10493  003BF6  51BB               	movf	_INT1_InterruptHandler& (0+255),w,b
 10494  003BF8  6EFD               	movwf	tosl,c
 10495  003BFA  51BC               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 10496  003BFC  6EFE               	movwf	tosh,c
 10497  003BFE  50F8               	movf	tblptru,w,c
 10498  003C00  6EFF               	movwf	tosu,c
 10499  003C02  50FA               	movf	pclath,w,c
 10500  003C04  0012               	return		;indir
 10501  003C06                     i1u533_29:
 10502  003C06                     i1l102:
 10503  003C06  0012               	return		;funcret
 10504  003C08                     __end_of_INT1_CallBack:
 10505                           	opt callstack 0
 10506                           
 10507 ;; *************** function _INT1_DefaultInterruptHandler *****************
 10508 ;; Defined at:
 10509 ;;		line 81 in file "mcc_generated_files/ext_int.c"
 10510 ;; Parameters:    Size  Location     Type
 10511 ;;		None
 10512 ;; Auto vars:     Size  Location     Type
 10513 ;;		None
 10514 ;; Return value:  Size  Location     Type
 10515 ;;                  1    wreg      void 
 10516 ;; Registers used:
 10517 ;;		None
 10518 ;; Tracked objects:
 10519 ;;		On entry : 0/0
 10520 ;;		On exit  : 0/0
 10521 ;;		Unchanged: 0/0
 10522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10523 ;;      Params:         0       0       0       0       0       0       0
 10524 ;;      Locals:         0       0       0       0       0       0       0
 10525 ;;      Temps:          0       0       0       0       0       0       0
 10526 ;;      Totals:         0       0       0       0       0       0       0
 10527 ;;Total ram usage:        0 bytes
 10528 ;; Hardware stack levels used:    1
 10529 ;; Hardware stack levels required when called:    4
 10530 ;; This function calls:
 10531 ;;		Nothing
 10532 ;; This function is called by:
 10533 ;;		_EXT_INT_Initialize
 10534 ;;		_INT1_CallBack
 10535 ;; This function uses a non-reentrant model
 10536 ;;
 10537                           
 10538                           	psect	text55
 10539  003E2E                     __ptext55:
 10540                           	opt callstack 0
 10541  003E2E                     _INT1_DefaultInterruptHandler:
 10542                           	opt callstack 15
 10543  003E2E  0012               	return		;funcret
 10544  003E30                     __end_of_INT1_DefaultInterruptHandler:
 10545                           	opt callstack 0
 10546                           
 10547 ;; *************** function _start *****************
 10548 ;; Defined at:
 10549 ;;		line 76 in file "main.c"
 10550 ;; Parameters:    Size  Location     Type
 10551 ;;		None
 10552 ;; Auto vars:     Size  Location     Type
 10553 ;;		None
 10554 ;; Return value:  Size  Location     Type
 10555 ;;                  1    wreg      void 
 10556 ;; Registers used:
 10557 ;;		wreg, status,2, status,0
 10558 ;; Tracked objects:
 10559 ;;		On entry : 0/0
 10560 ;;		On exit  : 0/0
 10561 ;;		Unchanged: 0/0
 10562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10563 ;;      Params:         0       0       0       0       0       0       0
 10564 ;;      Locals:         0       0       0       0       0       0       0
 10565 ;;      Temps:          0       0       0       0       0       0       0
 10566 ;;      Totals:         0       0       0       0       0       0       0
 10567 ;;Total ram usage:        0 bytes
 10568 ;; Hardware stack levels used:    1
 10569 ;; Hardware stack levels required when called:    4
 10570 ;; This function calls:
 10571 ;;		Nothing
 10572 ;; This function is called by:
 10573 ;;		_main
 10574 ;;		_INT1_CallBack
 10575 ;; This function uses a non-reentrant model
 10576 ;;
 10577                           
 10578                           	psect	text56
 10579  003BA4                     __ptext56:
 10580                           	opt callstack 0
 10581  003BA4                     _start:
 10582                           	opt callstack 15
 10583  003BA4                     
 10584                           ;main.c: 78:         if (start_flag == 1) {
 10585  003BA4  0100               	movlb	0	; () banked
 10586  003BA6  05D5               	decf	_start_flag& (0+255),w,b	;volatile
 10587  003BA8  A4D8               	btfss	status,2,c
 10588  003BAA  EFD9  F01D         	goto	i1u514_21
 10589  003BAE  EFDB  F01D         	goto	i1u514_20
 10590  003BB2                     i1u514_21:
 10591  003BB2  EFDF  F01D         	goto	i1l4608
 10592  003BB6                     i1u514_20:
 10593  003BB6                     
 10594                           ; BSR set to: 0
 10595                           ;main.c: 79:             start_flag = 0;
 10596  003BB6  0E00               	movlw	0
 10597  003BB8  6FD5               	movwf	_start_flag& (0+255),b	;volatile
 10598                           
 10599                           ;main.c: 80:         } else if (start_flag == 0) {
 10600  003BBA  EFE9  F01D         	goto	i1l261
 10601  003BBE                     i1l4608:
 10602                           
 10603                           ; BSR set to: 0
 10604  003BBE  51D5               	movf	_start_flag& (0+255),w,b	;volatile
 10605  003BC0  A4D8               	btfss	status,2,c
 10606  003BC2  EFE5  F01D         	goto	i1u515_21
 10607  003BC6  EFE7  F01D         	goto	i1u515_20
 10608  003BCA                     i1u515_21:
 10609  003BCA  EFE9  F01D         	goto	i1l261
 10610  003BCE                     i1u515_20:
 10611  003BCE                     
 10612                           ; BSR set to: 0
 10613                           ;main.c: 81:             start_flag = 1;
 10614  003BCE  0E01               	movlw	1
 10615  003BD0  6FD5               	movwf	_start_flag& (0+255),b	;volatile
 10616  003BD2                     i1l261:
 10617                           
 10618                           ; BSR set to: 0
 10619                           ;main.c: 83:         write_flag = 1;
 10620  003BD2  0E01               	movlw	1
 10621  003BD4  6FD4               	movwf	_write_flag& (0+255),b	;volatile
 10622  003BD6                     
 10623                           ; BSR set to: 0
 10624  003BD6  0012               	return		;funcret
 10625  003BD8                     __end_of_start:
 10626                           	opt callstack 0
 10627                           
 10628 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
 10629 ;; Defined at:
 10630 ;;		line 73 in file "mcc_generated_files/interrupt_manager.c"
 10631 ;; Parameters:    Size  Location     Type
 10632 ;;		None
 10633 ;; Auto vars:     Size  Location     Type
 10634 ;;		None
 10635 ;; Return value:  Size  Location     Type
 10636 ;;                  1    wreg      void 
 10637 ;; Registers used:
 10638 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 10639 ;; Tracked objects:
 10640 ;;		On entry : 0/0
 10641 ;;		On exit  : 0/0
 10642 ;;		Unchanged: 0/0
 10643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10644 ;;      Params:         0       0       0       0       0       0       0
 10645 ;;      Locals:         0       0       0       0       0       0       0
 10646 ;;      Temps:          2       0       0       0       0       0       0
 10647 ;;      Totals:         2       0       0       0       0       0       0
 10648 ;;Total ram usage:        2 bytes
 10649 ;; Hardware stack levels used:    1
 10650 ;; Hardware stack levels required when called:    3
 10651 ;; This function calls:
 10652 ;;		_ADC_ISR
 10653 ;;		_INT0_ISR
 10654 ;;		_TMR1_ISR
 10655 ;; This function is called by:
 10656 ;;		Interrupt level 2
 10657 ;; This function uses a non-reentrant model
 10658 ;;
 10659                           
 10660                           	psect	intcode
 10661  000008                     __pintcode:
 10662                           	opt callstack 0
 10663  000008                     _INTERRUPT_InterruptManagerHigh:
 10664                           	opt callstack 15
 10665                           
 10666                           ; BSR set to: 0
 10667                           ;incstack = 0
 10668  000008  8251               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 10669  00000A  EFF3  F01A         	goto	int_func
 10670                           
 10671                           	psect	intcode_body
 10672  0035E6                     __pintcode_body:
 10673                           	opt callstack 15
 10674  0035E6                     int_func:
 10675                           	opt callstack 15
 10676  0035E6  CFFA F007          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
 10677  0035EA  CFFB F008          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
 10678  0035EE                     
 10679                           ;mcc_generated_files/interrupt_manager.c: 76:     if(PIE1bits.ADIE == 1 && PIR1bits.ADIF
      +                           == 1)
 10680  0035EE  AC9D               	btfss	157,6,c	;volatile
 10681  0035F0  EFFC  F01A         	goto	i2u569_41
 10682  0035F4  EFFE  F01A         	goto	i2u569_40
 10683  0035F8                     i2u569_41:
 10684  0035F8  EF09  F01B         	goto	i2l139
 10685  0035FC                     i2u569_40:
 10686  0035FC  AC9E               	btfss	158,6,c	;volatile
 10687  0035FE  EF03  F01B         	goto	i2u570_41
 10688  003602  EF05  F01B         	goto	i2u570_40
 10689  003606                     i2u570_41:
 10690  003606  EF09  F01B         	goto	i2l139
 10691  00360A                     i2u570_40:
 10692  00360A                     
 10693                           ;mcc_generated_files/interrupt_manager.c: 77:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 78:         ADC_ISR();
 10694  00360A  ECA5  F01E         	call	_ADC_ISR	;wreg free
 10695                           
 10696                           ;mcc_generated_files/interrupt_manager.c: 79:     }
 10697  00360E  EF2D  F01B         	goto	i2l145
 10698  003612                     i2l139:
 10699  003612  A8F2               	btfss	242,4,c	;volatile
 10700  003614  EF0E  F01B         	goto	i2u571_41
 10701  003618  EF10  F01B         	goto	i2u571_40
 10702  00361C                     i2u571_41:
 10703  00361C  EF1B  F01B         	goto	i2l141
 10704  003620                     i2u571_40:
 10705  003620  A2F2               	btfss	242,1,c	;volatile
 10706  003622  EF15  F01B         	goto	i2u572_41
 10707  003626  EF17  F01B         	goto	i2u572_40
 10708  00362A                     i2u572_41:
 10709  00362A  EF1B  F01B         	goto	i2l141
 10710  00362E                     i2u572_40:
 10711  00362E                     
 10712                           ;mcc_generated_files/interrupt_manager.c: 81:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 82:         INT0_ISR();
 10713  00362E  EC0D  F01F         	call	_INT0_ISR	;wreg free
 10714                           
 10715                           ;mcc_generated_files/interrupt_manager.c: 83:     }
 10716  003632  EF2D  F01B         	goto	i2l145
 10717  003636                     i2l141:
 10718  003636  A09D               	btfss	157,0,c	;volatile
 10719  003638  EF20  F01B         	goto	i2u573_41
 10720  00363C  EF22  F01B         	goto	i2u573_40
 10721  003640                     i2u573_41:
 10722  003640  EF2D  F01B         	goto	i2l142
 10723  003644                     i2u573_40:
 10724  003644  A09E               	btfss	158,0,c	;volatile
 10725  003646  EF27  F01B         	goto	i2u574_41
 10726  00364A  EF29  F01B         	goto	i2u574_40
 10727  00364E                     i2u574_41:
 10728  00364E  EF2D  F01B         	goto	i2l142
 10729  003652                     i2u574_40:
 10730  003652                     
 10731                           ;mcc_generated_files/interrupt_manager.c: 85:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 86:         TMR1_ISR();
 10732  003652  EC44  F01D         	call	_TMR1_ISR	;wreg free
 10733                           
 10734                           ;mcc_generated_files/interrupt_manager.c: 87:     }
 10735  003656  EF2D  F01B         	goto	i2l145
 10736  00365A                     i2l142:
 10737  00365A                     i2l145:
 10738  00365A  C008  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
 10739  00365E  C007  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
 10740  003662  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10741  003664  0011               	retfie		f
 10742  003666                     __end_of_INTERRUPT_InterruptManagerHigh:
 10743                           	opt callstack 0
 10744                           
 10745 ;; *************** function _TMR1_ISR *****************
 10746 ;; Defined at:
 10747 ;;		line 158 in file "mcc_generated_files/tmr1.c"
 10748 ;; Parameters:    Size  Location     Type
 10749 ;;		None
 10750 ;; Auto vars:     Size  Location     Type
 10751 ;;		None
 10752 ;; Return value:  Size  Location     Type
 10753 ;;                  1    wreg      void 
 10754 ;; Registers used:
 10755 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 10756 ;; Tracked objects:
 10757 ;;		On entry : 0/0
 10758 ;;		On exit  : 0/0
 10759 ;;		Unchanged: 0/0
 10760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10761 ;;      Params:         0       0       0       0       0       0       0
 10762 ;;      Locals:         0       0       0       0       0       0       0
 10763 ;;      Temps:          0       0       0       0       0       0       0
 10764 ;;      Totals:         0       0       0       0       0       0       0
 10765 ;;Total ram usage:        0 bytes
 10766 ;; Hardware stack levels used:    1
 10767 ;; Hardware stack levels required when called:    2
 10768 ;; This function calls:
 10769 ;;		Absolute function
 10770 ;;		_TMR1_DefaultInterruptHandler
 10771 ;;		_TMR1_WriteTimer
 10772 ;;		_convert_timer
 10773 ;; This function is called by:
 10774 ;;		_INTERRUPT_InterruptManagerHigh
 10775 ;; This function uses a non-reentrant model
 10776 ;;
 10777                           
 10778                           	psect	text58
 10779  003A88                     __ptext58:
 10780                           	opt callstack 0
 10781  003A88                     _TMR1_ISR:
 10782                           	opt callstack 15
 10783  003A88                     
 10784                           ;mcc_generated_files/tmr1.c: 162:     PIR1bits.TMR1IF = 0;
 10785  003A88  909E               	bcf	158,0,c	;volatile
 10786  003A8A                     
 10787                           ;mcc_generated_files/tmr1.c: 163:     TMR1_WriteTimer(timer1ReloadVal);
 10788  003A8A  C04F  F001         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
 10789  003A8E  C050  F002         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
 10790  003A92  EC5C  F01E         	call	_TMR1_WriteTimer	;wreg free
 10791  003A96                     
 10792                           ;mcc_generated_files/tmr1.c: 165:     if(TMR1_InterruptHandler)
 10793  003A96  0101               	movlb	1	; () banked
 10794  003A98  51B9               	movf	_TMR1_InterruptHandler& (0+255),w,b
 10795  003A9A  11BA               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 10796  003A9C  B4D8               	btfsc	status,2,c
 10797  003A9E  EF53  F01D         	goto	i2u537_41
 10798  003AA2  EF55  F01D         	goto	i2u537_40
 10799  003AA6                     i2u537_41:
 10800  003AA6  EF62  F01D         	goto	i2l501
 10801  003AAA                     i2u537_40:
 10802  003AAA                     
 10803                           ; BSR set to: 1
 10804                           ;mcc_generated_files/tmr1.c: 166:     {;mcc_generated_files/tmr1.c: 167:         TMR1_In
      +                          terruptHandler();
 10805  003AAA  D802               	call	i2u538_48
 10806  003AAC  EF62  F01D         	goto	i2u538_49
 10807  003AB0                     i2u538_48:
 10808  003AB0  0005               	push	
 10809  003AB2  6EFA               	movwf	pclath,c
 10810  003AB4  51B9               	movf	_TMR1_InterruptHandler& (0+255),w,b
 10811  003AB6  6EFD               	movwf	tosl,c
 10812  003AB8  51BA               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 10813  003ABA  6EFE               	movwf	tosh,c
 10814  003ABC  50F8               	movf	tblptru,w,c
 10815  003ABE  6EFF               	movwf	tosu,c
 10816  003AC0  50FA               	movf	pclath,w,c
 10817  003AC2  0012               	return		;indir
 10818  003AC4                     i2u538_49:
 10819  003AC4                     i2l501:
 10820  003AC4  0012               	return		;funcret
 10821  003AC6                     __end_of_TMR1_ISR:
 10822                           	opt callstack 0
 10823                           
 10824 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 10825 ;; Defined at:
 10826 ;;		line 176 in file "mcc_generated_files/tmr1.c"
 10827 ;; Parameters:    Size  Location     Type
 10828 ;;		None
 10829 ;; Auto vars:     Size  Location     Type
 10830 ;;		None
 10831 ;; Return value:  Size  Location     Type
 10832 ;;                  1    wreg      void 
 10833 ;; Registers used:
 10834 ;;		None
 10835 ;; Tracked objects:
 10836 ;;		On entry : 0/0
 10837 ;;		On exit  : 0/0
 10838 ;;		Unchanged: 0/0
 10839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10840 ;;      Params:         0       0       0       0       0       0       0
 10841 ;;      Locals:         0       0       0       0       0       0       0
 10842 ;;      Temps:          0       0       0       0       0       0       0
 10843 ;;      Totals:         0       0       0       0       0       0       0
 10844 ;;Total ram usage:        0 bytes
 10845 ;; Hardware stack levels used:    1
 10846 ;; This function calls:
 10847 ;;		Nothing
 10848 ;; This function is called by:
 10849 ;;		_TMR1_Initialize
 10850 ;;		_TMR1_ISR
 10851 ;; This function uses a non-reentrant model
 10852 ;;
 10853                           
 10854                           	psect	text59
 10855  003E30                     __ptext59:
 10856                           	opt callstack 0
 10857  003E30                     _TMR1_DefaultInterruptHandler:
 10858                           	opt callstack 16
 10859  003E30  0012               	return		;funcret
 10860  003E32                     __end_of_TMR1_DefaultInterruptHandler:
 10861                           	opt callstack 0
 10862                           
 10863 ;; *************** function _convert_timer *****************
 10864 ;; Defined at:
 10865 ;;		line 87 in file "main.c"
 10866 ;; Parameters:    Size  Location     Type
 10867 ;;		None
 10868 ;; Auto vars:     Size  Location     Type
 10869 ;;		None
 10870 ;; Return value:  Size  Location     Type
 10871 ;;                  1    wreg      void 
 10872 ;; Registers used:
 10873 ;;		cstack
 10874 ;; Tracked objects:
 10875 ;;		On entry : 0/0
 10876 ;;		On exit  : 0/0
 10877 ;;		Unchanged: 0/0
 10878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10879 ;;      Params:         0       0       0       0       0       0       0
 10880 ;;      Locals:         0       0       0       0       0       0       0
 10881 ;;      Temps:          0       0       0       0       0       0       0
 10882 ;;      Totals:         0       0       0       0       0       0       0
 10883 ;;Total ram usage:        0 bytes
 10884 ;; Hardware stack levels used:    1
 10885 ;; Hardware stack levels required when called:    1
 10886 ;; This function calls:
 10887 ;;		_ADC_StartConversion
 10888 ;; This function is called by:
 10889 ;;		_main
 10890 ;;		_TMR1_ISR
 10891 ;; This function uses a non-reentrant model
 10892 ;;
 10893                           
 10894                           	psect	text60
 10895  003E22                     __ptext60:
 10896                           	opt callstack 0
 10897  003E22                     _convert_timer:
 10898                           	opt callstack 15
 10899  003E22                     
 10900                           ;main.c: 89:     ADC_StartConversion();
 10901  003E22  EC14  F01F         	call	_ADC_StartConversion	;wreg free
 10902  003E26  0012               	return		;funcret
 10903  003E28                     __end_of_convert_timer:
 10904                           	opt callstack 0
 10905                           
 10906 ;; *************** function _ADC_StartConversion *****************
 10907 ;; Defined at:
 10908 ;;		line 92 in file "mcc_generated_files/adc.c"
 10909 ;; Parameters:    Size  Location     Type
 10910 ;;		None
 10911 ;; Auto vars:     Size  Location     Type
 10912 ;;		None
 10913 ;; Return value:  Size  Location     Type
 10914 ;;                  1    wreg      void 
 10915 ;; Registers used:
 10916 ;;		None
 10917 ;; Tracked objects:
 10918 ;;		On entry : 0/0
 10919 ;;		On exit  : 0/0
 10920 ;;		Unchanged: 0/0
 10921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10922 ;;      Params:         0       0       0       0       0       0       0
 10923 ;;      Locals:         0       0       0       0       0       0       0
 10924 ;;      Temps:          0       0       0       0       0       0       0
 10925 ;;      Totals:         0       0       0       0       0       0       0
 10926 ;;Total ram usage:        0 bytes
 10927 ;; Hardware stack levels used:    1
 10928 ;; This function calls:
 10929 ;;		Nothing
 10930 ;; This function is called by:
 10931 ;;		_convert_timer
 10932 ;; This function uses a non-reentrant model
 10933 ;;
 10934                           
 10935                           	psect	text61
 10936  003E28                     __ptext61:
 10937                           	opt callstack 0
 10938  003E28                     _ADC_StartConversion:
 10939                           	opt callstack 15
 10940  003E28                     
 10941                           ;mcc_generated_files/adc.c: 95:     ADCON0bits.GO_nDONE = 1;
 10942  003E28  82C2               	bsf	194,1,c	;volatile
 10943  003E2A  0012               	return		;funcret
 10944  003E2C                     __end_of_ADC_StartConversion:
 10945                           	opt callstack 0
 10946                           
 10947 ;; *************** function _TMR1_WriteTimer *****************
 10948 ;; Defined at:
 10949 ;;		line 121 in file "mcc_generated_files/tmr1.c"
 10950 ;; Parameters:    Size  Location     Type
 10951 ;;  timerVal        2    0[COMRAM] unsigned short 
 10952 ;; Auto vars:     Size  Location     Type
 10953 ;;		None
 10954 ;; Return value:  Size  Location     Type
 10955 ;;                  1    wreg      void 
 10956 ;; Registers used:
 10957 ;;		wreg, status,2
 10958 ;; Tracked objects:
 10959 ;;		On entry : 0/0
 10960 ;;		On exit  : 0/0
 10961 ;;		Unchanged: 0/0
 10962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10963 ;;      Params:         2       0       0       0       0       0       0
 10964 ;;      Locals:         0       0       0       0       0       0       0
 10965 ;;      Temps:          0       0       0       0       0       0       0
 10966 ;;      Totals:         2       0       0       0       0       0       0
 10967 ;;Total ram usage:        2 bytes
 10968 ;; Hardware stack levels used:    1
 10969 ;; This function calls:
 10970 ;;		Nothing
 10971 ;; This function is called by:
 10972 ;;		_TMR1_ISR
 10973 ;;		_TMR1_Reload
 10974 ;; This function uses a non-reentrant model
 10975 ;;
 10976                           
 10977                           	psect	text62
 10978  003CB8                     __ptext62:
 10979                           	opt callstack 0
 10980  003CB8                     _TMR1_WriteTimer:
 10981                           	opt callstack 16
 10982  003CB8                     
 10983                           ;mcc_generated_files/tmr1.c: 121: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 122: {;mcc_generated_files/tmr1.c: 123:     if (T1CONbits.T1SYNC == 1)
 10984  003CB8  A4CD               	btfss	205,2,c	;volatile
 10985  003CBA  EF61  F01E         	goto	i2u535_41
 10986  003CBE  EF63  F01E         	goto	i2u535_40
 10987  003CC2                     i2u535_41:
 10988  003CC2  EF6B  F01E         	goto	i2l4860
 10989  003CC6                     i2u535_40:
 10990  003CC6                     
 10991                           ;mcc_generated_files/tmr1.c: 124:     {;mcc_generated_files/tmr1.c: 126:         T1CONbi
      +                          ts.TMR1ON = 0;
 10992  003CC6  90CD               	bcf	205,0,c	;volatile
 10993  003CC8                     
 10994                           ;mcc_generated_files/tmr1.c: 129:         TMR1H = (timerVal >> 8);
 10995  003CC8  5002               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
 10996  003CCA  6ECF               	movwf	207,c	;volatile
 10997  003CCC                     
 10998                           ;mcc_generated_files/tmr1.c: 130:         TMR1L = (uint8_t) timerVal;
 10999  003CCC  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 11000  003CD0                     
 11001                           ;mcc_generated_files/tmr1.c: 133:         T1CONbits.TMR1ON =1;
 11002  003CD0  80CD               	bsf	205,0,c	;volatile
 11003                           
 11004                           ;mcc_generated_files/tmr1.c: 134:     }
 11005  003CD2  EF6F  F01E         	goto	i2l488
 11006  003CD6                     i2l4860:
 11007                           
 11008                           ;mcc_generated_files/tmr1.c: 136:     {;mcc_generated_files/tmr1.c: 138:         TMR1H =
      +                           (timerVal >> 8);
 11009  003CD6  5002               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
 11010  003CD8  6ECF               	movwf	207,c	;volatile
 11011  003CDA                     
 11012                           ;mcc_generated_files/tmr1.c: 139:         TMR1L = (uint8_t) timerVal;
 11013  003CDA  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 11014  003CDE                     i2l488:
 11015  003CDE  0012               	return		;funcret
 11016  003CE0                     __end_of_TMR1_WriteTimer:
 11017                           	opt callstack 0
 11018                           
 11019 ;; *************** function _INT0_ISR *****************
 11020 ;; Defined at:
 11021 ;;		line 33 in file "mcc_generated_files/ext_int.c"
 11022 ;; Parameters:    Size  Location     Type
 11023 ;;		None
 11024 ;; Auto vars:     Size  Location     Type
 11025 ;;		None
 11026 ;; Return value:  Size  Location     Type
 11027 ;;                  1    wreg      void 
 11028 ;; Registers used:
 11029 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 11030 ;; Tracked objects:
 11031 ;;		On entry : 0/0
 11032 ;;		On exit  : 0/0
 11033 ;;		Unchanged: 0/0
 11034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11035 ;;      Params:         0       0       0       0       0       0       0
 11036 ;;      Locals:         0       0       0       0       0       0       0
 11037 ;;      Temps:          0       0       0       0       0       0       0
 11038 ;;      Totals:         0       0       0       0       0       0       0
 11039 ;;Total ram usage:        0 bytes
 11040 ;; Hardware stack levels used:    1
 11041 ;; Hardware stack levels required when called:    2
 11042 ;; This function calls:
 11043 ;;		_INT0_CallBack
 11044 ;; This function is called by:
 11045 ;;		_INTERRUPT_InterruptManagerHigh
 11046 ;; This function uses a non-reentrant model
 11047 ;;
 11048                           
 11049                           	psect	text63
 11050  003E1A                     __ptext63:
 11051                           	opt callstack 0
 11052  003E1A                     _INT0_ISR:
 11053                           	opt callstack 15
 11054  003E1A                     
 11055                           ;mcc_generated_files/ext_int.c: 35:     (INTCONbits.INT0IF = 0);
 11056  003E1A  92F2               	bcf	242,1,c	;volatile
 11057  003E1C                     
 11058                           ;mcc_generated_files/ext_int.c: 38:     INT0_CallBack();
 11059  003E1C  EC04  F01E         	call	_INT0_CallBack	;wreg free
 11060  003E20  0012               	return		;funcret
 11061  003E22                     __end_of_INT0_ISR:
 11062                           	opt callstack 0
 11063                           
 11064 ;; *************** function _INT0_CallBack *****************
 11065 ;; Defined at:
 11066 ;;		line 42 in file "mcc_generated_files/ext_int.c"
 11067 ;; Parameters:    Size  Location     Type
 11068 ;;		None
 11069 ;; Auto vars:     Size  Location     Type
 11070 ;;		None
 11071 ;; Return value:  Size  Location     Type
 11072 ;;                  1    wreg      void 
 11073 ;; Registers used:
 11074 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 11075 ;; Tracked objects:
 11076 ;;		On entry : 0/0
 11077 ;;		On exit  : 0/0
 11078 ;;		Unchanged: 0/0
 11079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11080 ;;      Params:         0       0       0       0       0       0       0
 11081 ;;      Locals:         0       0       0       0       0       0       0
 11082 ;;      Temps:          0       0       0       0       0       0       0
 11083 ;;      Totals:         0       0       0       0       0       0       0
 11084 ;;Total ram usage:        0 bytes
 11085 ;; Hardware stack levels used:    1
 11086 ;; Hardware stack levels required when called:    1
 11087 ;; This function calls:
 11088 ;;		Absolute function
 11089 ;;		_INT0_DefaultInterruptHandler
 11090 ;;		_emrgencia
 11091 ;; This function is called by:
 11092 ;;		_INT0_ISR
 11093 ;; This function uses a non-reentrant model
 11094 ;;
 11095                           
 11096                           	psect	text64
 11097  003C08                     __ptext64:
 11098                           	opt callstack 0
 11099  003C08                     _INT0_CallBack:
 11100                           	opt callstack 15
 11101  003C08                     
 11102                           ;mcc_generated_files/ext_int.c: 45:     if(INT0_InterruptHandler)
 11103  003C08  0101               	movlb	1	; () banked
 11104  003C0A  51BD               	movf	_INT0_InterruptHandler& (0+255),w,b
 11105  003C0C  11BE               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 11106  003C0E  B4D8               	btfsc	status,2,c
 11107  003C10  EF0C  F01E         	goto	i2u530_41
 11108  003C14  EF0E  F01E         	goto	i2u530_40
 11109  003C18                     i2u530_41:
 11110  003C18  EF1B  F01E         	goto	i2l89
 11111  003C1C                     i2u530_40:
 11112  003C1C                     
 11113                           ; BSR set to: 1
 11114                           ;mcc_generated_files/ext_int.c: 46:     {;mcc_generated_files/ext_int.c: 47:         INT
      +                          0_InterruptHandler();
 11115  003C1C  D802               	call	i2u531_48
 11116  003C1E  EF1B  F01E         	goto	i2u531_49
 11117  003C22                     i2u531_48:
 11118  003C22  0005               	push	
 11119  003C24  6EFA               	movwf	pclath,c
 11120  003C26  51BD               	movf	_INT0_InterruptHandler& (0+255),w,b
 11121  003C28  6EFD               	movwf	tosl,c
 11122  003C2A  51BE               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 11123  003C2C  6EFE               	movwf	tosh,c
 11124  003C2E  50F8               	movf	tblptru,w,c
 11125  003C30  6EFF               	movwf	tosu,c
 11126  003C32  50FA               	movf	pclath,w,c
 11127  003C34  0012               	return		;indir
 11128  003C36                     i2u531_49:
 11129  003C36                     i2l89:
 11130  003C36  0012               	return		;funcret
 11131  003C38                     __end_of_INT0_CallBack:
 11132                           	opt callstack 0
 11133                           
 11134 ;; *************** function _INT0_DefaultInterruptHandler *****************
 11135 ;; Defined at:
 11136 ;;		line 55 in file "mcc_generated_files/ext_int.c"
 11137 ;; Parameters:    Size  Location     Type
 11138 ;;		None
 11139 ;; Auto vars:     Size  Location     Type
 11140 ;;		None
 11141 ;; Return value:  Size  Location     Type
 11142 ;;                  1    wreg      void 
 11143 ;; Registers used:
 11144 ;;		None
 11145 ;; Tracked objects:
 11146 ;;		On entry : 0/0
 11147 ;;		On exit  : 0/0
 11148 ;;		Unchanged: 0/0
 11149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11150 ;;      Params:         0       0       0       0       0       0       0
 11151 ;;      Locals:         0       0       0       0       0       0       0
 11152 ;;      Temps:          0       0       0       0       0       0       0
 11153 ;;      Totals:         0       0       0       0       0       0       0
 11154 ;;Total ram usage:        0 bytes
 11155 ;; Hardware stack levels used:    1
 11156 ;; This function calls:
 11157 ;;		Nothing
 11158 ;; This function is called by:
 11159 ;;		_EXT_INT_Initialize
 11160 ;;		_INT0_CallBack
 11161 ;; This function uses a non-reentrant model
 11162 ;;
 11163                           
 11164                           	psect	text65
 11165  003E32                     __ptext65:
 11166                           	opt callstack 0
 11167  003E32                     _INT0_DefaultInterruptHandler:
 11168                           	opt callstack 15
 11169  003E32  0012               	return		;funcret
 11170  003E34                     __end_of_INT0_DefaultInterruptHandler:
 11171                           	opt callstack 0
 11172                           
 11173 ;; *************** function _emrgencia *****************
 11174 ;; Defined at:
 11175 ;;		line 61 in file "main.c"
 11176 ;; Parameters:    Size  Location     Type
 11177 ;;		None
 11178 ;; Auto vars:     Size  Location     Type
 11179 ;;		None
 11180 ;; Return value:  Size  Location     Type
 11181 ;;                  1    wreg      void 
 11182 ;; Registers used:
 11183 ;;		wreg, status,2
 11184 ;; Tracked objects:
 11185 ;;		On entry : 0/0
 11186 ;;		On exit  : 0/0
 11187 ;;		Unchanged: 0/0
 11188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11189 ;;      Params:         0       0       0       0       0       0       0
 11190 ;;      Locals:         0       0       0       0       0       0       0
 11191 ;;      Temps:          0       0       0       0       0       0       0
 11192 ;;      Totals:         0       0       0       0       0       0       0
 11193 ;;Total ram usage:        0 bytes
 11194 ;; Hardware stack levels used:    1
 11195 ;; This function calls:
 11196 ;;		Nothing
 11197 ;; This function is called by:
 11198 ;;		_main
 11199 ;;		_INT0_CallBack
 11200 ;; This function uses a non-reentrant model
 11201 ;;
 11202                           
 11203                           	psect	text66
 11204  003C38                     __ptext66:
 11205                           	opt callstack 0
 11206  003C38                     _emrgencia:
 11207                           	opt callstack 15
 11208  003C38                     
 11209                           ;main.c: 62:     if (INTCON2bits.INTEDG0 == 0)
 11210  003C38  BCF1               	btfsc	241,6,c	;volatile
 11211  003C3A  EF21  F01E         	goto	i2u513_41
 11212  003C3E  EF23  F01E         	goto	i2u513_40
 11213  003C42                     i2u513_41:
 11214  003C42  EF2B  F01E         	goto	i2l4600
 11215  003C46                     i2u513_40:
 11216  003C46                     
 11217                           ;main.c: 63:     {;main.c: 64:         emerg_flag = 1;
 11218  003C46  0E01               	movlw	1
 11219  003C48  0100               	movlb	0	; () banked
 11220  003C4A  6FD6               	movwf	_emerg_flag& (0+255),b	;volatile
 11221                           
 11222                           ;main.c: 65:         start_flag = 0;
 11223  003C4C  0E00               	movlw	0
 11224  003C4E  6FD5               	movwf	_start_flag& (0+255),b	;volatile
 11225  003C50                     
 11226                           ; BSR set to: 0
 11227                           ;main.c: 66:         INTCON2bits.INTEDG0 = 1;
 11228  003C50  8CF1               	bsf	241,6,c	;volatile
 11229                           
 11230                           ;main.c: 67:     } else
 11231  003C52  EF2F  F01E         	goto	i2l256
 11232  003C56                     i2l4600:
 11233                           
 11234                           ;main.c: 68:     {;main.c: 69:         emerg_flag = 0;
 11235  003C56  0E00               	movlw	0
 11236  003C58  0100               	movlb	0	; () banked
 11237  003C5A  6FD6               	movwf	_emerg_flag& (0+255),b	;volatile
 11238  003C5C                     
 11239                           ; BSR set to: 0
 11240                           ;main.c: 70:         INTCON2bits.INTEDG0 = 0;
 11241  003C5C  9CF1               	bcf	241,6,c	;volatile
 11242  003C5E                     i2l256:
 11243                           
 11244                           ; BSR set to: 0
 11245                           ;main.c: 72:     write_flag = 1;
 11246  003C5E  0E01               	movlw	1
 11247  003C60  6FD4               	movwf	_write_flag& (0+255),b	;volatile
 11248  003C62                     
 11249                           ; BSR set to: 0
 11250  003C62  0012               	return		;funcret
 11251  003C64                     __end_of_emrgencia:
 11252                           	opt callstack 0
 11253                           
 11254 ;; *************** function _ADC_ISR *****************
 11255 ;; Defined at:
 11256 ;;		line 136 in file "mcc_generated_files/adc.c"
 11257 ;; Parameters:    Size  Location     Type
 11258 ;;		None
 11259 ;; Auto vars:     Size  Location     Type
 11260 ;;  anval           2    4[COMRAM] unsigned short 
 11261 ;; Return value:  Size  Location     Type
 11262 ;;                  1    wreg      void 
 11263 ;; Registers used:
 11264 ;;		wreg, status,2, status,0, cstack
 11265 ;; Tracked objects:
 11266 ;;		On entry : 0/0
 11267 ;;		On exit  : 0/0
 11268 ;;		Unchanged: 0/0
 11269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11270 ;;      Params:         0       0       0       0       0       0       0
 11271 ;;      Locals:         2       0       0       0       0       0       0
 11272 ;;      Temps:          0       0       0       0       0       0       0
 11273 ;;      Totals:         2       0       0       0       0       0       0
 11274 ;;Total ram usage:        2 bytes
 11275 ;; Hardware stack levels used:    1
 11276 ;; Hardware stack levels required when called:    1
 11277 ;; This function calls:
 11278 ;;		_ADC_GetConversionResult
 11279 ;; This function is called by:
 11280 ;;		_INTERRUPT_InterruptManagerHigh
 11281 ;; This function uses a non-reentrant model
 11282 ;;
 11283                           
 11284                           	psect	text67
 11285  003D4A                     __ptext67:
 11286                           	opt callstack 0
 11287  003D4A                     _ADC_ISR:
 11288                           	opt callstack 16
 11289  003D4A                     
 11290                           ;mcc_generated_files/adc.c: 140:     adc_result_t anval = ADC_GetConversionResult();
 11291  003D4A  ECBF  F01E         	call	_ADC_GetConversionResult	;wreg free
 11292  003D4E  C001  F005         	movff	?_ADC_GetConversionResult,ADC_ISR@anval
 11293  003D52  C002  F006         	movff	?_ADC_GetConversionResult+1,ADC_ISR@anval+1
 11294  003D56                     
 11295                           ;mcc_generated_files/adc.c: 141:     valor = anval;
 11296  003D56  C005  F04D         	movff	ADC_ISR@anval,_valor
 11297  003D5A  C006  F04E         	movff	ADC_ISR@anval+1,_valor+1
 11298  003D5E                     
 11299                           ;mcc_generated_files/adc.c: 143:     PIR1bits.ADIF = 0;
 11300  003D5E  9C9E               	bcf	158,6,c	;volatile
 11301  003D60                     
 11302                           ;mcc_generated_files/adc.c: 145:     adc_flag=1;
 11303  003D60  0E01               	movlw	1
 11304  003D62  6E4C               	movwf	_adc_flag^0,c
 11305  003D64  0012               	return		;funcret
 11306  003D66                     __end_of_ADC_ISR:
 11307                           	opt callstack 0
 11308                           
 11309 ;; *************** function _ADC_GetConversionResult *****************
 11310 ;; Defined at:
 11311 ;;		line 105 in file "mcc_generated_files/adc.c"
 11312 ;; Parameters:    Size  Location     Type
 11313 ;;		None
 11314 ;; Auto vars:     Size  Location     Type
 11315 ;;		None
 11316 ;; Return value:  Size  Location     Type
 11317 ;;                  2    0[COMRAM] unsigned short 
 11318 ;; Registers used:
 11319 ;;		wreg, status,2, status,0
 11320 ;; Tracked objects:
 11321 ;;		On entry : 0/0
 11322 ;;		On exit  : 0/0
 11323 ;;		Unchanged: 0/0
 11324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11325 ;;      Params:         2       0       0       0       0       0       0
 11326 ;;      Locals:         0       0       0       0       0       0       0
 11327 ;;      Temps:          2       0       0       0       0       0       0
 11328 ;;      Totals:         4       0       0       0       0       0       0
 11329 ;;Total ram usage:        4 bytes
 11330 ;; Hardware stack levels used:    1
 11331 ;; This function calls:
 11332 ;;		Nothing
 11333 ;; This function is called by:
 11334 ;;		_ADC_ISR
 11335 ;; This function uses a non-reentrant model
 11336 ;;
 11337                           
 11338                           	psect	text68
 11339  003D7E                     __ptext68:
 11340                           	opt callstack 0
 11341  003D7E                     _ADC_GetConversionResult:
 11342                           	opt callstack 16
 11343  003D7E                     
 11344                           ;mcc_generated_files/adc.c: 108:      return ((adc_result_t)((ADRESH << 8) + ADRESL));
 11345  003D7E  50C4               	movf	196,w,c	;volatile
 11346  003D80  6E04               	movwf	(??_ADC_GetConversionResult+1)^0,c
 11347  003D82  6A03               	clrf	??_ADC_GetConversionResult^0,c
 11348  003D84  50C3               	movf	195,w,c	;volatile
 11349  003D86  2403               	addwf	??_ADC_GetConversionResult^0,w,c
 11350  003D88  6E01               	movwf	?_ADC_GetConversionResult^0,c
 11351  003D8A  0E00               	movlw	0
 11352  003D8C  2004               	addwfc	(??_ADC_GetConversionResult+1)^0,w,c
 11353  003D8E  6E02               	movwf	(?_ADC_GetConversionResult+1)^0,c
 11354  003D90  0012               	return		;funcret
 11355  003D92                     __end_of_ADC_GetConversionResult:
 11356                           	opt callstack 0
 11357                           
 11358                           	psect	text69
 11359  000000                     __ptext69:
 11360                           	opt callstack 0
 11361  000000                     
 11362                           	psect	rparam
 11363  0000                     
 11364                           	psect	temp
 11365  000051                     btemp:
 11366                           	opt callstack 0
 11367  000051                     	ds	1
 11368  0000                     int$flags	set	btemp
 11369  0000                     wtemp8	set	btemp+1
 11370  0000                     ttemp5	set	btemp+1
 11371  0000                     ttemp6	set	btemp+4
 11372  0000                     ttemp7	set	btemp+8
 11373                           tosu	equ	0xFFF
 11374                           tosh	equ	0xFFE
 11375                           tosl	equ	0xFFD
 11376                           stkptr	equ	0xFFC
 11377                           pclatu	equ	0xFFB
 11378                           pclath	equ	0xFFA
 11379                           pcl	equ	0xFF9
 11380                           tblptru	equ	0xFF8
 11381                           tblptrh	equ	0xFF7
 11382                           tblptrl	equ	0xFF6
 11383                           tablat	equ	0xFF5
 11384                           prodh	equ	0xFF4
 11385                           prodl	equ	0xFF3
 11386                           indf0	equ	0xFEF
 11387                           postinc0	equ	0xFEE
 11388                           postdec0	equ	0xFED
 11389                           preinc0	equ	0xFEC
 11390                           plusw0	equ	0xFEB
 11391                           fsr0h	equ	0xFEA
 11392                           fsr0l	equ	0xFE9
 11393                           wreg	equ	0xFE8
 11394                           indf1	equ	0xFE7
 11395                           postinc1	equ	0xFE6
 11396                           postdec1	equ	0xFE5
 11397                           preinc1	equ	0xFE4
 11398                           plusw1	equ	0xFE3
 11399                           fsr1h	equ	0xFE2
 11400                           fsr1l	equ	0xFE1
 11401                           bsr	equ	0xFE0
 11402                           indf2	equ	0xFDF
 11403                           postinc2	equ	0xFDE
 11404                           postdec2	equ	0xFDD
 11405                           preinc2	equ	0xFDC
 11406                           plusw2	equ	0xFDB
 11407                           fsr2h	equ	0xFDA
 11408                           fsr2l	equ	0xFD9
 11409                           status	equ	0xFD8


Data Sizes:
    Strings     169
    Constant    0
    Data        42
    BSS         103
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     66      80
    BANK0           160    116     119
    BANK1           256     55     191
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_18(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_18(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_13(CODE[4]), STR_12(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_13(CODE[4]), STR_12(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_7(CODE[22]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 5
		 -> main@valor_analog(BANK1[5]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 5
		 -> main@valor_analog(BANK1[5]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1794_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 5
		 -> main@valor_analog(BANK1[5]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 5
		 -> main@valor_analog(BANK1[5]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_7(CODE[22]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_7(CODE[22]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 22
		 -> STR_7(CODE[22]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), convert_timer(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), convert_timer(), Absolute function(), 

    putsXLCD@buffer	PTR unsigned char  size(2) Largest target is 31
		 -> main@valor_analog(BANK1[5]), STR_6(CODE[31]), STR_5(CODE[26]), STR_4(CODE[25]), 
		 -> STR_3(CODE[3]), STR_2(CODE[20]), STR_1(CODE[23]), main@name2(BANK1[21]), 
		 -> main@name1(BANK1[21]), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> start(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> start(), INT1_DefaultInterruptHandler(), Absolute function(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> emrgencia(), INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> emrgencia(), INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _efgtoa->___flge
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    _atoi->_isspace
    _putsXLCD->_BusyXLCD
    _putsXLCD->_WriteDataXLCD
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _EXT_INT_Initialize->_INT0_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _OpenXLCD->_BusyXLCD
    _OpenXLCD->_DelayPORXLCD
    _OpenXLCD->_DelayXLCD
    _OpenXLCD->_WriteCmdXLCD
    _CGRamAddr0->_SetCGRamAddr

Critical Paths under _INTERRUPT_InterruptManagerLow in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _INTERRUPT_InterruptManagerHigh->_ADC_ISR
    _TMR1_ISR->_TMR1_WriteTimer
    _ADC_ISR->_ADC_GetConversionResult

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                57    57      0   43709
                                            114 BANK0      2     2      0
                                              0 BANK1     55    55      0
                           _BusyXLCD
                         _CGRamAddr0
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
                           _OpenXLCD
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                       _WriteCmdXLCD
                      _WriteDataXLCD
                            ___flmul
                           ___xxtofl
                           _putsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   36887
                                             96 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   36383
                                             64 COMRAM     2     2      0
                                             90 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           48    42      6   35856
                                             68 BANK0     22    16      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     595
                                             13 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   29047
                                              0 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2    1142
                                             19 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     551
                                             13 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4    1037
                                             13 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3957
                                             29 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                             13 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             22 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1037
                                             13 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     669
                                             38 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     375
                                             13 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     517
                                             13 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4007
                                             52 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3442
                                             13 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     155
                                             13 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3413
                                             27 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     806
                                             52 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     770
                                             13 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2723
                                             13 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                             13 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                             13 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1515
                                             20 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                             13 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                             13 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     412
                                             13 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _putsXLCD                                             2     0      2     937
                                             14 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     566
                                             13 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     633
                     _ADC_Initialize
                    _CCP5_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     211
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     211
                                             13 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     422
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             2     0      2     211
                                             13 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             2     0      2     211
                                             13 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OpenXLCD                                             1     1      0      62
                           _BusyXLCD
                      _DelayFor18TCY
                       _DelayPORXLCD
                          _DelayXLCD
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (1) _WriteCmdXLCD                                         1     1      0      62
                                             13 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _DelayXLCD                                            1     1      0       0
                                             13 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _DelayPORXLCD                                         1     1      0       0
                                             13 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _CGRamAddr0                                           0     0      0     124
                           _BusyXLCD
                       _SetCGRamAddr
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteDataXLCD                                        1     1      0      62
                                             13 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _SetCGRamAddr                                         4     4      0      62
                                             13 COMRAM     4     4      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayFor18TCY                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BusyXLCD                                             1     1      0       0
                                             13 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManagerLow                        5     5      0       0
                                              8 COMRAM     5     5      0
                           _INT1_ISR
 ---------------------------------------------------------------------------------
 (10) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (11) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                              _start *
 ---------------------------------------------------------------------------------
 (12) _start                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManagerHigh                      2     2      0     263
                                              6 COMRAM     2     2      0
                            _ADC_ISR
                           _INT0_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (14) _TMR1_ISR                                            0     0      0     240
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                      _convert_timer *
 ---------------------------------------------------------------------------------
 (15) _convert_timer                                       0     0      0       0
                _ADC_StartConversion
 ---------------------------------------------------------------------------------
 (16) _ADC_StartConversion                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _TMR1_WriteTimer                                     2     0      2     240
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (15) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
                          _emrgencia *
 ---------------------------------------------------------------------------------
 (16) _emrgencia                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _ADC_ISR                                             2     2      0      23
                                              4 COMRAM     2     2      0
            _ADC_GetConversionResult
 ---------------------------------------------------------------------------------
 (15) _ADC_GetConversionResult                             4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BusyXLCD
   _CGRamAddr0
     _BusyXLCD
     _SetCGRamAddr
       _DelayFor18TCY
     _WriteDataXLCD
       _DelayFor18TCY
   _INT0_SetInterruptHandler
   _INT1_SetInterruptHandler
   _OpenXLCD
     _BusyXLCD
     _DelayFor18TCY
     _DelayPORXLCD
     _DelayXLCD
     _WriteCmdXLCD
       _DelayFor18TCY
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP5_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
   _TMR1_SetInterruptHandler
   _WriteCmdXLCD
     _DelayFor18TCY
   _WriteDataXLCD
     _DelayFor18TCY
   ___flmul
     ___xxtofl (ARG)
   ___xxtofl
   _putsXLCD
     _BusyXLCD
     _WriteDataXLCD
       _DelayFor18TCY
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper

 _INTERRUPT_InterruptManagerLow (ROOT)
   _INT1_ISR
     _INT1_CallBack
       Absolute function(Fake) *
       _INT1_DefaultInterruptHandler *
       _start *

 _INTERRUPT_InterruptManagerHigh (ROOT)
   _ADC_ISR
     _ADC_GetConversionResult
   _INT0_ISR
     _INT0_CallBack
       Absolute function(Fake) *
       _INT0_DefaultInterruptHandler *
       _emrgencia *
   _TMR1_ISR
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _convert_timer *
       _ADC_StartConversion

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     37      BF       6       74.6%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     74      77       4       74.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     42      50       1       85.1%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     186       9        0.0%
DATA                 0      0     186      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Nov 20 10:14:52 2019

                            ___fldiv@aexp 0026                              ___fldiv@bexp 0025  
                            ___fldiv@sign 001E                                        l23 3D48  
                                      l26 3DE0                                        l65 3A0A  
                                      l92 3E08                              ___awdiv@sign 0013  
                                      bsr 000FE0                       ___wmul@multiplicand 0010  
                            __CFG_CP0$OFF 000000                              __CFG_CP1$OFF 000000  
                            __CFG_CP2$OFF 000000                              __CFG_CP3$OFF 000000  
                             __CFG_LVP$ON 000000                                       l111 3D2A  
                                     l105 3DFE                                       l134 3DF4  
                                     l161 3DB2                                       l415 2D5C  
                                     l504 3DEA                                       l418 3DA2  
                                     l442 3A48                                       l186 3D7C  
                                     l427 36D6                                       l436 384E  
                                     l445 3A86                                       l391 3DD2  
                                     l551 3450                                       l615 0E30  
                                     l553 348A                                       l394 3DC2  
                                     l474 3CB6                                       l299 3066  
                                     l571 125C                                       l388 3E10  
                                     l548 340E                                       l661 1B88  
                                     l922 353A                                       l674 3730  
                                     l675 3738                                       l668 1ACE  
                                     l909 33C8                                       l589 0A98  
                                     l678 3D04                                       l943 2F20  
                                     l952 3B34                                       l937 35E4  
                                     l948 2F66                                       l975 2E62  
                            __CFG_CPB$OFF 000000                              __CFG_CPD$OFF 000000  
              ??_INT0_SetInterruptHandler 0010                           _timer1ReloadVal 004F  
                                     _pad 33CA                           __end_of_ADC_ISR 3D66  
                   __size_of_WriteCmdXLCD 003E                              ___awmod@sign 0013  
                                     tosl 000FFD                                       wreg 000FE8  
                           _INT0_CallBack 3C08                              ___flmul@aexp 0029  
                            ___flmul@bexp 002E                              ___flmul@sign 0028  
                            ___flmul@temp 0033                              ___flmul@prod 002F  
                         _CCP5_Initialize 3DA4                             _INT1_CallBack 3BD8  
                            ___fltol@exp1 0017                                      l1301 1EBC  
                                    l1302 1EAA                                      l1206 144C  
                                    l1223 1566                                      l1215 171C  
                                    l1207 143A                                      l1232 1636  
                                    l1208 1400                                      l1400 2852  
                                    l1233 1624                                      l1340 29FE  
                                    l1260 26FC                                      l1333 2966  
                                    l1309 1F74                                      l1421 3AFC  
                                    l1262 255C                                      l1407 3B6C  
                                    l1415 38F2                                      l1271 25A2  
                                    l1336 2AC2                                      l1248 3986  
                                    l1273 261A                                      l1265 2520  
                                    l1274 2608                                      l1347 2A5A  
                                    l1451 38A0                                      l1292 1C4E  
                                    l1436 3304                                      l1444 39CA  
                                    l1460 37F4                                      l1454 3E2C  
                                    l1470 323A                                      l1391 2C52  
                                    l1359 3164                                      l1296 1FB2  
                                    l1480 3790                                      l1466 3BA2  
                                    l1299 1E44                                      l1388 2C4A  
                                    l1397 290E                                      l1485 3798  
                                    l6000 348C                                      l6010 34B8  
                                    l6002 3490                                      l6020 34F0  
                                    l6012 34C0                                      l6004 349E  
                                    l6030 352A                                      l6022 3506  
                                    l6014 34D2                                      l6006 34A6  
                                    l6032 3532                                      l6024 350E  
                                    l6016 34DA                                      l6008 34AA  
                                    l6040 357A                                      l5400 12B4  
                                    l6120 2E42                                      l6104 2DEE  
                                    l7000 214E                                      l6130 38BA  
                                    l6026 3514                                      l6018 34E2  
                                    l6042 35A8                                      l5410 12E4  
                                    l5402 12C4                                      l6122 2E52  
                                    l6114 2E16                                      l6106 2DF8  
                                    l6210 0930                                      l7010 2172  
                                    l6132 38E8                                      l6028 351A  
                                    l6044 35B8                                      l6036 353C  
                                    l6060 2EE0                                      l6052 2E64  
                                    l5500 14BA                                      l5420 1324  
                                    l5412 12F2                                      l5404 12CA  
                                    l6116 2E22                                      l6108 2E02  
                                    l6300 0DC4                                      l6220 0A00  
                                    l6212 0964                                      l6204 08E0  
                                    l6140 06B6                                      l7020 21B0  
                                    l6134 38EC                                      l6126 38A2  
                                    l6046 35DC                                      l6038 356A  
                                    l6070 2F64                                      l6062 2EEE  
                                    l6054 2E92                                      l5510 1500  
                                    l5502 14C8                                      l5430 135E  
                                    l5422 1326                                      l5414 12F4  
                                    l5406 12DC                                      l6118 2E32  
                                    l5350 324E                                      l6310 0E4C  
                                    l6302 0DF8                                      l6230 0A6A  
                                    l6214 096A                                      l6222 0A32  
                                    l6206 08FA                                      l6150 070A  
                                    l6142 06C6                                      l7030 21EC  
                                    l7022 21B4                                      l7006 2158  
                                    ?_pad 001E                                      l6128 38A6  
                                    l6048 35E2                                      l6064 2F00  
                                    l6056 2EA2                                      l5520 157C  
                                    l5512 1534                                      l5504 14CA  
                                    l5440 1372                                      l5432 1362  
                                    l5416 1304                                      l5424 132E  
                                    l5408 12DE                                      l5352 3260  
                                    l5600 3432                                      l6400 116A  
                                    l6320 0EF2                                      l6312 0EB0  
                                    l6304 0E08                                      l6232 0A72  
                                    l6224 0A42                                      l6216 09C4  
                                    l6160 0750                                      l6152 0712  
                                    l6144 06D4                                      l7040 224E  
                                    l7032 2212                                      l7024 21D0  
                                    l7016 217C                                      l7008 215E  
                                    l6066 2F0E                                      l6058 2ED0  
                                    l6074 3AFE                                      l5530 15B8  
                                    l5522 158C                                      l5514 1536  
                                    l5506 14D4                                      l5450 1386  
                                    l5442 1376                                      l5434 1366  
                                    l5426 133E                                      l5418 1314  
                                    l6090 2DB2                                      l6082 2D5E  
                                    l5610 3088                                      l5354 326A  
                                    l5362 3988                                      l5370 3B6E  
                                    l5602 345E                                      l6410 11B0  
                                    l6402 1184                                      l6330 0F30  
                                    l6314 0EBE                                      l6322 0EFA  
                                    l6306 0E1C                                      l6250 0B22  
                                    l6242 0AB6                                      l6234 0A8C  
                                    l6226 0A46                                      l6218 09F8  
                                    l6170 078C                                      l6162 0758  
                                    l6154 0724                                      l6146 06DC  
                                    l6138 06AC                                      l7042 225E  
                                    l7050 228A                                      l7034 2224  
                                    l7026 21E4                                      l7018 218E  
                                    l6500 3DF6                                      l5700 23CA  
                                    l6068 2F5E                                      l6076 3B14  
                                    l5540 15E4                                      l5532 15BA  
                                    l5516 1546                                      l5508 14DA  
                                    l5460 139A                                      l5452 138A  
                                    l5444 137A                                      l5436 136A  
                                    l5428 1350                                      l6092 2DB4  
                                    l6084 2D74                                      l5612 30C6  
                                    l5620 3106                                      l5356 3288  
                                    l5348 323C                                      l5364 3994  
                                    l5372 3B7A                                      l5604 3472  
                                    l5380 3AC6                                      l6420 1200  
                                    l6412 11C0                                      l6404 118A  
                                    l6340 0F5C                                      l6332 0F36  
                                    l6324 0F0E                                      l6316 0ED2  
                                    l6308 0E28                                      l6260 0B60  
                                    l6244 0AC8                                      l6252 0B26  
                                    l6228 0A58                                      l6236 0AA4  
                                    l6180 0808                                      l6164 075C  
                                    l6156 0732                                      l6148 0700  
                                    l7060 230C                                      l7052 2290  
                                    l7044 2264                                      l7036 2228  
                                    l7028 21EA                                      l6502 3DE2  
                                    l5710 23F6                                      l5702 23D0  
                                    l6078 3B24                                      l5550 161C  
                                    l5534 15C8                                      l5526 15A0  
                                    l5542 15E6                                      l5518 1556  
                                    l5470 13F8                                      l5454 138E  
                                    l5446 137E                                      l5438 136E  
                                    l5462 139E                                      l5390 127A  
                                    l6094 2DC4                                      l5622 3118  
                                    l5614 30EE                                      l5358 32BE  
                                    l5366 39A6                                      l5374 3B7E  
                                    l5630 379A                                      l6430 123C  
                                    l6422 1212                                      l6414 11C6  
                                    l6406 119C                                      l6334 0F42  
                                    l6326 0F1C                                      l6342 0F62  
                                    l6350 0F90                                      l6318 0EE4  
                                    l6270 0BAE                                      l6262 0B64  
                                    l6254 0B2E                                      l6246 0AE4  
                                    l6182 0812                                      l6174 07C2  
                                    l6166 0760                                      l6158 0744  
                                    l6510 1742                                      l7062 2332  
                                    l7054 22A4                                      l7046 2274  
                                    l7038 223C                                      l6504 3E0A  
                                    l6600 39CC                                      l6440 2ADC  
                                    l5800 26A2                                      l5720 2430  
                                    l5712 2406                                      l5704 23D6  
                                    l5560 169A                                      l5536 15D0  
                                    l5528 15AA                                      l5544 15F4  
                                    l5480 142E                                      l5472 140E  
                                    l5464 13A2                                      l5456 1392  
                                    l5448 1382                                      l5392 128A  
                                    l5384 125E                                      l6096 2DC8  
                                    l6088 2D88                                      l5616 30FA  
                                    l5608 3068                                      l5368 39AA  
                                    l5376 3B96                                      l5632 37AA  
                                    l5640 3782                                      l6424 121E  
                                    l6416 11CC                                      l6408 11A8  
                                    l6360 1046                                      l6352 0FE8  
                                    l6344 0F74                                      l6336 0F52  
                                    l6328 0F2C                                      l6280 0C46  
                                    l6264 0B76                                      l6272 0BB6  
                                    l6256 0B40                                      l6248 0B1A  
                                    l6192 0896                                      l6176 07D4  
                                    l6168 0766                                      l6520 1790  
                                    l6512 1750                                      l7064 2338  
                                    l7048 227A                                      l7056 22B0  
                                    l6610 3DD4                                      l6602 39E4  
                                    l6442 2AE0                                      l5810 26F0  
                                    l5802 26BC                                      l5722 2446  
                                    l5714 2416                                      l5706 23E4  
                                    l5570 16E0                                      l5554 1646  
                                    l5562 169C                                      l5546 15F8  
                                    l5538 15D4                                      l5490 147E  
                                    l5482 1438                                      l5474 141A  
                                    l5466 13CC                                      l5458 1396  
                                    l5394 129A                                      l5386 126A  
                                    l6098 2DD6                                      l5626 315C  
                                    l5650 2788                                      l5634 373A  
                                    l6426 1226                                      l6370 1096  
                                    l6362 1062                                      l6354 101C  
                                    l6346 0F86                                      l6338 0F56  
                                    l6290 0D2A                                      l6282 0C9E  
                                    l6274 0BBE                                      l6266 0B84  
                                    l6258 0B52                                      l6194 08A8  
                                    l6178 07F0                                      l6186 083A  
                                    l6530 182A                                      l6522 179E  
                                    l6514 1760                                      l7066 234C  
                                    l7058 22C0                                      l6700 3A22  
                                    l6620 3D1A                                      l6612 3D06  
                                    l6604 39E6                                      l6460 2B96  
                                    l7164 2B80                                      l6452 2B3C  
                                    l6444 2AFC                                      l6436 2AC4  
                                    l5812 26F2                                      l5804 26D8  
                                    l5740 249A                                      l5724 2456  
                                    l5732 2476                                      l5716 2418  
                                    l5708 23E6                                      l5900 1E0C  
                                    l5820 1B8A                                      l5580 170A  
                                    l5572 16EE                                      l5564 16AC  
                                    l5556 1652                                      l5548 1606  
                                    l5492 148E                                      l5484 145A  
                                    l5476 141E                                      l5468 13E8  
                                    l5396 12AA                                      l5388 1278  
                                    l5652 2796                                      l5660 2876  
                                    l5644 26FE                                      l6428 1236  
                                    l6380 10D8                                      l6372 10A6  
                                    l6364 1074                                      l6356 1024  
                                    l6348 0F8A                                      l6292 0D5C  
                                    l6284 0CD2                                      l6276 0BCE  
                                    l6268 0B9C                                      l6196 08C4  
                                    l6188 0860                                      l6540 18B6  
                                    l6524 17C2                                      l6516 1764  
                                    l6508 171E                                      l7068 2358  
                                    l6710 3A3C                                      l6702 3A26  
                                    l6622 3D28                                      l6614 3D0A  
                                    l6606 39E8                                      l6630 3CA4  
                                    l6470 2C1C                                      l6454 2B52  
                                    l6446 2B32                                      l6438 2AD8  
                                    l5806 26DC                                      l5750 24EC  
                                    l5742 24B4                                      l5734 2486  
                                    l5726 245E                                      l5718 2420  
                                    l5910 1E62                                      l5902 1E2A  
                                    l5830 1BC6                                      l5822 1B96  
                                    l5582 170C                                      l5574 16F4  
                                    l5566 16BC                                      l5558 1660  
                                    l5494 149C                                      l5486 146A  
                                    l5478 142C                                      l5398 12AC  
                                    l5662 28B2                                      l5646 271E  
                                    l5590 33EC                                      l5638 3770  
                                    l6390 1108                                      l6382 10E6  
                                    l6374 10B8                                      l6366 1082  
                                    l6358 1028                                      l6294 0D72  
                                    l6278 0BE2                                      l6286 0CD8  
                                    l6550 1952                                      l6542 18E8  
                                    l6534 1872                                      l6526 17FC  
                                    l6518 1788                                      l6712 3A3E  
                                    l6704 3A28                                      l6800 2C66  
                                    l6640 3DA4                                      l6616 3D16  
                                    l6608 3A08                                      l6632 3CA6  
                                    l6624 3C8E                                      l5672 3B36  
                                    l6472 2C2E                                      l6464 2BCC  
                                    l6456 2B5A                                      l6448 2B36  
                                    l5808 26EA                                      l5760 2548  
                                    l5752 24FC                                      l5744 24C4  
                                    l5736 2486                                      l5728 2462  
                                    l5920 1ECC                                      l5912 1E66  
                                    l5904 1E34                                      l5840 1BF8  
                                    l5832 1BD6                                      l5824 1BA4  
                                    l5576 16F6                                      l5568 16DC  
                                    l5496 14AA                                      l5664 28C6  
                                    l5656 2806                                      l5648 2774  
                                    l5592 33FA                                      l6392 112E  
                                    l6384 10EE                                      l6376 10C0  
                                    l6368 1092                                      l6296 0DA4  
                                    l6288 0CF6                                      l6480 3190  
                                    l6560 19EA                                      l6552 1960  
                                    l6544 18F8                                      l6528 181C  
                                    l6536 1884                                      l6642 3D92  
                                    l6650 3826                                      l6722 3DB4  
                                    l6714 3A42                                      l6706 3A2C  
                                    l6810 2C78                                      l6802 2C68  
                                    l6618 3D18                                      l6634 3CB2  
                                    l6626 3C9A                                      l6458 2B62  
                                    l5770 2588                                      l5762 254A  
                                    l5754 2510                                      l5746 24D4  
                                    l5690 2390                                      l5682 2364  
                                    l5930 1F2E                                      l5922 1ED8  
                                    l5914 1E74                                      l5906 1E42  
                                    l5850 1C38                                      l5842 1C06  
                                    l5834 1BDC                                      l5826 1BA6  
                                    l5578 16FC                                      l5498 14B6  
                                    l5666 28EE                                      l5658 2842  
                                    l5594 3406                                      l5586 33CA  
                                    l6394 114A                                      l6386 10F6  
                                    l6378 10D0                                      l6298 0DB4  
                                    l6490 31DE                                      l6554 1990  
                                    l6546 192A                                      l6538 18A6  
                                    l6730 36EC                                      l6660 383E  
                                    l6652 3828                                      l6708 3A38  
                                    l6820 2C88                                      l6812 2C7C  
                                    l6804 2C6A                                      l6636 3D66  
                                    l6628 3CA2                                      l6740 3D38  
                                    l6900 2930                                      l5676 3CE0  
                                    l6468 2C0A                                      l5780 25C4  
                                    l5772 2592                                      l5764 255A  
                                    l5756 251E                                      l5748 24E4  
                                    l5692 23A0                                      l5684 2370  
                                    l5940 1F96                                      l5932 1F42  
                                    l5924 1EE6                                      l5916 1EA2  
                                    l5908 1E54                                      l5860 1C82  
                                    l5852 1C3E                                      l5844 1C08  
                                    l5836 1BEC                                      l5828 1BB6  
                                    l5668 28FE                                      l5596 341A  
                                    l5588 33D8                                      l6396 1152  
                                    l6388 1102                                      l6492 31F0  
                                    l6484 319C                                      l6580 1B28  
                                    l6564 1A58                                      l6548 193C  
                                    l6732 3714                                      l6662 3842  
                                    l6654 382C                                      l6646 37F8  
                                    l6670 3A4C                                      l6750 2F68  
                                    l6718 3DC4                                      l6830 2CA0  
                                    l6822 2C8C                                      l6814 2C7E  
                                    l6806 2C70                                      l6638 3D7A  
                                    l6742 3D3C                                      l6734 3D2C  
                                    l6910 29A8                                      l6902 2976  
                                    l5678 3CFC                                      l5790 2636  
                                    l5782 25D2                                      l5774 25A0  
                                    l5766 256C                                      l5758 252A  
                                    l5694 23B0                                      l5686 237E  
                                    l5942 1F98                                      l5934 1F5C  
                                    l5926 1F10                                      l5870 1CD2  
                                    l5862 1C8E                                      l5854 1C5E  
                                    l5846 1C18                                      l5838 1BF2  
                                    l5950 3942                                      l5598 342E  
                                    l6398 1158                                      l6494 3218  
                                    l6486 31AA                                      l6478 3166  
                                    l6566 1A6A                                      l6574 1AE2  
                                    l6558 19BC                                      l6590 1B52  
                                    l6726 36D8                                      l6664 3844  
                                    l6656 382E                                      l6648 3824  
                                    l6680 3A66                                      l6672 3A5C  
                                    l6760 2FB0                                      l6752 2F7C  
                                    l6840 2CB8                                      l6832 2CA4  
                                    l6824 2C90                                      l6816 2C82  
                                    l6808 2C74                                      l6744 3D40  
                                    l6736 3D30                                      l6920 2A30  
                                    l6912 29B4                                      l6904 298C  
                                    l5960 3318                                      l5792 2644  
                                    l5784 2600                                      l5768 2582  
                                    l5776 25B2                                      l5696 23B2  
                                    l5688 2380                                      l5936 1F78  
                                    l5944 1F9E                                      l5928 1F14  
                                    l5880 1D14                                      l5872 1CDE  
                                    l5864 1C98                                      l5856 1C6E  
                                    l5848 1C28                                      l5952 3952  
                                    l6488 31C2                                      l6592 1B76  
                                    l6576 1B06                                      l6584 1B36  
                                    l6568 1A9E                                      l6728 36E0  
                                    l6666 3848                                      l6658 3832  
                                    l6690 3A80                                      l6682 3A6A  
                                    l6674 3A5E                                      l6770 2FEA  
                                    l6762 2FB6                                      l6754 2F82  
                                    l6850 2CC6                                      l6842 2CBA  
                                    l6834 2CA8                                      l6826 2C94  
                                    l6818 2C84                                      l6498 3E00  
                                    l6746 3D44                                      l6738 3D34  
                                    l6930 2A6E                                      l6922 2A3C  
                                    l6914 29E6                                      l5970 333E  
                                    l5962 3320                                      l5794 266E  
                                    l5778 25C0                                      l5698 23BA  
                                    l5946 1FA2                                      l5938 1F88  
                                    l5890 1D76                                      l5882 1D20  
                                    l5874 1CEA                                      l5866 1CAE  
                                    l6586 1B44                                      l6578 1B14  
                                    l6684 3A76                                      l6676 3A60  
                                    l6780 3032                                      l6772 2FFE  
                                    l6764 2FCA                                      l6756 2F96  
                                    l6748 2F68                                      l6860 2D0E  
                                    l6852 2CDA                                      l6844 2CBC  
                                    l6836 2CAE                                      l6828 2C9A  
                                    l6932 2A92                                      l6924 2A4A  
                                    l6916 29E8                                      l6908 29A0  
                                    l5980 3376                                      l5972 3346  
                                    l5964 3324                                      l5956 3306  
                                    l5788 262A                                      l5796 2672  
                                    l5892 1D82                                      l5884 1D30  
                                    l5876 1CF8                                      l5868 1CBA  
                                    l6686 3A7A                                      l6678 3A64  
                                    l6782 3038                                      l6774 3004  
                                    l6766 2FD0                                      l6758 2F9C  
                                    l6694 3A0E                                      l6870 2D56  
                                    l6862 2D22                                      l6854 2CE0  
                                    l6846 2CC0                                      l6838 2CB4  
                                    l6790 2C58                                      l6598 3DEC  
                                    l6934 2AA2                                      l6926 2A68  
                                    l6918 29F4                                      l5990 33A2  
                                    l5982 337C                                      l5974 3358  
                                    l5966 3332                                      l5958 330A  
                                    l5798 268C                                      l5894 1D9E  
                                    l5886 1D4A                                      l5878 1D04  
                                    l6950 1FF6                                      l6942 1FB4  
                                    l6688 3A7C                                      l6784 304C  
                                    l6776 3018                                      l6768 2FE4  
                                    l6696 3A1E                                      l6864 2D28  
                                    l6856 2CF4                                      l6848 2CC2  
                                    l6792 2C5C                                      l6936 2AB0  
                                    l6928 2A6A                                      l6880 36A2  
                                    l5984 3392                                      l5976 3360  
                                    l5992 33A8                                      l5968 333A  
                                    l5896 1DC8                                      l5888 1D5A  
                                    l6960 2030                                      l6952 1FFC  
                                    l6944 1FB8                                      l6786 3052  
                                    l6778 301E                                      l6698 3A20  
                                    l6866 2D3C                                      l6858 2CFA  
                                    l6794 2C60                                      l6938 2AB2  
                                    l6882 36A6                                      l6874 3666  
                                    l5994 33B8                                      l5986 339A  
                                    l5978 3368                                      l5898 1DFE  
                                    l6890 3872                                      l6970 2082  
                                    l6962 2044                                      l6954 2010  
                                    l6946 1FCA                                      l6868 2D42  
                                    l6796 2C62                                      l6788 2C54  
                                    l6876 366A                                      l5996 33C0  
                                    l5988 339C                                      l6892 388E  
                                    l6884 3850                                      l6980 20C8  
                                    l6972 2088                                      l6964 204E  
                                    l6956 2016                                      l6948 1FE2  
                                    l6798 2C64                                      l6878 367E  
                                    l6886 3862                                      l6990 2108  
                                    l6982 20DC                                      l6974 209C  
                                    l6966 2062                                      l6958 202A  
                                    l6896 2912                                      l6888 386A  
                                    l6992 2114                                      l6984 20E2  
                                    l6976 20A8                                      l6968 206E  
                                    l6898 2922                                      l6994 2128  
                                    l6986 20EE                                      l6978 20C2  
                                    l6996 212E                                      l6988 2102  
                                    l6998 2142                                      STR_1 0653  
                                    STR_2 0680                                      STR_3 06A7  
                                    STR_4 063A                                      STR_5 0620  
                                    STR_6 0601                                      STR_7 066A  
                                    STR_8 0694                                      STR_9 069C  
                                    _LATA 000F89                                      _LATB 000F8A  
                                    _LATC 000F8B                                      _LATD 000F8C  
                                    _LATE 000F8D                                      u6100 1278  
                                    u6020 324E                                      u6101 1274  
                                    u6021 324A                                      u6110 128A  
                                    u6030 3260                                      u6111 1286  
                                    u6031 325C                                      u7000 1BA4  
                                    u6200 13E4                                      u6120 129A  
                                    u6040 3288                                      u7001 1BA0  
                                    u6201 13DE                                      u6121 1296  
                                    u6041 3284                                      u7010 1BB6  
                                    u6210 13E6                                      u6130 12DC  
                                    u6050 32BE                                      u7011 1BB2  
                                    u6131 12D8                                      u6051 32BA  
                                    u7100 1E62                                      u7020 1BC6  
                                    u6300 1500                                      u6220 140E  
                                    u6140 12F2                                      u6060 39CA  
                                    u7101 1E5E                                      u7021 1BC2  
                                    u6301 14FC                                      u6221 140A  
                                    u6141 12EE                                      u6061 39C6  
                                    u7110 1E74                                      u7030 1C06  
                                    u6310 1546                                      u6230 142C  
                                    u6150 1304                                      u6070 3B96  
                                    u7111 1E70                                      u7031 1C02  
                                    u6311 1542                                      u6231 1428  
                                    u6151 1300                                      u6071 3B92  
                                    u7200 3332                                      u7120 1EA2  
                                    u7040 1C18                                      u6400 1632  
                                    u6320 157C                                      u6240 144C  
                                    u6160 1314                                      u6080 3AF6  
                                    u8000 1212                                      u7201 332E  
                                    u7121 1E9E                                      u7041 1C14  
                                    u6401 162E                                      u6321 1578  
                                    u6241 1448                                      u6161 1310  
                                    u6081 3AF0                                      u8001 120E  
                                    u8010 2AFC                                      u7210 3358  
                                    u7130 1EB8                                      u7050 1C28  
                                    u6410 1646                                      u6330 158C  
                                    u6250 145A                                      u6170 1350  
                                    u6090 3AF8                                      u8011 2AF8  
                                    u7211 3354                                      u7131 1EB4  
                                    u7051 1C24                                      u6411 1642  
                                    u6331 1588                                      u6251 1456  
                                    u6171 134C                                      u8020 2B32  
                                    u7220 3376                                      u7300 352A  
                                    u7140 1ECC                                      u7060 1C5E  
                                    u6420 1660                                      u6340 15B8  
                                    u6260 146A                                      u6180 135E  
                                    u6500 33FA                                      u8100 31DE  
                                    u8021 2B2E                                      u7221 3372  
                                    u7301 3526                                      u7141 1EC8  
                                    u7061 1C5A                                      u6421 165C  
                                    u6341 15B4                                      u6261 1466  
                                    u6181 135A                                      u6501 33F6  
                                    u8101 31DA                                      u8030 2B4E  
                                    u7230 3392                                      u7310 356A  
                                    u7150 1EE6                                      u7070 1C6E  
                                    u6430 169A                                      u6350 15C8  
                                    u6270 149C                                      u6190 13CC  
                                    u6510 3450                                      u8110 31F0  
                                    u8031 2B4A                                      u7231 338E  
                                    u7311 3566                                      u7151 1EE2  
                                    u7071 1C6A                                      u6431 1696  
                                    u6351 15C4                                      u6271 1498  
                                    u6191 13C8                                      u6511 344C  
                                    u8111 31EC                                      u8040 2C04  
                                    u7240 33B8                                      u7320 35A8  
                                    u7160 1F2E                                      u7080 1DE8  
                                    u6440 16AC                                      u6360 15E4  
                                    u6280 14AA                                      u7400 2D74  
                                    u6520 345E                                      u6600 37E2  
                                    u8120 3218                                      u8200 18F8  
                                    u8041 2BFE                                      u7241 33B4  
                                    u7321 35A4                                      u7161 1F2A  
                                    u6441 16A8                                      u6361 15E0  
                                    u6281 14A6                                      u7401 2D70  
                                    u6521 345A                                      u8121 3214  
                                    u8201 18F4                                      u8050 2C06  
                                    u7250 349E                                      u7330 35DC  
                                    u7170 1F5C                                      u7090 1E42  
                                    u6450 16BC                                      u6370 15F4  
                                    u6290 14C8                                      u7410 2DA8  
                                    u6530 30A8                                      u6610 37F4  
                                    u8210 193C                                      u8130 1742  
                                    u7251 349A                                      u7331 35D8  
                                    u7171 1F58                                      u7091 1E3E  
                                    u6451 16B8                                      u6371 15F0  
                                    u6291 14C4                                      u6611 37F0  
                                    u8211 1938                                      u8131 173E  
                                    u8300 2F96                                      u8060 2C1C  
                                    u7260 34B8                                      u7340 2E92  
                                    u7180 1F96                                      u6460 16DC  
                                    u6380 1606                                      u7420 2DD6  
                                    u6540 30C6                                      u6700 2826  
                                    u6620 376A                                      u7500 0724  
                                    u8220 19EA                                      u8140 1788  
                                    u8301 2F92                                      u8061 2C18  
                                    u7261 34B4                                      u7341 2E8E  
                                    u7181 1F92                                      u7085 1DDE  
                                    u6461 16D8                                      u6381 1602  
                                    u7421 2DD2                                      u6541 30C2  
                                    u6621 3764                                      u7501 0720  
                                    u8221 19E6                                      u8141 1784  
                                    u8310 2FB0                                      u8070 2C2E  
                                    u7190 3318                                      u7270 34D2  
                                    u7350 2ED0                                      u6470 16EE  
                                    u6390 161C                                      u7430 2DEA  
                                    u6550 30EE                                      u6710 2842  
                                    u6630 376C                                      u7510 0732  
                                    u8230 1A52                                      u8150 17C2  
                                    u8311 2FAC                                      u8071 2C2A  
                                    u7191 3314                                      u7271 34CE  
                                    u7351 2ECC                                      u6471 16EA  
                                    u6391 1618                                      u7431 2DE6  
                                    u7415 2D9E                                      u6551 30EA  
                                    u6535 309E                                      u6711 283E  
                                    u6607 37D8                                      u7511 072E  
                                    u8231 1A4C                                      u8151 17BE  
                                    u8320 2FCA                                      u8400 2CF4  
                                    u7280 34F0                                      u6800 23E4  
                                    u7360 2EEE                                      u6480 170A  
                                    u7440 2E12                                      u6560 3118  
                                    u6720 2896                                      u6640 3782  
                                    u7600 08A8                                      u7520 0744  
                                    u8080 3190                                      u8240 1A54  
                                    u8160 186C                                      u8321 2FC6  
                                    u8401 2CF0                                      u7281 34EC  
                                    u6801 23E0                                      u7361 2EEA  
                                    u6481 1706                                      u7441 2E0E  
                                    u6561 3114                                      u6705 281C  
                                    u6641 377E                                      u7601 08A4  
                                    u7521 0740                                      u8081 318C  
                                    u8161 1866                                      i1l98 3E18  
                                    u8330 2FE4                                      u8410 2D0E  
                                    u7290 3506                                      u6810 23F6  
                                    u7370 2F0E                                      u7450 2E32  
                                    u6730 28B2                                      u6650 2746  
                                    u6490 33D8                                      u7610 092C  
                                    u7530 078C                                      u8090 31C2  
                                    u8250 1A6A                                      u8170 186E  
                                    u8331 2FE0                                      u8411 2D0A  
                                    u7291 3502                                      u6811 23F2  
                                    u7371 2F0A                                      u7451 2E2E  
                                    u6731 28AE                                      u6491 33D4  
                                    u7611 0928                                      u7531 0788  
                                    u8091 31BE                                      u8251 1A66  
                                    u8340 2FFE                                      u8420 2D22  
                                    u8500 2930                                      u6900 25A0  
                                    u6820 2406                                      u7380 2F5E  
                                    u7460 2E42                                      u6580 3152  
                                    u6740 28EE                                      u6660 2774  
                                    u7700 0B1A                                      u7620 09C0  
                                    u7540 07BC                                      u8260 1B06  
                                    u8180 1884                                      i2l85 3E20  
                                    u8341 2FFA                                      u8421 2D1E  
                                    u8501 292C                                      u6901 259C  
                                    u6821 2402                                      u7381 2F5A  
                                    u7461 2E3E                                      u6581 314C  
                                    u6741 28EA                                      u6725 288C  
                                    u6661 2770                                      u7701 0B16  
                                    u7621 09BC                                      u7541 07B6  
                                    u8261 1B02                                      u8181 1880  
                                    u8350 3018                                      u8430 2D3C  
                                    u8510 298C                                      u6750 3B66  
                                    u7470 38BA                                      u6910 25C0  
                                    u6830 2446                                      u7390 3B14  
                                    u6590 3154                                      u6670 2796  
                                    u7710 0B40                                      u7630 0A32  
                                    u7550 07BE                                      u8190 18B6  
                                    i2l95 3E32                                      u8351 3014  
                                    u8431 2D38                                      u8511 2988  
                                    u6751 3B60                                      u7471 38B6  
                                    u6911 25BC                                      u6831 2442  
                                    u7391 3B10                                      u6575 312A  
                                    u6671 2792                                      u6655 273C  
                                    u7711 0B3C                                      u7631 0A2E  
                                    u8191 18B2                                      u8360 3032  
                                    u8440 2D56                                      u8520 29E2  
                                    u6760 3B68                                      u7480 38E8  
                                    u6920 25D2                                      u6840 2486  
                                    u7800 0DB4                                      u7720 0B52  
                                    u7640 0A58                                      u7560 07D4  
                                    u8280 3730                                      i2l89 3C36  
                                    u8361 302E                                      u8441 2D52  
                                    u8521 29DE                                      u7481 38E4  
                                    u6921 25CE                                      u6841 2482  
                                    u7801 0DB0                                      u7721 0B4E  
                                    u7641 0A54                                      u7561 07D0  
                                    u8281 372C                                      u8601 1FD4  
                                    u8370 304C                                      u8290 2F7C  
                                    u8530 2A2C                                      u8450 367E  
                                    u6930 2600                                      u6850 24FC  
                                    u6770 237E                                      u6690 2802  
                                    u7810 0E1C                                      u7730 0B60  
                                    u7650 0A6A                                      u7570 0860  
                                    u7490 06D4                                      u8610 1FF6  
                                    u8275 3812                                      u8371 3048  
                                    u8291 2F78                                      u8531 2A28  
                                    u8451 367A                                      u6931 25FC  
                                    u6851 24F8                                      u6771 237A  
                                    u6691 27FE                                      u7811 0E18  
                                    u7731 0B5C                                      u7651 0A66  
                                    u7571 085C                                      u7491 06D0  
                                    u8611 1FF2                                      u8380 3066  
                                    u8540 2A4A                                      u8460 369E  
                                    u6940 2616                                      u6860 251E  
                                    u6780 2390                                      u7900 1062  
                                    u7820 0EBE                                      u7740 0B76  
                                    u7660 0A8C                                      u7580 0890  
                                    u8700 2128                                      u8620 2010  
                                    u8381 3062                                      u8541 2A46  
                                    u6941 2612                                      u6861 251A  
                                    u6781 238C                                      u6685 27AA  
                                    u7901 105E                                      u7821 0EBA  
                                    u7741 0B72                                      u7661 0A88  
                                    u7581 088A                                      u8701 2124  
                                    u8621 200C                                      u8390 2CDA  
                                    u8550 2A5A                                      u8470 36C6  
                                    u6950 262A                                      u6870 2548  
                                    u6790 23A0                                      u6686 27B4  
                                    u7910 1074                                      u7830 0ED2  
                                    u7750 0B84                                      u7670 0AB2  
                                    u7590 0892                                      u8710 2142  
                                    u8630 202A                                      u8391 2CD6  
                                    u8551 2A56                                      u6951 2626  
                                    u6871 2544                                      u6791 239C  
                                    u6687 27C4                                      u7911 1070  
                                    u7831 0ECE                                      u7751 0B80  
                                    u7671 0AAE                                      u8711 213E  
                                    u8631 2026                                      u8560 2A68  
                                    u8480 36D6                                      u6960 2644  
                                    u6880 256C                                      u7920 1082  
                                    u7840 0EE4                                      u7760 0BAE  
                                    u7680 0AC8                                      u8800 22A4  
                                    u8720 2172                                      u8640 2044  
                                    u8561 2A64                                      u8481 36D2  
                                    u6961 2640                                      u6881 2568  
                                    u7921 107E                                      u7841 0EE0  
                                    u7761 0BAA                                      u7681 0AC4  
                                    u8801 22A0                                      u8721 216E  
                                    u8641 2040                                      u8570 2AA2  
                                    u8490 2922                                      u6970 268C  
                                    u6890 2582                                      u7930 10B8  
                                    u7850 0EF2                                      u7770 0CF6  
                                    u7690 0AE4                                      u8810 22C0  
                                    u8730 21B0                                      u8650 2062  
                                    u8571 2A9E                                      u8491 291E  
                                    u8467 3694                                      u6971 2688  
                                    u6891 257E                                      u7931 10B4  
                                    u7851 0EEE                                      u7771 0CF2  
                                    u7691 0AE0                                      u8811 22BC  
                                    u8731 21AC                                      u8651 205E  
                                    u8580 2AB0                                      u6980 26BC  
                                    u7940 10E6                                      u7860 0F0E  
                                    u7780 0D5C                                      u8820 234C  
                                    u8740 21D0                                      u8660 2082  
                                    u8581 2AAC                                      u8477 36BC  
                                    u6981 26B8                                      u7941 10E2  
                                    u7861 0F0A                                      u7781 0D58  
                                    u8821 2348                                      u8741 21CC  
                                    u8661 207E                                      u6990 26EA  
                                    u7950 116A                                      u7870 0F1C  
                                    u7790 0DA4                                      u8750 21E4  
                                    u8670 209C                                      u6991 26E6  
                                    u7951 1166                                      u7871 0F18  
                                    u7791 0DA0                                      u8751 21E0  
                                    u8671 2098                                      u8591 1FC2  
                                    u7960 1184                                      u7880 0F74  
                                    u8760 2224                                      u8680 20DC  
                                    u7961 1180                                      u7881 0F70  
                                    u8761 2220                                      u8681 20D8  
                                    u7970 119C                                      u7890 1046  
                                    u8770 223C                                      u8690 2102  
                                    u7971 1198                                      u7891 1042  
                                    u8771 2238                                      u8691 20FE  
                                    u7980 11FA                                      u8780 224E  
                                    u7981 11F4                                      u8781 224A  
                                    u7990 11FC                                      u8790 225E  
                                    u8791 225A                                      u8847 20B4  
                                    u8857 2184                                      u8867 3DBA  
                                    u8877 3DCA                                      u8887 3E0C  
                                    u8897 3D98                                      _TMR1 000FCE  
                                    _WPUB 000F61                                      _dbuf 0108  
                                    _atoi 2AC4                                      _main 1FB4  
                                    _prec 0047                                      _nout 0043  
                                    pad@i 0025                                      pad@p 0022  
                                    fsr1h 000FE2                                      fsr2h 000FDA  
                                    indf1 000FE7                                      indf2 000FDF  
                                    fsr1l 000FE1                                      pad@w 0027  
                                    fsr2l 000FD9                                      btemp 0051  
                           __CFG_BORV$190 000000                             ___fpclassifyf 3068  
                  __size_of_WriteDataXLCD 003E                                      prodh 000FF4  
                                    prodl 000FF3                                      start 0066  
                           __CFG_IESO$OFF 000000                           ___fldiv@new_exp 001F  
              ??_TMR1_SetInterruptHandler 0010                              _tolower$1866 001A  
                            ___param_bank 000000                                     ??_pad 0024  
                            _WriteCmdXLCD 3A0C                          __end_of_INT0_ISR 3E22  
                        __end_of_INT1_ISR 3E1A            __size_of_OSCILLATOR_Initialize 000E  
           __end_of_OSCILLATOR_Initialize 3DE2                             ___fltol@sign1 0016  
                                   ?_atoi 0015                           __end_of___fladd 171E  
                                   ?_main 0001                           __end_of___fldiv 26FE  
                         __end_of___awdiv 33CA                           __end_of___flneg 3B36  
                           _convert_timer 3E22                                     STR_12 0698  
                                   STR_13 06A0                                     STR_16 06A4  
                                   STR_18 06A4                           __end_of___awmod 353C  
                         __end_of___flmul 1FB4                           __end_of___flsub 3988  
                         __end_of___fltol 2E64                             ?_SetCGRamAddr 0001  
                         ___awdiv@divisor 0010                                     _T1CON 000FCD  
                          __CFG_DEBUG$OFF 000000                                     i1l102 3C06  
                                   i1l108 3E2E                                     i1l152 004E  
                                   i1l261 3BD2                       __size_of_CGRamAddr0 0100  
                                   i1l263 3BD6                                     i2l210 3D64  
                                   i2l141 3636                                     i2l142 365A  
                                   i2l145 365A                                     i2l139 3612  
                                   i2l501 3AC4                                     i2l256 3C5E  
                                   i2l192 3E2A                                     i2l257 3C62  
                                   i2l266 3E26                                     i2l507 3E30  
                                   i2l198 3D90                                     i2l488 3CDE  
                         ___awdiv@counter 0012                              vfpfcnvrt@fmt 00A6  
                                   _TMR1H 000FCF                                     _TMR1L 000FCE  
                                   _PORTD 000F83                                     _TRISA 000F92  
                                   _TRISB 000F93                            ?_INT0_CallBack 0001  
                                   _TRISC 000F94                                     _TRISD 000F95  
                                   _TRISE 000F96          __size_of_ADC_GetConversionResult 0014  
                           __CFG_WRT0$OFF 000000                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                             __CFG_WRT3$OFF 000000  
                          __CFG_EBTR0$OFF 000000                            __CFG_FCMEN$OFF 000000  
                          __CFG_EBTR1$OFF 000000                            __CFG_EBTR2$OFF 000000  
                          __CFG_EBTR3$OFF 000000                          __end_of_TMR1_ISR 3AC6  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                            ?_INT1_CallBack 0001  
                          __CFG_EBTRB$OFF 000000                                     _flags 0049  
          ??_INT1_DefaultInterruptHandler 0009                                     _fputc 323C  
                                   _fputs 3988                           __end_of_isdigit 3B6E  
                      __CFG_MCLRE$EXTMCLR 000000                                     _valor 004D  
                                   atoi@n 0022                                     pad@fp 001E  
                                   atoi@s 0015                                     _width 0045  
                                   _putch 3E2C                                     _start 3BA4  
                                   main@i 018B                                     main@j 018D  
                         __end_of_isspace 38F4                  _INT1_SetInterruptHandler 3DF6  
                 __end_of_TMR1_Initialize 3CB8                           __end_of_isupper 3AFE  
                                   pclath 000FFA                                     tablat 000FF5  
                                   plusw1 000FE3                                     plusw2 000FDB  
                                   ttemp5 0052                                     ttemp6 0055  
                                   ttemp7 0059                                     status 000FD8  
                                   wtemp8 0052                           __end_of_sprintf 38A2  
                          ?___fpclassifyf 000E                           __end_of_tolower 379A  
                          __CFG_HFOFST$ON 000000                           __end_of_strncmp 323C  
                         _TMR1_WriteTimer 3CB8            ?_INTERRUPT_InterruptManagerLow 0001  
                          __CFG_PBADEN$ON 000000                           __initialization 38F4  
                            __end_of_atoi 2C54                              __end_of_main 2364  
                        __end_of_BusyXLCD 3DA4                        __size_of_DelayXLCD 0010  
                   __size_of_DelayPORXLCD 0010                                 ??_ADC_ISR 0005  
                          ?_convert_timer 0001                            ??_SetCGRamAddr 000E  
                        __end_of_OpenXLCD 2D5E                                    ??_atoi 0017  
                                  ??_main 00D2                   __end_of_CCP5_Initialize 3DB4  
                           __activetblptr 000002                             _WriteDataXLCD 3A4A  
                                  _ADCON0 000FC2                                    _ADCON1 000FC1  
                                  _ADCON2 000FC0                                    ?_fputc 000E  
                                  ?_fputs 0017                                    _ADRESH 000FC4  
                                  _ADRESL 000FC3                                    _CCPR5H 000F56  
                                  _CCPR5L 000F55                          ___awdiv@dividend 000E  
                                  _ANSELA 000F38                                    ?_putch 0001  
                                  _ANSELB 000F39                                    _ANSELC 000F3A  
                                  _ANSELD 000F3B                                    _ANSELE 000F3C  
                                  ?_start 0001                                    _T1GCON 000FCC  
                 TMR1_WriteTimer@timerVal 0001                                    i1l5120 003C  
                                  i1l5122 004A                                    i1l5118 002E  
                                  i1l4610 3BCE                                    i1l4604 3BA4  
                                  i1l4606 3BB6                                    i1l4608 3BBE  
                                  i1l4756 3BD8                                    i2l5110 3620  
                                  i1l4758 3BEC                            __CFG_WDTEN$OFF 000000  
                                  i2l5112 362E                                    i2l5104 35EE  
                                  i2l5114 3644                                    i2l5106 35FC  
                                  i1l4890 3E12                                    i2l5116 3652  
                                  i2l5108 360A                                    i1l4892 3E14  
                                  i2l4600 3C56                                    i2l4602 3C5C  
                                  i2l4900 3D60                                    i2l4902 3A88  
                                  i2l4760 3D7E                                    i2l4752 3C08  
                                  i2l4592 3E28                                    i2l4904 3A8A  
                                  i2l4594 3C38                                    i2l4754 3C1C  
                                  i2l4850 3CB8                                    i2l4906 3A96  
                                  i2l4596 3C46                                    i2l4852 3CC6  
                                  i2l4860 3CD6                                    i2l4764 3E22  
                                  i2l4908 3AAA                                    i2l4598 3C50  
                                  i2l4862 3CDA                                    i2l4854 3CC8  
                                  i2l4856 3CCC                                    i2l4858 3CD0  
                                  i2l4894 3D4A                                    i2l4886 3E1A  
                                  i2l4896 3D56                                    i2l4888 3E1C  
                                  i2l4898 3D5E                                    _OSCCON 000FD3  
                        __end_of___xxtofl 2AC4                              _DelayPORXLCD 3DC4  
                          __CFG_XINST$OFF 000000      __end_of_TMR1_DefaultInterruptHandler 3E32  
   __size_of_TMR1_DefaultInterruptHandler 0002              _TMR1_DefaultInterruptHandler 3E30  
                            vfprintf@cfmt 0041                                    ___flge 2E64  
                                  ___fleq 353C                                 ??___fladd 0016  
                                  ___wmul 3CE0                                 ??___fldiv 0016  
                               ??___awdiv 0012                                 ??___flneg 0012  
                          __CFG_STVREN$ON 000000                                 ??___awmod 0012  
                               ??___flmul 0024                                 ??___flsub 003D  
                               ??___fltol 0012                                    _efgtoa 06AC  
                                  _floorf 26FE                                    clear_0 391A  
                                  clear_1 392E                          ___awdiv@quotient 0014  
                         ___awmod@divisor 0010                           ___awmod@counter 0012  
                                  pad@buf 0020                           ??_INT0_CallBack 0001  
                          ?_WriteDataXLCD 0001                                    _strcpy 379A  
                                  _strlen 3B6E                                    fputc@c 000E  
                                  fputs@c 001B                                    fputs@i 001C  
                                  fputs@s 0017                                 ??_isdigit 0010  
                         ??_INT1_CallBack 0009                           ___fpclassifyf@e 0016  
                         ___fpclassifyf@u 0018                           ___fpclassifyf@x 000E  
                            __mediumconst 0000                                 ??_isspace 0010  
                                  tblptrh 000FF7                                 ??_isupper 0010  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                                  putch@c 0001                          __end_of_putsXLCD 36D8  
                        __end_of_vfprintf 373A  TMR1_SetInterruptHandler@InterruptHandler 000E  
INT1_SetInterruptHandler@InterruptHandler 000E  INT0_SetInterruptHandler@InterruptHandler 000E  
                               ??_sprintf 0043                                 ??_tolower 0016  
                 __end_of_TMR1_WriteTimer 3CE0                                 ??_strncmp 0014  
           __size_of_INTERRUPT_Initialize 000A                         __end_of_DelayXLCD 3DC4  
                              ___flge@ff1 0035                                ___flge@ff2 0039  
                         ??___fpclassifyf 0012                          ?_TMR1_Initialize 0001  
                         __CFG_FOSC$RCIO6 000000                              ___xxtofl@arg 0018  
                            ___xxtofl@exp 0017          ??_INTERRUPT_InterruptManagerHigh 0007  
         ?_INTERRUPT_InterruptManagerHigh 0001                         _SYSTEM_Initialize 3D2C  
                            ___xxtofl@val 000E                                ___fleq@ff1 000E  
                              ___fleq@ff2 0012                                __accesstop 0060  
                 __end_of__initialization 3934                              ??_CGRamAddr0 0012  
                               ?_INT0_ISR 0001                                 ?_INT1_ISR 0001  
                              ___flneg@f1 000E                        ?_SYSTEM_Initialize 0001  
                           ___rparam_used 000001                                ___fltol@f1 000E  
            __size_of_ADC_StartConversion 0004                            __pcstackCOMRAM 0001  
                            __pidataBANK1 3C64                       ??_SYSTEM_Initialize 0010  
                               ?_TMR1_ISR 0001           fp__TMR1_DefaultInterruptHandler 0000  
           ?_TMR1_DefaultInterruptHandler 0001                           ??_convert_timer 0001  
                           __end_of_fputc 3306                             __end_of_fputs 39CC  
                           __end_of_putch 3E2E                             __end_of_start 3BD8  
                        ?_CCP5_Initialize 0001                   _ADC_GetConversionResult 3D7E  
             __size_of_EXT_INT_Initialize 0026                        __end_of_CGRamAddr0 3068  
                            ADC_ISR@anval 0005                                   ??_fputc 0012  
               __end_of_SYSTEM_Initialize 3D4A                                   ??_fputs 001B  
                  __size_of_DelayFor18TCY 0008                                   ??_putch 000E  
                                 ??_start 0009                        __size_of_emrgencia 002C  
                              __pbssBANK0 00D4                                __pbssBANK1 0100  
                               ?_BusyXLCD 0001                           __CFG_PLLCFG$OFF 000000  
                         WriteCmdXLCD@cmd 000E                     _INT0_InterruptHandler 01BD  
                              ??_INT0_ISR 0001                                ??_INT1_ISR 0009  
                              __pnvCOMRAM 004F                      __end_of_SetCGRamAddr 3850  
                               ?_OpenXLCD 0001                        __CFG_CCP2MX$PORTC1 000000  
                                 ?___flge 0035                                   ?___fleq 000E  
                       WriteDataXLCD@data 000E                                   ?___wmul 000E  
                              ??_TMR1_ISR 0003                        __CFG_CCP3MX$PORTB5 000000  
                                 ?_efgtoa 0060                                   ?_floorf 0027  
                                 _CCP5CON 000F54                           ??_WriteDataXLCD 000E  
                                 _ADC_ISR 3D4A                   __size_of_ADC_Initialize 0018  
                                 ?_strcpy 000E                                   ?_strlen 000E  
              ??_INT1_SetInterruptHandler 0010                                 ?___xxtofl 000E  
                                 _OSCCON2 000FD2                                _emerg_flag 00D6  
                      __size_of_vfpfcnvrt 046C                                   _OSCTUNE 000F9B  
                        ?_TMR1_WriteTimer 0001                                ??_BusyXLCD 000E  
       __size_of_INT0_SetInterruptHandler 000A                 ?_INT0_SetInterruptHandler 000E  
                              ??_OpenXLCD 000F                           __CFG_PWRTEN$OFF 000000  
                                 __Hparam 0000                                   __Lparam 0000  
                         __size_of___flge 0104                           __size_of___fleq 00AA  
                                 ___fladd 125E                                   ___fldiv 2364  
                                 ___awdiv 3306                             _DelayFor18TCY 3E0A  
                                 ___flneg 3AFE                                   ___awmod 348C  
                                 ___flmul 1B8A                                   ___flsub 3942  
                                 ___fltol 2D5E                           __size_of___wmul 0026  
                               ?_putsXLCD 000F                                 ?_vfprintf 00BA  
                            __psmallconst 0600                           __size_of_efgtoa 0BB2  
                       __end_of_emrgencia 3C64                 ??_ADC_GetConversionResult 0003  
                         __size_of_floorf 0212                                   __pcinit 38F4  
                                 __ramtop 0600                                   __ptext0 1FB4  
                                 __ptext1 3850                                   __ptext2 36D8  
                                 __ptext3 171E                                   __ptext4 3166  
                                 __ptext5 06AC                                   __ptext6 373A  
                                 __ptext7 3AC6                                   __ptext8 379A  
                                 __ptext9 33CA            ??_TMR1_DefaultInterruptHandler 0001  
                         __size_of_strcpy 005C                           __size_of_strlen 0036  
                               _T1CONbits 000FCD                     _OSCILLATOR_Initialize 3DD4  
                            __size_of_pad 00C2                                   _isdigit 3B36  
                              ??___xxtofl 0012                          ___awmod@dividend 000E  
       __size_of_TMR1_SetInterruptHandler 000A                  ??_PIN_MANAGER_Initialize 000E  
                                 _isspace 38A2                 ?_TMR1_SetInterruptHandler 000E  
                                 _isupper 3AC6                                   efgtoa@c 0066  
                                 efgtoa@d 0084                                   efgtoa@e 009C  
                                 efgtoa@f 0062                                   efgtoa@g 0098  
                                 efgtoa@h 008E                                   efgtoa@i 0096  
                                 efgtoa@l 0092                                   efgtoa@m 0080  
                                 efgtoa@n 009E                                   efgtoa@p 0088  
                                 efgtoa@t 007C                                   efgtoa@u 00A0  
                                 efgtoa@w 008B                                   atoi@neg 001B  
              __size_of_SYSTEM_Initialize 001E                                   _sprintf 3850  
                                 _tolower 373A                                   _strncmp 3166  
                          __pintcode_body 35E6                      end_of_initialization 3934  
                                 floorf@e 0035                                   floorf@m 0031  
                                 floorf@u 0037                                   floorf@x 0027  
                                 fputc@fp 0010                             __Lmediumconst 0000  
                                 int_func 35E6                                   fputs@fp 0019  
                       __end_of_vfpfcnvrt 1B8A                                efgtoa@mode 008D  
                              efgtoa@sign 0086                            ?_DelayFor18TCY 0001  
                                 postdec1 000FE5                                   postdec2 000FDD  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE                                ??_putsXLCD 0011  
                              ??_vfprintf 0041                                   strcpy@d 0016  
                                 strlen@a 0010                                   strcpy@s 0014  
                                 strlen@s 000E                     _INT1_InterruptHandler 01BB  
                             ___fladd@grs 001D                             ___xxtofl@sign 0016  
                               _TRISDbits 000F95                       _ADC_StartConversion 3E28  
                             ___fldiv@grs 0021                               ___fldiv@rem 001A  
                   __size_of_SetCGRamAddr 005A                                _start_flag 00D5  
                             ___flmul@grs 002A                                main@angulo 0187  
                               _DelayXLCD 3DB4                         __size_of_INT0_ISR 0008  
                       __size_of_INT1_ISR 0008                      ?_ADC_StartConversion 0001  
            __end_of_INTERRUPT_Initialize 3DF6                            __end_of___flge 2F68  
                          __end_of___fleq 35E6      __end_of_INT0_DefaultInterruptHandler 3E34  
   __size_of_INT0_DefaultInterruptHandler 0002              _INT0_DefaultInterruptHandler 3E32  
                             vfpfcnvrt@ap 00A8                               vfpfcnvrt@ct 00B6  
                             vfpfcnvrt@fp 00A4                            __end_of___wmul 3D06  
                              _write_flag 00D4                            __end_of_efgtoa 125E  
                       __size_of_TMR1_ISR 003E                            _ADC_Initialize 3D66  
                          __end_of_floorf 2910                    ?_OSCILLATOR_Initialize 0001  
                              floorf@F524 0100                              _SetCGRamAddr 37F6  
                   __end_of_INT0_CallBack 3C38                            __end_of_strcpy 37F6  
                          __end_of_strlen 3BA4                       start_initialization 38F4  
         __size_of_PIN_MANAGER_Initialize 0040                     __end_of_INT1_CallBack 3C08  
                             __end_of_pad 348C                     __end_of___fpclassifyf 3166  
                       __size_of_BusyXLCD 0012                                ?_DelayXLCD 0001  
                         ??_DelayFor18TCY 000E                     ??_ADC_StartConversion 0001  
                __size_of_TMR1_Initialize 002A                               vfprintf@fmt 00BC  
                       __size_of_OpenXLCD 010A                                  ??___flge 003D  
                                ??___fleq 0016                                  ??___wmul 0012  
                                ??_efgtoa 0067                             ?_WriteCmdXLCD 0001  
                  __end_of_ADC_Initialize 3D7E                               __pdataBANK1 018F  
                                ??_floorf 002B                                  ?_ADC_ISR 0001  
              __end_of_EXT_INT_Initialize 3D2C                     __end_of_convert_timer 3E28  
         fp__INT0_DefaultInterruptHandler 0000             ?_INT0_DefaultInterruptHandler 0001  
                                ??_strcpy 0012                                  ??_strlen 0010  
                               ___fladd@a 0012                                 ___fladd@b 000E  
                               ___fldiv@a 0012                                 ___fldiv@b 000E  
                               ___flmul@a 0020                                 ___flmul@b 001C  
                             __pbssCOMRAM 0043                                 ___flsub@a 0039  
                               ___flsub@b 0035          __end_of_INT0_SetInterruptHandler 3E0A  
                           __pcstackBANK0 0060                             __pcstackBANK1 0158  
                       __size_of___xxtofl 01B4                  __size_of_CCP5_Initialize 0010  
                               _atoi$1750 001D                                 _atoi$1751 0021  
                               _atoi$1752 001F                                 __pnvBANK1 01B9  
                             _efgtoa$1250 0072                               _efgtoa$1260 0078  
                             _efgtoa$1261 007A                               _efgtoa$1255 0074  
                             _efgtoa$1249 0070                               _efgtoa$1259 0076  
                          putsXLCD@buffer 000F                    _PIN_MANAGER_Initialize 39CC  
                               _flag_CNT1 004B                                 __pintcode 0008  
        __end_of_TMR1_SetInterruptHandler 3DEC                            ??_WriteCmdXLCD 000E  
                                ?___fladd 000E                                  ?___fldiv 000E  
                                ?___awdiv 000E                                  ?___flneg 000E  
                                ?___awmod 000E                                  ?___flmul 001C  
                                ?___flsub 0035                                  ?___fltol 000E  
                         ?_ADC_Initialize 0001                               __pintcodelo 0018  
                        __CFG_PRICLKEN$ON 000000                         __size_of_putsXLCD 0072  
                   __end_of_WriteDataXLCD 3A88                         __size_of_vfprintf 0062  
                             __smallconst 0600                                 _emrgencia 3C38  
                                ?_isdigit 000E                                  ?_isspace 000E  
                                ?_isupper 000E                                  ?_sprintf 00C0  
                                ?_tolower 0014                            __size_of_fputc 00CA  
                          __size_of_fputs 0044                                  ?_strncmp 000E  
                          __size_of_putch 0002                            __size_of_start 0034  
                    _INTERRUPT_Initialize 3DEC                                  _INT0_ISR 3E1A  
                                _INT1_ISR 3E12                            ___wmul@product 0012  
                                _LATDbits 000F8C         __size_of_INT1_SetInterruptHandler 000A  
               ?_INT1_SetInterruptHandler 000E                               ??_DelayXLCD 000E  
                                _IPR1bits 000F9F                                  _PIE1bits 000F9D  
                           ?_DelayPORXLCD 0001                  __size_of_TMR1_WriteTimer 0028  
                                i1u514_20 3BB6                                  i1u514_21 3BB2  
                                i1u515_20 3BCE                                  i1u515_21 3BCA  
                                i1u532_20 3BEC                                  i1u532_21 3BE8  
                                i1u533_28 3BF2                                  i1u533_29 3C06  
                                i1u575_20 003C                                  i1u575_21 0038  
                                i1u576_20 004A                                  i1u576_21 0046  
                                i2u513_40 3C46                                  i2u513_41 3C42  
                                _PIR1bits 000F9E                           OpenXLCD@lcdtype 0001  
                                i2u530_40 3C1C                                  i2u530_41 3C18  
                                i2u531_48 3C22                                  i2u531_49 3C36  
                                i2u535_40 3CC6                                  i2u535_41 3CC2  
                                i2u537_40 3AAA                                  i2u537_41 3AA6  
                                i2u570_40 360A                                  i2u570_41 3606  
                                i2u538_48 3AB0                                  i2u571_40 3620  
                                i2u538_49 3AC4                                  i2u571_41 361C  
                                i2u572_40 362E                                  i2u572_41 362A  
                                i2u573_40 3644                                  i2u573_41 3640  
                                i2u574_40 3652                                  i2u574_41 364E  
                                i2u569_40 35FC                                  i2u569_41 35F8  
                                _RCONbits 000FD0                          __CFG_WDTPS$32768 000000  
                               main@F6394 01A4                                 main@F6396 018F  
                                _TMR1_ISR 3A88                                 _vfpfcnvrt 171E  
                       ??_TMR1_Initialize 0010                          __size_of_ADC_ISR 001C  
                              _ADCON0bits 000FC2                         ___wmul@multiplier 000E  
                              ?_emrgencia 0001                                 main@name1 0158  
                               main@name2 016D            ??_INT0_DefaultInterruptHandler 0001  
                        main@valor_analog 0182                              _isspace$1781 0014  
                              vfpfcnvrt@c 00B9                                vfpfcnvrt@f 00B2  
                             _INTCON2bits 000FF1                               _INTCON3bits 000FF0  
                               copy_data0 3908                     ?_INTERRUPT_Initialize 0001  
                _INT0_SetInterruptHandler 3E00                                  _BusyXLCD 3D92  
                          ??_DelayPORXLCD 000E                                  _OpenXLCD 2C54  
                       ??_CCP5_Initialize 000E                                  __Hrparam 0000  
                              vfprintf@ap 00BE                                  __Lrparam 0000  
                              vfprintf@fp 00BA                  ?_ADC_GetConversionResult 0001  
                      __CFG_BOREN$SBORDIS 000000                         __CFG_P2BMX$PORTD2 000000  
                 ??_OSCILLATOR_Initialize 000E                          __size_of___fladd 04C0  
                        __size_of___fldiv 039A                          __size_of___awdiv 00C4  
                        __size_of___flneg 0038                          __size_of___awmod 00B0  
                        __size_of___flmul 042A                          __size_of___flsub 0046  
                        __size_of___fltol 0106                                ?_vfpfcnvrt 00A4  
                                _adc_flag 004C                  _TMR1_SetInterruptHandler 3DE2  
                      ___fpclassifyf@F463 0104                     _TMR1_InterruptHandler 01B9  
                              sprintf@fmt 00C2                                  ___xxtofl 2910  
         ??_INTERRUPT_InterruptManagerLow 0009                        SetCGRamAddr@CGaddr 0011  
                        __size_of_isdigit 0038                          __size_of_isspace 0052  
                                __ptext10 3B6E                                  __ptext11 3988  
                                __ptext20 1B8A                                  __ptext12 323C  
                                __ptext21 2E64                                  __ptext13 3E2C  
                              _T1GCONbits 000FCC                                  __ptext30 3666  
                                __ptext22 353C                                  __ptext14 26FE  
                                __ptext31 2910                                  __ptext23 2364  
                                __ptext15 3068                                  __ptext40 3E00  
                                __ptext32 3D2C                                  __ptext24 348C  
                                __ptext16 2D5E                                  __ptext41 3DA4  
                                __ptext33 3C8E                                  __ptext25 3306  
                                __ptext17 3942                                  __ptext50 3E0A  
                                __ptext42 3D66                                  __ptext34 3DE2  
                                __ptext26 2AC4                                  __ptext18 125E  
                                __ptext51 3D92                                  __ptext43 2C54  
                                __ptext35 39CC                                  __ptext27 38A2  
                                __ptext19 3AFE                                  __ptext60 3E22  
                                __ptext44 3A0C                                  __ptext36 3DD4  
                                __ptext28 3B36                                  __ptext61 3E28  
                                __ptext53 3E12                                  __ptext45 3DB4  
                                __ptext37 3DEC                                  __ptext29 3CE0  
                                __ptext62 3CB8                                  __ptext54 3BD8  
                                __ptext46 3DC4                                  __ptext38 3D06  
                                __ptext63 3E1A                                  __ptext55 3E2E  
                                __ptext47 2F68                                  __ptext39 3DF6  
                                __ptext64 3C08                                  __ptext56 3BA4  
                                __ptext48 3A4A                                  __ptext65 3E32  
                                __ptext49 37F6                                  __ptext66 3C38  
                                __ptext58 3A88                                  __ptext67 3D4A  
                                __ptext59 3E30                                  __ptext68 3D7E  
                                __ptext69 0000                          __size_of_isupper 0038  
                    __end_of_WriteCmdXLCD 3A4A                          __size_of_sprintf 0052  
                        __size_of_tolower 0060                                strcpy@dest 000E  
                        __size_of_strncmp 00D6                                _CGRamAddr0 2F68  
                           __size_of_atoi 0190                             __size_of_main 03B0  
                                efgtoa@fp 0060                                  efgtoa@ne 0082  
                                efgtoa@pp 007E                                  efgtoa@ou 006C  
                                int$flags 0051                                  _putsXLCD 3666  
                                _vfprintf 36D8                                  fp__start 0000  
                       ??_TMR1_WriteTimer 0003      __end_of_INT1_DefaultInterruptHandler 3E30  
   __size_of_INT1_DefaultInterruptHandler 0002              _INT1_DefaultInterruptHandler 3E2E  
                             ??_emrgencia 0001                            _vfpfcnvrt$1275 00AE  
                          _vfpfcnvrt$1279 00B0                                _INTCONbits 000FF2  
                                isdigit@c 000E                    ??_INTERRUPT_Initialize 000E  
                      _EXT_INT_Initialize 3D06                                  intlevel1 0000  
                                intlevel2 0000                                 sprintf@ap 00CA  
             __end_of_ADC_StartConversion 3E2C                                  isspace@c 000E  
                 ?_PIN_MANAGER_Initialize 0001           __end_of_ADC_GetConversionResult 3D92  
                     ?_EXT_INT_Initialize 0001                                 strcpy@src 0010  
                                isupper@c 000E                                 strncmp@_l 000E  
                               strncmp@_r 0010                          ??_ADC_Initialize 000E  
                  __size_of_INT0_CallBack 0030                     __end_of_DelayFor18TCY 3E12  
                             efgtoa@nmode 008A                    __size_of_INT1_CallBack 0030  
                             ??_vfpfcnvrt 00AA    __end_of_INTERRUPT_InterruptManagerHigh 3666  
 __size_of_INTERRUPT_InterruptManagerHigh 365E            _INTERRUPT_InterruptManagerHigh 0008  
                    ??_EXT_INT_Initialize 0010                                  sprintf@f 00CC  
                                tolower@c 0014                                  sprintf@s 00C0  
         fp__INT1_DefaultInterruptHandler 0000             ?_INT1_DefaultInterruptHandler 0001  
                  __size_of___fpclassifyf 00FE                      __end_of_DelayPORXLCD 3DD4  
        __end_of_INT1_SetInterruptHandler 3E00                                  strncmp@l 0015  
                                strncmp@n 0012                                  strncmp@r 0017  
                       __CFG_T3CMX$PORTC0 000000                             ___fladd@signs 001A  
   __end_of_INTERRUPT_InterruptManagerLow 0066    __size_of_INTERRUPT_InterruptManagerLow 004E  
           _INTERRUPT_InterruptManagerLow 0018            __end_of_PIN_MANAGER_Initialize 3A0C  
                            ___fladd@aexp 001B                              ___fladd@bexp 001C  
                             ?_CGRamAddr0 0001                    __size_of_convert_timer 0006  
                        fp__convert_timer 0000                           _TMR1_Initialize 3C8E  
                            fp__emrgencia 0000  
