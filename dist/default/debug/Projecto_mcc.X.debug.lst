

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Nov 27 10:30:53 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    78                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1
    85                           	psect	text67,global,reloc=2,class=CODE,delta=1
    86                           	psect	text68,global,reloc=2,class=CODE,delta=1
    87                           	psect	text69,global,reloc=2,class=CODE,delta=1
    88                           	psect	text70,global,reloc=2,class=CODE,delta=1
    89                           	psect	text71,global,reloc=2,class=CODE,delta=1
    90                           	psect	text72,global,reloc=2,class=CODE,delta=1
    91                           	psect	text73,global,reloc=2,class=CODE,delta=1
    92                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    95                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    96  0000                     
    97                           ; Version 2.10
    98                           ; Generated 31/07/2019 GMT
    99                           ; 
   100                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   101                           ; All rights reserved.
   102                           ; 
   103                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   104                           ; 
   105                           ; Redistribution and use in source and binary forms, with or without modification, are
   106                           ; permitted provided that the following conditions are met:
   107                           ; 
   108                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   109                           ;        conditions and the following disclaimer.
   110                           ; 
   111                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   112                           ;        of conditions and the following disclaimer in the documentation and/or other
   113                           ;        materials provided with the distribution.
   114                           ; 
   115                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   116                           ;        software without specific prior written permission.
   117                           ; 
   118                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   119                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   120                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   121                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   122                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   123                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   124                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   125                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   126                           ; 
   127                           ; 
   128                           ; Code-generator required, PIC18F45K22 Definitions
   129                           ; 
   130                           ; SFR Addresses
   131  0000                     
   132                           	psect	idataBANK1
   133  003C74                     __pidataBANK1:
   134                           	opt callstack 0
   135                           
   136                           ;initializer for main@F6409
   137  003C74  41                 	db	65
   138  003C75  44                 	db	68
   139  003C76  45                 	db	69
   140  003C77  4F                 	db	79
   141  003C78  52                 	db	82
   142  003C79  45                 	db	69
   143  003C7A  4C                 	db	76
   144  003C7B  20                 	db	32
   145  003C7C  42                 	db	66
   146  003C7D  41                 	db	65
   147  003C7E  4E                 	db	78
   148  003C7F  44                 	db	68
   149  003C80  45                 	db	69
   150  003C81  49                 	db	73
   151  003C82  52                 	db	82
   152  003C83  41                 	db	65
   153  003C84  00                 	db	0
   154  003C85  00                 	db	0
   155  003C86  00                 	db	0
   156  003C87  00                 	db	0
   157  003C88  00                 	db	0
   158                           
   159                           ;initializer for main@F6407
   160  003C89  44                 	db	68
   161  003C8A  41                 	db	65
   162  003C8B  56                 	db	86
   163  003C8C  49                 	db	73
   164  003C8D  44                 	db	68
   165  003C8E  20                 	db	32
   166  003C8F  44                 	db	68
   167  003C90  52                 	db	82
   168  003C91  55                 	db	85
   169  003C92  4D                 	db	77
   170  003C93  4F                 	db	79
   171  003C94  4E                 	db	78
   172  003C95  44                 	db	68
   173  003C96  00                 	db	0
   174  003C97  00                 	db	0
   175  003C98  00                 	db	0
   176  003C99  00                 	db	0
   177  003C9A  00                 	db	0
   178  003C9B  00                 	db	0
   179  003C9C  00                 	db	0
   180  003C9D  00                 	db	0
   181                           
   182                           	psect	nvCOMRAM
   183  00004F                     __pnvCOMRAM:
   184                           	opt callstack 0
   185  00004F                     _timer1ReloadVal:
   186                           	opt callstack 0
   187  00004F                     	ds	2
   188                           
   189                           	psect	nvBANK1
   190  0001BB                     __pnvBANK1:
   191                           	opt callstack 0
   192  0001BB                     _TMR1_InterruptHandler:
   193                           	opt callstack 0
   194  0001BB                     	ds	2
   195  0001BD                     _INT1_InterruptHandler:
   196                           	opt callstack 0
   197  0001BD                     	ds	2
   198  0001BF                     _INT0_InterruptHandler:
   199                           	opt callstack 0
   200  0001BF                     	ds	2
   201  0000                     _CCPTMRS0bits	set	3913
   202  0000                     _CCPR5H	set	3926
   203  0000                     _CCPR5L	set	3925
   204  0000                     _CCP5CON	set	3924
   205  0000                     _ANSELA	set	3896
   206  0000                     _ANSELE	set	3900
   207  0000                     _ANSELB	set	3897
   208  0000                     _ANSELC	set	3898
   209  0000                     _ANSELD	set	3899
   210  0000                     _TMR1	set	4046
   211  0000                     _CCPR2L	set	3943
   212  0000                     _CCPR2H	set	3944
   213  0000                     _PSTR2CON	set	3939
   214  0000                     _PWM2CON	set	3941
   215  0000                     _ECCP2AS	set	3940
   216  0000                     _CCP2CON	set	3942
   217  0000                     _T2CONbits	set	4026
   218  0000                     _T2CON	set	4026
   219  0000                     _TMR2	set	4028
   220  0000                     _PR2	set	4027
   221  0000                     _LATDbits	set	3980
   222  0000                     _TRISDbits	set	3989
   223  0000                     _PORTD	set	3971
   224  0000                     _T1GCONbits	set	4044
   225  0000                     _T1CONbits	set	4045
   226  0000                     _T1CON	set	4045
   227  0000                     _TMR1L	set	4046
   228  0000                     _TMR1H	set	4047
   229  0000                     _T1GCON	set	4044
   230  0000                     _ADCON0bits	set	4034
   231  0000                     _ADRESH	set	4036
   232  0000                     _ADRESL	set	4035
   233  0000                     _ADCON2	set	4032
   234  0000                     _ADCON1	set	4033
   235  0000                     _ADCON0	set	4034
   236  0000                     _PIR1bits	set	3998
   237  0000                     _PIE1bits	set	3997
   238  0000                     _IPR1bits	set	3999
   239  0000                     _RCONbits	set	4048
   240  0000                     _INTCON3bits	set	4080
   241  0000                     _INTCONbits	set	4082
   242  0000                     _INTCON2bits	set	4081
   243  0000                     _WPUB	set	3937
   244  0000                     _TRISD	set	3989
   245  0000                     _TRISC	set	3988
   246  0000                     _TRISB	set	3987
   247  0000                     _TRISA	set	3986
   248  0000                     _TRISE	set	3990
   249  0000                     _LATC	set	3979
   250  0000                     _LATB	set	3978
   251  0000                     _LATA	set	3977
   252  0000                     _LATD	set	3980
   253  0000                     _LATE	set	3981
   254  0000                     _OSCTUNE	set	3995
   255  0000                     _OSCCON2	set	4050
   256  0000                     _OSCCON	set	4051
   257                           
   258                           	psect	smallconst
   259  000600                     __psmallconst:
   260                           	opt callstack 0
   261  000600  00                 	db	0
   262  000601                     STR_6:
   263  000601  45                 	db	69	;'E'
   264  000602  4D                 	db	77	;'M'
   265  000603  45                 	db	69	;'E'
   266  000604  52                 	db	82	;'R'
   267  000605  47                 	db	71	;'G'
   268  000606  45                 	db	69	;'E'
   269  000607  4E                 	db	78	;'N'
   270  000608  43                 	db	67	;'C'
   271  000609  49                 	db	73	;'I'
   272  00060A  41                 	db	65	;'A'
   273  00060B  20                 	db	32
   274  00060C  41                 	db	65	;'A'
   275  00060D  54                 	db	84	;'T'
   276  00060E  49                 	db	73	;'I'
   277  00060F  56                 	db	86	;'V'
   278  000610  41                 	db	65	;'A'
   279  000611  44                 	db	68	;'D'
   280  000612  41                 	db	65	;'A'
   281  000613  20                 	db	32
   282  000614  20                 	db	32
   283  000615  20                 	db	32
   284  000616  20                 	db	32
   285  000617  20                 	db	32
   286  000618  20                 	db	32
   287  000619  20                 	db	32
   288  00061A  20                 	db	32
   289  00061B  20                 	db	32
   290  00061C  20                 	db	32
   291  00061D  20                 	db	32
   292  00061E  20                 	db	32
   293  00061F  00                 	db	0
   294  000620                     STR_5:
   295  000620  53                 	db	83	;'S'
   296  000621  49                 	db	73	;'I'
   297  000622  53                 	db	83	;'S'
   298  000623  54                 	db	84	;'T'
   299  000624  45                 	db	69	;'E'
   300  000625  4D                 	db	77	;'M'
   301  000626  41                 	db	65	;'A'
   302  000627  20                 	db	32
   303  000628  4F                 	db	79	;'O'
   304  000629  4E                 	db	78	;'N'
   305  00062A  20                 	db	32
   306  00062B  20                 	db	32
   307  00062C  20                 	db	32
   308  00062D  20                 	db	32
   309  00062E  20                 	db	32
   310  00062F  20                 	db	32
   311  000630  20                 	db	32
   312  000631  20                 	db	32
   313  000632  20                 	db	32
   314  000633  20                 	db	32
   315  000634  20                 	db	32
   316  000635  20                 	db	32
   317  000636  20                 	db	32
   318  000637  20                 	db	32
   319  000638  20                 	db	32
   320  000639  00                 	db	0
   321  00063A                     STR_4:
   322  00063A  53                 	db	83	;'S'
   323  00063B  49                 	db	73	;'I'
   324  00063C  53                 	db	83	;'S'
   325  00063D  54                 	db	84	;'T'
   326  00063E  45                 	db	69	;'E'
   327  00063F  4D                 	db	77	;'M'
   328  000640  41                 	db	65	;'A'
   329  000641  20                 	db	32
   330  000642  4F                 	db	79	;'O'
   331  000643  46                 	db	70	;'F'
   332  000644  46                 	db	70	;'F'
   333  000645  20                 	db	32
   334  000646  20                 	db	32
   335  000647  20                 	db	32
   336  000648  20                 	db	32
   337  000649  20                 	db	32
   338  00064A  20                 	db	32
   339  00064B  20                 	db	32
   340  00064C  20                 	db	32
   341  00064D  20                 	db	32
   342  00064E  20                 	db	32
   343  00064F  20                 	db	32
   344  000650  20                 	db	32
   345  000651  20                 	db	32
   346  000652  00                 	db	0
   347  000653                     STR_1:
   348  000653  53                 	db	83	;'S'
   349  000654  49                 	db	73	;'I'
   350  000655  53                 	db	83	;'S'
   351  000656  54                 	db	84	;'T'
   352  000657  45                 	db	69	;'E'
   353  000658  4D                 	db	77	;'M'
   354  000659  41                 	db	65	;'A'
   355  00065A  20                 	db	32
   356  00065B  44                 	db	68	;'D'
   357  00065C  45                 	db	69	;'E'
   358  00065D  20                 	db	32
   359  00065E  43                 	db	67	;'C'
   360  00065F  4F                 	db	79	;'O'
   361  000660  4E                 	db	78	;'N'
   362  000661  54                 	db	84	;'T'
   363  000662  52                 	db	82	;'R'
   364  000663  4F                 	db	79	;'O'
   365  000664  4C                 	db	76	;'L'
   366  000665  4F                 	db	79	;'O'
   367  000666  20                 	db	32
   368  000667  44                 	db	68	;'D'
   369  000668  45                 	db	69	;'E'
   370  000669  00                 	db	0
   371  00066A                     STR_7:
   372  00066A  44                 	db	68	;'D'
   373  00066B  65                 	db	101	;'e'
   374  00066C  73                 	db	115	;'s'
   375  00066D  6C                 	db	108	;'l'
   376  00066E  6F                 	db	111	;'o'
   377  00066F  63                 	db	99	;'c'
   378  000670  61                 	db	97	;'a'
   379  000671  6D                 	db	109	;'m'
   380  000672  65                 	db	101	;'e'
   381  000673  6E                 	db	110	;'n'
   382  000674  74                 	db	116	;'t'
   383  000675  6F                 	db	111	;'o'
   384  000676  3D                 	db	61	;'='
   385  000677  20                 	db	32
   386  000678  25                 	db	37
   387  000679  2E                 	db	46
   388  00067A  32                 	db	50	;'2'
   389  00067B  66                 	db	102	;'f'
   390  00067C  20                 	db	32
   391  00067D  20                 	db	32
   392  00067E  20                 	db	32
   393  00067F  00                 	db	0
   394  000680                     STR_2:
   395  000680  55                 	db	85	;'U'
   396  000681  4D                 	db	77	;'M'
   397  000682  20                 	db	32
   398  000683  50                 	db	80	;'P'
   399  000684  52                 	db	82	;'R'
   400  000685  4F                 	db	79	;'O'
   401  000686  43                 	db	67	;'C'
   402  000687  45                 	db	69	;'E'
   403  000688  53                 	db	83	;'S'
   404  000689  53                 	db	83	;'S'
   405  00068A  4F                 	db	79	;'O'
   406  00068B  20                 	db	32
   407  00068C  44                 	db	68	;'D'
   408  00068D  45                 	db	69	;'E'
   409  00068E  20                 	db	32
   410  00068F  49                 	db	73	;'I'
   411  000690  4E                 	db	78	;'N'
   412  000691  4A                 	db	74	;'J'
   413  000692  45                 	db	69	;'E'
   414  000693  00                 	db	0
   415  000694                     STR_8:
   416  000694  49                 	db	73	;'I'
   417  000695  4E                 	db	78	;'N'
   418  000696  46                 	db	70	;'F'
   419  000697  00                 	db	0
   420  000698                     STR_12:
   421  000698  4E                 	db	78	;'N'
   422  000699  41                 	db	65	;'A'
   423  00069A  4E                 	db	78	;'N'
   424  00069B  00                 	db	0
   425  00069C                     STR_9:
   426  00069C  69                 	db	105	;'i'
   427  00069D  6E                 	db	110	;'n'
   428  00069E  66                 	db	102	;'f'
   429  00069F  00                 	db	0
   430  0006A0                     STR_13:
   431  0006A0  6E                 	db	110	;'n'
   432  0006A1  61                 	db	97	;'a'
   433  0006A2  6E                 	db	110	;'n'
   434  0006A3  00                 	db	0
   435  0006A4                     STR_16:
   436  0006A4  6C                 	db	108	;'l'
   437  0006A5  66                 	db	102	;'f'
   438  0006A6  00                 	db	0
   439  0006A7                     STR_3:
   440  0006A7  41                 	db	65	;'A'
   441  0006A8  4F                 	db	79	;'O'
   442  0006A9  00                 	db	0
   443  0000                     
   444                           ; #config settings
   445  0006AA  00                 	db	0	; dummy byte at the end
   446  0000                     
   447                           	psect	cinit
   448  0038F8                     __pcinit:
   449                           	opt callstack 0
   450  0038F8                     start_initialization:
   451                           	opt callstack 0
   452  0038F8                     __initialization:
   453                           	opt callstack 0
   454                           
   455                           ; Initialize objects allocated to BANK1 (42 bytes)
   456                           ; load TBLPTR registers with __pidataBANK1
   457  0038F8  0E74               	movlw	low __pidataBANK1
   458  0038FA  6EF6               	movwf	tblptrl,c
   459  0038FC  0E3C               	movlw	high __pidataBANK1
   460  0038FE  6EF7               	movwf	tblptrh,c
   461  003900  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   462  003902  6EF8               	movwf	tblptru,c
   463  003904  EE01  F091         	lfsr	0,__pdataBANK1
   464  003908  EE10 F02A          	lfsr	1,42
   465  00390C                     copy_data0:
   466  00390C  0009               	tblrd		*+
   467  00390E  CFF5 FFEE          	movff	tablat,postinc0
   468  003912  50E5               	movf	postdec1,w,c
   469  003914  50E1               	movf	fsr1l,w,c
   470  003916  E1FA               	bnz	copy_data0
   471                           
   472                           ; Clear objects allocated to BANK1 (90 bytes)
   473  003918  EE01  F000         	lfsr	0,__pbssBANK1
   474  00391C  0E5A               	movlw	90
   475  00391E                     clear_0:
   476  00391E  6AEE               	clrf	postinc0,c
   477  003920  06E8               	decf	wreg,f,c
   478  003922  E1FD               	bnz	clear_0
   479                           
   480                           ; Clear objects allocated to BANK0 (3 bytes)
   481  003924  0100               	movlb	0
   482  003926  6BD6               	clrf	(__pbssBANK0+2)& (0+255),b
   483  003928  6BD5               	clrf	(__pbssBANK0+1)& (0+255),b
   484  00392A  6BD4               	clrf	__pbssBANK0& (0+255),b
   485                           
   486                           ; Clear objects allocated to COMRAM (12 bytes)
   487  00392C  EE00  F043         	lfsr	0,__pbssCOMRAM
   488  003930  0E0C               	movlw	12
   489  003932                     clear_1:
   490  003932  6AEE               	clrf	postinc0,c
   491  003934  06E8               	decf	wreg,f,c
   492  003936  E1FD               	bnz	clear_1
   493  003938                     end_of_initialization:
   494                           	opt callstack 0
   495  003938                     __end_of__initialization:
   496                           	opt callstack 0
   497  003938  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   498  00393A  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   499  00393C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   500  00393E  6EF8               	movwf	tblptru,c
   501  003940  0100               	movlb	0
   502  003942  EFDA  F00F         	goto	_main	;jump to C main() function
   503                           
   504                           	psect	bssCOMRAM
   505  000043                     __pbssCOMRAM:
   506                           	opt callstack 0
   507  000043                     _nout:
   508                           	opt callstack 0
   509  000043                     	ds	2
   510  000045                     _width:
   511                           	opt callstack 0
   512  000045                     	ds	2
   513  000047                     _prec:
   514                           	opt callstack 0
   515  000047                     	ds	2
   516  000049                     _flags:
   517                           	opt callstack 0
   518  000049                     	ds	2
   519  00004B                     _flag_CNT1:
   520                           	opt callstack 0
   521  00004B                     	ds	1
   522  00004C                     _adc_flag:
   523                           	opt callstack 0
   524  00004C                     	ds	1
   525  00004D                     _valor:
   526                           	opt callstack 0
   527  00004D                     	ds	2
   528                           
   529                           	psect	bssBANK0
   530  0000D4                     __pbssBANK0:
   531                           	opt callstack 0
   532  0000D4                     _write_flag:
   533                           	opt callstack 0
   534  0000D4                     	ds	1
   535  0000D5                     _start_flag:
   536                           	opt callstack 0
   537  0000D5                     	ds	1
   538  0000D6                     _emerg_flag:
   539                           	opt callstack 0
   540  0000D6                     	ds	1
   541                           
   542                           	psect	bssBANK1
   543  000100                     __pbssBANK1:
   544                           	opt callstack 0
   545  000100                     floorf@F524:
   546                           	opt callstack 0
   547  000100                     	ds	4
   548  000104                     ___fpclassifyf@F463:
   549                           	opt callstack 0
   550  000104                     	ds	4
   551  000108                     _k:
   552                           	opt callstack 0
   553  000108                     	ds	2
   554  00010A                     _dbuf:
   555                           	opt callstack 0
   556  00010A                     	ds	80
   557                           
   558                           	psect	dataBANK1
   559  000191                     __pdataBANK1:
   560                           	opt callstack 0
   561  000191                     main@F6409:
   562                           	opt callstack 0
   563  000191                     	ds	21
   564  0001A6                     main@F6407:
   565                           	opt callstack 0
   566  0001A6                     	ds	21
   567                           
   568                           	psect	cstackBANK1
   569  00015A                     __pcstackBANK1:
   570                           	opt callstack 0
   571  00015A                     main@name1:
   572                           	opt callstack 0
   573                           
   574                           ; 21 bytes @ 0x0
   575  00015A                     	ds	21
   576  00016F                     main@name2:
   577                           	opt callstack 0
   578                           
   579                           ; 21 bytes @ 0x15
   580  00016F                     	ds	21
   581  000184                     main@valor_analog:
   582                           	opt callstack 0
   583                           
   584                           ; 5 bytes @ 0x2A
   585  000184                     	ds	5
   586  000189                     main@angulo:
   587                           	opt callstack 0
   588                           
   589                           ; 4 bytes @ 0x2F
   590  000189                     	ds	4
   591  00018D                     main@i:
   592                           	opt callstack 0
   593                           
   594                           ; 2 bytes @ 0x33
   595  00018D                     	ds	2
   596  00018F                     main@j:
   597                           	opt callstack 0
   598                           
   599                           ; 2 bytes @ 0x35
   600  00018F                     	ds	2
   601                           
   602                           	psect	cstackBANK0
   603  000060                     __pcstackBANK0:
   604                           	opt callstack 0
   605  000060                     ?_efgtoa:
   606                           	opt callstack 0
   607  000060                     efgtoa@fp:
   608                           	opt callstack 0
   609                           
   610                           ; 2 bytes @ 0x0
   611  000060                     	ds	2
   612  000062                     efgtoa@f:
   613                           	opt callstack 0
   614                           
   615                           ; 4 bytes @ 0x2
   616  000062                     	ds	4
   617  000066                     efgtoa@c:
   618                           	opt callstack 0
   619                           
   620                           ; 1 bytes @ 0x6
   621  000066                     	ds	1
   622  000067                     ??_efgtoa:
   623                           
   624                           ; 1 bytes @ 0x7
   625  000067                     	ds	5
   626  00006C                     efgtoa@ou:
   627                           	opt callstack 0
   628                           
   629                           ; 4 bytes @ 0xC
   630  00006C                     	ds	4
   631  000070                     _efgtoa$1376:
   632                           	opt callstack 0
   633                           
   634                           ; 2 bytes @ 0x10
   635  000070                     	ds	2
   636  000072                     _efgtoa$1377:
   637                           	opt callstack 0
   638                           
   639                           ; 2 bytes @ 0x12
   640  000072                     	ds	2
   641  000074                     _efgtoa$1382:
   642                           	opt callstack 0
   643                           
   644                           ; 2 bytes @ 0x14
   645  000074                     	ds	2
   646  000076                     _efgtoa$1386:
   647                           	opt callstack 0
   648                           
   649                           ; 2 bytes @ 0x16
   650  000076                     	ds	2
   651  000078                     _efgtoa$1387:
   652                           	opt callstack 0
   653                           
   654                           ; 2 bytes @ 0x18
   655  000078                     	ds	2
   656  00007A                     _efgtoa$1388:
   657                           	opt callstack 0
   658                           
   659                           ; 2 bytes @ 0x1A
   660  00007A                     	ds	2
   661  00007C                     efgtoa@t:
   662                           	opt callstack 0
   663                           
   664                           ; 2 bytes @ 0x1C
   665  00007C                     	ds	2
   666  00007E                     efgtoa@pp:
   667                           	opt callstack 0
   668                           
   669                           ; 2 bytes @ 0x1E
   670  00007E                     	ds	2
   671  000080                     efgtoa@m:
   672                           	opt callstack 0
   673                           
   674                           ; 2 bytes @ 0x20
   675  000080                     	ds	2
   676  000082                     efgtoa@ne:
   677                           	opt callstack 0
   678                           
   679                           ; 2 bytes @ 0x22
   680  000082                     	ds	2
   681  000084                     efgtoa@d:
   682                           	opt callstack 0
   683                           
   684                           ; 2 bytes @ 0x24
   685  000084                     	ds	2
   686  000086                     efgtoa@sign:
   687                           	opt callstack 0
   688                           
   689                           ; 2 bytes @ 0x26
   690  000086                     	ds	2
   691  000088                     efgtoa@p:
   692                           	opt callstack 0
   693                           
   694                           ; 2 bytes @ 0x28
   695  000088                     	ds	2
   696  00008A                     efgtoa@nmode:
   697                           	opt callstack 0
   698                           
   699                           ; 1 bytes @ 0x2A
   700  00008A                     	ds	1
   701  00008B                     efgtoa@w:
   702                           	opt callstack 0
   703                           
   704                           ; 2 bytes @ 0x2B
   705  00008B                     	ds	2
   706  00008D                     efgtoa@mode:
   707                           	opt callstack 0
   708                           
   709                           ; 1 bytes @ 0x2D
   710  00008D                     	ds	1
   711  00008E                     efgtoa@h:
   712                           	opt callstack 0
   713                           
   714                           ; 4 bytes @ 0x2E
   715  00008E                     	ds	4
   716  000092                     efgtoa@l:
   717                           	opt callstack 0
   718                           
   719                           ; 4 bytes @ 0x32
   720  000092                     	ds	4
   721  000096                     efgtoa@i:
   722                           	opt callstack 0
   723                           
   724                           ; 2 bytes @ 0x36
   725  000096                     	ds	2
   726  000098                     efgtoa@g:
   727                           	opt callstack 0
   728                           
   729                           ; 4 bytes @ 0x38
   730  000098                     	ds	4
   731  00009C                     efgtoa@e:
   732                           	opt callstack 0
   733                           
   734                           ; 2 bytes @ 0x3C
   735  00009C                     	ds	2
   736  00009E                     efgtoa@n:
   737                           	opt callstack 0
   738                           
   739                           ; 2 bytes @ 0x3E
   740  00009E                     	ds	2
   741  0000A0                     efgtoa@u:
   742                           	opt callstack 0
   743                           
   744                           ; 4 bytes @ 0x40
   745  0000A0                     	ds	4
   746  0000A4                     ?_vfpfcnvrt:
   747                           	opt callstack 0
   748  0000A4                     vfpfcnvrt@fp:
   749                           	opt callstack 0
   750                           
   751                           ; 2 bytes @ 0x44
   752  0000A4                     	ds	2
   753  0000A6                     vfpfcnvrt@fmt:
   754                           	opt callstack 0
   755                           
   756                           ; 2 bytes @ 0x46
   757  0000A6                     	ds	2
   758  0000A8                     vfpfcnvrt@ap:
   759                           	opt callstack 0
   760                           
   761                           ; 2 bytes @ 0x48
   762  0000A8                     	ds	2
   763  0000AA                     ??_vfpfcnvrt:
   764                           
   765                           ; 1 bytes @ 0x4A
   766  0000AA                     	ds	4
   767  0000AE                     _vfpfcnvrt$1402:
   768                           	opt callstack 0
   769                           
   770                           ; 2 bytes @ 0x4E
   771  0000AE                     	ds	2
   772  0000B0                     _vfpfcnvrt$1406:
   773                           	opt callstack 0
   774                           
   775                           ; 2 bytes @ 0x50
   776  0000B0                     	ds	2
   777  0000B2                     vfpfcnvrt@f:
   778                           	opt callstack 0
   779                           
   780                           ; 4 bytes @ 0x52
   781  0000B2                     	ds	4
   782  0000B6                     vfpfcnvrt@ct:
   783                           	opt callstack 0
   784                           
   785                           ; 3 bytes @ 0x56
   786  0000B6                     	ds	3
   787  0000B9                     vfpfcnvrt@c:
   788                           	opt callstack 0
   789                           
   790                           ; 1 bytes @ 0x59
   791  0000B9                     	ds	1
   792  0000BA                     ?_vfprintf:
   793                           	opt callstack 0
   794  0000BA                     vfprintf@fp:
   795                           	opt callstack 0
   796                           
   797                           ; 2 bytes @ 0x5A
   798  0000BA                     	ds	2
   799  0000BC                     vfprintf@fmt:
   800                           	opt callstack 0
   801                           
   802                           ; 2 bytes @ 0x5C
   803  0000BC                     	ds	2
   804  0000BE                     vfprintf@ap:
   805                           	opt callstack 0
   806                           
   807                           ; 2 bytes @ 0x5E
   808  0000BE                     	ds	2
   809  0000C0                     ?_sprintf:
   810                           	opt callstack 0
   811  0000C0                     sprintf@s:
   812                           	opt callstack 0
   813                           
   814                           ; 2 bytes @ 0x60
   815  0000C0                     	ds	2
   816  0000C2                     sprintf@fmt:
   817                           	opt callstack 0
   818                           
   819                           ; 2 bytes @ 0x62
   820  0000C2                     	ds	8
   821  0000CA                     sprintf@ap:
   822                           	opt callstack 0
   823                           
   824                           ; 2 bytes @ 0x6A
   825  0000CA                     	ds	2
   826  0000CC                     sprintf@f:
   827                           	opt callstack 0
   828                           
   829                           ; 6 bytes @ 0x6C
   830  0000CC                     	ds	6
   831  0000D2                     ??_main:
   832                           
   833                           ; 1 bytes @ 0x72
   834  0000D2                     	ds	2
   835                           
   836                           	psect	cstackCOMRAM
   837  000001                     __pcstackCOMRAM:
   838                           	opt callstack 0
   839  000001                     ?_ADC_GetConversionResult:
   840                           	opt callstack 0
   841  000001                     TMR1_WriteTimer@timerVal:
   842                           	opt callstack 0
   843                           
   844                           ; 2 bytes @ 0x0
   845  000001                     	ds	2
   846  000003                     ??_ADC_GetConversionResult:
   847  000003                     
   848                           ; 1 bytes @ 0x2
   849  000003                     	ds	2
   850  000005                     ADC_ISR@anval:
   851                           	opt callstack 0
   852                           
   853                           ; 2 bytes @ 0x4
   854  000005                     	ds	2
   855  000007                     ??_INTERRUPT_InterruptManagerHigh:
   856                           
   857                           ; 1 bytes @ 0x6
   858  000007                     	ds	2
   859  000009                     ??_INTERRUPT_InterruptManagerLow:
   860  000009                     
   861                           ; 1 bytes @ 0x8
   862  000009                     	ds	5
   863  00000E                     ??_BusyXLCD:
   864  00000E                     ??_SetCGRamAddr:
   865  00000E                     ??_DelayPORXLCD:
   866  00000E                     ??_DelayXLCD:
   867  00000E                     ?_strlen:
   868                           	opt callstack 0
   869  00000E                     ?___fpclassifyf:
   870                           	opt callstack 0
   871  00000E                     ?_isupper:
   872                           	opt callstack 0
   873  00000E                     ?_isdigit:
   874                           	opt callstack 0
   875  00000E                     ?_strncmp:
   876                           	opt callstack 0
   877  00000E                     ?_isspace:
   878                           	opt callstack 0
   879  00000E                     ?___wmul:
   880                           	opt callstack 0
   881  00000E                     ?___awdiv:
   882                           	opt callstack 0
   883  00000E                     ?___awmod:
   884                           	opt callstack 0
   885  00000E                     ?___fladd:
   886                           	opt callstack 0
   887  00000E                     ?___fldiv:
   888                           	opt callstack 0
   889  00000E                     ?___flneg:
   890                           	opt callstack 0
   891  00000E                     ?___fltol:
   892                           	opt callstack 0
   893  00000E                     ?___xxtofl:
   894                           	opt callstack 0
   895  00000E                     WriteCmdXLCD@cmd:
   896                           	opt callstack 0
   897  00000E                     WriteDataXLCD@data:
   898                           	opt callstack 0
   899  00000E                     INT0_SetInterruptHandler@InterruptHandler:
   900                           	opt callstack 0
   901  00000E                     INT1_SetInterruptHandler@InterruptHandler:
   902                           	opt callstack 0
   903  00000E                     TMR1_SetInterruptHandler@InterruptHandler:
   904                           	opt callstack 0
   905  00000E                     ___wmul@multiplier:
   906                           	opt callstack 0
   907  00000E                     ___awdiv@dividend:
   908                           	opt callstack 0
   909  00000E                     ___awmod@dividend:
   910                           	opt callstack 0
   911  00000E                     isdigit@c:
   912                           	opt callstack 0
   913  00000E                     isspace@c:
   914                           	opt callstack 0
   915  00000E                     isupper@c:
   916                           	opt callstack 0
   917  00000E                     fputc@c:
   918                           	opt callstack 0
   919  00000E                     strcpy@dest:
   920                           	opt callstack 0
   921  00000E                     strlen@s:
   922                           	opt callstack 0
   923  00000E                     strncmp@_l:
   924                           	opt callstack 0
   925  00000E                     ___fleq@ff1:
   926                           	opt callstack 0
   927  00000E                     ___flneg@f1:
   928                           	opt callstack 0
   929  00000E                     ___fltol@f1:
   930                           	opt callstack 0
   931  00000E                     ___fladd@b:
   932                           	opt callstack 0
   933  00000E                     ___fldiv@b:
   934                           	opt callstack 0
   935  00000E                     ___xxtofl@val:
   936                           	opt callstack 0
   937  00000E                     ___fpclassifyf@x:
   938                           	opt callstack 0
   939                           
   940                           ; 4 bytes @ 0xD
   941  00000E                     	ds	1
   942  00000F                     putsXLCD@buffer:
   943                           	opt callstack 0
   944                           
   945                           ; 2 bytes @ 0xE
   946  00000F                     	ds	1
   947  000010                     ??_isupper:
   948  000010                     ??_isdigit:
   949  000010                     ??_isspace:
   950  000010                     ___wmul@multiplicand:
   951                           	opt callstack 0
   952  000010                     ___awdiv@divisor:
   953                           	opt callstack 0
   954  000010                     ___awmod@divisor:
   955                           	opt callstack 0
   956  000010                     fputc@fp:
   957                           	opt callstack 0
   958  000010                     strcpy@src:
   959                           	opt callstack 0
   960  000010                     strlen@a:
   961                           	opt callstack 0
   962  000010                     strncmp@_r:
   963                           	opt callstack 0
   964                           
   965                           ; 2 bytes @ 0xF
   966  000010                     	ds	1
   967  000011                     SetCGRamAddr@CGaddr:
   968                           	opt callstack 0
   969                           
   970                           ; 1 bytes @ 0x10
   971  000011                     	ds	1
   972  000012                     ??_fputc:
   973  000012                     ??___fpclassifyf:
   974  000012                     ??_strcpy:
   975  000012                     ??___fltol:
   976  000012                     ??___xxtofl:
   977  000012                     ___awdiv@counter:
   978                           	opt callstack 0
   979  000012                     ___awmod@counter:
   980                           	opt callstack 0
   981  000012                     ___wmul@product:
   982                           	opt callstack 0
   983  000012                     strncmp@n:
   984                           	opt callstack 0
   985  000012                     ___fleq@ff2:
   986                           	opt callstack 0
   987  000012                     ___fladd@a:
   988                           	opt callstack 0
   989  000012                     ___fldiv@a:
   990                           	opt callstack 0
   991                           
   992                           ; 4 bytes @ 0x11
   993  000012                     	ds	1
   994  000013                     ___awdiv@sign:
   995                           	opt callstack 0
   996  000013                     ___awmod@sign:
   997                           	opt callstack 0
   998                           
   999                           ; 1 bytes @ 0x12
  1000  000013                     	ds	1
  1001  000014                     ??_strncmp:
  1002  000014                     ?_tolower:
  1003                           	opt callstack 0
  1004  000014                     _isspace$1908:
  1005                           	opt callstack 0
  1006  000014                     ___awdiv@quotient:
  1007                           	opt callstack 0
  1008  000014                     strcpy@s:
  1009                           	opt callstack 0
  1010  000014                     tolower@c:
  1011                           	opt callstack 0
  1012                           
  1013                           ; 2 bytes @ 0x13
  1014  000014                     	ds	1
  1015  000015                     ?_atoi:
  1016                           	opt callstack 0
  1017  000015                     atoi@s:
  1018                           	opt callstack 0
  1019  000015                     strncmp@l:
  1020                           	opt callstack 0
  1021                           
  1022                           ; 2 bytes @ 0x14
  1023  000015                     	ds	1
  1024  000016                     ??_tolower:
  1025  000016                     ??___fladd:
  1026  000016                     ??___fldiv:
  1027  000016                     ??___fleq:
  1028  000016                     ___fltol@sign1:
  1029                           	opt callstack 0
  1030  000016                     ___xxtofl@sign:
  1031                           	opt callstack 0
  1032  000016                     ___fpclassifyf@e:
  1033                           	opt callstack 0
  1034  000016                     strcpy@d:
  1035                           	opt callstack 0
  1036                           
  1037                           ; 2 bytes @ 0x15
  1038  000016                     	ds	1
  1039  000017                     ??_atoi:
  1040  000017                     ___fltol@exp1:
  1041                           	opt callstack 0
  1042  000017                     ___xxtofl@exp:
  1043                           	opt callstack 0
  1044  000017                     fputs@s:
  1045                           	opt callstack 0
  1046  000017                     strncmp@r:
  1047                           	opt callstack 0
  1048                           
  1049                           ; 2 bytes @ 0x16
  1050  000017                     	ds	1
  1051  000018                     ___xxtofl@arg:
  1052                           	opt callstack 0
  1053  000018                     ___fpclassifyf@u:
  1054                           	opt callstack 0
  1055                           
  1056                           ; 4 bytes @ 0x17
  1057  000018                     	ds	1
  1058  000019                     fputs@fp:
  1059                           	opt callstack 0
  1060                           
  1061                           ; 2 bytes @ 0x18
  1062  000019                     	ds	1
  1063  00001A                     ___fladd@signs:
  1064                           	opt callstack 0
  1065  00001A                     _tolower$1993:
  1066                           	opt callstack 0
  1067  00001A                     ___fldiv@rem:
  1068                           	opt callstack 0
  1069                           
  1070                           ; 4 bytes @ 0x19
  1071  00001A                     	ds	1
  1072  00001B                     ___fladd@aexp:
  1073                           	opt callstack 0
  1074  00001B                     fputs@c:
  1075                           	opt callstack 0
  1076  00001B                     atoi@neg:
  1077                           	opt callstack 0
  1078                           
  1079                           ; 2 bytes @ 0x1A
  1080  00001B                     	ds	1
  1081  00001C                     ?___flmul:
  1082                           	opt callstack 0
  1083  00001C                     ___fladd@bexp:
  1084                           	opt callstack 0
  1085  00001C                     fputs@i:
  1086                           	opt callstack 0
  1087  00001C                     ___flmul@b:
  1088                           	opt callstack 0
  1089                           
  1090                           ; 4 bytes @ 0x1B
  1091  00001C                     	ds	1
  1092  00001D                     ___fladd@grs:
  1093                           	opt callstack 0
  1094  00001D                     _atoi$1877:
  1095                           	opt callstack 0
  1096                           
  1097                           ; 2 bytes @ 0x1C
  1098  00001D                     	ds	1
  1099  00001E                     ?_pad:
  1100                           	opt callstack 0
  1101  00001E                     ___fldiv@sign:
  1102                           	opt callstack 0
  1103  00001E                     pad@fp:
  1104                           	opt callstack 0
  1105                           
  1106                           ; 2 bytes @ 0x1D
  1107  00001E                     	ds	1
  1108  00001F                     ___fldiv@new_exp:
  1109                           	opt callstack 0
  1110  00001F                     _atoi$1879:
  1111                           	opt callstack 0
  1112                           
  1113                           ; 2 bytes @ 0x1E
  1114  00001F                     	ds	1
  1115  000020                     pad@buf:
  1116                           	opt callstack 0
  1117  000020                     ___flmul@a:
  1118                           	opt callstack 0
  1119                           
  1120                           ; 4 bytes @ 0x1F
  1121  000020                     	ds	1
  1122  000021                     _atoi$1878:
  1123                           	opt callstack 0
  1124  000021                     ___fldiv@grs:
  1125                           	opt callstack 0
  1126                           
  1127                           ; 4 bytes @ 0x20
  1128  000021                     	ds	1
  1129  000022                     pad@p:
  1130                           	opt callstack 0
  1131  000022                     atoi@n:
  1132                           	opt callstack 0
  1133                           
  1134                           ; 2 bytes @ 0x21
  1135  000022                     	ds	2
  1136  000024                     ??___flmul:
  1137  000024                     ??_pad:
  1138                           
  1139                           ; 1 bytes @ 0x23
  1140  000024                     	ds	1
  1141  000025                     ___fldiv@bexp:
  1142                           	opt callstack 0
  1143  000025                     pad@i:
  1144                           	opt callstack 0
  1145                           
  1146                           ; 2 bytes @ 0x24
  1147  000025                     	ds	1
  1148  000026                     ___fldiv@aexp:
  1149                           	opt callstack 0
  1150                           
  1151                           ; 1 bytes @ 0x25
  1152  000026                     	ds	1
  1153  000027                     ?_floorf:
  1154                           	opt callstack 0
  1155  000027                     pad@w:
  1156                           	opt callstack 0
  1157  000027                     floorf@x:
  1158                           	opt callstack 0
  1159                           
  1160                           ; 4 bytes @ 0x26
  1161  000027                     	ds	1
  1162  000028                     ___flmul@sign:
  1163                           	opt callstack 0
  1164                           
  1165                           ; 1 bytes @ 0x27
  1166  000028                     	ds	1
  1167  000029                     ___flmul@aexp:
  1168                           	opt callstack 0
  1169                           
  1170                           ; 1 bytes @ 0x28
  1171  000029                     	ds	1
  1172  00002A                     ___flmul@grs:
  1173                           	opt callstack 0
  1174                           
  1175                           ; 4 bytes @ 0x29
  1176  00002A                     	ds	1
  1177  00002B                     ??_floorf:
  1178                           
  1179                           ; 1 bytes @ 0x2A
  1180  00002B                     	ds	3
  1181  00002E                     ___flmul@bexp:
  1182                           	opt callstack 0
  1183                           
  1184                           ; 1 bytes @ 0x2D
  1185  00002E                     	ds	1
  1186  00002F                     ___flmul@prod:
  1187                           	opt callstack 0
  1188                           
  1189                           ; 4 bytes @ 0x2E
  1190  00002F                     	ds	2
  1191  000031                     floorf@m:
  1192                           	opt callstack 0
  1193                           
  1194                           ; 4 bytes @ 0x30
  1195  000031                     	ds	2
  1196  000033                     ___flmul@temp:
  1197                           	opt callstack 0
  1198                           
  1199                           ; 2 bytes @ 0x32
  1200  000033                     	ds	2
  1201  000035                     ?___flsub:
  1202                           	opt callstack 0
  1203  000035                     floorf@e:
  1204                           	opt callstack 0
  1205  000035                     ___flge@ff1:
  1206                           	opt callstack 0
  1207  000035                     ___flsub@b:
  1208                           	opt callstack 0
  1209                           
  1210                           ; 4 bytes @ 0x34
  1211  000035                     	ds	2
  1212  000037                     floorf@u:
  1213                           	opt callstack 0
  1214                           
  1215                           ; 4 bytes @ 0x36
  1216  000037                     	ds	2
  1217  000039                     ___flge@ff2:
  1218                           	opt callstack 0
  1219  000039                     ___flsub@a:
  1220                           	opt callstack 0
  1221                           
  1222                           ; 4 bytes @ 0x38
  1223  000039                     	ds	4
  1224  00003D                     ??___flge:
  1225                           
  1226                           ; 1 bytes @ 0x3C
  1227  00003D                     	ds	4
  1228  000041                     vfprintf@cfmt:
  1229                           	opt callstack 0
  1230                           
  1231                           ; 2 bytes @ 0x40
  1232  000041                     	ds	2
  1233  000043                     
  1234                           ; 1 bytes @ 0x42
  1235 ;;
  1236 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1237 ;;
  1238 ;; *************** function _main *****************
  1239 ;; Defined at:
  1240 ;;		line 132 in file "main.c"
  1241 ;; Parameters:    Size  Location     Type
  1242 ;;		None
  1243 ;; Auto vars:     Size  Location     Type
  1244 ;;  valor_analog    5   42[BANK1 ] unsigned char [5]
  1245 ;;  angulo          4   47[BANK1 ] float 
  1246 ;;  name2          21   21[BANK1 ] unsigned char [21]
  1247 ;;  name1          21    0[BANK1 ] unsigned char [21]
  1248 ;;  j               2   53[BANK1 ] int 
  1249 ;;  i               2   51[BANK1 ] int 
  1250 ;; Return value:  Size  Location     Type
  1251 ;;                  1    wreg      void 
  1252 ;; Registers used:
  1253 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1254 ;; Tracked objects:
  1255 ;;		On entry : 0/0
  1256 ;;		On exit  : 0/0
  1257 ;;		Unchanged: 0/0
  1258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1259 ;;      Params:         0       0       0       0       0       0       0
  1260 ;;      Locals:         0       0      55       0       0       0       0
  1261 ;;      Temps:          0       2       0       0       0       0       0
  1262 ;;      Totals:         0       2      55       0       0       0       0
  1263 ;;Total ram usage:       57 bytes
  1264 ;; Hardware stack levels required when called:   17
  1265 ;; This function calls:
  1266 ;;		_BusyXLCD
  1267 ;;		_CGRamAddr0
  1268 ;;		_INT0_SetInterruptHandler
  1269 ;;		_INT1_SetInterruptHandler
  1270 ;;		_OpenXLCD
  1271 ;;		_SYSTEM_Initialize
  1272 ;;		_TMR1_SetInterruptHandler
  1273 ;;		_TMR2_StopTimer
  1274 ;;		_WriteCmdXLCD
  1275 ;;		_WriteDataXLCD
  1276 ;;		___flmul
  1277 ;;		___xxtofl
  1278 ;;		_putsXLCD
  1279 ;;		_sprintf
  1280 ;; This function is called by:
  1281 ;;		Startup code after reset
  1282 ;; This function uses a non-reentrant model
  1283 ;;
  1284                           
  1285                           	psect	text0
  1286  001FB4                     __ptext0:
  1287                           	opt callstack 0
  1288  001FB4                     _main:
  1289                           	opt callstack 14
  1290  001FB4                     
  1291                           ;main.c: 135:         SYSTEM_Initialize();
  1292  001FB4  EC8B  F01E         	call	_SYSTEM_Initialize	;wreg free
  1293  001FB8                     
  1294                           ;main.c: 137:         TMR2_StopTimer();
  1295  001FB8  EC38  F01F         	call	_TMR2_StopTimer	;wreg free
  1296  001FBC                     
  1297                           ;main.c: 140:         char name1[21] = "DAVID DRUMOND";
  1298  001FBC  EE21  F0A6         	lfsr	2,main@F6407
  1299  001FC0  EE11  F05A         	lfsr	1,main@name1
  1300  001FC4  0E14               	movlw	20
  1301  001FC6                     u8611:
  1302  001FC6  CFDB FFE3          	movff	plusw2,plusw1
  1303  001FCA  06E8               	decf	wreg,f,c
  1304  001FCC  E2FC               	bc	u8611
  1305  001FCE                     
  1306                           ;main.c: 141:         char name2[21] = "ADEOREL BANDEIRA";
  1307  001FCE  EE21  F091         	lfsr	2,main@F6409
  1308  001FD2  EE11  F06F         	lfsr	1,main@name2
  1309  001FD6  0E14               	movlw	20
  1310  001FD8                     u8621:
  1311  001FD8  CFDB FFE3          	movff	plusw2,plusw1
  1312  001FDC  06E8               	decf	wreg,f,c
  1313  001FDE  E2FC               	bc	u8621
  1314  001FE0                     
  1315                           ;main.c: 144:         int i;;main.c: 145:         int j;;main.c: 152:     OpenXLCD(0b001
      +                          01111 & 0b00111011);
  1316  001FE0  0E2B               	movlw	43
  1317  001FE2  EC2C  F016         	call	_OpenXLCD
  1318  001FE6                     l7084:
  1319  001FE6  ECE5  F01E         	call	_BusyXLCD	;wreg free
  1320  001FEA  0900               	iorlw	0
  1321  001FEC  A4D8               	btfss	status,2,c
  1322  001FEE  EFFB  F00F         	goto	u8631
  1323  001FF2  EFFD  F00F         	goto	u8630
  1324  001FF6                     u8631:
  1325  001FF6  EFF3  F00F         	goto	l7084
  1326  001FFA                     u8630:
  1327  001FFA                     
  1328                           ;main.c: 154:     WriteCmdXLCD(0b00001111 & 0b00001101 & 0b00001110);
  1329  001FFA  0E0C               	movlw	12
  1330  001FFC  EC09  F01D         	call	_WriteCmdXLCD
  1331  002000                     l7088:
  1332  002000  ECE5  F01E         	call	_BusyXLCD	;wreg free
  1333  002004  0900               	iorlw	0
  1334  002006  A4D8               	btfss	status,2,c
  1335  002008  EF08  F010         	goto	u8641
  1336  00200C  EF0A  F010         	goto	u8640
  1337  002010                     u8641:
  1338  002010  EF00  F010         	goto	l7088
  1339  002014                     u8640:
  1340  002014                     
  1341                           ;main.c: 156:     WriteCmdXLCD(0b00010111);
  1342  002014  0E17               	movlw	23
  1343  002016  EC09  F01D         	call	_WriteCmdXLCD
  1344  00201A                     l7092:
  1345  00201A  ECE5  F01E         	call	_BusyXLCD	;wreg free
  1346  00201E  0900               	iorlw	0
  1347  002020  A4D8               	btfss	status,2,c
  1348  002022  EF15  F010         	goto	u8651
  1349  002026  EF17  F010         	goto	u8650
  1350  00202A                     u8651:
  1351  00202A  EF0D  F010         	goto	l7092
  1352  00202E                     u8650:
  1353  00202E                     
  1354                           ;main.c: 158:     WriteCmdXLCD(0b00000001);
  1355  00202E  0E01               	movlw	1
  1356  002030  EC09  F01D         	call	_WriteCmdXLCD
  1357  002034                     l7096:
  1358  002034  ECE5  F01E         	call	_BusyXLCD	;wreg free
  1359  002038  0900               	iorlw	0
  1360  00203A  A4D8               	btfss	status,2,c
  1361  00203C  EF22  F010         	goto	u8661
  1362  002040  EF24  F010         	goto	u8660
  1363  002044                     u8661:
  1364  002044  EF1A  F010         	goto	l7096
  1365  002048                     u8660:
  1366  002048                     
  1367                           ;main.c: 160:     CGRamAddr0();
  1368  002048  ECB6  F017         	call	_CGRamAddr0	;wreg free
  1369                           
  1370                           ;main.c: 162:     WriteCmdXLCD(0b10000000);
  1371  00204C  0E80               	movlw	128
  1372  00204E  EC09  F01D         	call	_WriteCmdXLCD
  1373  002052                     l7100:
  1374  002052  ECE5  F01E         	call	_BusyXLCD	;wreg free
  1375  002056  0900               	iorlw	0
  1376  002058  A4D8               	btfss	status,2,c
  1377  00205A  EF31  F010         	goto	u8671
  1378  00205E  EF33  F010         	goto	u8670
  1379  002062                     u8671:
  1380  002062  EF29  F010         	goto	l7100
  1381  002066                     u8670:
  1382  002066                     
  1383                           ;main.c: 164:     putsXLCD(name1);
  1384  002066  0E5A               	movlw	low main@name1
  1385  002068  6E0F               	movwf	putsXLCD@buffer^0,c
  1386  00206A  0E01               	movlw	high main@name1
  1387  00206C  6E10               	movwf	(putsXLCD@buffer+1)^0,c
  1388  00206E  EC35  F01B         	call	_putsXLCD	;wreg free
  1389  002072                     l7104:
  1390  002072  ECE5  F01E         	call	_BusyXLCD	;wreg free
  1391  002076  0900               	iorlw	0
  1392  002078  A4D8               	btfss	status,2,c
  1393  00207A  EF41  F010         	goto	u8681
  1394  00207E  EF43  F010         	goto	u8680
  1395  002082                     u8681:
  1396  002082  EF39  F010         	goto	l7104
  1397  002086                     u8680:
  1398  002086                     
  1399                           ;main.c: 166:     WriteCmdXLCD(0b11000000);
  1400  002086  0EC0               	movlw	192
  1401  002088  EC09  F01D         	call	_WriteCmdXLCD
  1402  00208C                     l7108:
  1403  00208C  ECE5  F01E         	call	_BusyXLCD	;wreg free
  1404  002090  0900               	iorlw	0
  1405  002092  A4D8               	btfss	status,2,c
  1406  002094  EF4E  F010         	goto	u8691
  1407  002098  EF50  F010         	goto	u8690
  1408  00209C                     u8691:
  1409  00209C  EF46  F010         	goto	l7108
  1410  0020A0                     u8690:
  1411  0020A0                     
  1412                           ;main.c: 168:     putsXLCD(name2);
  1413  0020A0  0E6F               	movlw	low main@name2
  1414  0020A2  6E0F               	movwf	putsXLCD@buffer^0,c
  1415  0020A4  0E01               	movlw	high main@name2
  1416  0020A6  6E10               	movwf	(putsXLCD@buffer+1)^0,c
  1417  0020A8  EC35  F01B         	call	_putsXLCD	;wreg free
  1418  0020AC                     
  1419                           ;main.c: 169:     _delay((unsigned long)((500)*(12000000/4000.0)));
  1420  0020AC  0E08               	movlw	8
  1421  0020AE  0100               	movlb	0	; () banked
  1422  0020B0  6FD3               	movwf	(??_main+1)& (0+255),b
  1423  0020B2  0E9D               	movlw	157
  1424  0020B4  6FD2               	movwf	??_main& (0+255),b
  1425  0020B6  0E05               	movlw	5
  1426  0020B8                     u8867:
  1427  0020B8  2EE8               	decfsz	wreg,f,c
  1428  0020BA  D7FE               	bra	u8867
  1429  0020BC  2FD2               	decfsz	??_main& (0+255),f,b
  1430  0020BE  D7FC               	bra	u8867
  1431  0020C0  2FD3               	decfsz	(??_main+1)& (0+255),f,b
  1432  0020C2  D7FA               	bra	u8867
  1433  0020C4  D000               	nop2	
  1434  0020C6                     
  1435                           ;main.c: 171:     WriteCmdXLCD(0b00000001);
  1436  0020C6  0E01               	movlw	1
  1437  0020C8  EC09  F01D         	call	_WriteCmdXLCD
  1438  0020CC                     l7116:
  1439  0020CC  ECE5  F01E         	call	_BusyXLCD	;wreg free
  1440  0020D0  0900               	iorlw	0
  1441  0020D2  A4D8               	btfss	status,2,c
  1442  0020D4  EF6E  F010         	goto	u8701
  1443  0020D8  EF70  F010         	goto	u8700
  1444  0020DC                     u8701:
  1445  0020DC  EF66  F010         	goto	l7116
  1446  0020E0                     u8700:
  1447  0020E0                     
  1448                           ;main.c: 174:     WriteCmdXLCD(0b10000000);
  1449  0020E0  0E80               	movlw	128
  1450  0020E2  EC09  F01D         	call	_WriteCmdXLCD
  1451  0020E6                     
  1452                           ;main.c: 175:     putsXLCD("SISTEMA DE CONTROLO DE");
  1453  0020E6  0E53               	movlw	low STR_1
  1454  0020E8  6E0F               	movwf	putsXLCD@buffer^0,c
  1455  0020EA  0E06               	movlw	high STR_1
  1456  0020EC  6E10               	movwf	(putsXLCD@buffer+1)^0,c
  1457  0020EE  EC35  F01B         	call	_putsXLCD	;wreg free
  1458  0020F2                     l7122:
  1459  0020F2  ECE5  F01E         	call	_BusyXLCD	;wreg free
  1460  0020F6  0900               	iorlw	0
  1461  0020F8  A4D8               	btfss	status,2,c
  1462  0020FA  EF81  F010         	goto	u8711
  1463  0020FE  EF83  F010         	goto	u8710
  1464  002102                     u8711:
  1465  002102  EF79  F010         	goto	l7122
  1466  002106                     u8710:
  1467  002106                     
  1468                           ;main.c: 178:     WriteCmdXLCD(0b11000000);
  1469  002106  0EC0               	movlw	192
  1470  002108  EC09  F01D         	call	_WriteCmdXLCD
  1471  00210C                     
  1472                           ;main.c: 179:     putsXLCD("UM PROCESSO DE INJE");
  1473  00210C  0E80               	movlw	low STR_2
  1474  00210E  6E0F               	movwf	putsXLCD@buffer^0,c
  1475  002110  0E06               	movlw	high STR_2
  1476  002112  6E10               	movwf	(putsXLCD@buffer+1)^0,c
  1477  002114  EC35  F01B         	call	_putsXLCD	;wreg free
  1478  002118                     l7128:
  1479  002118  ECE5  F01E         	call	_BusyXLCD	;wreg free
  1480  00211C  0900               	iorlw	0
  1481  00211E  A4D8               	btfss	status,2,c
  1482  002120  EF94  F010         	goto	u8721
  1483  002124  EF96  F010         	goto	u8720
  1484  002128                     u8721:
  1485  002128  EF8C  F010         	goto	l7128
  1486  00212C                     u8720:
  1487  00212C                     
  1488                           ;main.c: 181:      WriteDataXLCD(0b00000000);
  1489  00212C  0E00               	movlw	0
  1490  00212E  EC28  F01D         	call	_WriteDataXLCD
  1491  002132                     l7132:
  1492  002132  ECE5  F01E         	call	_BusyXLCD	;wreg free
  1493  002136  0900               	iorlw	0
  1494  002138  A4D8               	btfss	status,2,c
  1495  00213A  EFA1  F010         	goto	u8731
  1496  00213E  EFA3  F010         	goto	u8730
  1497  002142                     u8731:
  1498  002142  EF99  F010         	goto	l7132
  1499  002146                     u8730:
  1500  002146                     
  1501                           ;main.c: 183:      putsXLCD("AO");
  1502  002146  0EA7               	movlw	low STR_3
  1503  002148  6E0F               	movwf	putsXLCD@buffer^0,c
  1504  00214A  0E06               	movlw	high STR_3
  1505  00214C  6E10               	movwf	(putsXLCD@buffer+1)^0,c
  1506  00214E  EC35  F01B         	call	_putsXLCD	;wreg free
  1507  002152                     
  1508                           ;main.c: 185:     for (i = 0; i < 10 ; i++ ) {
  1509  002152  0E00               	movlw	0
  1510  002154  0101               	movlb	1	; () banked
  1511  002156  6F8E               	movwf	(main@i+1)& (0+255),b
  1512  002158  0E00               	movlw	0
  1513  00215A  6F8D               	movwf	main@i& (0+255),b
  1514  00215C                     l7142:
  1515                           
  1516                           ; BSR set to: 1
  1517                           ;main.c: 187:     WriteCmdXLCD(0b00011011);
  1518  00215C  0E1B               	movlw	27
  1519  00215E  EC09  F01D         	call	_WriteCmdXLCD
  1520  002162                     l7144:
  1521  002162  ECE5  F01E         	call	_BusyXLCD	;wreg free
  1522  002166  0900               	iorlw	0
  1523  002168  A4D8               	btfss	status,2,c
  1524  00216A  EFB9  F010         	goto	u8741
  1525  00216E  EFBB  F010         	goto	u8740
  1526  002172                     u8741:
  1527  002172  EFB1  F010         	goto	l7144
  1528  002176                     u8740:
  1529  002176                     
  1530                           ;main.c: 189:     for (j = 0; j < 100 ; j++ )
  1531  002176  0E00               	movlw	0
  1532  002178  0101               	movlb	1	; () banked
  1533  00217A  6F90               	movwf	(main@j+1)& (0+255),b
  1534  00217C  0E00               	movlw	0
  1535  00217E  6F8F               	movwf	main@j& (0+255),b
  1536  002180                     l7152:
  1537                           
  1538                           ; BSR set to: 1
  1539                           ;main.c: 190:      _delay((unsigned long)((1)*(12000000/4000.0)));
  1540  002180  0E04               	movlw	4
  1541  002182  0100               	movlb	0	; () banked
  1542  002184  6FD2               	movwf	??_main& (0+255),b
  1543  002186  0EE4               	movlw	228
  1544  002188                     u8877:
  1545  002188  2EE8               	decfsz	wreg,f,c
  1546  00218A  D7FE               	bra	u8877
  1547  00218C  2FD2               	decfsz	??_main& (0+255),f,b
  1548  00218E  D7FC               	bra	u8877
  1549  002190  F000               	nop	
  1550  002192  0101               	movlb	1	; () banked
  1551  002194  4B8F               	infsnz	main@j& (0+255),f,b
  1552  002196  2B90               	incf	(main@j+1)& (0+255),f,b
  1553  002198  BF90               	btfsc	(main@j+1)& (0+255),7,b
  1554  00219A  EFD8  F010         	goto	u8751
  1555  00219E  5190               	movf	(main@j+1)& (0+255),w,b
  1556  0021A0  E109               	bnz	u8750
  1557  0021A2  0E64               	movlw	100
  1558  0021A4  5D8F               	subwf	main@j& (0+255),w,b
  1559  0021A6  A0D8               	btfss	status,0,c
  1560  0021A8  EFD8  F010         	goto	u8751
  1561  0021AC  EFDA  F010         	goto	u8750
  1562  0021B0                     u8751:
  1563  0021B0  EFC0  F010         	goto	l7152
  1564  0021B4                     u8750:
  1565  0021B4                     
  1566                           ; BSR set to: 1
  1567                           ;main.c: 191:     }
  1568  0021B4  4B8D               	infsnz	main@i& (0+255),f,b
  1569  0021B6  2B8E               	incf	(main@i+1)& (0+255),f,b
  1570  0021B8                     
  1571                           ; BSR set to: 1
  1572  0021B8  BF8E               	btfsc	(main@i+1)& (0+255),7,b
  1573  0021BA  EFE8  F010         	goto	u8761
  1574  0021BE  518E               	movf	(main@i+1)& (0+255),w,b
  1575  0021C0  E109               	bnz	u8760
  1576  0021C2  0E0A               	movlw	10
  1577  0021C4  5D8D               	subwf	main@i& (0+255),w,b
  1578  0021C6  A0D8               	btfss	status,0,c
  1579  0021C8  EFE8  F010         	goto	u8761
  1580  0021CC  EFEA  F010         	goto	u8760
  1581  0021D0                     u8761:
  1582  0021D0  EFAE  F010         	goto	l7142
  1583  0021D4                     u8760:
  1584  0021D4                     l7160:
  1585  0021D4  ECE5  F01E         	call	_BusyXLCD	;wreg free
  1586  0021D8  0900               	iorlw	0
  1587  0021DA  A4D8               	btfss	status,2,c
  1588  0021DC  EFF2  F010         	goto	u8771
  1589  0021E0  EFF4  F010         	goto	u8770
  1590  0021E4                     u8771:
  1591  0021E4  EFEA  F010         	goto	l7160
  1592  0021E8                     u8770:
  1593  0021E8                     
  1594                           ;main.c: 193:             WriteCmdXLCD(0b00000001);
  1595  0021E8  0E01               	movlw	1
  1596  0021EA  EC09  F01D         	call	_WriteCmdXLCD
  1597  0021EE                     
  1598                           ;main.c: 200:     (INTCONbits.GIEH = 1);
  1599  0021EE  8EF2               	bsf	242,7,c	;volatile
  1600  0021F0                     
  1601                           ;main.c: 203:     (INTCONbits.GIEL = 1);
  1602  0021F0  8CF2               	bsf	242,6,c	;volatile
  1603                           
  1604                           ;main.c: 205:     INT1_SetInterruptHandler(start);
  1605  0021F2  0EE0               	movlw	low _start
  1606  0021F4  6E0E               	movwf	INT1_SetInterruptHandler@InterruptHandler^0,c
  1607  0021F6  0E3B               	movlw	high _start
  1608  0021F8  6E0F               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)^0,c
  1609  0021FA  EC1F  F01F         	call	_INT1_SetInterruptHandler	;wreg free
  1610                           
  1611                           ;main.c: 206:     INT0_SetInterruptHandler(emrgencia);
  1612  0021FE  0EAA               	movlw	low _emrgencia
  1613  002200  6E0E               	movwf	INT0_SetInterruptHandler@InterruptHandler^0,c
  1614  002202  0E3B               	movlw	high _emrgencia
  1615  002204  6E0F               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)^0,c
  1616  002206  EC24  F01F         	call	_INT0_SetInterruptHandler	;wreg free
  1617                           
  1618                           ;main.c: 208:     TMR1_SetInterruptHandler(convert_timer);
  1619  00220A  0E6A               	movlw	low _convert_timer
  1620  00220C  6E0E               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
  1621  00220E  0E3E               	movlw	high _convert_timer
  1622  002210  6E0F               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
  1623  002212  EC15  F01F         	call	_TMR1_SetInterruptHandler	;wreg free
  1624  002216                     l7168:
  1625                           
  1626                           ;main.c: 226:         if (write_flag) {
  1627  002216  0100               	movlb	0	; () banked
  1628  002218  51D4               	movf	_write_flag& (0+255),w,b	;volatile
  1629  00221A  B4D8               	btfsc	status,2,c
  1630  00221C  EF12  F011         	goto	u8781
  1631  002220  EF14  F011         	goto	u8780
  1632  002224                     u8781:
  1633  002224  EF5A  F011         	goto	l7192
  1634  002228                     u8780:
  1635  002228                     
  1636                           ; BSR set to: 0
  1637                           ;main.c: 227:             write_flag = 0;
  1638  002228  0E00               	movlw	0
  1639  00222A  6FD4               	movwf	_write_flag& (0+255),b	;volatile
  1640  00222C                     l7172:
  1641  00222C  ECE5  F01E         	call	_BusyXLCD	;wreg free
  1642  002230  0900               	iorlw	0
  1643  002232  A4D8               	btfss	status,2,c
  1644  002234  EF1E  F011         	goto	u8791
  1645  002238  EF20  F011         	goto	u8790
  1646  00223C                     u8791:
  1647  00223C  EF16  F011         	goto	l7172
  1648  002240                     u8790:
  1649  002240                     
  1650                           ;main.c: 230:             if (emerg_flag == 0) {
  1651  002240  0100               	movlb	0	; () banked
  1652  002242  51D6               	movf	_emerg_flag& (0+255),w,b	;volatile
  1653  002244  A4D8               	btfss	status,2,c
  1654  002246  EF27  F011         	goto	u8801
  1655  00224A  EF29  F011         	goto	u8800
  1656  00224E                     u8801:
  1657  00224E  EF47  F011         	goto	l7186
  1658  002252                     u8800:
  1659  002252                     
  1660                           ; BSR set to: 0
  1661                           ;main.c: 231:                 if (start_flag == 0) {
  1662  002252  51D5               	movf	_start_flag& (0+255),w,b	;volatile
  1663  002254  A4D8               	btfss	status,2,c
  1664  002256  EF2F  F011         	goto	u8811
  1665  00225A  EF31  F011         	goto	u8810
  1666  00225E                     u8811:
  1667  00225E  EF3C  F011         	goto	l7182
  1668  002262                     u8810:
  1669  002262                     
  1670                           ; BSR set to: 0
  1671                           ;main.c: 232:                     WriteCmdXLCD(0b10000000);
  1672  002262  0E80               	movlw	128
  1673  002264  EC09  F01D         	call	_WriteCmdXLCD
  1674  002268                     
  1675                           ;main.c: 233:                     putsXLCD("SISTEMA OFF             ");
  1676  002268  0E3A               	movlw	low STR_4
  1677  00226A  6E0F               	movwf	putsXLCD@buffer^0,c
  1678  00226C  0E06               	movlw	high STR_4
  1679  00226E  6E10               	movwf	(putsXLCD@buffer+1)^0,c
  1680  002270  EC35  F01B         	call	_putsXLCD	;wreg free
  1681                           
  1682                           ;main.c: 235:                 }
  1683  002274  EF5A  F011         	goto	l7192
  1684  002278                     l7182:
  1685                           
  1686                           ; BSR set to: 0
  1687                           ;main.c: 237:                     WriteCmdXLCD(0b10000000);
  1688  002278  0E80               	movlw	128
  1689  00227A  EC09  F01D         	call	_WriteCmdXLCD
  1690  00227E                     
  1691                           ;main.c: 238:                     putsXLCD("SISTEMA ON               ");
  1692  00227E  0E20               	movlw	low STR_5
  1693  002280  6E0F               	movwf	putsXLCD@buffer^0,c
  1694  002282  0E06               	movlw	high STR_5
  1695  002284  6E10               	movwf	(putsXLCD@buffer+1)^0,c
  1696  002286  EC35  F01B         	call	_putsXLCD	;wreg free
  1697  00228A  EF5A  F011         	goto	l7192
  1698  00228E                     l7186:
  1699                           
  1700                           ; BSR set to: 0
  1701                           ;main.c: 242:                 WriteCmdXLCD(0b10000000);
  1702  00228E  0E80               	movlw	128
  1703  002290  EC09  F01D         	call	_WriteCmdXLCD
  1704  002294                     l7188:
  1705  002294  ECE5  F01E         	call	_BusyXLCD	;wreg free
  1706  002298  0900               	iorlw	0
  1707  00229A  A4D8               	btfss	status,2,c
  1708  00229C  EF52  F011         	goto	u8821
  1709  0022A0  EF54  F011         	goto	u8820
  1710  0022A4                     u8821:
  1711  0022A4  EF4A  F011         	goto	l7188
  1712  0022A8                     u8820:
  1713  0022A8                     
  1714                           ;main.c: 244:                 putsXLCD("EMERGENCIA ATIVADA            ");
  1715  0022A8  0E01               	movlw	low STR_6
  1716  0022AA  6E0F               	movwf	putsXLCD@buffer^0,c
  1717  0022AC  0E06               	movlw	high STR_6
  1718  0022AE  6E10               	movwf	(putsXLCD@buffer+1)^0,c
  1719  0022B0  EC35  F01B         	call	_putsXLCD	;wreg free
  1720  0022B4                     l7192:
  1721                           
  1722                           ;main.c: 249:         if (adc_flag == 1) {
  1723  0022B4  044C               	decf	_adc_flag^0,w,c
  1724  0022B6  A4D8               	btfss	status,2,c
  1725  0022B8  EF60  F011         	goto	u8831
  1726  0022BC  EF62  F011         	goto	u8830
  1727  0022C0                     u8831:
  1728  0022C0  EF0B  F011         	goto	l7168
  1729  0022C4                     u8830:
  1730  0022C4                     
  1731                           ;main.c: 250:             float angulo= 0.1759530792*valor;
  1732  0022C4  C04D  F00E         	movff	_valor,___xxtofl@val
  1733  0022C8  C04E  F00F         	movff	_valor+1,___xxtofl@val+1
  1734  0022CC  0E00               	movlw	0
  1735  0022CE  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
  1736  0022D0  0EFF               	movlw	-1
  1737  0022D2  6E10               	movwf	(___xxtofl@val+2)^0,c
  1738  0022D4  6E11               	movwf	(___xxtofl@val+3)^0,c
  1739  0022D6  0E01               	movlw	1
  1740  0022D8  EC8A  F014         	call	___xxtofl
  1741  0022DC  C00E  F01C         	movff	?___xxtofl,___flmul@b
  1742  0022E0  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  1743  0022E4  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  1744  0022E8  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  1745  0022EC  0E0B               	movlw	11
  1746  0022EE  6E20               	movwf	___flmul@a^0,c
  1747  0022F0  0E2D               	movlw	45
  1748  0022F2  6E21               	movwf	(___flmul@a+1)^0,c
  1749  0022F4  0E34               	movlw	52
  1750  0022F6  6E22               	movwf	(___flmul@a+2)^0,c
  1751  0022F8  0E3E               	movlw	62
  1752  0022FA  6E23               	movwf	(___flmul@a+3)^0,c
  1753  0022FC  ECC5  F00D         	call	___flmul	;wreg free
  1754  002300  C01C  F189         	movff	?___flmul,main@angulo
  1755  002304  C01D  F18A         	movff	?___flmul+1,main@angulo+1
  1756  002308  C01E  F18B         	movff	?___flmul+2,main@angulo+2
  1757  00230C  C01F  F18C         	movff	?___flmul+3,main@angulo+3
  1758  002310                     
  1759                           ;main.c: 251:             char valor_analog[5];;main.c: 252:             sprintf(valor_a
      +                          nalog,"Deslocamento= %.2f   ", angulo);
  1760  002310  0E84               	movlw	low main@valor_analog
  1761  002312  0100               	movlb	0	; () banked
  1762  002314  6FC0               	movwf	sprintf@s& (0+255),b
  1763  002316  0E01               	movlw	high main@valor_analog
  1764  002318  6FC1               	movwf	(sprintf@s+1)& (0+255),b
  1765  00231A  0E6A               	movlw	low STR_7
  1766  00231C  6FC2               	movwf	sprintf@fmt& (0+255),b
  1767  00231E  0E06               	movlw	high STR_7
  1768  002320  6FC3               	movwf	(sprintf@fmt+1)& (0+255),b
  1769  002322  C189  F0C4         	movff	main@angulo,?_sprintf+4
  1770  002326  C18A  F0C5         	movff	main@angulo+1,?_sprintf+5
  1771  00232A  C18B  F0C6         	movff	main@angulo+2,?_sprintf+6
  1772  00232E  C18C  F0C7         	movff	main@angulo+3,?_sprintf+7
  1773  002332  EC2A  F01C         	call	_sprintf	;wreg free
  1774  002336                     
  1775                           ;main.c: 253:             WriteCmdXLCD(0b11000000);
  1776  002336  0EC0               	movlw	192
  1777  002338  EC09  F01D         	call	_WriteCmdXLCD
  1778  00233C                     l7200:
  1779  00233C  ECE5  F01E         	call	_BusyXLCD	;wreg free
  1780  002340  0900               	iorlw	0
  1781  002342  A4D8               	btfss	status,2,c
  1782  002344  EFA6  F011         	goto	u8841
  1783  002348  EFA8  F011         	goto	u8840
  1784  00234C                     u8841:
  1785  00234C  EF9E  F011         	goto	l7200
  1786  002350                     u8840:
  1787  002350                     
  1788                           ;main.c: 256:             putsXLCD(valor_analog);
  1789  002350  0E84               	movlw	low main@valor_analog
  1790  002352  6E0F               	movwf	putsXLCD@buffer^0,c
  1791  002354  0E01               	movlw	high main@valor_analog
  1792  002356  6E10               	movwf	(putsXLCD@buffer+1)^0,c
  1793  002358  EC35  F01B         	call	_putsXLCD	;wreg free
  1794  00235C                     
  1795                           ;main.c: 257:             adc_flag=0;
  1796  00235C  0E00               	movlw	0
  1797  00235E  6E4C               	movwf	_adc_flag^0,c
  1798  002360  EF0B  F011         	goto	l7168
  1799  002364  EF33  F000         	goto	start
  1800  002368                     __end_of_main:
  1801                           	opt callstack 0
  1802                           
  1803 ;; *************** function _sprintf *****************
  1804 ;; Defined at:
  1805 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  1806 ;; Parameters:    Size  Location     Type
  1807 ;;  s               2   96[BANK0 ] PTR unsigned char 
  1808 ;;		 -> main@valor_analog(5), 
  1809 ;;  fmt             2   98[BANK0 ] PTR const unsigned char 
  1810 ;;		 -> STR_7(22), 
  1811 ;; Auto vars:     Size  Location     Type
  1812 ;;  f               6  108[BANK0 ] struct _IO_FILE
  1813 ;;  ap              2  106[BANK0 ] PTR void [1]
  1814 ;;		 -> ?_sprintf(2), 
  1815 ;;  ret             2    0        int 
  1816 ;; Return value:  Size  Location     Type
  1817 ;;                  2   96[BANK0 ] int 
  1818 ;; Registers used:
  1819 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1820 ;; Tracked objects:
  1821 ;;		On entry : 0/0
  1822 ;;		On exit  : 0/0
  1823 ;;		Unchanged: 0/0
  1824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1825 ;;      Params:         0       8       0       0       0       0       0
  1826 ;;      Locals:         0      10       0       0       0       0       0
  1827 ;;      Temps:          0       0       0       0       0       0       0
  1828 ;;      Totals:         0      18       0       0       0       0       0
  1829 ;;Total ram usage:       18 bytes
  1830 ;; Hardware stack levels used:    1
  1831 ;; Hardware stack levels required when called:   16
  1832 ;; This function calls:
  1833 ;;		_vfprintf
  1834 ;; This function is called by:
  1835 ;;		_main
  1836 ;; This function uses a non-reentrant model
  1837 ;;
  1838                           
  1839                           	psect	text1
  1840  003854                     __ptext1:
  1841                           	opt callstack 0
  1842  003854                     _sprintf:
  1843                           	opt callstack 14
  1844  003854  0EC4               	movlw	low (?_sprintf+4)
  1845  003856  0100               	movlb	0	; () banked
  1846  003858  6FCA               	movwf	sprintf@ap& (0+255),b
  1847  00385A  0E00               	movlw	high (?_sprintf+4)
  1848  00385C  6FCB               	movwf	(sprintf@ap+1)& (0+255),b
  1849  00385E  C0C0  F0CC         	movff	sprintf@s,sprintf@f
  1850  003862  C0C1  F0CD         	movff	sprintf@s+1,sprintf@f+1
  1851  003866                     
  1852                           ; BSR set to: 0
  1853  003866  0E00               	movlw	0
  1854  003868  6FCF               	movwf	(sprintf@f+3)& (0+255),b
  1855  00386A  0E00               	movlw	0
  1856  00386C  6FCE               	movwf	(sprintf@f+2)& (0+255),b
  1857  00386E                     
  1858                           ; BSR set to: 0
  1859  00386E  0E00               	movlw	0
  1860  003870  6FD1               	movwf	(sprintf@f+5)& (0+255),b
  1861  003872  0E00               	movlw	0
  1862  003874  6FD0               	movwf	(sprintf@f+4)& (0+255),b
  1863  003876                     
  1864                           ; BSR set to: 0
  1865  003876  0ECC               	movlw	low sprintf@f
  1866  003878  6FBA               	movwf	vfprintf@fp& (0+255),b
  1867  00387A  0E00               	movlw	high sprintf@f
  1868  00387C  6FBB               	movwf	(vfprintf@fp+1)& (0+255),b
  1869  00387E  C0C2  F0BC         	movff	sprintf@fmt,vfprintf@fmt
  1870  003882  C0C3  F0BD         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1871  003886  0ECA               	movlw	low sprintf@ap
  1872  003888  6FBE               	movwf	vfprintf@ap& (0+255),b
  1873  00388A  0E00               	movlw	high sprintf@ap
  1874  00388C  6FBF               	movwf	(vfprintf@ap+1)& (0+255),b
  1875  00388E  EC6E  F01B         	call	_vfprintf	;wreg free
  1876  003892  0100               	movlb	0	; () banked
  1877  003894  51CE               	movf	(sprintf@f+2)& (0+255),w,b
  1878  003896  25C0               	addwf	sprintf@s& (0+255),w,b
  1879  003898  6ED9               	movwf	fsr2l,c
  1880  00389A  51CF               	movf	(sprintf@f+3)& (0+255),w,b
  1881  00389C  21C1               	addwfc	(sprintf@s+1)& (0+255),w,b
  1882  00389E  6EDA               	movwf	fsr2h,c
  1883  0038A0  0E00               	movlw	0
  1884  0038A2  6EDF               	movwf	indf2,c
  1885  0038A4                     
  1886                           ; BSR set to: 0
  1887  0038A4  0012               	return		;funcret
  1888  0038A6                     __end_of_sprintf:
  1889                           	opt callstack 0
  1890                           
  1891 ;; *************** function _vfprintf *****************
  1892 ;; Defined at:
  1893 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1894 ;; Parameters:    Size  Location     Type
  1895 ;;  fp              2   90[BANK0 ] PTR struct _IO_FILE
  1896 ;;		 -> sprintf@f(6), 
  1897 ;;  fmt             2   92[BANK0 ] PTR const unsigned char 
  1898 ;;		 -> STR_7(22), 
  1899 ;;  ap              2   94[BANK0 ] PTR PTR void 
  1900 ;;		 -> sprintf@ap(2), 
  1901 ;; Auto vars:     Size  Location     Type
  1902 ;;  cfmt            2   64[COMRAM] PTR unsigned char 
  1903 ;;		 -> STR_7(22), 
  1904 ;; Return value:  Size  Location     Type
  1905 ;;                  2   90[BANK0 ] int 
  1906 ;; Registers used:
  1907 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1908 ;; Tracked objects:
  1909 ;;		On entry : 0/0
  1910 ;;		On exit  : 0/0
  1911 ;;		Unchanged: 0/0
  1912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1913 ;;      Params:         0       6       0       0       0       0       0
  1914 ;;      Locals:         2       0       0       0       0       0       0
  1915 ;;      Temps:          0       0       0       0       0       0       0
  1916 ;;      Totals:         2       6       0       0       0       0       0
  1917 ;;Total ram usage:        8 bytes
  1918 ;; Hardware stack levels used:    1
  1919 ;; Hardware stack levels required when called:   15
  1920 ;; This function calls:
  1921 ;;		_vfpfcnvrt
  1922 ;; This function is called by:
  1923 ;;		_sprintf
  1924 ;; This function uses a non-reentrant model
  1925 ;;
  1926                           
  1927                           	psect	text2
  1928  0036DC                     __ptext2:
  1929                           	opt callstack 0
  1930  0036DC                     _vfprintf:
  1931                           	opt callstack 14
  1932  0036DC                     
  1933                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1934  0036DC  C0BC  F041         	movff	vfprintf@fmt,vfprintf@cfmt
  1935  0036E0  C0BD  F042         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1936  0036E4                     
  1937                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1938  0036E4  0E00               	movlw	0
  1939  0036E6  6E44               	movwf	(_nout+1)^0,c
  1940  0036E8  0E00               	movlw	0
  1941  0036EA  6E43               	movwf	_nout^0,c
  1942                           
  1943                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1944  0036EC  EF8C  F01B         	goto	l6858
  1945  0036F0                     l6856:
  1946                           
  1947                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1948  0036F0  C0BA  F0A4         	movff	vfprintf@fp,vfpfcnvrt@fp
  1949  0036F4  C0BB  F0A5         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1950  0036F8  0E41               	movlw	low vfprintf@cfmt
  1951  0036FA  0100               	movlb	0	; () banked
  1952  0036FC  6FA6               	movwf	vfpfcnvrt@fmt& (0+255),b
  1953  0036FE  0E00               	movlw	high vfprintf@cfmt
  1954  003700  6FA7               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1955  003702  C0BE  F0A8         	movff	vfprintf@ap,vfpfcnvrt@ap
  1956  003706  C0BF  F0A9         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1957  00370A  EC8F  F00B         	call	_vfpfcnvrt	;wreg free
  1958  00370E  0100               	movlb	0	; () banked
  1959  003710  51A4               	movf	?_vfpfcnvrt& (0+255),w,b
  1960  003712  2643               	addwf	_nout^0,f,c
  1961  003714  51A5               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1962  003716  2244               	addwfc	(_nout+1)^0,f,c
  1963  003718                     l6858:
  1964                           
  1965                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1966  003718  C041  FFF6         	movff	vfprintf@cfmt,tblptrl
  1967  00371C  C042  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1968  003720                     	if	0	;tblptru may be non-zero
  1969  003720                     	endif
  1970  003720                     	if	0	;tblptru may be non-zero
  1971  003720                     	endif
  1972  003720  0008               	tblrd		*
  1973  003722  50F5               	movf	tablat,w,c
  1974  003724  0900               	iorlw	0
  1975  003726  A4D8               	btfss	status,2,c
  1976  003728  EF98  F01B         	goto	u8301
  1977  00372C  EF9A  F01B         	goto	u8300
  1978  003730                     u8301:
  1979  003730  EF78  F01B         	goto	l6856
  1980  003734                     u8300:
  1981  003734                     
  1982                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1983  003734  C043  F0BA         	movff	_nout,?_vfprintf
  1984  003738  C044  F0BB         	movff	_nout+1,?_vfprintf+1
  1985  00373C  0012               	return		;funcret
  1986  00373E                     __end_of_vfprintf:
  1987                           	opt callstack 0
  1988                           
  1989 ;; *************** function _vfpfcnvrt *****************
  1990 ;; Defined at:
  1991 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1992 ;; Parameters:    Size  Location     Type
  1993 ;;  fp              2   68[BANK0 ] PTR struct _IO_FILE
  1994 ;;		 -> sprintf@f(6), 
  1995 ;;  fmt             2   70[BANK0 ] PTR PTR unsigned char 
  1996 ;;		 -> vfprintf@cfmt(2), 
  1997 ;;  ap              2   72[BANK0 ] PTR PTR void 
  1998 ;;		 -> sprintf@ap(2), 
  1999 ;; Auto vars:     Size  Location     Type
  2000 ;;  llu             8    0        unsigned long long 
  2001 ;;  ll              8    0        long long 
  2002 ;;  f               4   82[BANK0 ] long long 
  2003 ;;  ct              3   86[BANK0 ] unsigned char [3]
  2004 ;;  vp              3    0        PTR void 
  2005 ;;  cp              3    0        PTR unsigned char 
  2006 ;;  i               2    0        int 
  2007 ;;  done            2    0        int 
  2008 ;;  c               1   89[BANK0 ] unsigned char 
  2009 ;; Return value:  Size  Location     Type
  2010 ;;                  2   68[BANK0 ] int 
  2011 ;; Registers used:
  2012 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2013 ;; Tracked objects:
  2014 ;;		On entry : 0/0
  2015 ;;		On exit  : 0/0
  2016 ;;		Unchanged: 0/0
  2017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2018 ;;      Params:         0       6       0       0       0       0       0
  2019 ;;      Locals:         0      12       0       0       0       0       0
  2020 ;;      Temps:          0       4       0       0       0       0       0
  2021 ;;      Totals:         0      22       0       0       0       0       0
  2022 ;;Total ram usage:       22 bytes
  2023 ;; Hardware stack levels used:    1
  2024 ;; Hardware stack levels required when called:   14
  2025 ;; This function calls:
  2026 ;;		_atoi
  2027 ;;		_efgtoa
  2028 ;;		_fputc
  2029 ;;		_isdigit
  2030 ;;		_isupper
  2031 ;;		_strncmp
  2032 ;;		_tolower
  2033 ;; This function is called by:
  2034 ;;		_vfprintf
  2035 ;; This function uses a non-reentrant model
  2036 ;;
  2037                           
  2038                           	psect	text3
  2039  00171E                     __ptext3:
  2040                           	opt callstack 0
  2041  00171E                     _vfpfcnvrt:
  2042                           	opt callstack 14
  2043  00171E                     
  2044                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  2045  00171E  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2046  001722  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2047  001726  CFDE FFF6          	movff	postinc2,tblptrl
  2048  00172A  CFDD FFF7          	movff	postdec2,tblptrh
  2049  00172E                     	if	0	;tblptru may be non-zero
  2050  00172E                     	endif
  2051  00172E                     	if	0	;tblptru may be non-zero
  2052  00172E                     	endif
  2053  00172E  0008               	tblrd		*
  2054  001730  50F5               	movf	tablat,w,c
  2055  001732  0A25               	xorlw	37
  2056  001734  A4D8               	btfss	status,2,c
  2057  001736  EF9F  F00B         	goto	u8151
  2058  00173A  EFA1  F00B         	goto	u8150
  2059  00173E                     u8151:
  2060  00173E  EFA9  F00D         	goto	l6712
  2061  001742                     u8150:
  2062  001742                     
  2063                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  2064  001742  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2065  001746  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2066  00174A  2ADE               	incf	postinc2,f,c
  2067  00174C  0E00               	movlw	0
  2068  00174E  22DD               	addwfc	postdec2,f,c
  2069  001750                     
  2070                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  2071  001750  0E00               	movlw	0
  2072  001752  6E46               	movwf	(_width+1)^0,c
  2073  001754  0E00               	movlw	0
  2074  001756  6E45               	movwf	_width^0,c
  2075  001758  C045  F049         	movff	_width,_flags
  2076  00175C  C046  F04A         	movff	_width+1,_flags+1
  2077  001760                     
  2078                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  2079  001760  6847               	setf	_prec^0,c
  2080  001762  6848               	setf	(_prec+1)^0,c
  2081  001764                     
  2082                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  2083  001764  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2084  001768  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2085  00176C  CFDE FFF6          	movff	postinc2,tblptrl
  2086  001770  CFDD FFF7          	movff	postdec2,tblptrh
  2087  001774                     	if	0	;tblptru may be non-zero
  2088  001774                     	endif
  2089  001774                     	if	0	;tblptru may be non-zero
  2090  001774                     	endif
  2091  001774  0008               	tblrd		*
  2092  001776  50F5               	movf	tablat,w,c
  2093  001778  0A2E               	xorlw	46
  2094  00177A  A4D8               	btfss	status,2,c
  2095  00177C  EFC2  F00B         	goto	u8161
  2096  001780  EFC4  F00B         	goto	u8160
  2097  001784                     u8161:
  2098  001784  EF42  F00C         	goto	l6658
  2099  001788                     u8160:
  2100  001788                     
  2101                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  2102  001788  0E00               	movlw	0
  2103  00178A  6E48               	movwf	(_prec+1)^0,c
  2104  00178C  0E00               	movlw	0
  2105  00178E  6E47               	movwf	_prec^0,c
  2106  001790                     
  2107                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  2108  001790  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2109  001794  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2110  001798  2ADE               	incf	postinc2,f,c
  2111  00179A  0E00               	movlw	0
  2112  00179C  22DD               	addwfc	postdec2,f,c
  2113  00179E                     
  2114                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  2115  00179E  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2116  0017A2  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2117  0017A6  CFDE FFF6          	movff	postinc2,tblptrl
  2118  0017AA  CFDD FFF7          	movff	postdec2,tblptrh
  2119  0017AE                     	if	0	;tblptru may be non-zero
  2120  0017AE                     	endif
  2121  0017AE                     	if	0	;tblptru may be non-zero
  2122  0017AE                     	endif
  2123  0017AE  0008               	tblrd		*
  2124  0017B0  50F5               	movf	tablat,w,c
  2125  0017B2  0A2A               	xorlw	42
  2126  0017B4  A4D8               	btfss	status,2,c
  2127  0017B6  EFDF  F00B         	goto	u8171
  2128  0017BA  EFE1  F00B         	goto	u8170
  2129  0017BE                     u8171:
  2130  0017BE  EFFE  F00B         	goto	l6648
  2131  0017C2                     u8170:
  2132  0017C2                     
  2133                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  2134  0017C2  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2135  0017C6  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2136  0017CA  2ADE               	incf	postinc2,f,c
  2137  0017CC  0E00               	movlw	0
  2138  0017CE  22DD               	addwfc	postdec2,f,c
  2139                           
  2140                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2141  0017D0  C0A8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2142  0017D4  C0A9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2143  0017D8  CFDF F0AA          	movff	indf2,??_vfpfcnvrt
  2144  0017DC  0E02               	movlw	2
  2145  0017DE  26DE               	addwf	postinc2,f,c
  2146  0017E0  CFDF F0AB          	movff	indf2,??_vfpfcnvrt+1
  2147  0017E4  0E00               	movlw	0
  2148  0017E6  22DD               	addwfc	postdec2,f,c
  2149  0017E8  C0AA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2150  0017EC  C0AB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2151  0017F0  CFDE F047          	movff	postinc2,_prec
  2152  0017F4  CFDD F048          	movff	postdec2,_prec+1
  2153                           
  2154                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  2155  0017F8  EF42  F00C         	goto	l6658
  2156  0017FC                     l6648:
  2157                           
  2158                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  2159  0017FC  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2160  001800  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2161  001804  CFDE F015          	movff	postinc2,atoi@s
  2162  001808  CFDD F016          	movff	postdec2,atoi@s+1
  2163  00180C  EC64  F015         	call	_atoi	;wreg free
  2164  001810  C015  F047         	movff	?_atoi,_prec
  2165  001814  C016  F048         	movff	?_atoi+1,_prec+1
  2166                           
  2167                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2168  001818  EF15  F00C         	goto	l6652
  2169  00181C                     l6650:
  2170                           
  2171                           ; BSR set to: 0
  2172                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  2173  00181C  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2174  001820  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2175  001824  2ADE               	incf	postinc2,f,c
  2176  001826  0E00               	movlw	0
  2177  001828  22DD               	addwfc	postdec2,f,c
  2178  00182A                     l6652:
  2179  00182A  0ED0               	movlw	208
  2180  00182C  0100               	movlb	0	; () banked
  2181  00182E  6FAA               	movwf	??_vfpfcnvrt& (0+255),b
  2182  001830  0EFF               	movlw	255
  2183  001832  6FAB               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2184  001834  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2185  001838  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2186  00183C  CFDE FFF6          	movff	postinc2,tblptrl
  2187  001840  CFDD FFF7          	movff	postdec2,tblptrh
  2188  001844                     	if	0	;tblptru may be non-zero
  2189  001844                     	endif
  2190  001844                     	if	0	;tblptru may be non-zero
  2191  001844                     	endif
  2192  001844  0008               	tblrd		*
  2193  001846  50F5               	movf	tablat,w,c
  2194  001848  6FAC               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2195  00184A  6BAD               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2196  00184C  51AA               	movf	??_vfpfcnvrt& (0+255),w,b
  2197  00184E  27AC               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2198  001850  51AB               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2199  001852  23AD               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2200  001854  51AD               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2201  001856  E10A               	bnz	u8180
  2202  001858  0E0A               	movlw	10
  2203  00185A  5DAC               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2204  00185C  A0D8               	btfss	status,0,c
  2205  00185E  EF33  F00C         	goto	u8181
  2206  001862  EF36  F00C         	goto	u8180
  2207  001866                     u8181:
  2208  001866  0E01               	movlw	1
  2209  001868  EF37  F00C         	goto	u8190
  2210  00186C                     u8180:
  2211  00186C  0E00               	movlw	0
  2212  00186E                     u8190:
  2213  00186E  6FAE               	movwf	_vfpfcnvrt$1402& (0+255),b
  2214  001870  6BAF               	clrf	(_vfpfcnvrt$1402+1)& (0+255),b
  2215  001872                     
  2216                           ; BSR set to: 0
  2217  001872  51AE               	movf	_vfpfcnvrt$1402& (0+255),w,b
  2218  001874  11AF               	iorwf	(_vfpfcnvrt$1402+1)& (0+255),w,b
  2219  001876  A4D8               	btfss	status,2,c
  2220  001878  EF40  F00C         	goto	u8201
  2221  00187C  EF42  F00C         	goto	u8200
  2222  001880                     u8201:
  2223  001880  EF0E  F00C         	goto	l6650
  2224  001884                     u8200:
  2225  001884                     l6658:
  2226                           
  2227                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  2228  001884  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2229  001888  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2230  00188C  CFDE FFF6          	movff	postinc2,tblptrl
  2231  001890  CFDD FFF7          	movff	postdec2,tblptrh
  2232  001894                     	if	0	;tblptru may be non-zero
  2233  001894                     	endif
  2234  001894                     	if	0	;tblptru may be non-zero
  2235  001894                     	endif
  2236  001894  0008               	tblrd		*
  2237  001896  50F5               	movf	tablat,w,c
  2238  001898  6E14               	movwf	tolower@c^0,c
  2239  00189A  6A15               	clrf	(tolower@c+1)^0,c
  2240  00189C  EC9F  F01B         	call	_tolower	;wreg free
  2241  0018A0  5014               	movf	?_tolower^0,w,c
  2242  0018A2  0100               	movlb	0	; () banked
  2243  0018A4  6FB6               	movwf	vfpfcnvrt@ct& (0+255),b
  2244  0018A6                     
  2245                           ; BSR set to: 0
  2246                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  2247  0018A6  51B6               	movf	vfpfcnvrt@ct& (0+255),w,b
  2248  0018A8  B4D8               	btfsc	status,2,c
  2249  0018AA  EF59  F00C         	goto	u8211
  2250  0018AE  EF5B  F00C         	goto	u8210
  2251  0018B2                     u8211:
  2252  0018B2  EF95  F00C         	goto	l6668
  2253  0018B6                     u8210:
  2254  0018B6                     
  2255                           ; BSR set to: 0
  2256                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  2257  0018B6  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2258  0018BA  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2259  0018BE  CFDE F0AA          	movff	postinc2,??_vfpfcnvrt
  2260  0018C2  CFDD F0AB          	movff	postdec2,??_vfpfcnvrt+1
  2261  0018C6  0E01               	movlw	1
  2262  0018C8  27AA               	addwf	??_vfpfcnvrt& (0+255),f,b
  2263  0018CA  0E00               	movlw	0
  2264  0018CC  23AB               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2265  0018CE  C0AA  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2266  0018D2  C0AB  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2267  0018D6                     	if	0	;tblptru may be non-zero
  2268  0018D6                     	endif
  2269  0018D6                     	if	0	;tblptru may be non-zero
  2270  0018D6                     	endif
  2271  0018D6  0008               	tblrd		*
  2272  0018D8  50F5               	movf	tablat,w,c
  2273  0018DA  6E14               	movwf	tolower@c^0,c
  2274  0018DC  6A15               	clrf	(tolower@c+1)^0,c
  2275  0018DE  EC9F  F01B         	call	_tolower	;wreg free
  2276  0018E2  5014               	movf	?_tolower^0,w,c
  2277  0018E4  0100               	movlb	0	; () banked
  2278  0018E6  6FB7               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2279  0018E8                     
  2280                           ; BSR set to: 0
  2281                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  2282  0018E8  51B7               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2283  0018EA  B4D8               	btfsc	status,2,c
  2284  0018EC  EF7A  F00C         	goto	u8221
  2285  0018F0  EF7C  F00C         	goto	u8220
  2286  0018F4                     u8221:
  2287  0018F4  EF95  F00C         	goto	l6668
  2288  0018F8                     u8220:
  2289  0018F8                     
  2290                           ; BSR set to: 0
  2291                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  2292  0018F8  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2293  0018FC  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2294  001900  CFDE F0AA          	movff	postinc2,??_vfpfcnvrt
  2295  001904  CFDD F0AB          	movff	postdec2,??_vfpfcnvrt+1
  2296  001908  0E02               	movlw	2
  2297  00190A  27AA               	addwf	??_vfpfcnvrt& (0+255),f,b
  2298  00190C  0E00               	movlw	0
  2299  00190E  23AB               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2300  001910  C0AA  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2301  001914  C0AB  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2302  001918                     	if	0	;tblptru may be non-zero
  2303  001918                     	endif
  2304  001918                     	if	0	;tblptru may be non-zero
  2305  001918                     	endif
  2306  001918  0008               	tblrd		*
  2307  00191A  50F5               	movf	tablat,w,c
  2308  00191C  6E14               	movwf	tolower@c^0,c
  2309  00191E  6A15               	clrf	(tolower@c+1)^0,c
  2310  001920  EC9F  F01B         	call	_tolower	;wreg free
  2311  001924  5014               	movf	?_tolower^0,w,c
  2312  001926  0100               	movlb	0	; () banked
  2313  001928  6FB8               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2314  00192A                     l6668:
  2315                           
  2316                           ; BSR set to: 0
  2317                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  2318  00192A  0E66               	movlw	102
  2319  00192C  19B6               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2320  00192E  A4D8               	btfss	status,2,c
  2321  001930  EF9C  F00C         	goto	u8231
  2322  001934  EF9E  F00C         	goto	u8230
  2323  001938                     u8231:
  2324  001938  EFDE  F00C         	goto	l6680
  2325  00193C                     u8230:
  2326  00193C                     
  2327                           ; BSR set to: 0
  2328                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  2329  00193C  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2330  001940  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2331  001944  CFDE FFF6          	movff	postinc2,tblptrl
  2332  001948  CFDD FFF7          	movff	postdec2,tblptrh
  2333  00194C                     	if	0	;tblptru may be non-zero
  2334  00194C                     	endif
  2335  00194C                     	if	0	;tblptru may be non-zero
  2336  00194C                     	endif
  2337  00194C  0008               	tblrd		*
  2338  00194E  CFF5 F0B9          	movff	tablat,vfpfcnvrt@c
  2339  001952                     
  2340                           ; BSR set to: 0
  2341                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  2342  001952  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2343  001956  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2344  00195A  2ADE               	incf	postinc2,f,c
  2345  00195C  0E00               	movlw	0
  2346  00195E  22DD               	addwfc	postdec2,f,c
  2347  001960                     
  2348                           ; BSR set to: 0
  2349                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2350  001960  C0A8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2351  001964  C0A9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2352  001968  CFDF F0AA          	movff	indf2,??_vfpfcnvrt
  2353  00196C  0E04               	movlw	4
  2354  00196E  26DE               	addwf	postinc2,f,c
  2355  001970  CFDF F0AB          	movff	indf2,??_vfpfcnvrt+1
  2356  001974  0E00               	movlw	0
  2357  001976  22DD               	addwfc	postdec2,f,c
  2358  001978  C0AA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2359  00197C  C0AB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2360  001980  CFDE F0B2          	movff	postinc2,vfpfcnvrt@f
  2361  001984  CFDE F0B3          	movff	postinc2,vfpfcnvrt@f+1
  2362  001988  CFDE F0B4          	movff	postinc2,vfpfcnvrt@f+2
  2363  00198C  CFDE F0B5          	movff	postinc2,vfpfcnvrt@f+3
  2364  001990                     l6676:
  2365                           
  2366                           ; BSR set to: 0
  2367                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  2368  001990  C0A4  F060         	movff	vfpfcnvrt@fp,efgtoa@fp
  2369  001994  C0A5  F061         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2370  001998  C0B2  F062         	movff	vfpfcnvrt@f,efgtoa@f
  2371  00199C  C0B3  F063         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2372  0019A0  C0B4  F064         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2373  0019A4  C0B5  F065         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2374  0019A8  C0B9  F066         	movff	vfpfcnvrt@c,efgtoa@c
  2375  0019AC  EC56  F003         	call	_efgtoa	;wreg free
  2376  0019B0  C060  F0A4         	movff	?_efgtoa,?_vfpfcnvrt
  2377  0019B4  C061  F0A5         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2378  0019B8  EFC4  F00D         	goto	l723
  2379  0019BC                     l6680:
  2380                           
  2381                           ; BSR set to: 0
  2382                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2383  0019BC  0EB6               	movlw	low vfpfcnvrt@ct
  2384  0019BE  6E0E               	movwf	strncmp@_l^0,c
  2385  0019C0  0E00               	movlw	high vfpfcnvrt@ct
  2386  0019C2  6E0F               	movwf	(strncmp@_l+1)^0,c
  2387  0019C4  0EA4               	movlw	low STR_16
  2388  0019C6  6E10               	movwf	strncmp@_r^0,c
  2389  0019C8  0E06               	movlw	high STR_16
  2390  0019CA  6E11               	movwf	(strncmp@_r+1)^0,c
  2391  0019CC  0E00               	movlw	0
  2392  0019CE  6E13               	movwf	(strncmp@n+1)^0,c
  2393  0019D0  0E02               	movlw	2
  2394  0019D2  6E12               	movwf	strncmp@n^0,c
  2395  0019D4  ECB5  F018         	call	_strncmp	;wreg free
  2396  0019D8  500E               	movf	?_strncmp^0,w,c
  2397  0019DA  100F               	iorwf	(?_strncmp+1)^0,w,c
  2398  0019DC  A4D8               	btfss	status,2,c
  2399  0019DE  EFF3  F00C         	goto	u8241
  2400  0019E2  EFF5  F00C         	goto	u8240
  2401  0019E6                     u8241:
  2402  0019E6  EF71  F00D         	goto	l6696
  2403  0019EA                     u8240:
  2404  0019EA                     
  2405                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2406  0019EA  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2407  0019EE  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2408  0019F2  CFDE F0AA          	movff	postinc2,??_vfpfcnvrt
  2409  0019F6  CFDD F0AB          	movff	postdec2,??_vfpfcnvrt+1
  2410  0019FA  0E01               	movlw	1
  2411  0019FC  0100               	movlb	0	; () banked
  2412  0019FE  27AA               	addwf	??_vfpfcnvrt& (0+255),f,b
  2413  001A00  0E00               	movlw	0
  2414  001A02  23AB               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2415  001A04  C0AA  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2416  001A08  C0AB  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2417  001A0C                     	if	0	;tblptru may be non-zero
  2418  001A0C                     	endif
  2419  001A0C                     	if	0	;tblptru may be non-zero
  2420  001A0C                     	endif
  2421  001A0C  0008               	tblrd		*
  2422  001A0E  CFF5 F0B9          	movff	tablat,vfpfcnvrt@c
  2423  001A12  0EBF               	movlw	191
  2424  001A14  6FAA               	movwf	??_vfpfcnvrt& (0+255),b
  2425  001A16  0EFF               	movlw	255
  2426  001A18  6FAB               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2427  001A1A  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2428  001A1E  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2429  001A22  CFDE FFF6          	movff	postinc2,tblptrl
  2430  001A26  CFDD FFF7          	movff	postdec2,tblptrh
  2431  001A2A                     	if	0	;tblptru may be non-zero
  2432  001A2A                     	endif
  2433  001A2A                     	if	0	;tblptru may be non-zero
  2434  001A2A                     	endif
  2435  001A2A  0008               	tblrd		*
  2436  001A2C  50F5               	movf	tablat,w,c
  2437  001A2E  6FAC               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2438  001A30  6BAD               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2439  001A32  51AA               	movf	??_vfpfcnvrt& (0+255),w,b
  2440  001A34  27AC               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2441  001A36  51AB               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2442  001A38  23AD               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2443  001A3A  51AD               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2444  001A3C  E10A               	bnz	u8250
  2445  001A3E  0E1A               	movlw	26
  2446  001A40  5DAC               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2447  001A42  A0D8               	btfss	status,0,c
  2448  001A44  EF26  F00D         	goto	u8251
  2449  001A48  EF29  F00D         	goto	u8250
  2450  001A4C                     u8251:
  2451  001A4C  0E01               	movlw	1
  2452  001A4E  EF2A  F00D         	goto	u8260
  2453  001A52                     u8250:
  2454  001A52  0E00               	movlw	0
  2455  001A54                     u8260:
  2456  001A54  6FB0               	movwf	_vfpfcnvrt$1406& (0+255),b
  2457  001A56  6BB1               	clrf	(_vfpfcnvrt$1406+1)& (0+255),b
  2458  001A58                     
  2459                           ; BSR set to: 0
  2460  001A58  51B0               	movf	_vfpfcnvrt$1406& (0+255),w,b
  2461  001A5A  11B1               	iorwf	(_vfpfcnvrt$1406+1)& (0+255),w,b
  2462  001A5C  B4D8               	btfsc	status,2,c
  2463  001A5E  EF33  F00D         	goto	u8271
  2464  001A62  EF35  F00D         	goto	u8270
  2465  001A66                     u8271:
  2466  001A66  EF4F  F00D         	goto	l6690
  2467  001A6A                     u8270:
  2468  001A6A                     
  2469                           ; BSR set to: 0
  2470                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2471  001A6A  C0A8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2472  001A6E  C0A9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2473  001A72  CFDF F0AA          	movff	indf2,??_vfpfcnvrt
  2474  001A76  0E04               	movlw	4
  2475  001A78  26DE               	addwf	postinc2,f,c
  2476  001A7A  CFDF F0AB          	movff	indf2,??_vfpfcnvrt+1
  2477  001A7E  0E00               	movlw	0
  2478  001A80  22DD               	addwfc	postdec2,f,c
  2479  001A82  C0AA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2480  001A86  C0AB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2481  001A8A  CFDE F0B2          	movff	postinc2,vfpfcnvrt@f
  2482  001A8E  CFDE F0B3          	movff	postinc2,vfpfcnvrt@f+1
  2483  001A92  CFDE F0B4          	movff	postinc2,vfpfcnvrt@f+2
  2484  001A96  CFDE F0B5          	movff	postinc2,vfpfcnvrt@f+3
  2485                           
  2486                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  2487  001A9A  EF67  F00D         	goto	l730
  2488  001A9E                     l6690:
  2489                           
  2490                           ; BSR set to: 0
  2491                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2492  001A9E  C0A8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2493  001AA2  C0A9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2494  001AA6  CFDF F0AA          	movff	indf2,??_vfpfcnvrt
  2495  001AAA  0E04               	movlw	4
  2496  001AAC  26DE               	addwf	postinc2,f,c
  2497  001AAE  CFDF F0AB          	movff	indf2,??_vfpfcnvrt+1
  2498  001AB2  0E00               	movlw	0
  2499  001AB4  22DD               	addwfc	postdec2,f,c
  2500  001AB6  C0AA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2501  001ABA  C0AB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2502  001ABE  CFDE F0B2          	movff	postinc2,vfpfcnvrt@f
  2503  001AC2  CFDE F0B3          	movff	postinc2,vfpfcnvrt@f+1
  2504  001AC6  CFDE F0B4          	movff	postinc2,vfpfcnvrt@f+2
  2505  001ACA  CFDE F0B5          	movff	postinc2,vfpfcnvrt@f+3
  2506  001ACE                     l730:
  2507                           
  2508                           ; BSR set to: 0
  2509                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2510  001ACE  0E02               	movlw	2
  2511  001AD0  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2512  001AD4  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2513  001AD8  26DE               	addwf	postinc2,f,c
  2514  001ADA  0E00               	movlw	0
  2515  001ADC  22DD               	addwfc	postdec2,f,c
  2516  001ADE  EFC8  F00C         	goto	l6676
  2517  001AE2                     l6696:
  2518                           
  2519                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  2520  001AE2  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2521  001AE6  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2522  001AEA  CFDE FFF6          	movff	postinc2,tblptrl
  2523  001AEE  CFDD FFF7          	movff	postdec2,tblptrh
  2524  001AF2                     	if	0	;tblptru may be non-zero
  2525  001AF2                     	endif
  2526  001AF2                     	if	0	;tblptru may be non-zero
  2527  001AF2                     	endif
  2528  001AF2  0008               	tblrd		*
  2529  001AF4  50F5               	movf	tablat,w,c
  2530  001AF6  0A25               	xorlw	37
  2531  001AF8  A4D8               	btfss	status,2,c
  2532  001AFA  EF81  F00D         	goto	u8281
  2533  001AFE  EF83  F00D         	goto	u8280
  2534  001B02                     u8281:
  2535  001B02  EF9B  F00D         	goto	l6706
  2536  001B06                     u8280:
  2537  001B06                     
  2538                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  2539  001B06  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2540  001B0A  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2541  001B0E  2ADE               	incf	postinc2,f,c
  2542  001B10  0E00               	movlw	0
  2543  001B12  22DD               	addwfc	postdec2,f,c
  2544  001B14                     
  2545                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  2546  001B14  0E00               	movlw	0
  2547  001B16  6E0F               	movwf	(fputc@c+1)^0,c
  2548  001B18  0E25               	movlw	37
  2549  001B1A  6E0E               	movwf	fputc@c^0,c
  2550  001B1C  C0A4  F010         	movff	vfpfcnvrt@fp,fputc@fp
  2551  001B20  C0A5  F011         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2552  001B24  EC20  F019         	call	_fputc	;wreg free
  2553  001B28                     l6702:
  2554                           
  2555                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  2556  001B28  0E00               	movlw	0
  2557  001B2A  0100               	movlb	0	; () banked
  2558  001B2C  6FA5               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2559  001B2E  0E01               	movlw	1
  2560  001B30  6FA4               	movwf	?_vfpfcnvrt& (0+255),b
  2561  001B32  EFC4  F00D         	goto	l723
  2562  001B36                     l6706:
  2563                           
  2564                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  2565  001B36  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2566  001B3A  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2567  001B3E  2ADE               	incf	postinc2,f,c
  2568  001B40  0E00               	movlw	0
  2569  001B42  22DD               	addwfc	postdec2,f,c
  2570  001B44                     
  2571                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  2572  001B44  0E00               	movlw	0
  2573  001B46  0100               	movlb	0	; () banked
  2574  001B48  6FA5               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2575  001B4A  0E00               	movlw	0
  2576  001B4C  6FA4               	movwf	?_vfpfcnvrt& (0+255),b
  2577  001B4E  EFC4  F00D         	goto	l723
  2578  001B52                     l6712:
  2579                           
  2580                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  2581  001B52  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2582  001B56  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2583  001B5A  CFDE FFF6          	movff	postinc2,tblptrl
  2584  001B5E  CFDD FFF7          	movff	postdec2,tblptrh
  2585  001B62                     	if	0	;tblptru may be non-zero
  2586  001B62                     	endif
  2587  001B62                     	if	0	;tblptru may be non-zero
  2588  001B62                     	endif
  2589  001B62  0008               	tblrd		*
  2590  001B64  50F5               	movf	tablat,w,c
  2591  001B66  6E0E               	movwf	fputc@c^0,c
  2592  001B68  6A0F               	clrf	(fputc@c+1)^0,c
  2593  001B6A  C0A4  F010         	movff	vfpfcnvrt@fp,fputc@fp
  2594  001B6E  C0A5  F011         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2595  001B72  EC20  F019         	call	_fputc	;wreg free
  2596  001B76                     
  2597                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  2598  001B76  C0A6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2599  001B7A  C0A7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2600  001B7E  2ADE               	incf	postinc2,f,c
  2601  001B80  0E00               	movlw	0
  2602  001B82  22DD               	addwfc	postdec2,f,c
  2603  001B84  EF94  F00D         	goto	l6702
  2604  001B88                     l723:
  2605  001B88  0012               	return		;funcret
  2606  001B8A                     __end_of_vfpfcnvrt:
  2607                           	opt callstack 0
  2608                           
  2609 ;; *************** function _strncmp *****************
  2610 ;; Defined at:
  2611 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  2612 ;; Parameters:    Size  Location     Type
  2613 ;;  _l              2   13[COMRAM] PTR const unsigned char 
  2614 ;;		 -> vfpfcnvrt@ct(3), 
  2615 ;;  _r              2   15[COMRAM] PTR const unsigned char 
  2616 ;;		 -> STR_18(3), 
  2617 ;;  n               2   17[COMRAM] unsigned int 
  2618 ;; Auto vars:     Size  Location     Type
  2619 ;;  r               2   22[COMRAM] PTR const unsigned char 
  2620 ;;		 -> STR_18(3), 
  2621 ;;  l               2   20[COMRAM] PTR const unsigned char 
  2622 ;;		 -> vfpfcnvrt@ct(3), 
  2623 ;; Return value:  Size  Location     Type
  2624 ;;                  2   13[COMRAM] int 
  2625 ;; Registers used:
  2626 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2627 ;; Tracked objects:
  2628 ;;		On entry : 0/0
  2629 ;;		On exit  : 0/0
  2630 ;;		Unchanged: 0/0
  2631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2632 ;;      Params:         6       0       0       0       0       0       0
  2633 ;;      Locals:         4       0       0       0       0       0       0
  2634 ;;      Temps:          1       0       0       0       0       0       0
  2635 ;;      Totals:        11       0       0       0       0       0       0
  2636 ;;Total ram usage:       11 bytes
  2637 ;; Hardware stack levels used:    1
  2638 ;; Hardware stack levels required when called:    9
  2639 ;; This function calls:
  2640 ;;		Nothing
  2641 ;; This function is called by:
  2642 ;;		_vfpfcnvrt
  2643 ;; This function uses a non-reentrant model
  2644 ;;
  2645                           
  2646                           	psect	text4
  2647  00316A                     __ptext4:
  2648                           	opt callstack 0
  2649  00316A                     _strncmp:
  2650                           	opt callstack 18
  2651  00316A  C00E  F015         	movff	strncmp@_l,strncmp@l
  2652  00316E  C00F  F016         	movff	strncmp@_l+1,strncmp@l+1
  2653  003172  C010  F017         	movff	strncmp@_r,strncmp@r
  2654  003176  C011  F018         	movff	strncmp@_r+1,strncmp@r+1
  2655  00317A  0612               	decf	strncmp@n^0,f,c
  2656  00317C  A0D8               	btfss	status,0,c
  2657  00317E  0613               	decf	(strncmp@n+1)^0,f,c
  2658  003180  2812               	incf	strncmp@n^0,w,c
  2659  003182  E106               	bnz	u8101
  2660  003184  2813               	incf	(strncmp@n+1)^0,w,c
  2661  003186  A4D8               	btfss	status,2,c
  2662  003188  EFC8  F018         	goto	u8101
  2663  00318C  EFCA  F018         	goto	u8100
  2664  003190                     u8101:
  2665  003190  EFD7  F018         	goto	l6608
  2666  003194                     u8100:
  2667  003194  0E00               	movlw	0
  2668  003196  6E0F               	movwf	(?_strncmp+1)^0,c
  2669  003198  0E00               	movlw	0
  2670  00319A  6E0E               	movwf	?_strncmp^0,c
  2671  00319C  EF1F  F019         	goto	l1532
  2672  0031A0                     l6606:
  2673  0031A0  4A15               	infsnz	strncmp@l^0,f,c
  2674  0031A2  2A16               	incf	(strncmp@l+1)^0,f,c
  2675  0031A4  4A17               	infsnz	strncmp@r^0,f,c
  2676  0031A6  2A18               	incf	(strncmp@r+1)^0,f,c
  2677  0031A8  0612               	decf	strncmp@n^0,f,c
  2678  0031AA  A0D8               	btfss	status,0,c
  2679  0031AC  0613               	decf	(strncmp@n+1)^0,f,c
  2680  0031AE                     l6608:
  2681  0031AE  C015  FFD9         	movff	strncmp@l,fsr2l
  2682  0031B2  C016  FFDA         	movff	strncmp@l+1,fsr2h
  2683  0031B6  50DF               	movf	indf2,w,c
  2684  0031B8  B4D8               	btfsc	status,2,c
  2685  0031BA  EFE1  F018         	goto	u8111
  2686  0031BE  EFE3  F018         	goto	u8110
  2687  0031C2                     u8111:
  2688  0031C2  EF0E  F019         	goto	l6616
  2689  0031C6                     u8110:
  2690  0031C6  C017  FFF6         	movff	strncmp@r,tblptrl
  2691  0031CA  C018  FFF7         	movff	strncmp@r+1,tblptrh
  2692  0031CE                     	if	0	;tblptru may be non-zero
  2693  0031CE                     	endif
  2694  0031CE                     	if	0	;tblptru may be non-zero
  2695  0031CE                     	endif
  2696  0031CE  0008               	tblrd		*
  2697  0031D0  50F5               	movf	tablat,w,c
  2698  0031D2  0900               	iorlw	0
  2699  0031D4  B4D8               	btfsc	status,2,c
  2700  0031D6  EFEF  F018         	goto	u8121
  2701  0031DA  EFF1  F018         	goto	u8120
  2702  0031DE                     u8121:
  2703  0031DE  EF0E  F019         	goto	l6616
  2704  0031E2                     u8120:
  2705  0031E2  5012               	movf	strncmp@n^0,w,c
  2706  0031E4  1013               	iorwf	(strncmp@n+1)^0,w,c
  2707  0031E6  B4D8               	btfsc	status,2,c
  2708  0031E8  EFF8  F018         	goto	u8131
  2709  0031EC  EFFA  F018         	goto	u8130
  2710  0031F0                     u8131:
  2711  0031F0  EF0E  F019         	goto	l6616
  2712  0031F4                     u8130:
  2713  0031F4  C015  FFD9         	movff	strncmp@l,fsr2l
  2714  0031F8  C016  FFDA         	movff	strncmp@l+1,fsr2h
  2715  0031FC  50DF               	movf	indf2,w,c
  2716  0031FE  6E14               	movwf	??_strncmp^0,c
  2717  003200  C017  FFF6         	movff	strncmp@r,tblptrl
  2718  003204  C018  FFF7         	movff	strncmp@r+1,tblptrh
  2719  003208                     	if	0	;tblptru may be non-zero
  2720  003208                     	endif
  2721  003208                     	if	0	;tblptru may be non-zero
  2722  003208                     	endif
  2723  003208  0008               	tblrd		*
  2724  00320A  50F5               	movf	tablat,w,c
  2725  00320C  1814               	xorwf	??_strncmp^0,w,c
  2726  00320E  B4D8               	btfsc	status,2,c
  2727  003210  EF0C  F019         	goto	u8141
  2728  003214  EF0E  F019         	goto	u8140
  2729  003218                     u8141:
  2730  003218  EFD0  F018         	goto	l6606
  2731  00321C                     u8140:
  2732  00321C                     l6616:
  2733  00321C  C015  FFD9         	movff	strncmp@l,fsr2l
  2734  003220  C016  FFDA         	movff	strncmp@l+1,fsr2h
  2735  003224  50DF               	movf	indf2,w,c
  2736  003226  6E14               	movwf	??_strncmp^0,c
  2737  003228  C017  FFF6         	movff	strncmp@r,tblptrl
  2738  00322C  C018  FFF7         	movff	strncmp@r+1,tblptrh
  2739  003230                     	if	0	;tblptru may be non-zero
  2740  003230                     	endif
  2741  003230                     	if	0	;tblptru may be non-zero
  2742  003230                     	endif
  2743  003230  0008               	tblrd		*
  2744  003232  50F5               	movf	tablat,w,c
  2745  003234  5C14               	subwf	??_strncmp^0,w,c
  2746  003236  6E0E               	movwf	?_strncmp^0,c
  2747  003238  6A0F               	clrf	(?_strncmp+1)^0,c
  2748  00323A  A0D8               	btfss	status,0,c
  2749  00323C  060F               	decf	(?_strncmp+1)^0,f,c
  2750  00323E                     l1532:
  2751  00323E  0012               	return		;funcret
  2752  003240                     __end_of_strncmp:
  2753                           	opt callstack 0
  2754                           
  2755 ;; *************** function _efgtoa *****************
  2756 ;; Defined at:
  2757 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2758 ;; Parameters:    Size  Location     Type
  2759 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  2760 ;;		 -> sprintf@f(6), 
  2761 ;;  f               4    2[BANK0 ] PTR struct _IO_FILE
  2762 ;;  c               1    6[BANK0 ] unsigned char 
  2763 ;; Auto vars:     Size  Location     Type
  2764 ;;  u               4   64[BANK0 ] unsigned char 
  2765 ;;  g               4   56[BANK0 ] unsigned char 
  2766 ;;  l               4   50[BANK0 ] unsigned char 
  2767 ;;  h               4   46[BANK0 ] unsigned char 
  2768 ;;  ou              4   12[BANK0 ] unsigned char 
  2769 ;;  n               2   62[BANK0 ] int 
  2770 ;;  e               2   60[BANK0 ] int 
  2771 ;;  i               2   54[BANK0 ] int 
  2772 ;;  w               2   43[BANK0 ] int 
  2773 ;;  p               2   40[BANK0 ] int 
  2774 ;;  sign            2   38[BANK0 ] int 
  2775 ;;  d               2   36[BANK0 ] int 
  2776 ;;  ne              2   34[BANK0 ] int 
  2777 ;;  m               2   32[BANK0 ] int 
  2778 ;;  pp              2   30[BANK0 ] int 
  2779 ;;  t               2   28[BANK0 ] int 
  2780 ;;  mode            1   45[BANK0 ] unsigned char 
  2781 ;;  nmode           1   42[BANK0 ] unsigned char 
  2782 ;; Return value:  Size  Location     Type
  2783 ;;                  2    0[BANK0 ] int 
  2784 ;; Registers used:
  2785 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2786 ;; Tracked objects:
  2787 ;;		On entry : 0/0
  2788 ;;		On exit  : 0/0
  2789 ;;		Unchanged: 0/0
  2790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2791 ;;      Params:         0       7       0       0       0       0       0
  2792 ;;      Locals:         0      56       0       0       0       0       0
  2793 ;;      Temps:          0       5       0       0       0       0       0
  2794 ;;      Totals:         0      68       0       0       0       0       0
  2795 ;;Total ram usage:       68 bytes
  2796 ;; Hardware stack levels used:    1
  2797 ;; Hardware stack levels required when called:   13
  2798 ;; This function calls:
  2799 ;;		___awdiv
  2800 ;;		___awmod
  2801 ;;		___fladd
  2802 ;;		___fldiv
  2803 ;;		___fleq
  2804 ;;		___flge
  2805 ;;		___flmul
  2806 ;;		___flneg
  2807 ;;		___flsub
  2808 ;;		___fltol
  2809 ;;		___fpclassifyf
  2810 ;;		_floorf
  2811 ;;		_isupper
  2812 ;;		_pad
  2813 ;;		_strcpy
  2814 ;;		_tolower
  2815 ;; This function is called by:
  2816 ;;		_vfpfcnvrt
  2817 ;; This function uses a non-reentrant model
  2818 ;;
  2819                           
  2820                           	psect	text5
  2821  0006AC                     __ptext5:
  2822                           	opt callstack 0
  2823  0006AC                     _efgtoa:
  2824                           	opt callstack 14
  2825  0006AC                     
  2826                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.10\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  2827  0006AC  0E00               	movlw	0
  2828  0006AE  0100               	movlb	0	; () banked
  2829  0006B0  6F87               	movwf	(efgtoa@sign+1)& (0+255),b
  2830  0006B2  0E00               	movlw	0
  2831  0006B4  6F86               	movwf	efgtoa@sign& (0+255),b
  2832  0006B6                     
  2833                           ; BSR set to: 0
  2834                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  2835  0006B6  C062  F098         	movff	efgtoa@f,efgtoa@g
  2836  0006BA  C063  F099         	movff	efgtoa@f+1,efgtoa@g+1
  2837  0006BE  C064  F09A         	movff	efgtoa@f+2,efgtoa@g+2
  2838  0006C2  C065  F09B         	movff	efgtoa@f+3,efgtoa@g+3
  2839  0006C6                     
  2840                           ; BSR set to: 0
  2841                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  2842  0006C6  BF9B               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2843  0006C8  EF6A  F003         	goto	u7510
  2844  0006CC  EF68  F003         	goto	u7511
  2845  0006D0                     u7511:
  2846  0006D0  EF80  F003         	goto	l6270
  2847  0006D4                     u7510:
  2848  0006D4                     
  2849                           ; BSR set to: 0
  2850                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  2851  0006D4  0E00               	movlw	0
  2852  0006D6  6F87               	movwf	(efgtoa@sign+1)& (0+255),b
  2853  0006D8  0E01               	movlw	1
  2854  0006DA  6F86               	movwf	efgtoa@sign& (0+255),b
  2855  0006DC                     
  2856                           ; BSR set to: 0
  2857                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  2858  0006DC  C098  F00E         	movff	efgtoa@g,___flneg@f1
  2859  0006E0  C099  F00F         	movff	efgtoa@g+1,___flneg@f1+1
  2860  0006E4  C09A  F010         	movff	efgtoa@g+2,___flneg@f1+2
  2861  0006E8  C09B  F011         	movff	efgtoa@g+3,___flneg@f1+3
  2862  0006EC  EC82  F01D         	call	___flneg	;wreg free
  2863  0006F0  C00E  F098         	movff	?___flneg,efgtoa@g
  2864  0006F4  C00F  F099         	movff	?___flneg+1,efgtoa@g+1
  2865  0006F8  C010  F09A         	movff	?___flneg+2,efgtoa@g+2
  2866  0006FC  C011  F09B         	movff	?___flneg+3,efgtoa@g+3
  2867  000700                     l6270:
  2868                           
  2869                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  2870  000700  0E00               	movlw	0
  2871  000702  0100               	movlb	0	; () banked
  2872  000704  6F9F               	movwf	(efgtoa@n+1)& (0+255),b
  2873  000706  0E00               	movlw	0
  2874  000708  6F9E               	movwf	efgtoa@n& (0+255),b
  2875  00070A                     
  2876                           ; BSR set to: 0
  2877                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  2878  00070A  C045  F08B         	movff	_width,efgtoa@w
  2879  00070E  C046  F08C         	movff	_width+1,efgtoa@w+1
  2880  000712                     
  2881                           ; BSR set to: 0
  2882                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  2883  000712  5186               	movf	efgtoa@sign& (0+255),w,b
  2884  000714  1187               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2885  000716  A4D8               	btfss	status,2,c
  2886  000718  EF90  F003         	goto	u7521
  2887  00071C  EF92  F003         	goto	u7520
  2888  000720                     u7521:
  2889  000720  EF99  F003         	goto	l6278
  2890  000724                     u7520:
  2891  000724                     
  2892                           ; BSR set to: 0
  2893  000724  A449               	btfss	_flags^0,2,c
  2894  000726  EF97  F003         	goto	u7531
  2895  00072A  EF99  F003         	goto	u7530
  2896  00072E                     u7531:
  2897  00072E  EFB3  F003         	goto	l6290
  2898  000732                     u7530:
  2899  000732                     l6278:
  2900                           
  2901                           ; BSR set to: 0
  2902                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  2903  000732  5186               	movf	efgtoa@sign& (0+255),w,b
  2904  000734  1187               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2905  000736  A4D8               	btfss	status,2,c
  2906  000738  EFA0  F003         	goto	u7541
  2907  00073C  EFA2  F003         	goto	u7540
  2908  000740                     u7541:
  2909  000740  EFA8  F003         	goto	l6282
  2910  000744                     u7540:
  2911  000744                     
  2912                           ; BSR set to: 0
  2913  000744  0E00               	movlw	0
  2914  000746  6F71               	movwf	(_efgtoa$1376+1)& (0+255),b
  2915  000748  0E2B               	movlw	43
  2916  00074A  6F70               	movwf	_efgtoa$1376& (0+255),b
  2917  00074C  EFAC  F003         	goto	l6284
  2918  000750                     l6282:
  2919                           
  2920                           ; BSR set to: 0
  2921  000750  0E00               	movlw	0
  2922  000752  6F71               	movwf	(_efgtoa$1376+1)& (0+255),b
  2923  000754  0E2D               	movlw	45
  2924  000756  6F70               	movwf	_efgtoa$1376& (0+255),b
  2925  000758                     l6284:
  2926                           
  2927                           ; BSR set to: 0
  2928  000758  C070  F10A         	movff	_efgtoa$1376,_dbuf
  2929  00075C                     
  2930                           ; BSR set to: 0
  2931                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  2932  00075C  4B9E               	infsnz	efgtoa@n& (0+255),f,b
  2933  00075E  2B9F               	incf	(efgtoa@n+1)& (0+255),f,b
  2934  000760                     
  2935                           ; BSR set to: 0
  2936                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  2937  000760  078B               	decf	efgtoa@w& (0+255),f,b
  2938  000762  A0D8               	btfss	status,0,c
  2939  000764  078C               	decf	(efgtoa@w+1)& (0+255),f,b
  2940  000766                     l6290:
  2941                           
  2942                           ; BSR set to: 0
  2943                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2944  000766  C098  F00E         	movff	efgtoa@g,___fpclassifyf@x
  2945  00076A  C099  F00F         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2946  00076E  C09A  F010         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2947  000772  C09B  F011         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2948  000776  EC36  F018         	call	___fpclassifyf	;wreg free
  2949  00077A  040E               	decf	?___fpclassifyf^0,w,c
  2950  00077C  100F               	iorwf	(?___fpclassifyf+1)^0,w,c
  2951  00077E  A4D8               	btfss	status,2,c
  2952  000780  EFC4  F003         	goto	u7551
  2953  000784  EFC6  F003         	goto	u7550
  2954  000788                     u7551:
  2955  000788  EF1D  F004         	goto	l6308
  2956  00078C                     u7550:
  2957  00078C  0EBF               	movlw	191
  2958  00078E  0100               	movlb	0	; () banked
  2959  000790  6F67               	movwf	??_efgtoa& (0+255),b
  2960  000792  0EFF               	movlw	255
  2961  000794  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  2962  000796  5166               	movf	efgtoa@c& (0+255),w,b
  2963  000798  6F69               	movwf	(??_efgtoa+2)& (0+255),b
  2964  00079A  6B6A               	clrf	(??_efgtoa+3)& (0+255),b
  2965  00079C  5167               	movf	??_efgtoa& (0+255),w,b
  2966  00079E  2769               	addwf	(??_efgtoa+2)& (0+255),f,b
  2967  0007A0  5168               	movf	(??_efgtoa+1)& (0+255),w,b
  2968  0007A2  236A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2969  0007A4  516A               	movf	(??_efgtoa+3)& (0+255),w,b
  2970  0007A6  E10A               	bnz	u7560
  2971  0007A8  0E1A               	movlw	26
  2972  0007AA  5D69               	subwf	(??_efgtoa+2)& (0+255),w,b
  2973  0007AC  A0D8               	btfss	status,0,c
  2974  0007AE  EFDB  F003         	goto	u7561
  2975  0007B2  EFDE  F003         	goto	u7560
  2976  0007B6                     u7561:
  2977  0007B6  0E01               	movlw	1
  2978  0007B8  EFDF  F003         	goto	u7570
  2979  0007BC                     u7560:
  2980  0007BC  0E00               	movlw	0
  2981  0007BE                     u7570:
  2982  0007BE  6F72               	movwf	_efgtoa$1377& (0+255),b
  2983  0007C0  6B73               	clrf	(_efgtoa$1377+1)& (0+255),b
  2984  0007C2                     
  2985                           ; BSR set to: 0
  2986  0007C2  5172               	movf	_efgtoa$1377& (0+255),w,b
  2987  0007C4  1173               	iorwf	(_efgtoa$1377+1)& (0+255),w,b
  2988  0007C6  B4D8               	btfsc	status,2,c
  2989  0007C8  EFE8  F003         	goto	u7581
  2990  0007CC  EFEA  F003         	goto	u7580
  2991  0007D0                     u7581:
  2992  0007D0  EFF8  F003         	goto	l6300
  2993  0007D4                     u7580:
  2994  0007D4                     
  2995                           ; BSR set to: 0
  2996                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  2997  0007D4  0E0A               	movlw	low _dbuf
  2998  0007D6  259E               	addwf	efgtoa@n& (0+255),w,b
  2999  0007D8  6E0E               	movwf	strcpy@dest^0,c
  3000  0007DA  0E01               	movlw	high _dbuf
  3001  0007DC  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3002  0007DE  6E0F               	movwf	(strcpy@dest+1)^0,c
  3003  0007E0  0E94               	movlw	low STR_8
  3004  0007E2  6E10               	movwf	strcpy@src^0,c
  3005  0007E4  0E06               	movlw	high STR_8
  3006  0007E6  6E11               	movwf	(strcpy@src+1)^0,c
  3007  0007E8  ECCF  F01B         	call	_strcpy	;wreg free
  3008                           
  3009                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  3010  0007EC  EF04  F004         	goto	l6302
  3011  0007F0                     l6300:
  3012                           
  3013                           ; BSR set to: 0
  3014                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  3015  0007F0  0E0A               	movlw	low _dbuf
  3016  0007F2  259E               	addwf	efgtoa@n& (0+255),w,b
  3017  0007F4  6E0E               	movwf	strcpy@dest^0,c
  3018  0007F6  0E01               	movlw	high _dbuf
  3019  0007F8  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3020  0007FA  6E0F               	movwf	(strcpy@dest+1)^0,c
  3021  0007FC  0E9C               	movlw	low STR_9
  3022  0007FE  6E10               	movwf	strcpy@src^0,c
  3023  000800  0E06               	movlw	high STR_9
  3024  000802  6E11               	movwf	(strcpy@src+1)^0,c
  3025  000804  ECCF  F01B         	call	_strcpy	;wreg free
  3026  000808                     l6302:
  3027                           
  3028                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  3029  000808  0100               	movlb	0	; () banked
  3030  00080A  0EFD               	movlw	253
  3031  00080C  278B               	addwf	efgtoa@w& (0+255),f,b
  3032  00080E  0EFF               	movlw	255
  3033  000810  238C               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3034  000812                     l6304:
  3035                           
  3036                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  3037  000812  C060  F01E         	movff	efgtoa@fp,pad@fp
  3038  000816  C061  F01F         	movff	efgtoa@fp+1,pad@fp+1
  3039  00081A  0E0A               	movlw	low _dbuf
  3040  00081C  6E20               	movwf	pad@buf^0,c
  3041  00081E  0E01               	movlw	high _dbuf
  3042  000820  6E21               	movwf	(pad@buf+1)^0,c
  3043  000822  C08B  F022         	movff	efgtoa@w,pad@p
  3044  000826  C08C  F023         	movff	efgtoa@w+1,pad@p+1
  3045  00082A  ECE7  F019         	call	_pad	;wreg free
  3046  00082E  C01E  F060         	movff	?_pad,?_efgtoa
  3047  000832  C01F  F061         	movff	?_pad+1,?_efgtoa+1
  3048  000836  EF2E  F009         	goto	l633
  3049  00083A                     l6308:
  3050                           
  3051                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3052  00083A  C098  F00E         	movff	efgtoa@g,___fpclassifyf@x
  3053  00083E  C099  F00F         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3054  000842  C09A  F010         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3055  000846  C09B  F011         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3056  00084A  EC36  F018         	call	___fpclassifyf	;wreg free
  3057  00084E  500E               	movf	?___fpclassifyf^0,w,c
  3058  000850  100F               	iorwf	(?___fpclassifyf+1)^0,w,c
  3059  000852  A4D8               	btfss	status,2,c
  3060  000854  EF2E  F004         	goto	u7591
  3061  000858  EF30  F004         	goto	u7590
  3062  00085C                     u7591:
  3063  00085C  EF70  F004         	goto	l6326
  3064  000860                     u7590:
  3065  000860  0EBF               	movlw	191
  3066  000862  0100               	movlb	0	; () banked
  3067  000864  6F67               	movwf	??_efgtoa& (0+255),b
  3068  000866  0EFF               	movlw	255
  3069  000868  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  3070  00086A  5166               	movf	efgtoa@c& (0+255),w,b
  3071  00086C  6F69               	movwf	(??_efgtoa+2)& (0+255),b
  3072  00086E  6B6A               	clrf	(??_efgtoa+3)& (0+255),b
  3073  000870  5167               	movf	??_efgtoa& (0+255),w,b
  3074  000872  2769               	addwf	(??_efgtoa+2)& (0+255),f,b
  3075  000874  5168               	movf	(??_efgtoa+1)& (0+255),w,b
  3076  000876  236A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3077  000878  516A               	movf	(??_efgtoa+3)& (0+255),w,b
  3078  00087A  E10A               	bnz	u7600
  3079  00087C  0E1A               	movlw	26
  3080  00087E  5D69               	subwf	(??_efgtoa+2)& (0+255),w,b
  3081  000880  A0D8               	btfss	status,0,c
  3082  000882  EF45  F004         	goto	u7601
  3083  000886  EF48  F004         	goto	u7600
  3084  00088A                     u7601:
  3085  00088A  0E01               	movlw	1
  3086  00088C  EF49  F004         	goto	u7610
  3087  000890                     u7600:
  3088  000890  0E00               	movlw	0
  3089  000892                     u7610:
  3090  000892  6F74               	movwf	_efgtoa$1382& (0+255),b
  3091  000894  6B75               	clrf	(_efgtoa$1382+1)& (0+255),b
  3092  000896                     
  3093                           ; BSR set to: 0
  3094  000896  5174               	movf	_efgtoa$1382& (0+255),w,b
  3095  000898  1175               	iorwf	(_efgtoa$1382+1)& (0+255),w,b
  3096  00089A  B4D8               	btfsc	status,2,c
  3097  00089C  EF52  F004         	goto	u7621
  3098  0008A0  EF54  F004         	goto	u7620
  3099  0008A4                     u7621:
  3100  0008A4  EF62  F004         	goto	l6318
  3101  0008A8                     u7620:
  3102  0008A8                     
  3103                           ; BSR set to: 0
  3104                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  3105  0008A8  0E0A               	movlw	low _dbuf
  3106  0008AA  259E               	addwf	efgtoa@n& (0+255),w,b
  3107  0008AC  6E0E               	movwf	strcpy@dest^0,c
  3108  0008AE  0E01               	movlw	high _dbuf
  3109  0008B0  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3110  0008B2  6E0F               	movwf	(strcpy@dest+1)^0,c
  3111  0008B4  0E98               	movlw	low STR_12
  3112  0008B6  6E10               	movwf	strcpy@src^0,c
  3113  0008B8  0E06               	movlw	high STR_12
  3114  0008BA  6E11               	movwf	(strcpy@src+1)^0,c
  3115  0008BC  ECCF  F01B         	call	_strcpy	;wreg free
  3116                           
  3117                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  3118  0008C0  EF04  F004         	goto	l6302
  3119  0008C4                     l6318:
  3120                           
  3121                           ; BSR set to: 0
  3122                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  3123  0008C4  0E0A               	movlw	low _dbuf
  3124  0008C6  259E               	addwf	efgtoa@n& (0+255),w,b
  3125  0008C8  6E0E               	movwf	strcpy@dest^0,c
  3126  0008CA  0E01               	movlw	high _dbuf
  3127  0008CC  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3128  0008CE  6E0F               	movwf	(strcpy@dest+1)^0,c
  3129  0008D0  0EA0               	movlw	low STR_13
  3130  0008D2  6E10               	movwf	strcpy@src^0,c
  3131  0008D4  0E06               	movlw	high STR_13
  3132  0008D6  6E11               	movwf	(strcpy@src+1)^0,c
  3133  0008D8  ECCF  F01B         	call	_strcpy	;wreg free
  3134  0008DC  EF04  F004         	goto	l6302
  3135  0008E0                     l6326:
  3136                           
  3137                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  3138  0008E0  0E00               	movlw	0
  3139  0008E2  0100               	movlb	0	; () banked
  3140  0008E4  6FA0               	movwf	efgtoa@u& (0+255),b
  3141  0008E6  0E00               	movlw	0
  3142  0008E8  6FA1               	movwf	(efgtoa@u+1)& (0+255),b
  3143  0008EA  0E80               	movlw	128
  3144  0008EC  6FA2               	movwf	(efgtoa@u+2)& (0+255),b
  3145  0008EE  0E3F               	movlw	63
  3146  0008F0  6FA3               	movwf	(efgtoa@u+3)& (0+255),b
  3147                           
  3148                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  3149  0008F2  0E00               	movlw	0
  3150  0008F4  6F9D               	movwf	(efgtoa@e+1)& (0+255),b
  3151  0008F6  0E00               	movlw	0
  3152  0008F8  6F9C               	movwf	efgtoa@e& (0+255),b
  3153  0008FA                     
  3154                           ; BSR set to: 0
  3155                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  3156  0008FA  C098  F00E         	movff	efgtoa@g,___fleq@ff1
  3157  0008FE  C099  F00F         	movff	efgtoa@g+1,___fleq@ff1+1
  3158  000902  C09A  F010         	movff	efgtoa@g+2,___fleq@ff1+2
  3159  000906  C09B  F011         	movff	efgtoa@g+3,___fleq@ff1+3
  3160  00090A  0E00               	movlw	0
  3161  00090C  6E12               	movwf	___fleq@ff2^0,c
  3162  00090E  0E00               	movlw	0
  3163  000910  6E13               	movwf	(___fleq@ff2+1)^0,c
  3164  000912  0E00               	movlw	0
  3165  000914  6E14               	movwf	(___fleq@ff2+2)^0,c
  3166  000916  0E00               	movlw	0
  3167  000918  6E15               	movwf	(___fleq@ff2+3)^0,c
  3168  00091A  ECA0  F01A         	call	___fleq	;wreg free
  3169  00091E  B0D8               	btfsc	status,0,c
  3170  000920  EF94  F004         	goto	u7631
  3171  000924  EF96  F004         	goto	u7630
  3172  000928                     u7631:
  3173  000928  EF19  F005         	goto	l6344
  3174  00092C                     u7630:
  3175  00092C  EFB5  F004         	goto	l6336
  3176  000930                     l6332:
  3177                           
  3178                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  3179  000930  C0A0  F01C         	movff	efgtoa@u,___flmul@b
  3180  000934  C0A1  F01D         	movff	efgtoa@u+1,___flmul@b+1
  3181  000938  C0A2  F01E         	movff	efgtoa@u+2,___flmul@b+2
  3182  00093C  C0A3  F01F         	movff	efgtoa@u+3,___flmul@b+3
  3183  000940  0E00               	movlw	0
  3184  000942  6E20               	movwf	___flmul@a^0,c
  3185  000944  0E00               	movlw	0
  3186  000946  6E21               	movwf	(___flmul@a+1)^0,c
  3187  000948  0E20               	movlw	32
  3188  00094A  6E22               	movwf	(___flmul@a+2)^0,c
  3189  00094C  0E41               	movlw	65
  3190  00094E  6E23               	movwf	(___flmul@a+3)^0,c
  3191  000950  ECC5  F00D         	call	___flmul	;wreg free
  3192  000954  C01C  F0A0         	movff	?___flmul,efgtoa@u
  3193  000958  C01D  F0A1         	movff	?___flmul+1,efgtoa@u+1
  3194  00095C  C01E  F0A2         	movff	?___flmul+2,efgtoa@u+2
  3195  000960  C01F  F0A3         	movff	?___flmul+3,efgtoa@u+3
  3196  000964                     
  3197                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  3198  000964  0100               	movlb	0	; () banked
  3199  000966  4B9C               	infsnz	efgtoa@e& (0+255),f,b
  3200  000968  2B9D               	incf	(efgtoa@e+1)& (0+255),f,b
  3201  00096A                     l6336:
  3202                           
  3203                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  3204  00096A  C098  F035         	movff	efgtoa@g,___flge@ff1
  3205  00096E  C099  F036         	movff	efgtoa@g+1,___flge@ff1+1
  3206  000972  C09A  F037         	movff	efgtoa@g+2,___flge@ff1+2
  3207  000976  C09B  F038         	movff	efgtoa@g+3,___flge@ff1+3
  3208  00097A  0E00               	movlw	0
  3209  00097C  6E20               	movwf	___flmul@a^0,c
  3210  00097E  0E00               	movlw	0
  3211  000980  6E21               	movwf	(___flmul@a+1)^0,c
  3212  000982  0E20               	movlw	32
  3213  000984  6E22               	movwf	(___flmul@a+2)^0,c
  3214  000986  0E41               	movlw	65
  3215  000988  6E23               	movwf	(___flmul@a+3)^0,c
  3216  00098A  C0A0  F01C         	movff	efgtoa@u,___flmul@b
  3217  00098E  C0A1  F01D         	movff	efgtoa@u+1,___flmul@b+1
  3218  000992  C0A2  F01E         	movff	efgtoa@u+2,___flmul@b+2
  3219  000996  C0A3  F01F         	movff	efgtoa@u+3,___flmul@b+3
  3220  00099A  ECC5  F00D         	call	___flmul	;wreg free
  3221  00099E  C01C  F039         	movff	?___flmul,___flge@ff2
  3222  0009A2  C01D  F03A         	movff	?___flmul+1,___flge@ff2+1
  3223  0009A6  C01E  F03B         	movff	?___flmul+2,___flge@ff2+2
  3224  0009AA  C01F  F03C         	movff	?___flmul+3,___flge@ff2+3
  3225  0009AE  EC34  F017         	call	___flge	;wreg free
  3226  0009B2  B0D8               	btfsc	status,0,c
  3227  0009B4  EFDE  F004         	goto	u7641
  3228  0009B8  EFE0  F004         	goto	u7640
  3229  0009BC                     u7641:
  3230  0009BC  EF98  F004         	goto	l6332
  3231  0009C0                     u7640:
  3232  0009C0  EF00  F005         	goto	l6342
  3233  0009C4                     l6338:
  3234                           
  3235                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  3236  0009C4  C0A0  F00E         	movff	efgtoa@u,___fldiv@b
  3237  0009C8  C0A1  F00F         	movff	efgtoa@u+1,___fldiv@b+1
  3238  0009CC  C0A2  F010         	movff	efgtoa@u+2,___fldiv@b+2
  3239  0009D0  C0A3  F011         	movff	efgtoa@u+3,___fldiv@b+3
  3240  0009D4  0E00               	movlw	0
  3241  0009D6  6E12               	movwf	___fldiv@a^0,c
  3242  0009D8  0E00               	movlw	0
  3243  0009DA  6E13               	movwf	(___fldiv@a+1)^0,c
  3244  0009DC  0E20               	movlw	32
  3245  0009DE  6E14               	movwf	(___fldiv@a+2)^0,c
  3246  0009E0  0E41               	movlw	65
  3247  0009E2  6E15               	movwf	(___fldiv@a+3)^0,c
  3248  0009E4  ECB4  F011         	call	___fldiv	;wreg free
  3249  0009E8  C00E  F0A0         	movff	?___fldiv,efgtoa@u
  3250  0009EC  C00F  F0A1         	movff	?___fldiv+1,efgtoa@u+1
  3251  0009F0  C010  F0A2         	movff	?___fldiv+2,efgtoa@u+2
  3252  0009F4  C011  F0A3         	movff	?___fldiv+3,efgtoa@u+3
  3253  0009F8                     
  3254                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  3255  0009F8  0100               	movlb	0	; () banked
  3256  0009FA  079C               	decf	efgtoa@e& (0+255),f,b
  3257  0009FC  A0D8               	btfss	status,0,c
  3258  0009FE  079D               	decf	(efgtoa@e+1)& (0+255),f,b
  3259  000A00                     l6342:
  3260                           
  3261                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  3262  000A00  C098  F035         	movff	efgtoa@g,___flge@ff1
  3263  000A04  C099  F036         	movff	efgtoa@g+1,___flge@ff1+1
  3264  000A08  C09A  F037         	movff	efgtoa@g+2,___flge@ff1+2
  3265  000A0C  C09B  F038         	movff	efgtoa@g+3,___flge@ff1+3
  3266  000A10  C0A0  F039         	movff	efgtoa@u,___flge@ff2
  3267  000A14  C0A1  F03A         	movff	efgtoa@u+1,___flge@ff2+1
  3268  000A18  C0A2  F03B         	movff	efgtoa@u+2,___flge@ff2+2
  3269  000A1C  C0A3  F03C         	movff	efgtoa@u+3,___flge@ff2+3
  3270  000A20  EC34  F017         	call	___flge	;wreg free
  3271  000A24  A0D8               	btfss	status,0,c
  3272  000A26  EF17  F005         	goto	u7651
  3273  000A2A  EF19  F005         	goto	u7650
  3274  000A2E                     u7651:
  3275  000A2E  EFE2  F004         	goto	l6338
  3276  000A32                     u7650:
  3277  000A32                     l6344:
  3278                           
  3279                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  3280  000A32  C066  F014         	movff	efgtoa@c,tolower@c
  3281  000A36  6A15               	clrf	(tolower@c+1)^0,c
  3282  000A38  EC9F  F01B         	call	_tolower	;wreg free
  3283  000A3C  5014               	movf	?_tolower^0,w,c
  3284  000A3E  0100               	movlb	0	; () banked
  3285  000A40  6F8D               	movwf	efgtoa@mode& (0+255),b
  3286  000A42                     
  3287                           ; BSR set to: 0
  3288                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  3289  000A42  C08D  F08A         	movff	efgtoa@mode,efgtoa@nmode
  3290  000A46                     
  3291                           ; BSR set to: 0
  3292                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  3293  000A46  0E67               	movlw	103
  3294  000A48  198D               	xorwf	efgtoa@mode& (0+255),w,b
  3295  000A4A  A4D8               	btfss	status,2,c
  3296  000A4C  EF2A  F005         	goto	u7661
  3297  000A50  EF2C  F005         	goto	u7660
  3298  000A54                     u7661:
  3299  000A54  EF52  F005         	goto	l6358
  3300  000A58                     u7660:
  3301  000A58                     
  3302                           ; BSR set to: 0
  3303                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  3304  000A58  5047               	movf	_prec^0,w,c
  3305  000A5A  1048               	iorwf	(_prec+1)^0,w,c
  3306  000A5C  A4D8               	btfss	status,2,c
  3307  000A5E  EF33  F005         	goto	u7671
  3308  000A62  EF35  F005         	goto	u7670
  3309  000A66                     u7671:
  3310  000A66  EF39  F005         	goto	l6354
  3311  000A6A                     u7670:
  3312  000A6A                     
  3313                           ; BSR set to: 0
  3314                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  3315  000A6A  0E00               	movlw	0
  3316  000A6C  6E48               	movwf	(_prec+1)^0,c
  3317  000A6E  0E01               	movlw	1
  3318  000A70  6E47               	movwf	_prec^0,c
  3319  000A72                     l6354:
  3320                           
  3321                           ; BSR set to: 0
  3322                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  3323  000A72  BE48               	btfsc	(_prec+1)^0,7,c
  3324  000A74  EF46  F005         	goto	u7680
  3325  000A78  5048               	movf	(_prec+1)^0,w,c
  3326  000A7A  E106               	bnz	u7681
  3327  000A7C  0447               	decf	_prec^0,w,c
  3328  000A7E  B0D8               	btfsc	status,0,c
  3329  000A80  EF44  F005         	goto	u7681
  3330  000A84  EF46  F005         	goto	u7680
  3331  000A88                     u7681:
  3332  000A88  EF4C  F005         	goto	l651
  3333  000A8C                     u7680:
  3334  000A8C                     l6356:
  3335                           
  3336                           ; BSR set to: 0
  3337  000A8C  0E00               	movlw	0
  3338  000A8E  6F89               	movwf	(efgtoa@p+1)& (0+255),b
  3339  000A90  0E06               	movlw	6
  3340  000A92  6F88               	movwf	efgtoa@p& (0+255),b
  3341  000A94  EF5B  F005         	goto	l6364
  3342  000A98                     l651:
  3343                           
  3344                           ; BSR set to: 0
  3345  000A98  C047  F088         	movff	_prec,efgtoa@p
  3346  000A9C  C048  F089         	movff	_prec+1,efgtoa@p+1
  3347  000AA0  EF5B  F005         	goto	l6364
  3348  000AA4                     l6358:
  3349                           
  3350                           ; BSR set to: 0
  3351                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  3352  000AA4  BE48               	btfsc	(_prec+1)^0,7,c
  3353  000AA6  EF57  F005         	goto	u7691
  3354  000AAA  EF59  F005         	goto	u7690
  3355  000AAE                     u7691:
  3356  000AAE  EF46  F005         	goto	l6356
  3357  000AB2                     u7690:
  3358  000AB2  EF4C  F005         	goto	l651
  3359  000AB6                     l6364:
  3360                           
  3361                           ; BSR set to: 0
  3362                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  3363  000AB6  0E67               	movlw	103
  3364  000AB8  198D               	xorwf	efgtoa@mode& (0+255),w,b
  3365  000ABA  A4D8               	btfss	status,2,c
  3366  000ABC  EF62  F005         	goto	u7701
  3367  000AC0  EF64  F005         	goto	u7700
  3368  000AC4                     u7701:
  3369  000AC4  EF93  F005         	goto	l6374
  3370  000AC8                     u7700:
  3371  000AC8                     
  3372                           ; BSR set to: 0
  3373                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  3374  000AC8  AF9D               	btfss	(efgtoa@e+1)& (0+255),7,b
  3375  000ACA  EF72  F005         	goto	u7710
  3376  000ACE  0EFC               	movlw	252
  3377  000AD0  5D9C               	subwf	efgtoa@e& (0+255),w,b
  3378  000AD2  0EFF               	movlw	255
  3379  000AD4  599D               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3380  000AD6  A0D8               	btfss	status,0,c
  3381  000AD8  EF70  F005         	goto	u7711
  3382  000ADC  EF72  F005         	goto	u7710
  3383  000AE0                     u7711:
  3384  000AE0  EF91  F005         	goto	l6372
  3385  000AE4                     u7710:
  3386  000AE4                     
  3387                           ; BSR set to: 0
  3388  000AE4  0EFF               	movlw	255
  3389  000AE6  6F67               	movwf	??_efgtoa& (0+255),b
  3390  000AE8  0EFF               	movlw	255
  3391  000AEA  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  3392  000AEC  C088  F069         	movff	efgtoa@p,??_efgtoa+2
  3393  000AF0  C089  F06A         	movff	efgtoa@p+1,??_efgtoa+3
  3394  000AF4  5167               	movf	??_efgtoa& (0+255),w,b
  3395  000AF6  2769               	addwf	(??_efgtoa+2)& (0+255),f,b
  3396  000AF8  5168               	movf	(??_efgtoa+1)& (0+255),w,b
  3397  000AFA  236A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3398  000AFC  519C               	movf	efgtoa@e& (0+255),w,b
  3399  000AFE  5D69               	subwf	(??_efgtoa+2)& (0+255),w,b
  3400  000B00  516A               	movf	(??_efgtoa+3)& (0+255),w,b
  3401  000B02  0A80               	xorlw	128
  3402  000B04  6F6B               	movwf	(??_efgtoa+4)& (0+255),b
  3403  000B06  519D               	movf	(efgtoa@e+1)& (0+255),w,b
  3404  000B08  0A80               	xorlw	128
  3405  000B0A  596B               	subwfb	(??_efgtoa+4)& (0+255),w,b
  3406  000B0C  A0D8               	btfss	status,0,c
  3407  000B0E  EF8B  F005         	goto	u7721
  3408  000B12  EF8D  F005         	goto	u7720
  3409  000B16                     u7721:
  3410  000B16  EF91  F005         	goto	l6372
  3411  000B1A                     u7720:
  3412  000B1A                     
  3413                           ; BSR set to: 0
  3414                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  3415  000B1A  0E66               	movlw	102
  3416  000B1C  6F8A               	movwf	efgtoa@nmode& (0+255),b
  3417                           
  3418                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
  3419  000B1E  EF93  F005         	goto	l6374
  3420  000B22                     l6372:
  3421                           
  3422                           ; BSR set to: 0
  3423                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  3424  000B22  0E65               	movlw	101
  3425  000B24  6F8A               	movwf	efgtoa@nmode& (0+255),b
  3426  000B26                     l6374:
  3427                           
  3428                           ; BSR set to: 0
  3429                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  3430  000B26  C088  F080         	movff	efgtoa@p,efgtoa@m
  3431  000B2A  C089  F081         	movff	efgtoa@p+1,efgtoa@m+1
  3432  000B2E                     
  3433                           ; BSR set to: 0
  3434                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  3435  000B2E  0E67               	movlw	103
  3436  000B30  198D               	xorwf	efgtoa@mode& (0+255),w,b
  3437  000B32  A4D8               	btfss	status,2,c
  3438  000B34  EF9E  F005         	goto	u7731
  3439  000B38  EFA0  F005         	goto	u7730
  3440  000B3C                     u7731:
  3441  000B3C  EFB0  F005         	goto	l6382
  3442  000B40                     u7730:
  3443  000B40                     
  3444                           ; BSR set to: 0
  3445  000B40  0E66               	movlw	102
  3446  000B42  198A               	xorwf	efgtoa@nmode& (0+255),w,b
  3447  000B44  A4D8               	btfss	status,2,c
  3448  000B46  EFA7  F005         	goto	u7741
  3449  000B4A  EFA9  F005         	goto	u7740
  3450  000B4E                     u7741:
  3451  000B4E  EFB2  F005         	goto	l6384
  3452  000B52                     u7740:
  3453  000B52                     
  3454                           ; BSR set to: 0
  3455  000B52  BF9D               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3456  000B54  EFB0  F005         	goto	u7750
  3457  000B58  EFAE  F005         	goto	u7751
  3458  000B5C                     u7751:
  3459  000B5C  EFB2  F005         	goto	l6384
  3460  000B60                     u7750:
  3461  000B60                     l6382:
  3462                           
  3463                           ; BSR set to: 0
  3464                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  3465  000B60  4B80               	infsnz	efgtoa@m& (0+255),f,b
  3466  000B62  2B81               	incf	(efgtoa@m+1)& (0+255),f,b
  3467  000B64                     l6384:
  3468                           
  3469                           ; BSR set to: 0
  3470                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  3471  000B64  0E66               	movlw	102
  3472  000B66  198A               	xorwf	efgtoa@nmode& (0+255),w,b
  3473  000B68  A4D8               	btfss	status,2,c
  3474  000B6A  EFB9  F005         	goto	u7761
  3475  000B6E  EFBB  F005         	goto	u7760
  3476  000B72                     u7761:
  3477  000B72  EFDB  F005         	goto	l6394
  3478  000B76                     u7760:
  3479  000B76                     
  3480                           ; BSR set to: 0
  3481                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  3482  000B76  BF9D               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3483  000B78  EFC2  F005         	goto	u7770
  3484  000B7C  EFC0  F005         	goto	u7771
  3485  000B80                     u7771:
  3486  000B80  EFCE  F005         	goto	l6390
  3487  000B84                     u7770:
  3488  000B84                     
  3489                           ; BSR set to: 0
  3490                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  3491  000B84  0E00               	movlw	0
  3492  000B86  6FA0               	movwf	efgtoa@u& (0+255),b
  3493  000B88  0E00               	movlw	0
  3494  000B8A  6FA1               	movwf	(efgtoa@u+1)& (0+255),b
  3495  000B8C  0E80               	movlw	128
  3496  000B8E  6FA2               	movwf	(efgtoa@u+2)& (0+255),b
  3497  000B90  0E3F               	movlw	63
  3498  000B92  6FA3               	movwf	(efgtoa@u+3)& (0+255),b
  3499                           
  3500                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  3501  000B94  0E00               	movlw	0
  3502  000B96  6F9D               	movwf	(efgtoa@e+1)& (0+255),b
  3503  000B98  0E00               	movlw	0
  3504  000B9A  6F9C               	movwf	efgtoa@e& (0+255),b
  3505  000B9C                     l6390:
  3506                           
  3507                           ; BSR set to: 0
  3508                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  3509  000B9C  0E67               	movlw	103
  3510  000B9E  198D               	xorwf	efgtoa@mode& (0+255),w,b
  3511  000BA0  B4D8               	btfsc	status,2,c
  3512  000BA2  EFD5  F005         	goto	u7781
  3513  000BA6  EFD7  F005         	goto	u7780
  3514  000BAA                     u7781:
  3515  000BAA  EFDB  F005         	goto	l6394
  3516  000BAE                     u7780:
  3517  000BAE                     
  3518                           ; BSR set to: 0
  3519                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  3520  000BAE  519C               	movf	efgtoa@e& (0+255),w,b
  3521  000BB0  2780               	addwf	efgtoa@m& (0+255),f,b
  3522  000BB2  519D               	movf	(efgtoa@e+1)& (0+255),w,b
  3523  000BB4  2381               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3524  000BB6                     l6394:
  3525                           
  3526                           ; BSR set to: 0
  3527                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  3528  000BB6  0E00               	movlw	0
  3529  000BB8  6F97               	movwf	(efgtoa@i+1)& (0+255),b
  3530  000BBA  0E00               	movlw	0
  3531  000BBC  6F96               	movwf	efgtoa@i& (0+255),b
  3532  000BBE                     
  3533                           ; BSR set to: 0
  3534                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  3535  000BBE  C098  F08E         	movff	efgtoa@g,efgtoa@h
  3536  000BC2  C099  F08F         	movff	efgtoa@g+1,efgtoa@h+1
  3537  000BC6  C09A  F090         	movff	efgtoa@g+2,efgtoa@h+2
  3538  000BCA  C09B  F091         	movff	efgtoa@g+3,efgtoa@h+3
  3539  000BCE                     
  3540                           ; BSR set to: 0
  3541                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  3542  000BCE  C0A0  F06C         	movff	efgtoa@u,efgtoa@ou
  3543  000BD2  C0A1  F06D         	movff	efgtoa@u+1,efgtoa@ou+1
  3544  000BD6  C0A2  F06E         	movff	efgtoa@u+2,efgtoa@ou+2
  3545  000BDA  C0A3  F06F         	movff	efgtoa@u+3,efgtoa@ou+3
  3546                           
  3547                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  3548  000BDE  EF6C  F006         	goto	l6408
  3549  000BE2                     l6400:
  3550                           
  3551                           ; BSR set to: 0
  3552                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  3553  000BE2  C08E  F00E         	movff	efgtoa@h,___fldiv@b
  3554  000BE6  C08F  F00F         	movff	efgtoa@h+1,___fldiv@b+1
  3555  000BEA  C090  F010         	movff	efgtoa@h+2,___fldiv@b+2
  3556  000BEE  C091  F011         	movff	efgtoa@h+3,___fldiv@b+3
  3557  000BF2  C0A0  F012         	movff	efgtoa@u,___fldiv@a
  3558  000BF6  C0A1  F013         	movff	efgtoa@u+1,___fldiv@a+1
  3559  000BFA  C0A2  F014         	movff	efgtoa@u+2,___fldiv@a+2
  3560  000BFE  C0A3  F015         	movff	efgtoa@u+3,___fldiv@a+3
  3561  000C02  ECB4  F011         	call	___fldiv	;wreg free
  3562  000C06  C00E  F027         	movff	?___fldiv,floorf@x
  3563  000C0A  C00F  F028         	movff	?___fldiv+1,floorf@x+1
  3564  000C0E  C010  F029         	movff	?___fldiv+2,floorf@x+2
  3565  000C12  C011  F02A         	movff	?___fldiv+3,floorf@x+3
  3566  000C16  EC81  F013         	call	_floorf	;wreg free
  3567  000C1A  C027  F092         	movff	?_floorf,efgtoa@l
  3568  000C1E  C028  F093         	movff	?_floorf+1,efgtoa@l+1
  3569  000C22  C029  F094         	movff	?_floorf+2,efgtoa@l+2
  3570  000C26  C02A  F095         	movff	?_floorf+3,efgtoa@l+3
  3571                           
  3572                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  3573  000C2A  C092  F00E         	movff	efgtoa@l,___fltol@f1
  3574  000C2E  C093  F00F         	movff	efgtoa@l+1,___fltol@f1+1
  3575  000C32  C094  F010         	movff	efgtoa@l+2,___fltol@f1+2
  3576  000C36  C095  F011         	movff	efgtoa@l+3,___fltol@f1+3
  3577  000C3A  ECB1  F016         	call	___fltol	;wreg free
  3578  000C3E  C00E  F084         	movff	?___fltol,efgtoa@d
  3579  000C42  C00F  F085         	movff	?___fltol+1,efgtoa@d+1
  3580  000C46                     
  3581                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  3582  000C46  C08E  F035         	movff	efgtoa@h,___flsub@b
  3583  000C4A  C08F  F036         	movff	efgtoa@h+1,___flsub@b+1
  3584  000C4E  C090  F037         	movff	efgtoa@h+2,___flsub@b+2
  3585  000C52  C091  F038         	movff	efgtoa@h+3,___flsub@b+3
  3586  000C56  C0A0  F020         	movff	efgtoa@u,___flmul@a
  3587  000C5A  C0A1  F021         	movff	efgtoa@u+1,___flmul@a+1
  3588  000C5E  C0A2  F022         	movff	efgtoa@u+2,___flmul@a+2
  3589  000C62  C0A3  F023         	movff	efgtoa@u+3,___flmul@a+3
  3590  000C66  C092  F01C         	movff	efgtoa@l,___flmul@b
  3591  000C6A  C093  F01D         	movff	efgtoa@l+1,___flmul@b+1
  3592  000C6E  C094  F01E         	movff	efgtoa@l+2,___flmul@b+2
  3593  000C72  C095  F01F         	movff	efgtoa@l+3,___flmul@b+3
  3594  000C76  ECC5  F00D         	call	___flmul	;wreg free
  3595  000C7A  C01C  F039         	movff	?___flmul,___flsub@a
  3596  000C7E  C01D  F03A         	movff	?___flmul+1,___flsub@a+1
  3597  000C82  C01E  F03B         	movff	?___flmul+2,___flsub@a+2
  3598  000C86  C01F  F03C         	movff	?___flmul+3,___flsub@a+3
  3599  000C8A  ECA3  F01C         	call	___flsub	;wreg free
  3600  000C8E  C035  F08E         	movff	?___flsub,efgtoa@h
  3601  000C92  C036  F08F         	movff	?___flsub+1,efgtoa@h+1
  3602  000C96  C037  F090         	movff	?___flsub+2,efgtoa@h+2
  3603  000C9A  C038  F091         	movff	?___flsub+3,efgtoa@h+3
  3604  000C9E                     
  3605                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  3606  000C9E  C0A0  F00E         	movff	efgtoa@u,___fldiv@b
  3607  000CA2  C0A1  F00F         	movff	efgtoa@u+1,___fldiv@b+1
  3608  000CA6  C0A2  F010         	movff	efgtoa@u+2,___fldiv@b+2
  3609  000CAA  C0A3  F011         	movff	efgtoa@u+3,___fldiv@b+3
  3610  000CAE  0E00               	movlw	0
  3611  000CB0  6E12               	movwf	___fldiv@a^0,c
  3612  000CB2  0E00               	movlw	0
  3613  000CB4  6E13               	movwf	(___fldiv@a+1)^0,c
  3614  000CB6  0E20               	movlw	32
  3615  000CB8  6E14               	movwf	(___fldiv@a+2)^0,c
  3616  000CBA  0E41               	movlw	65
  3617  000CBC  6E15               	movwf	(___fldiv@a+3)^0,c
  3618  000CBE  ECB4  F011         	call	___fldiv	;wreg free
  3619  000CC2  C00E  F0A0         	movff	?___fldiv,efgtoa@u
  3620  000CC6  C00F  F0A1         	movff	?___fldiv+1,efgtoa@u+1
  3621  000CCA  C010  F0A2         	movff	?___fldiv+2,efgtoa@u+2
  3622  000CCE  C011  F0A3         	movff	?___fldiv+3,efgtoa@u+3
  3623  000CD2                     
  3624                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  3625  000CD2  0100               	movlb	0	; () banked
  3626  000CD4  4B96               	infsnz	efgtoa@i& (0+255),f,b
  3627  000CD6  2B97               	incf	(efgtoa@i+1)& (0+255),f,b
  3628  000CD8                     l6408:
  3629                           
  3630                           ; BSR set to: 0
  3631                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  3632  000CD8  5180               	movf	efgtoa@m& (0+255),w,b
  3633  000CDA  5D96               	subwf	efgtoa@i& (0+255),w,b
  3634  000CDC  5197               	movf	(efgtoa@i+1)& (0+255),w,b
  3635  000CDE  0A80               	xorlw	128
  3636  000CE0  6F67               	movwf	??_efgtoa& (0+255),b
  3637  000CE2  5181               	movf	(efgtoa@m+1)& (0+255),w,b
  3638  000CE4  0A80               	xorlw	128
  3639  000CE6  5967               	subwfb	??_efgtoa& (0+255),w,b
  3640  000CE8  A0D8               	btfss	status,0,c
  3641  000CEA  EF79  F006         	goto	u7791
  3642  000CEE  EF7B  F006         	goto	u7790
  3643  000CF2                     u7791:
  3644  000CF2  EFF1  F005         	goto	l6400
  3645  000CF6                     u7790:
  3646  000CF6                     
  3647                           ; BSR set to: 0
  3648                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  3649  000CF6  C0A0  F01C         	movff	efgtoa@u,___flmul@b
  3650  000CFA  C0A1  F01D         	movff	efgtoa@u+1,___flmul@b+1
  3651  000CFE  C0A2  F01E         	movff	efgtoa@u+2,___flmul@b+2
  3652  000D02  C0A3  F01F         	movff	efgtoa@u+3,___flmul@b+3
  3653  000D06  0E00               	movlw	0
  3654  000D08  6E20               	movwf	___flmul@a^0,c
  3655  000D0A  0E00               	movlw	0
  3656  000D0C  6E21               	movwf	(___flmul@a+1)^0,c
  3657  000D0E  0EA0               	movlw	160
  3658  000D10  6E22               	movwf	(___flmul@a+2)^0,c
  3659  000D12  0E40               	movlw	64
  3660  000D14  6E23               	movwf	(___flmul@a+3)^0,c
  3661  000D16  ECC5  F00D         	call	___flmul	;wreg free
  3662  000D1A  C01C  F092         	movff	?___flmul,efgtoa@l
  3663  000D1E  C01D  F093         	movff	?___flmul+1,efgtoa@l+1
  3664  000D22  C01E  F094         	movff	?___flmul+2,efgtoa@l+2
  3665  000D26  C01F  F095         	movff	?___flmul+3,efgtoa@l+3
  3666  000D2A                     
  3667                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  3668  000D2A  C08E  F035         	movff	efgtoa@h,___flge@ff1
  3669  000D2E  C08F  F036         	movff	efgtoa@h+1,___flge@ff1+1
  3670  000D32  C090  F037         	movff	efgtoa@h+2,___flge@ff1+2
  3671  000D36  C091  F038         	movff	efgtoa@h+3,___flge@ff1+3
  3672  000D3A  C092  F039         	movff	efgtoa@l,___flge@ff2
  3673  000D3E  C093  F03A         	movff	efgtoa@l+1,___flge@ff2+1
  3674  000D42  C094  F03B         	movff	efgtoa@l+2,___flge@ff2+2
  3675  000D46  C095  F03C         	movff	efgtoa@l+3,___flge@ff2+3
  3676  000D4A  EC34  F017         	call	___flge	;wreg free
  3677  000D4E  B0D8               	btfsc	status,0,c
  3678  000D50  EFAC  F006         	goto	u7801
  3679  000D54  EFAE  F006         	goto	u7800
  3680  000D58                     u7801:
  3681  000D58  EFB9  F006         	goto	l6416
  3682  000D5C                     u7800:
  3683  000D5C                     
  3684                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  3685  000D5C  0E00               	movlw	0
  3686  000D5E  0100               	movlb	0	; () banked
  3687  000D60  6F92               	movwf	efgtoa@l& (0+255),b
  3688  000D62  0E00               	movlw	0
  3689  000D64  6F93               	movwf	(efgtoa@l+1)& (0+255),b
  3690  000D66  0E00               	movlw	0
  3691  000D68  6F94               	movwf	(efgtoa@l+2)& (0+255),b
  3692  000D6A  0E00               	movlw	0
  3693  000D6C  6F95               	movwf	(efgtoa@l+3)& (0+255),b
  3694                           
  3695                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
  3696  000D6E  EFE2  F006         	goto	l6422
  3697  000D72                     l6416:
  3698                           
  3699                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  3700  000D72  C08E  F00E         	movff	efgtoa@h,___fleq@ff1
  3701  000D76  C08F  F00F         	movff	efgtoa@h+1,___fleq@ff1+1
  3702  000D7A  C090  F010         	movff	efgtoa@h+2,___fleq@ff1+2
  3703  000D7E  C091  F011         	movff	efgtoa@h+3,___fleq@ff1+3
  3704  000D82  C092  F012         	movff	efgtoa@l,___fleq@ff2
  3705  000D86  C093  F013         	movff	efgtoa@l+1,___fleq@ff2+1
  3706  000D8A  C094  F014         	movff	efgtoa@l+2,___fleq@ff2+2
  3707  000D8E  C095  F015         	movff	efgtoa@l+3,___fleq@ff2+3
  3708  000D92  ECA0  F01A         	call	___fleq	;wreg free
  3709  000D96  A0D8               	btfss	status,0,c
  3710  000D98  EFD0  F006         	goto	u7811
  3711  000D9C  EFD2  F006         	goto	u7810
  3712  000DA0                     u7811:
  3713  000DA0  EFE2  F006         	goto	l6422
  3714  000DA4                     u7810:
  3715  000DA4  0100               	movlb	0	; () banked
  3716  000DA6  B184               	btfsc	efgtoa@d& (0+255),0,b
  3717  000DA8  EFD8  F006         	goto	u7821
  3718  000DAC  EFDA  F006         	goto	u7820
  3719  000DB0                     u7821:
  3720  000DB0  EFE2  F006         	goto	l6422
  3721  000DB4                     u7820:
  3722  000DB4                     
  3723                           ; BSR set to: 0
  3724                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  3725  000DB4  0E00               	movlw	0
  3726  000DB6  6F92               	movwf	efgtoa@l& (0+255),b
  3727  000DB8  0E00               	movlw	0
  3728  000DBA  6F93               	movwf	(efgtoa@l+1)& (0+255),b
  3729  000DBC  0E00               	movlw	0
  3730  000DBE  6F94               	movwf	(efgtoa@l+2)& (0+255),b
  3731  000DC0  0E00               	movlw	0
  3732  000DC2  6F95               	movwf	(efgtoa@l+3)& (0+255),b
  3733  000DC4                     l6422:
  3734                           
  3735                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  3736  000DC4  C098  F00E         	movff	efgtoa@g,___fladd@b
  3737  000DC8  C099  F00F         	movff	efgtoa@g+1,___fladd@b+1
  3738  000DCC  C09A  F010         	movff	efgtoa@g+2,___fladd@b+2
  3739  000DD0  C09B  F011         	movff	efgtoa@g+3,___fladd@b+3
  3740  000DD4  C092  F012         	movff	efgtoa@l,___fladd@a
  3741  000DD8  C093  F013         	movff	efgtoa@l+1,___fladd@a+1
  3742  000DDC  C094  F014         	movff	efgtoa@l+2,___fladd@a+2
  3743  000DE0  C095  F015         	movff	efgtoa@l+3,___fladd@a+3
  3744  000DE4  EC2F  F009         	call	___fladd	;wreg free
  3745  000DE8  C00E  F08E         	movff	?___fladd,efgtoa@h
  3746  000DEC  C00F  F08F         	movff	?___fladd+1,efgtoa@h+1
  3747  000DF0  C010  F090         	movff	?___fladd+2,efgtoa@h+2
  3748  000DF4  C011  F091         	movff	?___fladd+3,efgtoa@h+3
  3749  000DF8                     
  3750                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  3751  000DF8  C06C  F0A0         	movff	efgtoa@ou,efgtoa@u
  3752  000DFC  C06D  F0A1         	movff	efgtoa@ou+1,efgtoa@u+1
  3753  000E00  C06E  F0A2         	movff	efgtoa@ou+2,efgtoa@u+2
  3754  000E04  C06F  F0A3         	movff	efgtoa@ou+3,efgtoa@u+3
  3755  000E08                     
  3756                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  3757  000E08  0E65               	movlw	101
  3758  000E0A  0100               	movlb	0	; () banked
  3759  000E0C  198A               	xorwf	efgtoa@nmode& (0+255),w,b
  3760  000E0E  B4D8               	btfsc	status,2,c
  3761  000E10  EF0C  F007         	goto	u7831
  3762  000E14  EF0E  F007         	goto	u7830
  3763  000E18                     u7831:
  3764  000E18  EF14  F007         	goto	l6430
  3765  000E1C                     u7830:
  3766  000E1C                     
  3767                           ; BSR set to: 0
  3768  000E1C  C09C  F082         	movff	efgtoa@e,efgtoa@ne
  3769  000E20  C09D  F083         	movff	efgtoa@e+1,efgtoa@ne+1
  3770  000E24  EF18  F007         	goto	l677
  3771  000E28                     l6430:
  3772                           
  3773                           ; BSR set to: 0
  3774  000E28  0E00               	movlw	0
  3775  000E2A  6F83               	movwf	(efgtoa@ne+1)& (0+255),b
  3776  000E2C  0E00               	movlw	0
  3777  000E2E  6F82               	movwf	efgtoa@ne& (0+255),b
  3778  000E30                     l677:
  3779                           
  3780                           ; BSR set to: 0
  3781                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  3782  000E30  0E00               	movlw	0
  3783  000E32  6F7F               	movwf	(efgtoa@pp+1)& (0+255),b
  3784  000E34  0E00               	movlw	0
  3785  000E36  6F7E               	movwf	efgtoa@pp& (0+255),b
  3786                           
  3787                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  3788  000E38  0E00               	movlw	0
  3789  000E3A  6F7D               	movwf	(efgtoa@t+1)& (0+255),b
  3790  000E3C  0E00               	movlw	0
  3791  000E3E  6F7C               	movwf	efgtoa@t& (0+255),b
  3792                           
  3793                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  3794  000E40  0E00               	movlw	0
  3795  000E42  6F97               	movwf	(efgtoa@i+1)& (0+255),b
  3796  000E44  0E00               	movlw	0
  3797  000E46  6F96               	movwf	efgtoa@i& (0+255),b
  3798                           
  3799                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  3800  000E48  EF14  F008         	goto	l6480
  3801  000E4C                     l6432:
  3802                           
  3803                           ; BSR set to: 0
  3804                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  3805  000E4C  C08E  F00E         	movff	efgtoa@h,___fldiv@b
  3806  000E50  C08F  F00F         	movff	efgtoa@h+1,___fldiv@b+1
  3807  000E54  C090  F010         	movff	efgtoa@h+2,___fldiv@b+2
  3808  000E58  C091  F011         	movff	efgtoa@h+3,___fldiv@b+3
  3809  000E5C  C0A0  F012         	movff	efgtoa@u,___fldiv@a
  3810  000E60  C0A1  F013         	movff	efgtoa@u+1,___fldiv@a+1
  3811  000E64  C0A2  F014         	movff	efgtoa@u+2,___fldiv@a+2
  3812  000E68  C0A3  F015         	movff	efgtoa@u+3,___fldiv@a+3
  3813  000E6C  ECB4  F011         	call	___fldiv	;wreg free
  3814  000E70  C00E  F027         	movff	?___fldiv,floorf@x
  3815  000E74  C00F  F028         	movff	?___fldiv+1,floorf@x+1
  3816  000E78  C010  F029         	movff	?___fldiv+2,floorf@x+2
  3817  000E7C  C011  F02A         	movff	?___fldiv+3,floorf@x+3
  3818  000E80  EC81  F013         	call	_floorf	;wreg free
  3819  000E84  C027  F092         	movff	?_floorf,efgtoa@l
  3820  000E88  C028  F093         	movff	?_floorf+1,efgtoa@l+1
  3821  000E8C  C029  F094         	movff	?_floorf+2,efgtoa@l+2
  3822  000E90  C02A  F095         	movff	?_floorf+3,efgtoa@l+3
  3823                           
  3824                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  3825  000E94  C092  F00E         	movff	efgtoa@l,___fltol@f1
  3826  000E98  C093  F00F         	movff	efgtoa@l+1,___fltol@f1+1
  3827  000E9C  C094  F010         	movff	efgtoa@l+2,___fltol@f1+2
  3828  000EA0  C095  F011         	movff	efgtoa@l+3,___fltol@f1+3
  3829  000EA4  ECB1  F016         	call	___fltol	;wreg free
  3830  000EA8  C00E  F084         	movff	?___fltol,efgtoa@d
  3831  000EAC  C00F  F085         	movff	?___fltol+1,efgtoa@d+1
  3832  000EB0                     
  3833                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3834  000EB0  B849               	btfsc	_flags^0,4,c
  3835  000EB2  EF5D  F007         	goto	u7841
  3836  000EB6  EF5F  F007         	goto	u7840
  3837  000EBA                     u7841:
  3838  000EBA  EF7D  F007         	goto	l6444
  3839  000EBE                     u7840:
  3840  000EBE  0100               	movlb	0	; () banked
  3841  000EC0  5184               	movf	efgtoa@d& (0+255),w,b
  3842  000EC2  1185               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3843  000EC4  A4D8               	btfss	status,2,c
  3844  000EC6  EF67  F007         	goto	u7851
  3845  000ECA  EF69  F007         	goto	u7850
  3846  000ECE                     u7851:
  3847  000ECE  EF7D  F007         	goto	l6444
  3848  000ED2                     u7850:
  3849  000ED2                     
  3850                           ; BSR set to: 0
  3851  000ED2  0E67               	movlw	103
  3852  000ED4  198D               	xorwf	efgtoa@mode& (0+255),w,b
  3853  000ED6  A4D8               	btfss	status,2,c
  3854  000ED8  EF70  F007         	goto	u7861
  3855  000EDC  EF72  F007         	goto	u7860
  3856  000EE0                     u7861:
  3857  000EE0  EF7D  F007         	goto	l6444
  3858  000EE4                     u7860:
  3859  000EE4                     
  3860                           ; BSR set to: 0
  3861  000EE4  BF83               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3862  000EE6  EF79  F007         	goto	u7870
  3863  000EEA  EF77  F007         	goto	u7871
  3864  000EEE                     u7871:
  3865  000EEE  EF7D  F007         	goto	l6444
  3866  000EF2                     u7870:
  3867  000EF2                     
  3868                           ; BSR set to: 0
  3869                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  3870  000EF2  4B7C               	infsnz	efgtoa@t& (0+255),f,b
  3871  000EF4  2B7D               	incf	(efgtoa@t+1)& (0+255),f,b
  3872                           
  3873                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  3874  000EF6  EFC8  F007         	goto	l6472
  3875  000EFA                     l6444:
  3876                           
  3877                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  3878  000EFA  0100               	movlb	0	; () banked
  3879  000EFC  517E               	movf	efgtoa@pp& (0+255),w,b
  3880  000EFE  117F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3881  000F00  A4D8               	btfss	status,2,c
  3882  000F02  EF85  F007         	goto	u7881
  3883  000F06  EF87  F007         	goto	u7880
  3884  000F0A                     u7881:
  3885  000F0A  EFB1  F007         	goto	l6464
  3886  000F0E                     u7880:
  3887  000F0E                     
  3888                           ; BSR set to: 0
  3889  000F0E  BF83               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3890  000F10  EF8E  F007         	goto	u7890
  3891  000F14  EF8C  F007         	goto	u7891
  3892  000F18                     u7891:
  3893  000F18  EFB1  F007         	goto	l6464
  3894  000F1C                     u7890:
  3895  000F1C                     
  3896                           ; BSR set to: 0
  3897                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  3898  000F1C  0E0A               	movlw	low _dbuf
  3899  000F1E  259E               	addwf	efgtoa@n& (0+255),w,b
  3900  000F20  6ED9               	movwf	fsr2l,c
  3901  000F22  0E01               	movlw	high _dbuf
  3902  000F24  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3903  000F26  6EDA               	movwf	fsr2h,c
  3904  000F28  0E2E               	movlw	46
  3905  000F2A  6EDF               	movwf	indf2,c
  3906  000F2C                     
  3907                           ; BSR set to: 0
  3908  000F2C  4B9E               	infsnz	efgtoa@n& (0+255),f,b
  3909  000F2E  2B9F               	incf	(efgtoa@n+1)& (0+255),f,b
  3910  000F30                     
  3911                           ; BSR set to: 0
  3912                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  3913  000F30  078B               	decf	efgtoa@w& (0+255),f,b
  3914  000F32  A0D8               	btfss	status,0,c
  3915  000F34  078C               	decf	(efgtoa@w+1)& (0+255),f,b
  3916  000F36                     
  3917                           ; BSR set to: 0
  3918                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  3919  000F36  0E00               	movlw	0
  3920  000F38  6F7F               	movwf	(efgtoa@pp+1)& (0+255),b
  3921  000F3A  0E01               	movlw	1
  3922  000F3C  6F7E               	movwf	efgtoa@pp& (0+255),b
  3923  000F3E  EFB1  F007         	goto	l6464
  3924  000F42                     l6456:
  3925                           
  3926                           ; BSR set to: 0
  3927                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  3928  000F42  0E0A               	movlw	low _dbuf
  3929  000F44  259E               	addwf	efgtoa@n& (0+255),w,b
  3930  000F46  6ED9               	movwf	fsr2l,c
  3931  000F48  0E01               	movlw	high _dbuf
  3932  000F4A  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3933  000F4C  6EDA               	movwf	fsr2h,c
  3934  000F4E  0E30               	movlw	48
  3935  000F50  6EDF               	movwf	indf2,c
  3936  000F52                     
  3937                           ; BSR set to: 0
  3938  000F52  4B9E               	infsnz	efgtoa@n& (0+255),f,b
  3939  000F54  2B9F               	incf	(efgtoa@n+1)& (0+255),f,b
  3940  000F56                     
  3941                           ; BSR set to: 0
  3942                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  3943  000F56  078B               	decf	efgtoa@w& (0+255),f,b
  3944  000F58  A0D8               	btfss	status,0,c
  3945  000F5A  078C               	decf	(efgtoa@w+1)& (0+255),f,b
  3946  000F5C                     
  3947                           ; BSR set to: 0
  3948                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  3949  000F5C  077C               	decf	efgtoa@t& (0+255),f,b
  3950  000F5E  A0D8               	btfss	status,0,c
  3951  000F60  077D               	decf	(efgtoa@t+1)& (0+255),f,b
  3952  000F62                     l6464:
  3953                           
  3954                           ; BSR set to: 0
  3955                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  3956  000F62  517C               	movf	efgtoa@t& (0+255),w,b
  3957  000F64  117D               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3958  000F66  A4D8               	btfss	status,2,c
  3959  000F68  EFB8  F007         	goto	u7901
  3960  000F6C  EFBA  F007         	goto	u7900
  3961  000F70                     u7901:
  3962  000F70  EFA1  F007         	goto	l6456
  3963  000F74                     u7900:
  3964  000F74                     
  3965                           ; BSR set to: 0
  3966                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  3967  000F74  0E0A               	movlw	low _dbuf
  3968  000F76  259E               	addwf	efgtoa@n& (0+255),w,b
  3969  000F78  6ED9               	movwf	fsr2l,c
  3970  000F7A  0E01               	movlw	high _dbuf
  3971  000F7C  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3972  000F7E  6EDA               	movwf	fsr2h,c
  3973  000F80  5184               	movf	efgtoa@d& (0+255),w,b
  3974  000F82  0F30               	addlw	48
  3975  000F84  6EDF               	movwf	indf2,c
  3976  000F86                     
  3977                           ; BSR set to: 0
  3978  000F86  4B9E               	infsnz	efgtoa@n& (0+255),f,b
  3979  000F88  2B9F               	incf	(efgtoa@n+1)& (0+255),f,b
  3980  000F8A                     
  3981                           ; BSR set to: 0
  3982                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  3983  000F8A  078B               	decf	efgtoa@w& (0+255),f,b
  3984  000F8C  A0D8               	btfss	status,0,c
  3985  000F8E  078C               	decf	(efgtoa@w+1)& (0+255),f,b
  3986  000F90                     l6472:
  3987                           
  3988                           ; BSR set to: 0
  3989                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  3990  000F90  C08E  F035         	movff	efgtoa@h,___flsub@b
  3991  000F94  C08F  F036         	movff	efgtoa@h+1,___flsub@b+1
  3992  000F98  C090  F037         	movff	efgtoa@h+2,___flsub@b+2
  3993  000F9C  C091  F038         	movff	efgtoa@h+3,___flsub@b+3
  3994  000FA0  C0A0  F020         	movff	efgtoa@u,___flmul@a
  3995  000FA4  C0A1  F021         	movff	efgtoa@u+1,___flmul@a+1
  3996  000FA8  C0A2  F022         	movff	efgtoa@u+2,___flmul@a+2
  3997  000FAC  C0A3  F023         	movff	efgtoa@u+3,___flmul@a+3
  3998  000FB0  C092  F01C         	movff	efgtoa@l,___flmul@b
  3999  000FB4  C093  F01D         	movff	efgtoa@l+1,___flmul@b+1
  4000  000FB8  C094  F01E         	movff	efgtoa@l+2,___flmul@b+2
  4001  000FBC  C095  F01F         	movff	efgtoa@l+3,___flmul@b+3
  4002  000FC0  ECC5  F00D         	call	___flmul	;wreg free
  4003  000FC4  C01C  F039         	movff	?___flmul,___flsub@a
  4004  000FC8  C01D  F03A         	movff	?___flmul+1,___flsub@a+1
  4005  000FCC  C01E  F03B         	movff	?___flmul+2,___flsub@a+2
  4006  000FD0  C01F  F03C         	movff	?___flmul+3,___flsub@a+3
  4007  000FD4  ECA3  F01C         	call	___flsub	;wreg free
  4008  000FD8  C035  F08E         	movff	?___flsub,efgtoa@h
  4009  000FDC  C036  F08F         	movff	?___flsub+1,efgtoa@h+1
  4010  000FE0  C037  F090         	movff	?___flsub+2,efgtoa@h+2
  4011  000FE4  C038  F091         	movff	?___flsub+3,efgtoa@h+3
  4012  000FE8                     
  4013                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  4014  000FE8  C0A0  F00E         	movff	efgtoa@u,___fldiv@b
  4015  000FEC  C0A1  F00F         	movff	efgtoa@u+1,___fldiv@b+1
  4016  000FF0  C0A2  F010         	movff	efgtoa@u+2,___fldiv@b+2
  4017  000FF4  C0A3  F011         	movff	efgtoa@u+3,___fldiv@b+3
  4018  000FF8  0E00               	movlw	0
  4019  000FFA  6E12               	movwf	___fldiv@a^0,c
  4020  000FFC  0E00               	movlw	0
  4021  000FFE  6E13               	movwf	(___fldiv@a+1)^0,c
  4022  001000  0E20               	movlw	32
  4023  001002  6E14               	movwf	(___fldiv@a+2)^0,c
  4024  001004  0E41               	movlw	65
  4025  001006  6E15               	movwf	(___fldiv@a+3)^0,c
  4026  001008  ECB4  F011         	call	___fldiv	;wreg free
  4027  00100C  C00E  F0A0         	movff	?___fldiv,efgtoa@u
  4028  001010  C00F  F0A1         	movff	?___fldiv+1,efgtoa@u+1
  4029  001014  C010  F0A2         	movff	?___fldiv+2,efgtoa@u+2
  4030  001018  C011  F0A3         	movff	?___fldiv+3,efgtoa@u+3
  4031  00101C                     
  4032                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  4033  00101C  0100               	movlb	0	; () banked
  4034  00101E  0782               	decf	efgtoa@ne& (0+255),f,b
  4035  001020  A0D8               	btfss	status,0,c
  4036  001022  0783               	decf	(efgtoa@ne+1)& (0+255),f,b
  4037  001024                     
  4038                           ; BSR set to: 0
  4039                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  4040  001024  4B96               	infsnz	efgtoa@i& (0+255),f,b
  4041  001026  2B97               	incf	(efgtoa@i+1)& (0+255),f,b
  4042  001028                     l6480:
  4043                           
  4044                           ; BSR set to: 0
  4045                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  4046  001028  5180               	movf	efgtoa@m& (0+255),w,b
  4047  00102A  5D96               	subwf	efgtoa@i& (0+255),w,b
  4048  00102C  5197               	movf	(efgtoa@i+1)& (0+255),w,b
  4049  00102E  0A80               	xorlw	128
  4050  001030  6F67               	movwf	??_efgtoa& (0+255),b
  4051  001032  5181               	movf	(efgtoa@m+1)& (0+255),w,b
  4052  001034  0A80               	xorlw	128
  4053  001036  5967               	subwfb	??_efgtoa& (0+255),w,b
  4054  001038  B0D8               	btfsc	status,0,c
  4055  00103A  EF21  F008         	goto	u7911
  4056  00103E  EF23  F008         	goto	u7910
  4057  001042                     u7911:
  4058  001042  EF31  F008         	goto	l6484
  4059  001046                     u7910:
  4060  001046                     
  4061                           ; BSR set to: 0
  4062  001046  BF9F               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4063  001048  EF2F  F008         	goto	u7921
  4064  00104C  519F               	movf	(efgtoa@n+1)& (0+255),w,b
  4065  00104E  E109               	bnz	u7920
  4066  001050  0E4B               	movlw	75
  4067  001052  5D9E               	subwf	efgtoa@n& (0+255),w,b
  4068  001054  A0D8               	btfss	status,0,c
  4069  001056  EF2F  F008         	goto	u7921
  4070  00105A  EF31  F008         	goto	u7920
  4071  00105E                     u7921:
  4072  00105E  EF26  F007         	goto	l6432
  4073  001062                     u7920:
  4074  001062                     l6484:
  4075                           
  4076                           ; BSR set to: 0
  4077                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  4078  001062  517E               	movf	efgtoa@pp& (0+255),w,b
  4079  001064  117F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4080  001066  A4D8               	btfss	status,2,c
  4081  001068  EF38  F008         	goto	u7931
  4082  00106C  EF3A  F008         	goto	u7930
  4083  001070                     u7931:
  4084  001070  EF4B  F008         	goto	l6492
  4085  001074                     u7930:
  4086  001074                     
  4087                           ; BSR set to: 0
  4088  001074  A849               	btfss	_flags^0,4,c
  4089  001076  EF3F  F008         	goto	u7941
  4090  00107A  EF41  F008         	goto	u7940
  4091  00107E                     u7941:
  4092  00107E  EF4B  F008         	goto	l6492
  4093  001082                     u7940:
  4094  001082                     
  4095                           ; BSR set to: 0
  4096                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  4097  001082  0E0A               	movlw	low _dbuf
  4098  001084  259E               	addwf	efgtoa@n& (0+255),w,b
  4099  001086  6ED9               	movwf	fsr2l,c
  4100  001088  0E01               	movlw	high _dbuf
  4101  00108A  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4102  00108C  6EDA               	movwf	fsr2h,c
  4103  00108E  0E2E               	movlw	46
  4104  001090  6EDF               	movwf	indf2,c
  4105  001092                     
  4106                           ; BSR set to: 0
  4107  001092  4B9E               	infsnz	efgtoa@n& (0+255),f,b
  4108  001094  2B9F               	incf	(efgtoa@n+1)& (0+255),f,b
  4109  001096                     l6492:
  4110                           
  4111                           ; BSR set to: 0
  4112                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  4113  001096  0E0A               	movlw	low _dbuf
  4114  001098  259E               	addwf	efgtoa@n& (0+255),w,b
  4115  00109A  6ED9               	movwf	fsr2l,c
  4116  00109C  0E01               	movlw	high _dbuf
  4117  00109E  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4118  0010A0  6EDA               	movwf	fsr2h,c
  4119  0010A2  0E00               	movlw	0
  4120  0010A4  6EDF               	movwf	indf2,c
  4121  0010A6                     
  4122                           ; BSR set to: 0
  4123                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  4124  0010A6  0E65               	movlw	101
  4125  0010A8  198A               	xorwf	efgtoa@nmode& (0+255),w,b
  4126  0010AA  A4D8               	btfss	status,2,c
  4127  0010AC  EF5A  F008         	goto	u7951
  4128  0010B0  EF5C  F008         	goto	u7950
  4129  0010B4                     u7951:
  4130  0010B4  EF09  F004         	goto	l6304
  4131  0010B8                     u7950:
  4132  0010B8                     
  4133                           ; BSR set to: 0
  4134                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  4135  0010B8  0E00               	movlw	0
  4136  0010BA  6F97               	movwf	(efgtoa@i+1)& (0+255),b
  4137  0010BC  0E4F               	movlw	79
  4138  0010BE  6F96               	movwf	efgtoa@i& (0+255),b
  4139  0010C0                     
  4140                           ; BSR set to: 0
  4141                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  4142  0010C0  0E0A               	movlw	low _dbuf
  4143  0010C2  2596               	addwf	efgtoa@i& (0+255),w,b
  4144  0010C4  6ED9               	movwf	fsr2l,c
  4145  0010C6  0E01               	movlw	high _dbuf
  4146  0010C8  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4147  0010CA  6EDA               	movwf	fsr2h,c
  4148  0010CC  0E00               	movlw	0
  4149  0010CE  6EDF               	movwf	indf2,c
  4150  0010D0                     
  4151                           ; BSR set to: 0
  4152                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  4153  0010D0  0E00               	movlw	0
  4154  0010D2  6F87               	movwf	(efgtoa@sign+1)& (0+255),b
  4155  0010D4  0E00               	movlw	0
  4156  0010D6  6F86               	movwf	efgtoa@sign& (0+255),b
  4157  0010D8                     
  4158                           ; BSR set to: 0
  4159                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  4160  0010D8  BF9D               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4161  0010DA  EF73  F008         	goto	u7960
  4162  0010DE  EF71  F008         	goto	u7961
  4163  0010E2                     u7961:
  4164  0010E2  EF7B  F008         	goto	l6508
  4165  0010E6                     u7960:
  4166  0010E6                     
  4167                           ; BSR set to: 0
  4168                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  4169  0010E6  0E00               	movlw	0
  4170  0010E8  6F87               	movwf	(efgtoa@sign+1)& (0+255),b
  4171  0010EA  0E01               	movlw	1
  4172  0010EC  6F86               	movwf	efgtoa@sign& (0+255),b
  4173  0010EE                     
  4174                           ; BSR set to: 0
  4175                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  4176  0010EE  6D9C               	negf	efgtoa@e& (0+255),b
  4177  0010F0  1F9D               	comf	(efgtoa@e+1)& (0+255),f,b
  4178  0010F2  B0D8               	btfsc	status,0,c
  4179  0010F4  2B9D               	incf	(efgtoa@e+1)& (0+255),f,b
  4180  0010F6                     l6508:
  4181                           
  4182                           ; BSR set to: 0
  4183                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  4184  0010F6  0E00               	movlw	0
  4185  0010F8  6F89               	movwf	(efgtoa@p+1)& (0+255),b
  4186  0010FA  0E02               	movlw	2
  4187  0010FC  6F88               	movwf	efgtoa@p& (0+255),b
  4188                           
  4189                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  4190  0010FE  EFAC  F008         	goto	l6520
  4191  001102                     l6510:
  4192                           
  4193                           ; BSR set to: 0
  4194                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  4195  001102  0796               	decf	efgtoa@i& (0+255),f,b
  4196  001104  A0D8               	btfss	status,0,c
  4197  001106  0797               	decf	(efgtoa@i+1)& (0+255),f,b
  4198  001108                     
  4199                           ; BSR set to: 0
  4200                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  4201  001108  0E0A               	movlw	low _dbuf
  4202  00110A  2596               	addwf	efgtoa@i& (0+255),w,b
  4203  00110C  6ED9               	movwf	fsr2l,c
  4204  00110E  0E01               	movlw	high _dbuf
  4205  001110  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4206  001112  6EDA               	movwf	fsr2h,c
  4207  001114  C09C  F00E         	movff	efgtoa@e,___awmod@dividend
  4208  001118  C09D  F00F         	movff	efgtoa@e+1,___awmod@dividend+1
  4209  00111C  0E00               	movlw	0
  4210  00111E  6E11               	movwf	(___awmod@divisor+1)^0,c
  4211  001120  0E0A               	movlw	10
  4212  001122  6E10               	movwf	___awmod@divisor^0,c
  4213  001124  EC48  F01A         	call	___awmod	;wreg free
  4214  001128  500E               	movf	?___awmod^0,w,c
  4215  00112A  0F30               	addlw	48
  4216  00112C  6EDF               	movwf	indf2,c
  4217  00112E                     
  4218                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  4219  00112E  C09C  F00E         	movff	efgtoa@e,___awdiv@dividend
  4220  001132  C09D  F00F         	movff	efgtoa@e+1,___awdiv@dividend+1
  4221  001136  0E00               	movlw	0
  4222  001138  6E11               	movwf	(___awdiv@divisor+1)^0,c
  4223  00113A  0E0A               	movlw	10
  4224  00113C  6E10               	movwf	___awdiv@divisor^0,c
  4225  00113E  EC85  F019         	call	___awdiv	;wreg free
  4226  001142  C00E  F09C         	movff	?___awdiv,efgtoa@e
  4227  001146  C00F  F09D         	movff	?___awdiv+1,efgtoa@e+1
  4228  00114A                     
  4229                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  4230  00114A  0100               	movlb	0	; () banked
  4231  00114C  0788               	decf	efgtoa@p& (0+255),f,b
  4232  00114E  A0D8               	btfss	status,0,c
  4233  001150  0789               	decf	(efgtoa@p+1)& (0+255),f,b
  4234  001152                     
  4235                           ; BSR set to: 0
  4236                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  4237  001152  078B               	decf	efgtoa@w& (0+255),f,b
  4238  001154  A0D8               	btfss	status,0,c
  4239  001156  078C               	decf	(efgtoa@w+1)& (0+255),f,b
  4240  001158                     l6520:
  4241                           
  4242                           ; BSR set to: 0
  4243                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  4244  001158  519C               	movf	efgtoa@e& (0+255),w,b
  4245  00115A  119D               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4246  00115C  A4D8               	btfss	status,2,c
  4247  00115E  EFB3  F008         	goto	u7971
  4248  001162  EFB5  F008         	goto	u7970
  4249  001166                     u7971:
  4250  001166  EF81  F008         	goto	l6510
  4251  00116A                     u7970:
  4252  00116A                     
  4253                           ; BSR set to: 0
  4254  00116A  BF89               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4255  00116C  EFC2  F008         	goto	u7980
  4256  001170  5189               	movf	(efgtoa@p+1)& (0+255),w,b
  4257  001172  E106               	bnz	u7981
  4258  001174  0588               	decf	efgtoa@p& (0+255),w,b
  4259  001176  B0D8               	btfsc	status,0,c
  4260  001178  EFC0  F008         	goto	u7981
  4261  00117C  EFC2  F008         	goto	u7980
  4262  001180                     u7981:
  4263  001180  EF81  F008         	goto	l6510
  4264  001184                     u7980:
  4265  001184                     
  4266                           ; BSR set to: 0
  4267                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  4268  001184  0796               	decf	efgtoa@i& (0+255),f,b
  4269  001186  A0D8               	btfss	status,0,c
  4270  001188  0797               	decf	(efgtoa@i+1)& (0+255),f,b
  4271  00118A                     
  4272                           ; BSR set to: 0
  4273                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  4274  00118A  5186               	movf	efgtoa@sign& (0+255),w,b
  4275  00118C  1187               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4276  00118E  A4D8               	btfss	status,2,c
  4277  001190  EFCC  F008         	goto	u7991
  4278  001194  EFCE  F008         	goto	u7990
  4279  001198                     u7991:
  4280  001198  EFD4  F008         	goto	l6530
  4281  00119C                     u7990:
  4282  00119C                     
  4283                           ; BSR set to: 0
  4284  00119C  0E00               	movlw	0
  4285  00119E  6F77               	movwf	(_efgtoa$1386+1)& (0+255),b
  4286  0011A0  0E2B               	movlw	43
  4287  0011A2  6F76               	movwf	_efgtoa$1386& (0+255),b
  4288  0011A4  EFD8  F008         	goto	l6532
  4289  0011A8                     l6530:
  4290                           
  4291                           ; BSR set to: 0
  4292  0011A8  0E00               	movlw	0
  4293  0011AA  6F77               	movwf	(_efgtoa$1386+1)& (0+255),b
  4294  0011AC  0E2D               	movlw	45
  4295  0011AE  6F76               	movwf	_efgtoa$1386& (0+255),b
  4296  0011B0                     l6532:
  4297                           
  4298                           ; BSR set to: 0
  4299  0011B0  0E0A               	movlw	low _dbuf
  4300  0011B2  2596               	addwf	efgtoa@i& (0+255),w,b
  4301  0011B4  6ED9               	movwf	fsr2l,c
  4302  0011B6  0E01               	movlw	high _dbuf
  4303  0011B8  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4304  0011BA  6EDA               	movwf	fsr2h,c
  4305  0011BC  C076  FFDF         	movff	_efgtoa$1386,indf2
  4306  0011C0                     
  4307                           ; BSR set to: 0
  4308                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  4309  0011C0  078B               	decf	efgtoa@w& (0+255),f,b
  4310  0011C2  A0D8               	btfss	status,0,c
  4311  0011C4  078C               	decf	(efgtoa@w+1)& (0+255),f,b
  4312  0011C6                     
  4313                           ; BSR set to: 0
  4314                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4315  0011C6  0796               	decf	efgtoa@i& (0+255),f,b
  4316  0011C8  A0D8               	btfss	status,0,c
  4317  0011CA  0797               	decf	(efgtoa@i+1)& (0+255),f,b
  4318  0011CC                     
  4319                           ; BSR set to: 0
  4320  0011CC  0EBF               	movlw	191
  4321  0011CE  6F67               	movwf	??_efgtoa& (0+255),b
  4322  0011D0  0EFF               	movlw	255
  4323  0011D2  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  4324  0011D4  5166               	movf	efgtoa@c& (0+255),w,b
  4325  0011D6  6F69               	movwf	(??_efgtoa+2)& (0+255),b
  4326  0011D8  6B6A               	clrf	(??_efgtoa+3)& (0+255),b
  4327  0011DA  5167               	movf	??_efgtoa& (0+255),w,b
  4328  0011DC  2769               	addwf	(??_efgtoa+2)& (0+255),f,b
  4329  0011DE  5168               	movf	(??_efgtoa+1)& (0+255),w,b
  4330  0011E0  236A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4331  0011E2  516A               	movf	(??_efgtoa+3)& (0+255),w,b
  4332  0011E4  E10A               	bnz	u8000
  4333  0011E6  0E1A               	movlw	26
  4334  0011E8  5D69               	subwf	(??_efgtoa+2)& (0+255),w,b
  4335  0011EA  A0D8               	btfss	status,0,c
  4336  0011EC  EFFA  F008         	goto	u8001
  4337  0011F0  EFFD  F008         	goto	u8000
  4338  0011F4                     u8001:
  4339  0011F4  0E01               	movlw	1
  4340  0011F6  EFFE  F008         	goto	u8010
  4341  0011FA                     u8000:
  4342  0011FA  0E00               	movlw	0
  4343  0011FC                     u8010:
  4344  0011FC  6F7A               	movwf	_efgtoa$1388& (0+255),b
  4345  0011FE  6B7B               	clrf	(_efgtoa$1388+1)& (0+255),b
  4346  001200                     
  4347                           ; BSR set to: 0
  4348  001200  517A               	movf	_efgtoa$1388& (0+255),w,b
  4349  001202  117B               	iorwf	(_efgtoa$1388+1)& (0+255),w,b
  4350  001204  A4D8               	btfss	status,2,c
  4351  001206  EF07  F009         	goto	u8021
  4352  00120A  EF09  F009         	goto	u8020
  4353  00120E                     u8021:
  4354  00120E  EF0F  F009         	goto	l6546
  4355  001212                     u8020:
  4356  001212                     
  4357                           ; BSR set to: 0
  4358  001212  0E00               	movlw	0
  4359  001214  6F79               	movwf	(_efgtoa$1387+1)& (0+255),b
  4360  001216  0E65               	movlw	101
  4361  001218  6F78               	movwf	_efgtoa$1387& (0+255),b
  4362  00121A  EF13  F009         	goto	l6548
  4363  00121E                     l6546:
  4364                           
  4365                           ; BSR set to: 0
  4366  00121E  0E00               	movlw	0
  4367  001220  6F79               	movwf	(_efgtoa$1387+1)& (0+255),b
  4368  001222  0E45               	movlw	69
  4369  001224  6F78               	movwf	_efgtoa$1387& (0+255),b
  4370  001226                     l6548:
  4371                           
  4372                           ; BSR set to: 0
  4373  001226  0E0A               	movlw	low _dbuf
  4374  001228  2596               	addwf	efgtoa@i& (0+255),w,b
  4375  00122A  6ED9               	movwf	fsr2l,c
  4376  00122C  0E01               	movlw	high _dbuf
  4377  00122E  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4378  001230  6EDA               	movwf	fsr2h,c
  4379  001232  C078  FFDF         	movff	_efgtoa$1387,indf2
  4380  001236                     
  4381                           ; BSR set to: 0
  4382                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  4383  001236  078B               	decf	efgtoa@w& (0+255),f,b
  4384  001238  A0D8               	btfss	status,0,c
  4385  00123A  078C               	decf	(efgtoa@w+1)& (0+255),f,b
  4386  00123C                     
  4387                           ; BSR set to: 0
  4388                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  4389  00123C  0E0A               	movlw	low _dbuf
  4390  00123E  259E               	addwf	efgtoa@n& (0+255),w,b
  4391  001240  6E0E               	movwf	strcpy@dest^0,c
  4392  001242  0E01               	movlw	high _dbuf
  4393  001244  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4394  001246  6E0F               	movwf	(strcpy@dest+1)^0,c
  4395  001248  0E0A               	movlw	low _dbuf
  4396  00124A  2596               	addwf	efgtoa@i& (0+255),w,b
  4397  00124C  6E10               	movwf	strcpy@src^0,c
  4398  00124E  0E01               	movlw	high _dbuf
  4399  001250  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4400  001252  6E11               	movwf	(strcpy@src+1)^0,c
  4401  001254  ECCF  F01B         	call	_strcpy	;wreg free
  4402  001258  EF09  F004         	goto	l6304
  4403  00125C                     l633:
  4404  00125C  0012               	return		;funcret
  4405  00125E                     __end_of_efgtoa:
  4406                           	opt callstack 0
  4407                           
  4408 ;; *************** function _tolower *****************
  4409 ;; Defined at:
  4410 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\tolower.c"
  4411 ;; Parameters:    Size  Location     Type
  4412 ;;  c               2   19[COMRAM] int 
  4413 ;; Auto vars:     Size  Location     Type
  4414 ;;		None
  4415 ;; Return value:  Size  Location     Type
  4416 ;;                  2   19[COMRAM] int 
  4417 ;; Registers used:
  4418 ;;		wreg, status,2, status,0
  4419 ;; Tracked objects:
  4420 ;;		On entry : 0/0
  4421 ;;		On exit  : 0/0
  4422 ;;		Unchanged: 0/0
  4423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4424 ;;      Params:         2       0       0       0       0       0       0
  4425 ;;      Locals:         2       0       0       0       0       0       0
  4426 ;;      Temps:          4       0       0       0       0       0       0
  4427 ;;      Totals:         8       0       0       0       0       0       0
  4428 ;;Total ram usage:        8 bytes
  4429 ;; Hardware stack levels used:    1
  4430 ;; Hardware stack levels required when called:   10
  4431 ;; This function calls:
  4432 ;;		_isupper
  4433 ;; This function is called by:
  4434 ;;		_efgtoa
  4435 ;;		_vfpfcnvrt
  4436 ;; This function uses a non-reentrant model
  4437 ;;
  4438                           
  4439                           	psect	text6
  4440  00373E                     __ptext6:
  4441                           	opt callstack 0
  4442  00373E                     _tolower:
  4443                           	opt callstack 17
  4444  00373E  0EBF               	movlw	191
  4445  003740  6E16               	movwf	??_tolower^0,c
  4446  003742  0EFF               	movlw	255
  4447  003744  6E17               	movwf	(??_tolower+1)^0,c
  4448  003746  C014  F018         	movff	tolower@c,??_tolower+2
  4449  00374A  C015  F019         	movff	tolower@c+1,??_tolower+3
  4450  00374E  5016               	movf	??_tolower^0,w,c
  4451  003750  2618               	addwf	(??_tolower+2)^0,f,c
  4452  003752  5017               	movf	(??_tolower+1)^0,w,c
  4453  003754  2219               	addwfc	(??_tolower+3)^0,f,c
  4454  003756  5019               	movf	(??_tolower+3)^0,w,c
  4455  003758  E10A               	bnz	u6640
  4456  00375A  0E1A               	movlw	26
  4457  00375C  5C18               	subwf	(??_tolower+2)^0,w,c
  4458  00375E  A0D8               	btfss	status,0,c
  4459  003760  EFB4  F01B         	goto	u6641
  4460  003764  EFB7  F01B         	goto	u6640
  4461  003768                     u6641:
  4462  003768  0E01               	movlw	1
  4463  00376A  EFB8  F01B         	goto	u6650
  4464  00376E                     u6640:
  4465  00376E  0E00               	movlw	0
  4466  003770                     u6650:
  4467  003770  6E1A               	movwf	_tolower$1993^0,c
  4468  003772  6A1B               	clrf	(_tolower$1993+1)^0,c
  4469  003774  501A               	movf	_tolower$1993^0,w,c
  4470  003776  101B               	iorwf	(_tolower$1993+1)^0,w,c
  4471  003778  B4D8               	btfsc	status,2,c
  4472  00377A  EFC1  F01B         	goto	u6661
  4473  00377E  EFC3  F01B         	goto	u6660
  4474  003782                     u6661:
  4475  003782  EFCA  F01B         	goto	l1542
  4476  003786                     u6660:
  4477  003786  0E20               	movlw	32
  4478  003788  1014               	iorwf	tolower@c^0,w,c
  4479  00378A  6E14               	movwf	?_tolower^0,c
  4480  00378C  5015               	movf	(tolower@c+1)^0,w,c
  4481  00378E  6E15               	movwf	(?_tolower+1)^0,c
  4482  003790  EFCE  F01B         	goto	l1547
  4483  003794                     l1542:
  4484  003794  C014  F014         	movff	tolower@c,?_tolower
  4485  003798  C015  F015         	movff	tolower@c+1,?_tolower+1
  4486  00379C                     l1547:
  4487  00379C  0012               	return		;funcret
  4488  00379E                     __end_of_tolower:
  4489                           	opt callstack 0
  4490                           
  4491 ;; *************** function _isupper *****************
  4492 ;; Defined at:
  4493 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  4494 ;; Parameters:    Size  Location     Type
  4495 ;;  c               2   13[COMRAM] int 
  4496 ;; Auto vars:     Size  Location     Type
  4497 ;;		None
  4498 ;; Return value:  Size  Location     Type
  4499 ;;                  2   13[COMRAM] int 
  4500 ;; Registers used:
  4501 ;;		wreg, status,2, status,0
  4502 ;; Tracked objects:
  4503 ;;		On entry : 0/0
  4504 ;;		On exit  : 0/0
  4505 ;;		Unchanged: 0/0
  4506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4507 ;;      Params:         2       0       0       0       0       0       0
  4508 ;;      Locals:         0       0       0       0       0       0       0
  4509 ;;      Temps:          4       0       0       0       0       0       0
  4510 ;;      Totals:         6       0       0       0       0       0       0
  4511 ;;Total ram usage:        6 bytes
  4512 ;; Hardware stack levels used:    1
  4513 ;; Hardware stack levels required when called:    9
  4514 ;; This function calls:
  4515 ;;		Nothing
  4516 ;; This function is called by:
  4517 ;;		_efgtoa
  4518 ;;		_vfpfcnvrt
  4519 ;;		_tolower
  4520 ;; This function uses a non-reentrant model
  4521 ;;
  4522                           
  4523                           	psect	text7
  4524  003ACC                     __ptext7:
  4525                           	opt callstack 0
  4526  003ACC                     _isupper:
  4527                           	opt callstack 17
  4528  003ACC  0EBF               	movlw	191
  4529  003ACE  6E10               	movwf	??_isupper^0,c
  4530  003AD0  0EFF               	movlw	255
  4531  003AD2  6E11               	movwf	(??_isupper+1)^0,c
  4532  003AD4  C00E  F012         	movff	isupper@c,??_isupper+2
  4533  003AD8  C00F  F013         	movff	isupper@c+1,??_isupper+3
  4534  003ADC  5010               	movf	??_isupper^0,w,c
  4535  003ADE  2612               	addwf	(??_isupper+2)^0,f,c
  4536  003AE0  5011               	movf	(??_isupper+1)^0,w,c
  4537  003AE2  2213               	addwfc	(??_isupper+3)^0,f,c
  4538  003AE4  5013               	movf	(??_isupper+3)^0,w,c
  4539  003AE6  E10A               	bnz	u6100
  4540  003AE8  0E1A               	movlw	26
  4541  003AEA  5C12               	subwf	(??_isupper+2)^0,w,c
  4542  003AEC  A0D8               	btfss	status,0,c
  4543  003AEE  EF7B  F01D         	goto	u6101
  4544  003AF2  EF7E  F01D         	goto	u6100
  4545  003AF6                     u6101:
  4546  003AF6  0E01               	movlw	1
  4547  003AF8  EF7F  F01D         	goto	u6110
  4548  003AFC                     u6100:
  4549  003AFC  0E00               	movlw	0
  4550  003AFE                     u6110:
  4551  003AFE  6E0E               	movwf	?_isupper^0,c
  4552  003B00  6A0F               	clrf	(?_isupper+1)^0,c
  4553  003B02  0012               	return		;funcret
  4554  003B04                     __end_of_isupper:
  4555                           	opt callstack 0
  4556                           
  4557 ;; *************** function _strcpy *****************
  4558 ;; Defined at:
  4559 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  4560 ;; Parameters:    Size  Location     Type
  4561 ;;  dest            2   13[COMRAM] PTR unsigned char 
  4562 ;;		 -> dbuf(80), 
  4563 ;;  src             2   15[COMRAM] PTR const unsigned char 
  4564 ;;		 -> STR_13(4), STR_12(4), STR_9(4), STR_8(4), 
  4565 ;;		 -> dbuf(80), 
  4566 ;; Auto vars:     Size  Location     Type
  4567 ;;  d               2   21[COMRAM] PTR unsigned char 
  4568 ;;		 -> dbuf(80), 
  4569 ;;  s               2   19[COMRAM] PTR const unsigned char 
  4570 ;;		 -> STR_13(4), STR_12(4), STR_9(4), STR_8(4), 
  4571 ;;		 -> dbuf(80), 
  4572 ;; Return value:  Size  Location     Type
  4573 ;;                  2   13[COMRAM] PTR unsigned char 
  4574 ;; Registers used:
  4575 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4576 ;; Tracked objects:
  4577 ;;		On entry : 0/0
  4578 ;;		On exit  : 0/0
  4579 ;;		Unchanged: 0/0
  4580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4581 ;;      Params:         4       0       0       0       0       0       0
  4582 ;;      Locals:         4       0       0       0       0       0       0
  4583 ;;      Temps:          2       0       0       0       0       0       0
  4584 ;;      Totals:        10       0       0       0       0       0       0
  4585 ;;Total ram usage:       10 bytes
  4586 ;; Hardware stack levels used:    1
  4587 ;; Hardware stack levels required when called:    9
  4588 ;; This function calls:
  4589 ;;		Nothing
  4590 ;; This function is called by:
  4591 ;;		_efgtoa
  4592 ;; This function uses a non-reentrant model
  4593 ;;
  4594                           
  4595                           	psect	text8
  4596  00379E                     __ptext8:
  4597                           	opt callstack 0
  4598  00379E                     _strcpy:
  4599                           	opt callstack 17
  4600  00379E  C010  F014         	movff	strcpy@src,strcpy@s
  4601  0037A2  C011  F015         	movff	strcpy@src+1,strcpy@s+1
  4602  0037A6  C00E  F016         	movff	strcpy@dest,strcpy@d
  4603  0037AA  C00F  F017         	movff	strcpy@dest+1,strcpy@d+1
  4604  0037AE                     l5754:
  4605  0037AE  5014               	movf	strcpy@s^0,w,c
  4606  0037B0  6E12               	movwf	??_strcpy^0,c
  4607  0037B2  5015               	movf	(strcpy@s+1)^0,w,c
  4608  0037B4  6E13               	movwf	(??_strcpy+1)^0,c
  4609  0037B6  4A14               	infsnz	strcpy@s^0,f,c
  4610  0037B8  2A15               	incf	(strcpy@s+1)^0,f,c
  4611  0037BA  C012  FFF6         	movff	??_strcpy,tblptrl
  4612  0037BE  C013  FFF7         	movff	??_strcpy+1,tblptrh
  4613  0037C2  6AF8               	clrf	tblptru,c
  4614  0037C4  C016  FFD9         	movff	strcpy@d,fsr2l
  4615  0037C8  C017  FFDA         	movff	strcpy@d+1,fsr2h
  4616  0037CC  4A16               	infsnz	strcpy@d^0,f,c
  4617  0037CE  2A17               	incf	(strcpy@d+1)^0,f,c
  4618  0037D0  0E05               	movlw	(high __ramtop+-1)
  4619  0037D2  64F7               	cpfsgt	tblptrh,c
  4620  0037D4  D003               	bra	u6627
  4621  0037D6  0008               	tblrd		*
  4622  0037D8  50F5               	movf	tablat,w,c
  4623  0037DA  D005               	bra	u6620
  4624  0037DC                     u6627:
  4625  0037DC  CFF6 FFE1          	movff	tblptrl,fsr1l
  4626  0037E0  CFF7 FFE2          	movff	tblptrh,fsr1h
  4627  0037E4  50E7               	movf	indf1,w,c
  4628  0037E6                     u6620:
  4629  0037E6  6EDF               	movwf	indf2,c
  4630  0037E8  50DF               	movf	indf2,w,c
  4631  0037EA  A4D8               	btfss	status,2,c
  4632  0037EC  EFFA  F01B         	goto	u6631
  4633  0037F0  EFFC  F01B         	goto	u6630
  4634  0037F4                     u6631:
  4635  0037F4  EFD7  F01B         	goto	l5754
  4636  0037F8                     u6630:
  4637  0037F8  0012               	return		;funcret
  4638  0037FA                     __end_of_strcpy:
  4639                           	opt callstack 0
  4640                           
  4641 ;; *************** function _pad *****************
  4642 ;; Defined at:
  4643 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4644 ;; Parameters:    Size  Location     Type
  4645 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  4646 ;;		 -> sprintf@f(6), 
  4647 ;;  buf             2   31[COMRAM] PTR unsigned char 
  4648 ;;		 -> dbuf(80), 
  4649 ;;  p               2   33[COMRAM] int 
  4650 ;; Auto vars:     Size  Location     Type
  4651 ;;  w               2   38[COMRAM] int 
  4652 ;;  i               2   36[COMRAM] int 
  4653 ;; Return value:  Size  Location     Type
  4654 ;;                  2   29[COMRAM] int 
  4655 ;; Registers used:
  4656 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4657 ;; Tracked objects:
  4658 ;;		On entry : 0/0
  4659 ;;		On exit  : 0/0
  4660 ;;		Unchanged: 0/0
  4661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4662 ;;      Params:         6       0       0       0       0       0       0
  4663 ;;      Locals:         4       0       0       0       0       0       0
  4664 ;;      Temps:          1       0       0       0       0       0       0
  4665 ;;      Totals:        11       0       0       0       0       0       0
  4666 ;;Total ram usage:       11 bytes
  4667 ;; Hardware stack levels used:    1
  4668 ;; Hardware stack levels required when called:   12
  4669 ;; This function calls:
  4670 ;;		_fputc
  4671 ;;		_fputs
  4672 ;;		_strlen
  4673 ;; This function is called by:
  4674 ;;		_efgtoa
  4675 ;; This function uses a non-reentrant model
  4676 ;;
  4677                           
  4678                           	psect	text9
  4679  0033CE                     __ptext9:
  4680                           	opt callstack 0
  4681  0033CE                     _pad:
  4682                           	opt callstack 14
  4683  0033CE                     
  4684                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  4685  0033CE  A049               	btfss	_flags^0,0,c
  4686  0033D0  EFEC  F019         	goto	u6511
  4687  0033D4  EFEE  F019         	goto	u6510
  4688  0033D8                     u6511:
  4689  0033D8  EFF8  F019         	goto	l5712
  4690  0033DC                     u6510:
  4691  0033DC                     
  4692                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  4693  0033DC  C020  F017         	movff	pad@buf,fputs@s
  4694  0033E0  C021  F018         	movff	pad@buf+1,fputs@s+1
  4695  0033E4  C01E  F019         	movff	pad@fp,fputs@fp
  4696  0033E8  C01F  F01A         	movff	pad@fp+1,fputs@fp+1
  4697  0033EC  ECC6  F01C         	call	_fputs	;wreg free
  4698  0033F0                     l5712:
  4699                           
  4700                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  4701  0033F0  BE23               	btfsc	(pad@p+1)^0,7,c
  4702  0033F2  EFFD  F019         	goto	u6521
  4703  0033F6  EFFF  F019         	goto	u6520
  4704  0033FA                     u6521:
  4705  0033FA  EF05  F01A         	goto	l5716
  4706  0033FE                     u6520:
  4707  0033FE  C022  F027         	movff	pad@p,pad@w
  4708  003402  C023  F028         	movff	pad@p+1,pad@w+1
  4709  003406  EF09  F01A         	goto	l610
  4710  00340A                     l5716:
  4711  00340A  0E00               	movlw	0
  4712  00340C  6E28               	movwf	(pad@w+1)^0,c
  4713  00340E  0E00               	movlw	0
  4714  003410  6E27               	movwf	pad@w^0,c
  4715  003412                     l610:
  4716                           
  4717                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  4718  003412  0E00               	movlw	0
  4719  003414  6E26               	movwf	(pad@i+1)^0,c
  4720  003416  0E00               	movlw	0
  4721  003418  6E25               	movwf	pad@i^0,c
  4722                           
  4723                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4724  00341A  EF1B  F01A         	goto	l5722
  4725  00341E                     l5718:
  4726                           
  4727                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  4728  00341E  0E00               	movlw	0
  4729  003420  6E0F               	movwf	(fputc@c+1)^0,c
  4730  003422  0E20               	movlw	32
  4731  003424  6E0E               	movwf	fputc@c^0,c
  4732  003426  C01E  F010         	movff	pad@fp,fputc@fp
  4733  00342A  C01F  F011         	movff	pad@fp+1,fputc@fp+1
  4734  00342E  EC20  F019         	call	_fputc	;wreg free
  4735  003432                     
  4736                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  4737  003432  4A25               	infsnz	pad@i^0,f,c
  4738  003434  2A26               	incf	(pad@i+1)^0,f,c
  4739  003436                     l5722:
  4740                           
  4741                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4742  003436  5027               	movf	pad@w^0,w,c
  4743  003438  5C25               	subwf	pad@i^0,w,c
  4744  00343A  5026               	movf	(pad@i+1)^0,w,c
  4745  00343C  0A80               	xorlw	128
  4746  00343E  6E24               	movwf	??_pad^0,c
  4747  003440  5028               	movf	(pad@w+1)^0,w,c
  4748  003442  0A80               	xorlw	128
  4749  003444  5824               	subwfb	??_pad^0,w,c
  4750  003446  A0D8               	btfss	status,0,c
  4751  003448  EF28  F01A         	goto	u6531
  4752  00344C  EF2A  F01A         	goto	u6530
  4753  003450                     u6531:
  4754  003450  EF0F  F01A         	goto	l5718
  4755  003454                     u6530:
  4756  003454                     
  4757                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  4758  003454  B049               	btfsc	_flags^0,0,c
  4759  003456  EF2F  F01A         	goto	u6541
  4760  00345A  EF31  F01A         	goto	u6540
  4761  00345E                     u6541:
  4762  00345E  EF3B  F01A         	goto	l5726
  4763  003462                     u6540:
  4764  003462                     
  4765                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  4766  003462  C020  F017         	movff	pad@buf,fputs@s
  4767  003466  C021  F018         	movff	pad@buf+1,fputs@s+1
  4768  00346A  C01E  F019         	movff	pad@fp,fputs@fp
  4769  00346E  C01F  F01A         	movff	pad@fp+1,fputs@fp+1
  4770  003472  ECC6  F01C         	call	_fputs	;wreg free
  4771  003476                     l5726:
  4772                           
  4773                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  4774  003476  C020  F00E         	movff	pad@buf,strlen@s
  4775  00347A  C021  F00F         	movff	pad@buf+1,strlen@s+1
  4776  00347E  ECBA  F01D         	call	_strlen	;wreg free
  4777  003482  5027               	movf	pad@w^0,w,c
  4778  003484  240E               	addwf	?_strlen^0,w,c
  4779  003486  6E1E               	movwf	?_pad^0,c
  4780  003488  5028               	movf	(pad@w+1)^0,w,c
  4781  00348A  200F               	addwfc	(?_strlen+1)^0,w,c
  4782  00348C  6E1F               	movwf	(?_pad+1)^0,c
  4783  00348E  0012               	return		;funcret
  4784  003490                     __end_of_pad:
  4785                           	opt callstack 0
  4786                           
  4787 ;; *************** function _strlen *****************
  4788 ;; Defined at:
  4789 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  4790 ;; Parameters:    Size  Location     Type
  4791 ;;  s               2   13[COMRAM] PTR const unsigned char 
  4792 ;;		 -> dbuf(80), 
  4793 ;; Auto vars:     Size  Location     Type
  4794 ;;  a               2   15[COMRAM] PTR const unsigned char 
  4795 ;;		 -> dbuf(80), 
  4796 ;; Return value:  Size  Location     Type
  4797 ;;                  2   13[COMRAM] unsigned int 
  4798 ;; Registers used:
  4799 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4800 ;; Tracked objects:
  4801 ;;		On entry : 0/0
  4802 ;;		On exit  : 0/0
  4803 ;;		Unchanged: 0/0
  4804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4805 ;;      Params:         2       0       0       0       0       0       0
  4806 ;;      Locals:         2       0       0       0       0       0       0
  4807 ;;      Temps:          0       0       0       0       0       0       0
  4808 ;;      Totals:         4       0       0       0       0       0       0
  4809 ;;Total ram usage:        4 bytes
  4810 ;; Hardware stack levels used:    1
  4811 ;; Hardware stack levels required when called:    9
  4812 ;; This function calls:
  4813 ;;		Nothing
  4814 ;; This function is called by:
  4815 ;;		_pad
  4816 ;; This function uses a non-reentrant model
  4817 ;;
  4818                           
  4819                           	psect	text10
  4820  003B74                     __ptext10:
  4821                           	opt callstack 0
  4822  003B74                     _strlen:
  4823                           	opt callstack 16
  4824  003B74  C00E  F010         	movff	strlen@s,strlen@a
  4825  003B78  C00F  F011         	movff	strlen@s+1,strlen@a+1
  4826  003B7C  EFC2  F01D         	goto	l5496
  4827  003B80                     l5494:
  4828  003B80  4A0E               	infsnz	strlen@s^0,f,c
  4829  003B82  2A0F               	incf	(strlen@s+1)^0,f,c
  4830  003B84                     l5496:
  4831  003B84  C00E  FFD9         	movff	strlen@s,fsr2l
  4832  003B88  C00F  FFDA         	movff	strlen@s+1,fsr2h
  4833  003B8C  50DF               	movf	indf2,w,c
  4834  003B8E  A4D8               	btfss	status,2,c
  4835  003B90  EFCC  F01D         	goto	u6091
  4836  003B94  EFCE  F01D         	goto	u6090
  4837  003B98                     u6091:
  4838  003B98  EFC0  F01D         	goto	l5494
  4839  003B9C                     u6090:
  4840  003B9C  5010               	movf	strlen@a^0,w,c
  4841  003B9E  5C0E               	subwf	strlen@s^0,w,c
  4842  003BA0  6E0E               	movwf	?_strlen^0,c
  4843  003BA2  5011               	movf	(strlen@a+1)^0,w,c
  4844  003BA4  580F               	subwfb	(strlen@s+1)^0,w,c
  4845  003BA6  6E0F               	movwf	(?_strlen+1)^0,c
  4846  003BA8  0012               	return		;funcret
  4847  003BAA                     __end_of_strlen:
  4848                           	opt callstack 0
  4849                           
  4850 ;; *************** function _fputs *****************
  4851 ;; Defined at:
  4852 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  4853 ;; Parameters:    Size  Location     Type
  4854 ;;  s               2   22[COMRAM] PTR const unsigned char 
  4855 ;;		 -> dbuf(80), 
  4856 ;;  fp              2   24[COMRAM] PTR struct _IO_FILE
  4857 ;;		 -> sprintf@f(6), 
  4858 ;; Auto vars:     Size  Location     Type
  4859 ;;  i               2   27[COMRAM] int 
  4860 ;;  c               1   26[COMRAM] unsigned char 
  4861 ;; Return value:  Size  Location     Type
  4862 ;;                  2   22[COMRAM] int 
  4863 ;; Registers used:
  4864 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4865 ;; Tracked objects:
  4866 ;;		On entry : 0/0
  4867 ;;		On exit  : 0/0
  4868 ;;		Unchanged: 0/0
  4869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4870 ;;      Params:         4       0       0       0       0       0       0
  4871 ;;      Locals:         3       0       0       0       0       0       0
  4872 ;;      Temps:          0       0       0       0       0       0       0
  4873 ;;      Totals:         7       0       0       0       0       0       0
  4874 ;;Total ram usage:        7 bytes
  4875 ;; Hardware stack levels used:    1
  4876 ;; Hardware stack levels required when called:   11
  4877 ;; This function calls:
  4878 ;;		_fputc
  4879 ;; This function is called by:
  4880 ;;		_pad
  4881 ;; This function uses a non-reentrant model
  4882 ;;
  4883                           
  4884                           	psect	text11
  4885  00398C                     __ptext11:
  4886                           	opt callstack 0
  4887  00398C                     _fputs:
  4888                           	opt callstack 14
  4889  00398C  0E00               	movlw	0
  4890  00398E  6E1D               	movwf	(fputs@i+1)^0,c
  4891  003990  0E00               	movlw	0
  4892  003992  6E1C               	movwf	fputs@i^0,c
  4893  003994  EFD7  F01C         	goto	l5490
  4894  003998                     l5486:
  4895  003998  C01B  F00E         	movff	fputs@c,fputc@c
  4896  00399C  6A0F               	clrf	(fputc@c+1)^0,c
  4897  00399E  C019  F010         	movff	fputs@fp,fputc@fp
  4898  0039A2  C01A  F011         	movff	fputs@fp+1,fputc@fp+1
  4899  0039A6  EC20  F019         	call	_fputc	;wreg free
  4900  0039AA  4A1C               	infsnz	fputs@i^0,f,c
  4901  0039AC  2A1D               	incf	(fputs@i+1)^0,f,c
  4902  0039AE                     l5490:
  4903  0039AE  501C               	movf	fputs@i^0,w,c
  4904  0039B0  2417               	addwf	fputs@s^0,w,c
  4905  0039B2  6ED9               	movwf	fsr2l,c
  4906  0039B4  501D               	movf	(fputs@i+1)^0,w,c
  4907  0039B6  2018               	addwfc	(fputs@s+1)^0,w,c
  4908  0039B8  6EDA               	movwf	fsr2h,c
  4909  0039BA  50DF               	movf	indf2,w,c
  4910  0039BC  6E1B               	movwf	fputs@c^0,c
  4911  0039BE  501B               	movf	fputs@c^0,w,c
  4912  0039C0  A4D8               	btfss	status,2,c
  4913  0039C2  EFE5  F01C         	goto	u6081
  4914  0039C6  EFE7  F01C         	goto	u6080
  4915  0039CA                     u6081:
  4916  0039CA  EFCC  F01C         	goto	l5486
  4917  0039CE                     u6080:
  4918  0039CE  0012               	return		;funcret
  4919  0039D0                     __end_of_fputs:
  4920                           	opt callstack 0
  4921                           
  4922 ;; *************** function _fputc *****************
  4923 ;; Defined at:
  4924 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  4925 ;; Parameters:    Size  Location     Type
  4926 ;;  c               2   13[COMRAM] int 
  4927 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  4928 ;;		 -> sprintf@f(6), 
  4929 ;; Auto vars:     Size  Location     Type
  4930 ;;		None
  4931 ;; Return value:  Size  Location     Type
  4932 ;;                  2   13[COMRAM] int 
  4933 ;; Registers used:
  4934 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4935 ;; Tracked objects:
  4936 ;;		On entry : 0/0
  4937 ;;		On exit  : 0/0
  4938 ;;		Unchanged: 0/0
  4939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4940 ;;      Params:         4       0       0       0       0       0       0
  4941 ;;      Locals:         0       0       0       0       0       0       0
  4942 ;;      Temps:          5       0       0       0       0       0       0
  4943 ;;      Totals:         9       0       0       0       0       0       0
  4944 ;;Total ram usage:        9 bytes
  4945 ;; Hardware stack levels used:    1
  4946 ;; Hardware stack levels required when called:   10
  4947 ;; This function calls:
  4948 ;;		_putch
  4949 ;; This function is called by:
  4950 ;;		_pad
  4951 ;;		_vfpfcnvrt
  4952 ;;		_fputs
  4953 ;; This function uses a non-reentrant model
  4954 ;;
  4955                           
  4956                           	psect	text12
  4957  003240                     __ptext12:
  4958                           	opt callstack 0
  4959  003240                     _fputc:
  4960                           	opt callstack 17
  4961  003240  5010               	movf	fputc@fp^0,w,c
  4962  003242  1011               	iorwf	(fputc@fp+1)^0,w,c
  4963  003244  B4D8               	btfsc	status,2,c
  4964  003246  EF27  F019         	goto	u6041
  4965  00324A  EF29  F019         	goto	u6040
  4966  00324E                     u6041:
  4967  00324E  EF32  F019         	goto	l5474
  4968  003252                     u6040:
  4969  003252  5010               	movf	fputc@fp^0,w,c
  4970  003254  1011               	iorwf	(fputc@fp+1)^0,w,c
  4971  003256  A4D8               	btfss	status,2,c
  4972  003258  EF30  F019         	goto	u6051
  4973  00325C  EF32  F019         	goto	u6050
  4974  003260                     u6051:
  4975  003260  EF37  F019         	goto	l5476
  4976  003264                     u6050:
  4977  003264                     l5474:
  4978  003264  500E               	movf	fputc@c^0,w,c
  4979  003266  EC40  F01F         	call	_putch
  4980  00326A  EF84  F019         	goto	l1498
  4981  00326E                     l5476:
  4982  00326E  EE20 F004          	lfsr	2,4
  4983  003272  5010               	movf	fputc@fp^0,w,c
  4984  003274  26D9               	addwf	fsr2l,f,c
  4985  003276  5011               	movf	(fputc@fp+1)^0,w,c
  4986  003278  22DA               	addwfc	fsr2h,f,c
  4987  00327A  50DE               	movf	postinc2,w,c
  4988  00327C  10DE               	iorwf	postinc2,w,c
  4989  00327E  B4D8               	btfsc	status,2,c
  4990  003280  EF44  F019         	goto	u6061
  4991  003284  EF46  F019         	goto	u6060
  4992  003288                     u6061:
  4993  003288  EF61  F019         	goto	l5480
  4994  00328C                     u6060:
  4995  00328C  EE20 F004          	lfsr	2,4
  4996  003290  5010               	movf	fputc@fp^0,w,c
  4997  003292  26D9               	addwf	fsr2l,f,c
  4998  003294  5011               	movf	(fputc@fp+1)^0,w,c
  4999  003296  22DA               	addwfc	fsr2h,f,c
  5000  003298  EE10 F002          	lfsr	1,2
  5001  00329C  5010               	movf	fputc@fp^0,w,c
  5002  00329E  26E1               	addwf	fsr1l,f,c
  5003  0032A0  5011               	movf	(fputc@fp+1)^0,w,c
  5004  0032A2  22E2               	addwfc	fsr1h,f,c
  5005  0032A4  50DE               	movf	postinc2,w,c
  5006  0032A6  5CE6               	subwf	postinc1,w,c
  5007  0032A8  50E6               	movf	postinc1,w,c
  5008  0032AA  0A80               	xorlw	128
  5009  0032AC  6E16               	movwf	(??_fputc+4)^0,c
  5010  0032AE  50DE               	movf	postinc2,w,c
  5011  0032B0  0A80               	xorlw	128
  5012  0032B2  5816               	subwfb	(??_fputc+4)^0,w,c
  5013  0032B4  B0D8               	btfsc	status,0,c
  5014  0032B6  EF5F  F019         	goto	u6071
  5015  0032BA  EF61  F019         	goto	u6070
  5016  0032BE                     u6071:
  5017  0032BE  EF84  F019         	goto	l1498
  5018  0032C2                     u6070:
  5019  0032C2                     l5480:
  5020  0032C2  EE20 F002          	lfsr	2,2
  5021  0032C6  5010               	movf	fputc@fp^0,w,c
  5022  0032C8  26D9               	addwf	fsr2l,f,c
  5023  0032CA  5011               	movf	(fputc@fp+1)^0,w,c
  5024  0032CC  22DA               	addwfc	fsr2h,f,c
  5025  0032CE  CFDE F012          	movff	postinc2,??_fputc
  5026  0032D2  CFDD F013          	movff	postdec2,??_fputc+1
  5027  0032D6  C010  FFD9         	movff	fputc@fp,fsr2l
  5028  0032DA  C011  FFDA         	movff	fputc@fp+1,fsr2h
  5029  0032DE  CFDE F014          	movff	postinc2,??_fputc+2
  5030  0032E2  CFDD F015          	movff	postdec2,??_fputc+3
  5031  0032E6  5012               	movf	??_fputc^0,w,c
  5032  0032E8  2414               	addwf	(??_fputc+2)^0,w,c
  5033  0032EA  6ED9               	movwf	fsr2l,c
  5034  0032EC  5013               	movf	(??_fputc+1)^0,w,c
  5035  0032EE  2015               	addwfc	(??_fputc+3)^0,w,c
  5036  0032F0  6EDA               	movwf	fsr2h,c
  5037  0032F2  C00E  FFDF         	movff	fputc@c,indf2
  5038  0032F6  EE20 F002          	lfsr	2,2
  5039  0032FA  5010               	movf	fputc@fp^0,w,c
  5040  0032FC  26D9               	addwf	fsr2l,f,c
  5041  0032FE  5011               	movf	(fputc@fp+1)^0,w,c
  5042  003300  22DA               	addwfc	fsr2h,f,c
  5043  003302  2ADE               	incf	postinc2,f,c
  5044  003304  0E00               	movlw	0
  5045  003306  22DD               	addwfc	postdec2,f,c
  5046  003308                     l1498:
  5047  003308  0012               	return		;funcret
  5048  00330A                     __end_of_fputc:
  5049                           	opt callstack 0
  5050                           
  5051 ;; *************** function _putch *****************
  5052 ;; Defined at:
  5053 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  5054 ;; Parameters:    Size  Location     Type
  5055 ;;  c               1    wreg     unsigned char 
  5056 ;; Auto vars:     Size  Location     Type
  5057 ;;  c               1    0[COMRAM] unsigned char 
  5058 ;; Return value:  Size  Location     Type
  5059 ;;                  1    wreg      void 
  5060 ;; Registers used:
  5061 ;;		wreg
  5062 ;; Tracked objects:
  5063 ;;		On entry : 0/0
  5064 ;;		On exit  : 0/0
  5065 ;;		Unchanged: 0/0
  5066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5067 ;;      Params:         0       0       0       0       0       0       0
  5068 ;;      Locals:         0       0       0       0       0       0       0
  5069 ;;      Temps:          0       0       0       0       0       0       0
  5070 ;;      Totals:         0       0       0       0       0       0       0
  5071 ;;Total ram usage:        0 bytes
  5072 ;; Hardware stack levels used:    1
  5073 ;; Hardware stack levels required when called:    9
  5074 ;; This function calls:
  5075 ;;		Nothing
  5076 ;; This function is called by:
  5077 ;;		_fputc
  5078 ;; This function uses a non-reentrant model
  5079 ;;
  5080                           
  5081                           	psect	text13
  5082  003E80                     __ptext13:
  5083                           	opt callstack 0
  5084  003E80                     _putch:
  5085                           	opt callstack 17
  5086  003E80  0012               	return		;funcret
  5087  003E82                     __end_of_putch:
  5088                           	opt callstack 0
  5089                           
  5090 ;; *************** function _floorf *****************
  5091 ;; Defined at:
  5092 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\floorf.c"
  5093 ;; Parameters:    Size  Location     Type
  5094 ;;  x               4   38[COMRAM] float 
  5095 ;; Auto vars:     Size  Location     Type
  5096 ;;  u               4   54[COMRAM] struct .
  5097 ;;  m               4   48[COMRAM] unsigned long 
  5098 ;;  e               2   52[COMRAM] int 
  5099 ;; Return value:  Size  Location     Type
  5100 ;;                  4   38[COMRAM] float 
  5101 ;; Registers used:
  5102 ;;		wreg, status,2, status,0
  5103 ;; Tracked objects:
  5104 ;;		On entry : 0/0
  5105 ;;		On exit  : 0/0
  5106 ;;		Unchanged: 0/0
  5107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5108 ;;      Params:         4       0       0       0       0       0       0
  5109 ;;      Locals:        10       0       0       0       0       0       0
  5110 ;;      Temps:          6       0       0       0       0       0       0
  5111 ;;      Totals:        20       0       0       0       0       0       0
  5112 ;;Total ram usage:       20 bytes
  5113 ;; Hardware stack levels used:    1
  5114 ;; Hardware stack levels required when called:    9
  5115 ;; This function calls:
  5116 ;;		Nothing
  5117 ;; This function is called by:
  5118 ;;		_efgtoa
  5119 ;; This function uses a non-reentrant model
  5120 ;;
  5121                           
  5122                           	psect	text14
  5123  002702                     __ptext14:
  5124                           	opt callstack 0
  5125  002702                     _floorf:
  5126                           	opt callstack 17
  5127  002702  C100  F037         	movff	floorf@F524,floorf@u
  5128  002706  C101  F038         	movff	floorf@F524+1,floorf@u+1
  5129  00270A  C102  F039         	movff	floorf@F524+2,floorf@u+2
  5130  00270E  C103  F03A         	movff	floorf@F524+3,floorf@u+3
  5131  002712  C027  F037         	movff	floorf@x,floorf@u
  5132  002716  C028  F038         	movff	floorf@x+1,floorf@u+1
  5133  00271A  C029  F039         	movff	floorf@x+2,floorf@u+2
  5134  00271E  C02A  F03A         	movff	floorf@x+3,floorf@u+3
  5135  002722  0E81               	movlw	129
  5136  002724  6E2B               	movwf	??_floorf^0,c
  5137  002726  0EFF               	movlw	255
  5138  002728  6E2C               	movwf	(??_floorf+1)^0,c
  5139  00272A  C037  F02D         	movff	floorf@u,??_floorf+2
  5140  00272E  C038  F02E         	movff	floorf@u+1,??_floorf+3
  5141  002732  C039  F02F         	movff	floorf@u+2,??_floorf+4
  5142  002736  C03A  F030         	movff	floorf@u+3,??_floorf+5
  5143  00273A  0E18               	movlw	24
  5144  00273C  EFA5  F013         	goto	u6670
  5145  002740                     u6675:
  5146  002740  90D8               	bcf	status,0,c
  5147  002742  3230               	rrcf	(??_floorf+5)^0,f,c
  5148  002744  322F               	rrcf	(??_floorf+4)^0,f,c
  5149  002746  322E               	rrcf	(??_floorf+3)^0,f,c
  5150  002748  322D               	rrcf	(??_floorf+2)^0,f,c
  5151  00274A                     u6670:
  5152  00274A  2EE8               	decfsz	wreg,f,c
  5153  00274C  EFA0  F013         	goto	u6675
  5154  002750  502D               	movf	(??_floorf+2)^0,w,c
  5155  002752  242B               	addwf	??_floorf^0,w,c
  5156  002754  6E35               	movwf	floorf@e^0,c
  5157  002756  0E00               	movlw	0
  5158  002758  202C               	addwfc	(??_floorf+1)^0,w,c
  5159  00275A  6E36               	movwf	(floorf@e+1)^0,c
  5160  00275C  BE36               	btfsc	(floorf@e+1)^0,7,c
  5161  00275E  EFBA  F013         	goto	u6681
  5162  002762  5036               	movf	(floorf@e+1)^0,w,c
  5163  002764  E109               	bnz	u6680
  5164  002766  0E17               	movlw	23
  5165  002768  5C35               	subwf	floorf@e^0,w,c
  5166  00276A  A0D8               	btfss	status,0,c
  5167  00276C  EFBA  F013         	goto	u6681
  5168  002770  EFBC  F013         	goto	u6680
  5169  002774                     u6681:
  5170  002774  EFC6  F013         	goto	l5772
  5171  002778                     u6680:
  5172  002778                     l5770:
  5173  002778  C027  F027         	movff	floorf@x,?_floorf
  5174  00277C  C028  F028         	movff	floorf@x+1,?_floorf+1
  5175  002780  C029  F029         	movff	floorf@x+2,?_floorf+2
  5176  002784  C02A  F02A         	movff	floorf@x+3,?_floorf+3
  5177  002788  EF89  F014         	goto	l1459
  5178  00278C                     l5772:
  5179  00278C  BE36               	btfsc	(floorf@e+1)^0,7,c
  5180  00278E  EFCB  F013         	goto	u6691
  5181  002792  EFCD  F013         	goto	u6690
  5182  002796                     u6691:
  5183  002796  EF3D  F014         	goto	l5782
  5184  00279A                     u6690:
  5185  00279A  C035  F02B         	movff	floorf@e,??_floorf
  5186  00279E  0EFF               	movlw	255
  5187  0027A0  6E2C               	movwf	(??_floorf+1)^0,c
  5188  0027A2  0EFF               	movlw	255
  5189  0027A4  6E2D               	movwf	(??_floorf+2)^0,c
  5190  0027A6  0E7F               	movlw	127
  5191  0027A8  6E2E               	movwf	(??_floorf+3)^0,c
  5192  0027AA  0E00               	movlw	0
  5193  0027AC  6E2F               	movwf	(??_floorf+4)^0,c
  5194  0027AE                     u6705:
  5195  0027AE  662B               	tstfsz	??_floorf^0,c
  5196  0027B0  EFDC  F013         	goto	u6706
  5197  0027B4  EFE4  F013         	goto	u6707
  5198  0027B8                     u6706:
  5199  0027B8  342F               	rlcf	(??_floorf+4)^0,w,c
  5200  0027BA  322F               	rrcf	(??_floorf+4)^0,f,c
  5201  0027BC  322E               	rrcf	(??_floorf+3)^0,f,c
  5202  0027BE  322D               	rrcf	(??_floorf+2)^0,f,c
  5203  0027C0  322C               	rrcf	(??_floorf+1)^0,f,c
  5204  0027C2  2E2B               	decfsz	??_floorf^0,f,c
  5205  0027C4  EFD7  F013         	goto	u6705
  5206  0027C8                     u6707:
  5207  0027C8  C02C  F031         	movff	??_floorf+1,floorf@m
  5208  0027CC  C02D  F032         	movff	??_floorf+2,floorf@m+1
  5209  0027D0  C02E  F033         	movff	??_floorf+3,floorf@m+2
  5210  0027D4  C02F  F034         	movff	??_floorf+4,floorf@m+3
  5211  0027D8  5031               	movf	floorf@m^0,w,c
  5212  0027DA  1437               	andwf	floorf@u^0,w,c
  5213  0027DC  6E2B               	movwf	??_floorf^0,c
  5214  0027DE  5032               	movf	(floorf@m+1)^0,w,c
  5215  0027E0  1438               	andwf	(floorf@u+1)^0,w,c
  5216  0027E2  6E2C               	movwf	(??_floorf+1)^0,c
  5217  0027E4  5033               	movf	(floorf@m+2)^0,w,c
  5218  0027E6  1439               	andwf	(floorf@u+2)^0,w,c
  5219  0027E8  6E2D               	movwf	(??_floorf+2)^0,c
  5220  0027EA  5034               	movf	(floorf@m+3)^0,w,c
  5221  0027EC  143A               	andwf	(floorf@u+3)^0,w,c
  5222  0027EE  6E2E               	movwf	(??_floorf+3)^0,c
  5223  0027F0  502B               	movf	??_floorf^0,w,c
  5224  0027F2  102C               	iorwf	(??_floorf+1)^0,w,c
  5225  0027F4  102D               	iorwf	(??_floorf+2)^0,w,c
  5226  0027F6  102E               	iorwf	(??_floorf+3)^0,w,c
  5227  0027F8  A4D8               	btfss	status,2,c
  5228  0027FA  EF01  F014         	goto	u6711
  5229  0027FE  EF03  F014         	goto	u6710
  5230  002802                     u6711:
  5231  002802  EF05  F014         	goto	l5778
  5232  002806                     u6710:
  5233  002806  EFBC  F013         	goto	l5770
  5234  00280A                     l5778:
  5235  00280A  C037  F02B         	movff	floorf@u,??_floorf
  5236  00280E  C038  F02C         	movff	floorf@u+1,??_floorf+1
  5237  002812  C039  F02D         	movff	floorf@u+2,??_floorf+2
  5238  002816  C03A  F02E         	movff	floorf@u+3,??_floorf+3
  5239  00281A  0E20               	movlw	32
  5240  00281C  EF15  F014         	goto	u6720
  5241  002820                     u6725:
  5242  002820  90D8               	bcf	status,0,c
  5243  002822  322E               	rrcf	(??_floorf+3)^0,f,c
  5244  002824  322D               	rrcf	(??_floorf+2)^0,f,c
  5245  002826  322C               	rrcf	(??_floorf+1)^0,f,c
  5246  002828  322B               	rrcf	??_floorf^0,f,c
  5247  00282A                     u6720:
  5248  00282A  2EE8               	decfsz	wreg,f,c
  5249  00282C  EF10  F014         	goto	u6725
  5250  002830  502B               	movf	??_floorf^0,w,c
  5251  002832  102C               	iorwf	(??_floorf+1)^0,w,c
  5252  002834  102D               	iorwf	(??_floorf+2)^0,w,c
  5253  002836  102E               	iorwf	(??_floorf+3)^0,w,c
  5254  002838  B4D8               	btfsc	status,2,c
  5255  00283A  EF21  F014         	goto	u6731
  5256  00283E  EF23  F014         	goto	u6730
  5257  002842                     u6731:
  5258  002842  EF2B  F014         	goto	l1462
  5259  002846                     u6730:
  5260  002846  5031               	movf	floorf@m^0,w,c
  5261  002848  2637               	addwf	floorf@u^0,f,c
  5262  00284A  5032               	movf	(floorf@m+1)^0,w,c
  5263  00284C  2238               	addwfc	(floorf@u+1)^0,f,c
  5264  00284E  5033               	movf	(floorf@m+2)^0,w,c
  5265  002850  2239               	addwfc	(floorf@u+2)^0,f,c
  5266  002852  5034               	movf	(floorf@m+3)^0,w,c
  5267  002854  223A               	addwfc	(floorf@u+3)^0,f,c
  5268  002856                     l1462:
  5269  002856  1C31               	comf	floorf@m^0,w,c
  5270  002858  6E2B               	movwf	??_floorf^0,c
  5271  00285A  1C32               	comf	(floorf@m+1)^0,w,c
  5272  00285C  6E2C               	movwf	(??_floorf+1)^0,c
  5273  00285E  1C33               	comf	(floorf@m+2)^0,w,c
  5274  002860  6E2D               	movwf	(??_floorf+2)^0,c
  5275  002862  1C34               	comf	(floorf@m+3)^0,w,c
  5276  002864  6E2E               	movwf	(??_floorf+3)^0,c
  5277  002866  502B               	movf	??_floorf^0,w,c
  5278  002868  1637               	andwf	floorf@u^0,f,c
  5279  00286A  502C               	movf	(??_floorf+1)^0,w,c
  5280  00286C  1638               	andwf	(floorf@u+1)^0,f,c
  5281  00286E  502D               	movf	(??_floorf+2)^0,w,c
  5282  002870  1639               	andwf	(floorf@u+2)^0,f,c
  5283  002872  502E               	movf	(??_floorf+3)^0,w,c
  5284  002874  163A               	andwf	(floorf@u+3)^0,f,c
  5285  002876  EF81  F014         	goto	l5790
  5286  00287A                     l5782:
  5287  00287A  C037  F02B         	movff	floorf@u,??_floorf
  5288  00287E  C038  F02C         	movff	floorf@u+1,??_floorf+1
  5289  002882  C039  F02D         	movff	floorf@u+2,??_floorf+2
  5290  002886  C03A  F02E         	movff	floorf@u+3,??_floorf+3
  5291  00288A  0E20               	movlw	32
  5292  00288C  EF4D  F014         	goto	u6740
  5293  002890                     u6745:
  5294  002890  90D8               	bcf	status,0,c
  5295  002892  322E               	rrcf	(??_floorf+3)^0,f,c
  5296  002894  322D               	rrcf	(??_floorf+2)^0,f,c
  5297  002896  322C               	rrcf	(??_floorf+1)^0,f,c
  5298  002898  322B               	rrcf	??_floorf^0,f,c
  5299  00289A                     u6740:
  5300  00289A  2EE8               	decfsz	wreg,f,c
  5301  00289C  EF48  F014         	goto	u6745
  5302  0028A0  502B               	movf	??_floorf^0,w,c
  5303  0028A2  102C               	iorwf	(??_floorf+1)^0,w,c
  5304  0028A4  102D               	iorwf	(??_floorf+2)^0,w,c
  5305  0028A6  102E               	iorwf	(??_floorf+3)^0,w,c
  5306  0028A8  A4D8               	btfss	status,2,c
  5307  0028AA  EF59  F014         	goto	u6751
  5308  0028AE  EF5B  F014         	goto	u6750
  5309  0028B2                     u6751:
  5310  0028B2  EF65  F014         	goto	l5786
  5311  0028B6                     u6750:
  5312  0028B6  0E00               	movlw	0
  5313  0028B8  6E37               	movwf	floorf@u^0,c
  5314  0028BA  0E00               	movlw	0
  5315  0028BC  6E38               	movwf	(floorf@u+1)^0,c
  5316  0028BE  0E00               	movlw	0
  5317  0028C0  6E39               	movwf	(floorf@u+2)^0,c
  5318  0028C2  0E00               	movlw	0
  5319  0028C4  6E3A               	movwf	(floorf@u+3)^0,c
  5320  0028C6  EF81  F014         	goto	l5790
  5321  0028CA                     l5786:
  5322  0028CA  90D8               	bcf	status,0,c
  5323  0028CC  3437               	rlcf	floorf@u^0,w,c
  5324  0028CE  6E2B               	movwf	??_floorf^0,c
  5325  0028D0  3438               	rlcf	(floorf@u+1)^0,w,c
  5326  0028D2  6E2C               	movwf	(??_floorf+1)^0,c
  5327  0028D4  3439               	rlcf	(floorf@u+2)^0,w,c
  5328  0028D6  6E2D               	movwf	(??_floorf+2)^0,c
  5329  0028D8  343A               	rlcf	(floorf@u+3)^0,w,c
  5330  0028DA  6E2E               	movwf	(??_floorf+3)^0,c
  5331  0028DC  502B               	movf	??_floorf^0,w,c
  5332  0028DE  102C               	iorwf	(??_floorf+1)^0,w,c
  5333  0028E0  102D               	iorwf	(??_floorf+2)^0,w,c
  5334  0028E2  102E               	iorwf	(??_floorf+3)^0,w,c
  5335  0028E4  B4D8               	btfsc	status,2,c
  5336  0028E6  EF77  F014         	goto	u6761
  5337  0028EA  EF79  F014         	goto	u6760
  5338  0028EE                     u6761:
  5339  0028EE  EF81  F014         	goto	l5790
  5340  0028F2                     u6760:
  5341  0028F2  0E00               	movlw	0
  5342  0028F4  6E37               	movwf	floorf@u^0,c
  5343  0028F6  0E00               	movlw	0
  5344  0028F8  6E38               	movwf	(floorf@u+1)^0,c
  5345  0028FA  0E80               	movlw	128
  5346  0028FC  6E39               	movwf	(floorf@u+2)^0,c
  5347  0028FE  0EBF               	movlw	191
  5348  002900  6E3A               	movwf	(floorf@u+3)^0,c
  5349  002902                     l5790:
  5350  002902  C037  F027         	movff	floorf@u,?_floorf
  5351  002906  C038  F028         	movff	floorf@u+1,?_floorf+1
  5352  00290A  C039  F029         	movff	floorf@u+2,?_floorf+2
  5353  00290E  C03A  F02A         	movff	floorf@u+3,?_floorf+3
  5354  002912                     l1459:
  5355  002912  0012               	return		;funcret
  5356  002914                     __end_of_floorf:
  5357                           	opt callstack 0
  5358                           
  5359 ;; *************** function ___fpclassifyf *****************
  5360 ;; Defined at:
  5361 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__fpclassifyf.c"
  5362 ;; Parameters:    Size  Location     Type
  5363 ;;  x               4   13[COMRAM] float 
  5364 ;; Auto vars:     Size  Location     Type
  5365 ;;  u               4   23[COMRAM] struct .
  5366 ;;  e               2   21[COMRAM] int 
  5367 ;; Return value:  Size  Location     Type
  5368 ;;                  2   13[COMRAM] int 
  5369 ;; Registers used:
  5370 ;;		wreg, status,2, status,0
  5371 ;; Tracked objects:
  5372 ;;		On entry : 0/0
  5373 ;;		On exit  : 0/0
  5374 ;;		Unchanged: 0/0
  5375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5376 ;;      Params:         4       0       0       0       0       0       0
  5377 ;;      Locals:         6       0       0       0       0       0       0
  5378 ;;      Temps:          4       0       0       0       0       0       0
  5379 ;;      Totals:        14       0       0       0       0       0       0
  5380 ;;Total ram usage:       14 bytes
  5381 ;; Hardware stack levels used:    1
  5382 ;; Hardware stack levels required when called:    9
  5383 ;; This function calls:
  5384 ;;		Nothing
  5385 ;; This function is called by:
  5386 ;;		_efgtoa
  5387 ;; This function uses a non-reentrant model
  5388 ;;
  5389                           
  5390                           	psect	text15
  5391  00306C                     __ptext15:
  5392                           	opt callstack 0
  5393  00306C                     ___fpclassifyf:
  5394                           	opt callstack 17
  5395  00306C  C104  F018         	movff	___fpclassifyf@F463,___fpclassifyf@u
  5396  003070  C105  F019         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  5397  003074  C106  F01A         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  5398  003078  C107  F01B         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  5399  00307C  C00E  F018         	movff	___fpclassifyf@x,___fpclassifyf@u
  5400  003080  C00F  F019         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5401  003084  C010  F01A         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5402  003088  C011  F01B         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5403  00308C  C018  F012         	movff	___fpclassifyf@u,??___fpclassifyf
  5404  003090  C019  F013         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5405  003094  C01A  F014         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5406  003098  C01B  F015         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5407  00309C  0E18               	movlw	24
  5408  00309E  EF56  F018         	goto	u6550
  5409  0030A2                     u6555:
  5410  0030A2  90D8               	bcf	status,0,c
  5411  0030A4  3215               	rrcf	(??___fpclassifyf+3)^0,f,c
  5412  0030A6  3214               	rrcf	(??___fpclassifyf+2)^0,f,c
  5413  0030A8  3213               	rrcf	(??___fpclassifyf+1)^0,f,c
  5414  0030AA  3212               	rrcf	??___fpclassifyf^0,f,c
  5415  0030AC                     u6550:
  5416  0030AC  2EE8               	decfsz	wreg,f,c
  5417  0030AE  EF51  F018         	goto	u6555
  5418  0030B2  5012               	movf	??___fpclassifyf^0,w,c
  5419  0030B4  6E16               	movwf	___fpclassifyf@e^0,c
  5420  0030B6  6A17               	clrf	(___fpclassifyf@e+1)^0,c
  5421  0030B8  5016               	movf	___fpclassifyf@e^0,w,c
  5422  0030BA  1017               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5423  0030BC  A4D8               	btfss	status,2,c
  5424  0030BE  EF63  F018         	goto	u6561
  5425  0030C2  EF65  F018         	goto	u6560
  5426  0030C6                     u6561:
  5427  0030C6  EF85  F018         	goto	l5742
  5428  0030CA                     u6560:
  5429  0030CA  90D8               	bcf	status,0,c
  5430  0030CC  3418               	rlcf	___fpclassifyf@u^0,w,c
  5431  0030CE  6E12               	movwf	??___fpclassifyf^0,c
  5432  0030D0  3419               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5433  0030D2  6E13               	movwf	(??___fpclassifyf+1)^0,c
  5434  0030D4  341A               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5435  0030D6  6E14               	movwf	(??___fpclassifyf+2)^0,c
  5436  0030D8  341B               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5437  0030DA  6E15               	movwf	(??___fpclassifyf+3)^0,c
  5438  0030DC  5012               	movf	??___fpclassifyf^0,w,c
  5439  0030DE  1013               	iorwf	(??___fpclassifyf+1)^0,w,c
  5440  0030E0  1014               	iorwf	(??___fpclassifyf+2)^0,w,c
  5441  0030E2  1015               	iorwf	(??___fpclassifyf+3)^0,w,c
  5442  0030E4  A4D8               	btfss	status,2,c
  5443  0030E6  EF77  F018         	goto	u6571
  5444  0030EA  EF79  F018         	goto	u6570
  5445  0030EE                     u6571:
  5446  0030EE  EF7F  F018         	goto	l5738
  5447  0030F2                     u6570:
  5448  0030F2  0E00               	movlw	0
  5449  0030F4  6E0F               	movwf	(?___fpclassifyf+1)^0,c
  5450  0030F6  0E02               	movlw	2
  5451  0030F8  6E0E               	movwf	?___fpclassifyf^0,c
  5452  0030FA  EFB4  F018         	goto	l1421
  5453  0030FE                     l5738:
  5454  0030FE  0E00               	movlw	0
  5455  003100  6E0F               	movwf	(?___fpclassifyf+1)^0,c
  5456  003102  0E03               	movlw	3
  5457  003104  6E0E               	movwf	?___fpclassifyf^0,c
  5458  003106  EFB4  F018         	goto	l1421
  5459  00310A                     l5742:
  5460  00310A  2816               	incf	___fpclassifyf@e^0,w,c
  5461  00310C  1017               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5462  00310E  A4D8               	btfss	status,2,c
  5463  003110  EF8C  F018         	goto	u6581
  5464  003114  EF8E  F018         	goto	u6580
  5465  003118                     u6581:
  5466  003118  EFB0  F018         	goto	l5748
  5467  00311C                     u6580:
  5468  00311C  C018  F012         	movff	___fpclassifyf@u,??___fpclassifyf
  5469  003120  C019  F013         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5470  003124  C01A  F014         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5471  003128  C01B  F015         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5472  00312C  0E09               	movlw	9
  5473  00312E                     u6595:
  5474  00312E  90D8               	bcf	status,0,c
  5475  003130  3612               	rlcf	??___fpclassifyf^0,f,c
  5476  003132  3613               	rlcf	(??___fpclassifyf+1)^0,f,c
  5477  003134  3614               	rlcf	(??___fpclassifyf+2)^0,f,c
  5478  003136  3615               	rlcf	(??___fpclassifyf+3)^0,f,c
  5479  003138  2EE8               	decfsz	wreg,f,c
  5480  00313A  EF97  F018         	goto	u6595
  5481  00313E  5012               	movf	??___fpclassifyf^0,w,c
  5482  003140  1013               	iorwf	(??___fpclassifyf+1)^0,w,c
  5483  003142  1014               	iorwf	(??___fpclassifyf+2)^0,w,c
  5484  003144  1015               	iorwf	(??___fpclassifyf+3)^0,w,c
  5485  003146  B4D8               	btfsc	status,2,c
  5486  003148  EFA8  F018         	goto	u6601
  5487  00314C  EFAB  F018         	goto	u6600
  5488  003150                     u6601:
  5489  003150  0E01               	movlw	1
  5490  003152  EFAC  F018         	goto	u6610
  5491  003156                     u6600:
  5492  003156  0E00               	movlw	0
  5493  003158                     u6610:
  5494  003158  6E0E               	movwf	?___fpclassifyf^0,c
  5495  00315A  6A0F               	clrf	(?___fpclassifyf+1)^0,c
  5496  00315C  EFB4  F018         	goto	l1421
  5497  003160                     l5748:
  5498  003160  0E00               	movlw	0
  5499  003162  6E0F               	movwf	(?___fpclassifyf+1)^0,c
  5500  003164  0E04               	movlw	4
  5501  003166  6E0E               	movwf	?___fpclassifyf^0,c
  5502  003168                     l1421:
  5503  003168  0012               	return		;funcret
  5504  00316A                     __end_of___fpclassifyf:
  5505                           	opt callstack 0
  5506                           
  5507 ;; *************** function ___fltol *****************
  5508 ;; Defined at:
  5509 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
  5510 ;; Parameters:    Size  Location     Type
  5511 ;;  f1              4   13[COMRAM] int 
  5512 ;; Auto vars:     Size  Location     Type
  5513 ;;  exp1            1   22[COMRAM] unsigned char 
  5514 ;;  sign1           1   21[COMRAM] unsigned char 
  5515 ;; Return value:  Size  Location     Type
  5516 ;;                  4   13[COMRAM] long 
  5517 ;; Registers used:
  5518 ;;		wreg, status,2, status,0
  5519 ;; Tracked objects:
  5520 ;;		On entry : 0/0
  5521 ;;		On exit  : 0/0
  5522 ;;		Unchanged: 0/0
  5523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5524 ;;      Params:         4       0       0       0       0       0       0
  5525 ;;      Locals:         2       0       0       0       0       0       0
  5526 ;;      Temps:          4       0       0       0       0       0       0
  5527 ;;      Totals:        10       0       0       0       0       0       0
  5528 ;;Total ram usage:       10 bytes
  5529 ;; Hardware stack levels used:    1
  5530 ;; Hardware stack levels required when called:    9
  5531 ;; This function calls:
  5532 ;;		Nothing
  5533 ;; This function is called by:
  5534 ;;		_efgtoa
  5535 ;; This function uses a non-reentrant model
  5536 ;;
  5537                           
  5538                           	psect	text16
  5539  002D62                     __ptext16:
  5540                           	opt callstack 0
  5541  002D62                     ___fltol:
  5542                           	opt callstack 17
  5543  002D62  3410               	rlcf	(___fltol@f1+2)^0,w,c
  5544  002D64  3411               	rlcf	(___fltol@f1+3)^0,w,c
  5545  002D66  6E17               	movwf	___fltol@exp1^0,c
  5546  002D68  5017               	movf	___fltol@exp1^0,w,c
  5547  002D6A  A4D8               	btfss	status,2,c
  5548  002D6C  EFBA  F016         	goto	u7421
  5549  002D70  EFBC  F016         	goto	u7420
  5550  002D74                     u7421:
  5551  002D74  EFC6  F016         	goto	l6210
  5552  002D78                     u7420:
  5553  002D78                     l6206:
  5554  002D78  0E00               	movlw	0
  5555  002D7A  6E0E               	movwf	?___fltol^0,c
  5556  002D7C  0E00               	movlw	0
  5557  002D7E  6E0F               	movwf	(?___fltol+1)^0,c
  5558  002D80  0E00               	movlw	0
  5559  002D82  6E10               	movwf	(?___fltol+2)^0,c
  5560  002D84  0E00               	movlw	0
  5561  002D86  6E11               	movwf	(?___fltol+3)^0,c
  5562  002D88  EF33  F017         	goto	l1037
  5563  002D8C                     l6210:
  5564  002D8C  C00E  F012         	movff	___fltol@f1,??___fltol
  5565  002D90  C00F  F013         	movff	___fltol@f1+1,??___fltol+1
  5566  002D94  C010  F014         	movff	___fltol@f1+2,??___fltol+2
  5567  002D98  C011  F015         	movff	___fltol@f1+3,??___fltol+3
  5568  002D9C  0E20               	movlw	32
  5569  002D9E  EFD6  F016         	goto	u7430
  5570  002DA2                     u7435:
  5571  002DA2  90D8               	bcf	status,0,c
  5572  002DA4  3215               	rrcf	(??___fltol+3)^0,f,c
  5573  002DA6  3214               	rrcf	(??___fltol+2)^0,f,c
  5574  002DA8  3213               	rrcf	(??___fltol+1)^0,f,c
  5575  002DAA  3212               	rrcf	??___fltol^0,f,c
  5576  002DAC                     u7430:
  5577  002DAC  2EE8               	decfsz	wreg,f,c
  5578  002DAE  EFD1  F016         	goto	u7435
  5579  002DB2  5012               	movf	??___fltol^0,w,c
  5580  002DB4  6E16               	movwf	___fltol@sign1^0,c
  5581  002DB6  8E10               	bsf	(___fltol@f1+2)^0,7,c
  5582  002DB8  0EFF               	movlw	255
  5583  002DBA  160E               	andwf	___fltol@f1^0,f,c
  5584  002DBC  0EFF               	movlw	255
  5585  002DBE  160F               	andwf	(___fltol@f1+1)^0,f,c
  5586  002DC0  0EFF               	movlw	255
  5587  002DC2  1610               	andwf	(___fltol@f1+2)^0,f,c
  5588  002DC4  0E00               	movlw	0
  5589  002DC6  1611               	andwf	(___fltol@f1+3)^0,f,c
  5590  002DC8  0E96               	movlw	150
  5591  002DCA  5E17               	subwf	___fltol@exp1^0,f,c
  5592  002DCC  BE17               	btfsc	___fltol@exp1^0,7,c
  5593  002DCE  EFED  F016         	goto	u7440
  5594  002DD2  EFEB  F016         	goto	u7441
  5595  002DD6                     u7441:
  5596  002DD6  EF03  F017         	goto	l6230
  5597  002DDA                     u7440:
  5598  002DDA  5017               	movf	___fltol@exp1^0,w,c
  5599  002DDC  0A80               	xorlw	128
  5600  002DDE  0F97               	addlw	151
  5601  002DE0  B0D8               	btfsc	status,0,c
  5602  002DE2  EFF5  F016         	goto	u7451
  5603  002DE6  EFF7  F016         	goto	u7450
  5604  002DEA                     u7451:
  5605  002DEA  EFF9  F016         	goto	l6226
  5606  002DEE                     u7450:
  5607  002DEE  EFBC  F016         	goto	l6206
  5608  002DF2                     l6226:
  5609  002DF2  90D8               	bcf	status,0,c
  5610  002DF4  3211               	rrcf	(___fltol@f1+3)^0,f,c
  5611  002DF6  3210               	rrcf	(___fltol@f1+2)^0,f,c
  5612  002DF8  320F               	rrcf	(___fltol@f1+1)^0,f,c
  5613  002DFA  320E               	rrcf	___fltol@f1^0,f,c
  5614  002DFC  3E17               	incfsz	___fltol@exp1^0,f,c
  5615  002DFE  EFF9  F016         	goto	l6226
  5616  002E02  EF1B  F017         	goto	l6240
  5617  002E06                     l6230:
  5618  002E06  0E1F               	movlw	31
  5619  002E08  6417               	cpfsgt	___fltol@exp1^0,c
  5620  002E0A  EF09  F017         	goto	u7461
  5621  002E0E  EF0B  F017         	goto	u7460
  5622  002E12                     u7461:
  5623  002E12  EF13  F017         	goto	l6238
  5624  002E16                     u7460:
  5625  002E16  EFBC  F016         	goto	l6206
  5626  002E1A                     l6236:
  5627  002E1A  90D8               	bcf	status,0,c
  5628  002E1C  360E               	rlcf	___fltol@f1^0,f,c
  5629  002E1E  360F               	rlcf	(___fltol@f1+1)^0,f,c
  5630  002E20  3610               	rlcf	(___fltol@f1+2)^0,f,c
  5631  002E22  3611               	rlcf	(___fltol@f1+3)^0,f,c
  5632  002E24  0617               	decf	___fltol@exp1^0,f,c
  5633  002E26                     l6238:
  5634  002E26  5017               	movf	___fltol@exp1^0,w,c
  5635  002E28  A4D8               	btfss	status,2,c
  5636  002E2A  EF19  F017         	goto	u7471
  5637  002E2E  EF1B  F017         	goto	u7470
  5638  002E32                     u7471:
  5639  002E32  EF0D  F017         	goto	l6236
  5640  002E36                     u7470:
  5641  002E36                     l6240:
  5642  002E36  5016               	movf	___fltol@sign1^0,w,c
  5643  002E38  B4D8               	btfsc	status,2,c
  5644  002E3A  EF21  F017         	goto	u7481
  5645  002E3E  EF23  F017         	goto	u7480
  5646  002E42                     u7481:
  5647  002E42  EF2B  F017         	goto	l6244
  5648  002E46                     u7480:
  5649  002E46  1E11               	comf	(___fltol@f1+3)^0,f,c
  5650  002E48  1E10               	comf	(___fltol@f1+2)^0,f,c
  5651  002E4A  1E0F               	comf	(___fltol@f1+1)^0,f,c
  5652  002E4C  6C0E               	negf	___fltol@f1^0,c
  5653  002E4E  0E00               	movlw	0
  5654  002E50  220F               	addwfc	(___fltol@f1+1)^0,f,c
  5655  002E52  2210               	addwfc	(___fltol@f1+2)^0,f,c
  5656  002E54  2211               	addwfc	(___fltol@f1+3)^0,f,c
  5657  002E56                     l6244:
  5658  002E56  C00E  F00E         	movff	___fltol@f1,?___fltol
  5659  002E5A  C00F  F00F         	movff	___fltol@f1+1,?___fltol+1
  5660  002E5E  C010  F010         	movff	___fltol@f1+2,?___fltol+2
  5661  002E62  C011  F011         	movff	___fltol@f1+3,?___fltol+3
  5662  002E66                     l1037:
  5663  002E66  0012               	return		;funcret
  5664  002E68                     __end_of___fltol:
  5665                           	opt callstack 0
  5666                           
  5667 ;; *************** function ___flsub *****************
  5668 ;; Defined at:
  5669 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  5670 ;; Parameters:    Size  Location     Type
  5671 ;;  b               4   52[COMRAM] long 
  5672 ;;  a               4   56[COMRAM] long 
  5673 ;; Auto vars:     Size  Location     Type
  5674 ;;		None
  5675 ;; Return value:  Size  Location     Type
  5676 ;;                  4   52[COMRAM] long 
  5677 ;; Registers used:
  5678 ;;		wreg, status,2, status,0, cstack
  5679 ;; Tracked objects:
  5680 ;;		On entry : 0/0
  5681 ;;		On exit  : 0/0
  5682 ;;		Unchanged: 0/0
  5683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5684 ;;      Params:         8       0       0       0       0       0       0
  5685 ;;      Locals:         0       0       0       0       0       0       0
  5686 ;;      Temps:          0       0       0       0       0       0       0
  5687 ;;      Totals:         8       0       0       0       0       0       0
  5688 ;;Total ram usage:        8 bytes
  5689 ;; Hardware stack levels used:    1
  5690 ;; Hardware stack levels required when called:   10
  5691 ;; This function calls:
  5692 ;;		___fladd
  5693 ;; This function is called by:
  5694 ;;		_efgtoa
  5695 ;; This function uses a non-reentrant model
  5696 ;;
  5697                           
  5698                           	psect	text17
  5699  003946                     __ptext17:
  5700                           	opt callstack 0
  5701  003946                     ___flsub:
  5702                           	opt callstack 16
  5703  003946  0E00               	movlw	0
  5704  003948  1A39               	xorwf	___flsub@a^0,f,c
  5705  00394A  0E00               	movlw	0
  5706  00394C  1A3A               	xorwf	(___flsub@a+1)^0,f,c
  5707  00394E  0E00               	movlw	0
  5708  003950  1A3B               	xorwf	(___flsub@a+2)^0,f,c
  5709  003952  0E80               	movlw	128
  5710  003954  1A3C               	xorwf	(___flsub@a+3)^0,f,c
  5711  003956  C035  F00E         	movff	___flsub@b,___fladd@b
  5712  00395A  C036  F00F         	movff	___flsub@b+1,___fladd@b+1
  5713  00395E  C037  F010         	movff	___flsub@b+2,___fladd@b+2
  5714  003962  C038  F011         	movff	___flsub@b+3,___fladd@b+3
  5715  003966  C039  F012         	movff	___flsub@a,___fladd@a
  5716  00396A  C03A  F013         	movff	___flsub@a+1,___fladd@a+1
  5717  00396E  C03B  F014         	movff	___flsub@a+2,___fladd@a+2
  5718  003972  C03C  F015         	movff	___flsub@a+3,___fladd@a+3
  5719  003976  EC2F  F009         	call	___fladd	;wreg free
  5720  00397A  C00E  F035         	movff	?___fladd,?___flsub
  5721  00397E  C00F  F036         	movff	?___fladd+1,?___flsub+1
  5722  003982  C010  F037         	movff	?___fladd+2,?___flsub+2
  5723  003986  C011  F038         	movff	?___fladd+3,?___flsub+3
  5724  00398A  0012               	return		;funcret
  5725  00398C                     __end_of___flsub:
  5726                           	opt callstack 0
  5727                           
  5728 ;; *************** function ___fladd *****************
  5729 ;; Defined at:
  5730 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  5731 ;; Parameters:    Size  Location     Type
  5732 ;;  b               4   13[COMRAM] long 
  5733 ;;  a               4   17[COMRAM] long 
  5734 ;; Auto vars:     Size  Location     Type
  5735 ;;  grs             1   28[COMRAM] unsigned char 
  5736 ;;  bexp            1   27[COMRAM] unsigned char 
  5737 ;;  aexp            1   26[COMRAM] unsigned char 
  5738 ;;  signs           1   25[COMRAM] unsigned char 
  5739 ;; Return value:  Size  Location     Type
  5740 ;;                  4   13[COMRAM] unsigned char 
  5741 ;; Registers used:
  5742 ;;		wreg, status,2, status,0
  5743 ;; Tracked objects:
  5744 ;;		On entry : 0/0
  5745 ;;		On exit  : 0/0
  5746 ;;		Unchanged: 0/0
  5747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5748 ;;      Params:         8       0       0       0       0       0       0
  5749 ;;      Locals:         4       0       0       0       0       0       0
  5750 ;;      Temps:          4       0       0       0       0       0       0
  5751 ;;      Totals:        16       0       0       0       0       0       0
  5752 ;;Total ram usage:       16 bytes
  5753 ;; Hardware stack levels used:    1
  5754 ;; Hardware stack levels required when called:    9
  5755 ;; This function calls:
  5756 ;;		Nothing
  5757 ;; This function is called by:
  5758 ;;		_efgtoa
  5759 ;;		___flsub
  5760 ;; This function uses a non-reentrant model
  5761 ;;
  5762                           
  5763                           	psect	text18
  5764  00125E                     __ptext18:
  5765                           	opt callstack 0
  5766  00125E                     ___fladd:
  5767                           	opt callstack 16
  5768  00125E  5011               	movf	(___fladd@b+3)^0,w,c
  5769  001260  0B80               	andlw	128
  5770  001262  6E1A               	movwf	___fladd@signs^0,c
  5771  001264  5011               	movf	(___fladd@b+3)^0,w,c
  5772  001266  2411               	addwf	(___fladd@b+3)^0,w,c
  5773  001268  6E1C               	movwf	___fladd@bexp^0,c
  5774  00126A  AE10               	btfss	(___fladd@b+2)^0,7,c
  5775  00126C  EF3A  F009         	goto	u6121
  5776  001270  EF3C  F009         	goto	u6120
  5777  001274                     u6121:
  5778  001274  EF3D  F009         	goto	l5512
  5779  001278                     u6120:
  5780  001278  801C               	bsf	___fladd@bexp^0,0,c
  5781  00127A                     l5512:
  5782  00127A  501C               	movf	___fladd@bexp^0,w,c
  5783  00127C  B4D8               	btfsc	status,2,c
  5784  00127E  EF43  F009         	goto	u6131
  5785  001282  EF45  F009         	goto	u6130
  5786  001286                     u6131:
  5787  001286  EF5A  F009         	goto	l5522
  5788  00128A                     u6130:
  5789  00128A  281C               	incf	___fladd@bexp^0,w,c
  5790  00128C  A4D8               	btfss	status,2,c
  5791  00128E  EF4B  F009         	goto	u6141
  5792  001292  EF4D  F009         	goto	u6140
  5793  001296                     u6141:
  5794  001296  EF55  F009         	goto	l5518
  5795  00129A                     u6140:
  5796  00129A  0E00               	movlw	0
  5797  00129C  6E0E               	movwf	___fladd@b^0,c
  5798  00129E  0E00               	movlw	0
  5799  0012A0  6E0F               	movwf	(___fladd@b+1)^0,c
  5800  0012A2  0E00               	movlw	0
  5801  0012A4  6E10               	movwf	(___fladd@b+2)^0,c
  5802  0012A6  0E00               	movlw	0
  5803  0012A8  6E11               	movwf	(___fladd@b+3)^0,c
  5804  0012AA                     l5518:
  5805  0012AA  8E10               	bsf	(___fladd@b+2)^0,7,c
  5806  0012AC  0E00               	movlw	0
  5807  0012AE  6E11               	movwf	(___fladd@b+3)^0,c
  5808  0012B0  EF62  F009         	goto	l5524
  5809  0012B4                     l5522:
  5810  0012B4  0E00               	movlw	0
  5811  0012B6  6E0E               	movwf	___fladd@b^0,c
  5812  0012B8  0E00               	movlw	0
  5813  0012BA  6E0F               	movwf	(___fladd@b+1)^0,c
  5814  0012BC  0E00               	movlw	0
  5815  0012BE  6E10               	movwf	(___fladd@b+2)^0,c
  5816  0012C0  0E00               	movlw	0
  5817  0012C2  6E11               	movwf	(___fladd@b+3)^0,c
  5818  0012C4                     l5524:
  5819  0012C4  5015               	movf	(___fladd@a+3)^0,w,c
  5820  0012C6  0B80               	andlw	128
  5821  0012C8  6E1B               	movwf	___fladd@aexp^0,c
  5822  0012CA  501A               	movf	___fladd@signs^0,w,c
  5823  0012CC  181B               	xorwf	___fladd@aexp^0,w,c
  5824  0012CE  B4D8               	btfsc	status,2,c
  5825  0012D0  EF6C  F009         	goto	u6151
  5826  0012D4  EF6E  F009         	goto	u6150
  5827  0012D8                     u6151:
  5828  0012D8  EF6F  F009         	goto	l5530
  5829  0012DC                     u6150:
  5830  0012DC  8C1A               	bsf	___fladd@signs^0,6,c
  5831  0012DE                     l5530:
  5832  0012DE  5015               	movf	(___fladd@a+3)^0,w,c
  5833  0012E0  2415               	addwf	(___fladd@a+3)^0,w,c
  5834  0012E2  6E1B               	movwf	___fladd@aexp^0,c
  5835  0012E4  AE14               	btfss	(___fladd@a+2)^0,7,c
  5836  0012E6  EF77  F009         	goto	u6161
  5837  0012EA  EF79  F009         	goto	u6160
  5838  0012EE                     u6161:
  5839  0012EE  EF7A  F009         	goto	l5536
  5840  0012F2                     u6160:
  5841  0012F2  801B               	bsf	___fladd@aexp^0,0,c
  5842  0012F4                     l5536:
  5843  0012F4  501B               	movf	___fladd@aexp^0,w,c
  5844  0012F6  B4D8               	btfsc	status,2,c
  5845  0012F8  EF80  F009         	goto	u6171
  5846  0012FC  EF82  F009         	goto	u6170
  5847  001300                     u6171:
  5848  001300  EF97  F009         	goto	l5546
  5849  001304                     u6170:
  5850  001304  281B               	incf	___fladd@aexp^0,w,c
  5851  001306  A4D8               	btfss	status,2,c
  5852  001308  EF88  F009         	goto	u6181
  5853  00130C  EF8A  F009         	goto	u6180
  5854  001310                     u6181:
  5855  001310  EF92  F009         	goto	l5542
  5856  001314                     u6180:
  5857  001314  0E00               	movlw	0
  5858  001316  6E12               	movwf	___fladd@a^0,c
  5859  001318  0E00               	movlw	0
  5860  00131A  6E13               	movwf	(___fladd@a+1)^0,c
  5861  00131C  0E00               	movlw	0
  5862  00131E  6E14               	movwf	(___fladd@a+2)^0,c
  5863  001320  0E00               	movlw	0
  5864  001322  6E15               	movwf	(___fladd@a+3)^0,c
  5865  001324                     l5542:
  5866  001324  8E14               	bsf	(___fladd@a+2)^0,7,c
  5867  001326  0E00               	movlw	0
  5868  001328  6E15               	movwf	(___fladd@a+3)^0,c
  5869  00132A  EF9F  F009         	goto	l5548
  5870  00132E                     l5546:
  5871  00132E  0E00               	movlw	0
  5872  001330  6E12               	movwf	___fladd@a^0,c
  5873  001332  0E00               	movlw	0
  5874  001334  6E13               	movwf	(___fladd@a+1)^0,c
  5875  001336  0E00               	movlw	0
  5876  001338  6E14               	movwf	(___fladd@a+2)^0,c
  5877  00133A  0E00               	movlw	0
  5878  00133C  6E15               	movwf	(___fladd@a+3)^0,c
  5879  00133E                     l5548:
  5880  00133E  501C               	movf	___fladd@bexp^0,w,c
  5881  001340  5C1B               	subwf	___fladd@aexp^0,w,c
  5882  001342  B0D8               	btfsc	status,0,c
  5883  001344  EFA6  F009         	goto	u6191
  5884  001348  EFA8  F009         	goto	u6190
  5885  00134C                     u6191:
  5886  00134C  EFCF  F009         	goto	l5584
  5887  001350                     u6190:
  5888  001350  AC1A               	btfss	___fladd@signs^0,6,c
  5889  001352  EFAD  F009         	goto	u6201
  5890  001356  EFAF  F009         	goto	u6200
  5891  00135A                     u6201:
  5892  00135A  EFB1  F009         	goto	l5554
  5893  00135E                     u6200:
  5894  00135E  0E80               	movlw	128
  5895  001360  1A1A               	xorwf	___fladd@signs^0,f,c
  5896  001362                     l5554:
  5897  001362  C01C  F01D         	movff	___fladd@bexp,___fladd@grs
  5898  001366  C01B  F01C         	movff	___fladd@aexp,___fladd@bexp
  5899  00136A  C01D  F01B         	movff	___fladd@grs,___fladd@aexp
  5900  00136E  C00E  F01D         	movff	___fladd@b,___fladd@grs
  5901  001372  C012  F00E         	movff	___fladd@a,___fladd@b
  5902  001376  C01D  F012         	movff	___fladd@grs,___fladd@a
  5903  00137A  C00F  F01D         	movff	___fladd@b+1,___fladd@grs
  5904  00137E  C013  F00F         	movff	___fladd@a+1,___fladd@b+1
  5905  001382  C01D  F013         	movff	___fladd@grs,___fladd@a+1
  5906  001386  C010  F01D         	movff	___fladd@b+2,___fladd@grs
  5907  00138A  C014  F010         	movff	___fladd@a+2,___fladd@b+2
  5908  00138E  C01D  F014         	movff	___fladd@grs,___fladd@a+2
  5909  001392  C011  F01D         	movff	___fladd@b+3,___fladd@grs
  5910  001396  C015  F011         	movff	___fladd@a+3,___fladd@b+3
  5911  00139A  C01D  F015         	movff	___fladd@grs,___fladd@a+3
  5912  00139E                     l5584:
  5913  00139E  0E00               	movlw	0
  5914  0013A0  6E1D               	movwf	___fladd@grs^0,c
  5915  0013A2  501C               	movf	___fladd@bexp^0,w,c
  5916  0013A4  C01B  F016         	movff	___fladd@aexp,??___fladd
  5917  0013A8  6A17               	clrf	(??___fladd+1)^0,c
  5918  0013AA  5E16               	subwf	??___fladd^0,f,c
  5919  0013AC  0E00               	movlw	0
  5920  0013AE  5A17               	subwfb	(??___fladd+1)^0,f,c
  5921  0013B0  BE17               	btfsc	(??___fladd+1)^0,7,c
  5922  0013B2  EFE4  F009         	goto	u6211
  5923  0013B6  5017               	movf	(??___fladd+1)^0,w,c
  5924  0013B8  E109               	bnz	u6210
  5925  0013BA  0E1A               	movlw	26
  5926  0013BC  5C16               	subwf	??___fladd^0,w,c
  5927  0013BE  A0D8               	btfss	status,0,c
  5928  0013C0  EFE4  F009         	goto	u6211
  5929  0013C4  EFE6  F009         	goto	u6210
  5930  0013C8                     u6211:
  5931  0013C8  EF1D  F00A         	goto	l1269
  5932  0013CC                     u6210:
  5933  0013CC  500E               	movf	___fladd@b^0,w,c
  5934  0013CE  100F               	iorwf	(___fladd@b+1)^0,w,c
  5935  0013D0  1010               	iorwf	(___fladd@b+2)^0,w,c
  5936  0013D2  1011               	iorwf	(___fladd@b+3)^0,w,c
  5937  0013D4  A4D8               	btfss	status,2,c
  5938  0013D6  EFEF  F009         	goto	u6221
  5939  0013DA  EFF2  F009         	goto	u6220
  5940  0013DE                     u6221:
  5941  0013DE  0E01               	movlw	1
  5942  0013E0  EFF3  F009         	goto	u6230
  5943  0013E4                     u6220:
  5944  0013E4  0E00               	movlw	0
  5945  0013E6                     u6230:
  5946  0013E6  6E1D               	movwf	___fladd@grs^0,c
  5947  0013E8  0E00               	movlw	0
  5948  0013EA  6E0E               	movwf	___fladd@b^0,c
  5949  0013EC  0E00               	movlw	0
  5950  0013EE  6E0F               	movwf	(___fladd@b+1)^0,c
  5951  0013F0  0E00               	movlw	0
  5952  0013F2  6E10               	movwf	(___fladd@b+2)^0,c
  5953  0013F4  0E00               	movlw	0
  5954  0013F6  6E11               	movwf	(___fladd@b+3)^0,c
  5955  0013F8  C01B  F01C         	movff	___fladd@aexp,___fladd@bexp
  5956  0013FC  EF26  F00A         	goto	l1268
  5957  001400                     l1270:
  5958  001400  A01D               	btfss	___fladd@grs^0,0,c
  5959  001402  EF05  F00A         	goto	u6241
  5960  001406  EF07  F00A         	goto	u6240
  5961  00140A                     u6241:
  5962  00140A  EF0D  F00A         	goto	l5596
  5963  00140E                     u6240:
  5964  00140E  90D8               	bcf	status,0,c
  5965  001410  301D               	rrcf	___fladd@grs^0,w,c
  5966  001412  0901               	iorlw	1
  5967  001414  6E1D               	movwf	___fladd@grs^0,c
  5968  001416  EF0F  F00A         	goto	l5598
  5969  00141A                     l5596:
  5970  00141A  90D8               	bcf	status,0,c
  5971  00141C  321D               	rrcf	___fladd@grs^0,f,c
  5972  00141E                     l5598:
  5973  00141E  A00E               	btfss	___fladd@b^0,0,c
  5974  001420  EF14  F00A         	goto	u6251
  5975  001424  EF16  F00A         	goto	u6250
  5976  001428                     u6251:
  5977  001428  EF17  F00A         	goto	l5602
  5978  00142C                     u6250:
  5979  00142C  8E1D               	bsf	___fladd@grs^0,7,c
  5980  00142E                     l5602:
  5981  00142E  3411               	rlcf	(___fladd@b+3)^0,w,c
  5982  001430  3211               	rrcf	(___fladd@b+3)^0,f,c
  5983  001432  3210               	rrcf	(___fladd@b+2)^0,f,c
  5984  001434  320F               	rrcf	(___fladd@b+1)^0,f,c
  5985  001436  320E               	rrcf	___fladd@b^0,f,c
  5986  001438  2A1C               	incf	___fladd@bexp^0,f,c
  5987  00143A                     l1269:
  5988  00143A  501B               	movf	___fladd@aexp^0,w,c
  5989  00143C  5C1C               	subwf	___fladd@bexp^0,w,c
  5990  00143E  A0D8               	btfss	status,0,c
  5991  001440  EF24  F00A         	goto	u6261
  5992  001444  EF26  F00A         	goto	u6260
  5993  001448                     u6261:
  5994  001448  EF00  F00A         	goto	l1270
  5995  00144C                     u6260:
  5996  00144C                     l1268:
  5997  00144C  BC1A               	btfsc	___fladd@signs^0,6,c
  5998  00144E  EF2B  F00A         	goto	u6271
  5999  001452  EF2D  F00A         	goto	u6270
  6000  001456                     u6271:
  6001  001456  EF6D  F00A         	goto	l5630
  6002  00145A                     u6270:
  6003  00145A  501C               	movf	___fladd@bexp^0,w,c
  6004  00145C  A4D8               	btfss	status,2,c
  6005  00145E  EF33  F00A         	goto	u6281
  6006  001462  EF35  F00A         	goto	u6280
  6007  001466                     u6281:
  6008  001466  EF3F  F00A         	goto	l5612
  6009  00146A                     u6280:
  6010  00146A  0E00               	movlw	0
  6011  00146C  6E0E               	movwf	?___fladd^0,c
  6012  00146E  0E00               	movlw	0
  6013  001470  6E0F               	movwf	(?___fladd+1)^0,c
  6014  001472  0E00               	movlw	0
  6015  001474  6E10               	movwf	(?___fladd+2)^0,c
  6016  001476  0E00               	movlw	0
  6017  001478  6E11               	movwf	(?___fladd+3)^0,c
  6018  00147A  EF8E  F00B         	goto	l1277
  6019  00147E                     l5612:
  6020  00147E  5012               	movf	___fladd@a^0,w,c
  6021  001480  260E               	addwf	___fladd@b^0,f,c
  6022  001482  5013               	movf	(___fladd@a+1)^0,w,c
  6023  001484  220F               	addwfc	(___fladd@b+1)^0,f,c
  6024  001486  5014               	movf	(___fladd@a+2)^0,w,c
  6025  001488  2210               	addwfc	(___fladd@b+2)^0,f,c
  6026  00148A  5015               	movf	(___fladd@a+3)^0,w,c
  6027  00148C  2211               	addwfc	(___fladd@b+3)^0,f,c
  6028  00148E  A011               	btfss	(___fladd@b+3)^0,0,c
  6029  001490  EF4C  F00A         	goto	u6291
  6030  001494  EF4E  F00A         	goto	u6290
  6031  001498                     u6291:
  6032  001498  EFFA  F00A         	goto	l5666
  6033  00149C                     u6290:
  6034  00149C  A01D               	btfss	___fladd@grs^0,0,c
  6035  00149E  EF53  F00A         	goto	u6301
  6036  0014A2  EF55  F00A         	goto	u6300
  6037  0014A6                     u6301:
  6038  0014A6  EF5B  F00A         	goto	l5620
  6039  0014AA                     u6300:
  6040  0014AA  90D8               	bcf	status,0,c
  6041  0014AC  301D               	rrcf	___fladd@grs^0,w,c
  6042  0014AE  0901               	iorlw	1
  6043  0014B0  6E1D               	movwf	___fladd@grs^0,c
  6044  0014B2  EF5D  F00A         	goto	l5622
  6045  0014B6                     l5620:
  6046  0014B6  90D8               	bcf	status,0,c
  6047  0014B8  321D               	rrcf	___fladd@grs^0,f,c
  6048  0014BA                     l5622:
  6049  0014BA  A00E               	btfss	___fladd@b^0,0,c
  6050  0014BC  EF62  F00A         	goto	u6311
  6051  0014C0  EF64  F00A         	goto	u6310
  6052  0014C4                     u6311:
  6053  0014C4  EF65  F00A         	goto	l5626
  6054  0014C8                     u6310:
  6055  0014C8  8E1D               	bsf	___fladd@grs^0,7,c
  6056  0014CA                     l5626:
  6057  0014CA  3411               	rlcf	(___fladd@b+3)^0,w,c
  6058  0014CC  3211               	rrcf	(___fladd@b+3)^0,f,c
  6059  0014CE  3210               	rrcf	(___fladd@b+2)^0,f,c
  6060  0014D0  320F               	rrcf	(___fladd@b+1)^0,f,c
  6061  0014D2  320E               	rrcf	___fladd@b^0,f,c
  6062  0014D4  2A1C               	incf	___fladd@bexp^0,f,c
  6063  0014D6  EFFA  F00A         	goto	l5666
  6064  0014DA                     l5630:
  6065  0014DA  5012               	movf	___fladd@a^0,w,c
  6066  0014DC  5C0E               	subwf	___fladd@b^0,w,c
  6067  0014DE  5013               	movf	(___fladd@a+1)^0,w,c
  6068  0014E0  580F               	subwfb	(___fladd@b+1)^0,w,c
  6069  0014E2  5014               	movf	(___fladd@a+2)^0,w,c
  6070  0014E4  5810               	subwfb	(___fladd@b+2)^0,w,c
  6071  0014E6  5011               	movf	(___fladd@b+3)^0,w,c
  6072  0014E8  0A80               	xorlw	128
  6073  0014EA  6E16               	movwf	??___fladd^0,c
  6074  0014EC  5015               	movf	(___fladd@a+3)^0,w,c
  6075  0014EE  0A80               	xorlw	128
  6076  0014F0  5816               	subwfb	??___fladd^0,w,c
  6077  0014F2  B0D8               	btfsc	status,0,c
  6078  0014F4  EF7E  F00A         	goto	u6321
  6079  0014F8  EF80  F00A         	goto	u6320
  6080  0014FC                     u6321:
  6081  0014FC  EFAB  F00A         	goto	l5640
  6082  001500                     u6320:
  6083  001500  500E               	movf	___fladd@b^0,w,c
  6084  001502  5C12               	subwf	___fladd@a^0,w,c
  6085  001504  6E16               	movwf	??___fladd^0,c
  6086  001506  500F               	movf	(___fladd@b+1)^0,w,c
  6087  001508  5813               	subwfb	(___fladd@a+1)^0,w,c
  6088  00150A  6E17               	movwf	(??___fladd+1)^0,c
  6089  00150C  5010               	movf	(___fladd@b+2)^0,w,c
  6090  00150E  5814               	subwfb	(___fladd@a+2)^0,w,c
  6091  001510  6E18               	movwf	(??___fladd+2)^0,c
  6092  001512  5011               	movf	(___fladd@b+3)^0,w,c
  6093  001514  5815               	subwfb	(___fladd@a+3)^0,w,c
  6094  001516  6E19               	movwf	(??___fladd+3)^0,c
  6095  001518  0EFF               	movlw	255
  6096  00151A  2416               	addwf	??___fladd^0,w,c
  6097  00151C  6E0E               	movwf	___fladd@b^0,c
  6098  00151E  0EFF               	movlw	255
  6099  001520  2017               	addwfc	(??___fladd+1)^0,w,c
  6100  001522  6E0F               	movwf	(___fladd@b+1)^0,c
  6101  001524  0EFF               	movlw	255
  6102  001526  2018               	addwfc	(??___fladd+2)^0,w,c
  6103  001528  6E10               	movwf	(___fladd@b+2)^0,c
  6104  00152A  0EFF               	movlw	255
  6105  00152C  2019               	addwfc	(??___fladd+3)^0,w,c
  6106  00152E  6E11               	movwf	(___fladd@b+3)^0,c
  6107  001530  0E80               	movlw	128
  6108  001532  1A1A               	xorwf	___fladd@signs^0,f,c
  6109  001534  6C1D               	negf	___fladd@grs^0,c
  6110  001536  501D               	movf	___fladd@grs^0,w,c
  6111  001538  A4D8               	btfss	status,2,c
  6112  00153A  EFA1  F00A         	goto	u6331
  6113  00153E  EFA3  F00A         	goto	u6330
  6114  001542                     u6331:
  6115  001542  EFB3  F00A         	goto	l1285
  6116  001546                     u6330:
  6117  001546  0E01               	movlw	1
  6118  001548  260E               	addwf	___fladd@b^0,f,c
  6119  00154A  0E00               	movlw	0
  6120  00154C  220F               	addwfc	(___fladd@b+1)^0,f,c
  6121  00154E  2210               	addwfc	(___fladd@b+2)^0,f,c
  6122  001550  2211               	addwfc	(___fladd@b+3)^0,f,c
  6123  001552  EFB3  F00A         	goto	l1285
  6124  001556                     l5640:
  6125  001556  5012               	movf	___fladd@a^0,w,c
  6126  001558  5E0E               	subwf	___fladd@b^0,f,c
  6127  00155A  5013               	movf	(___fladd@a+1)^0,w,c
  6128  00155C  5A0F               	subwfb	(___fladd@b+1)^0,f,c
  6129  00155E  5014               	movf	(___fladd@a+2)^0,w,c
  6130  001560  5A10               	subwfb	(___fladd@b+2)^0,f,c
  6131  001562  5015               	movf	(___fladd@a+3)^0,w,c
  6132  001564  5A11               	subwfb	(___fladd@b+3)^0,f,c
  6133  001566                     l1285:
  6134  001566  500E               	movf	___fladd@b^0,w,c
  6135  001568  100F               	iorwf	(___fladd@b+1)^0,w,c
  6136  00156A  1010               	iorwf	(___fladd@b+2)^0,w,c
  6137  00156C  1011               	iorwf	(___fladd@b+3)^0,w,c
  6138  00156E  A4D8               	btfss	status,2,c
  6139  001570  EFBC  F00A         	goto	u6341
  6140  001574  EFBE  F00A         	goto	u6340
  6141  001578                     u6341:
  6142  001578  EFF3  F00A         	goto	l5664
  6143  00157C                     u6340:
  6144  00157C  501D               	movf	___fladd@grs^0,w,c
  6145  00157E  A4D8               	btfss	status,2,c
  6146  001580  EFC4  F00A         	goto	u6351
  6147  001584  EFC6  F00A         	goto	u6350
  6148  001588                     u6351:
  6149  001588  EFF3  F00A         	goto	l5664
  6150  00158C                     u6350:
  6151  00158C  0E00               	movlw	0
  6152  00158E  6E0E               	movwf	?___fladd^0,c
  6153  001590  0E00               	movlw	0
  6154  001592  6E0F               	movwf	(?___fladd+1)^0,c
  6155  001594  0E00               	movlw	0
  6156  001596  6E10               	movwf	(?___fladd+2)^0,c
  6157  001598  0E00               	movlw	0
  6158  00159A  6E11               	movwf	(?___fladd+3)^0,c
  6159  00159C  EF8E  F00B         	goto	l1277
  6160  0015A0                     l5648:
  6161  0015A0  90D8               	bcf	status,0,c
  6162  0015A2  360E               	rlcf	___fladd@b^0,f,c
  6163  0015A4  360F               	rlcf	(___fladd@b+1)^0,f,c
  6164  0015A6  3610               	rlcf	(___fladd@b+2)^0,f,c
  6165  0015A8  3611               	rlcf	(___fladd@b+3)^0,f,c
  6166  0015AA  AE1D               	btfss	___fladd@grs^0,7,c
  6167  0015AC  EFDA  F00A         	goto	u6361
  6168  0015B0  EFDC  F00A         	goto	u6360
  6169  0015B4                     u6361:
  6170  0015B4  EFDD  F00A         	goto	l5654
  6171  0015B8                     u6360:
  6172  0015B8  800E               	bsf	___fladd@b^0,0,c
  6173  0015BA                     l5654:
  6174  0015BA  A01D               	btfss	___fladd@grs^0,0,c
  6175  0015BC  EFE2  F00A         	goto	u6371
  6176  0015C0  EFE4  F00A         	goto	u6370
  6177  0015C4                     u6371:
  6178  0015C4  EFE8  F00A         	goto	l5658
  6179  0015C8                     u6370:
  6180  0015C8  80D8               	bsf	status,0,c
  6181  0015CA  361D               	rlcf	___fladd@grs^0,f,c
  6182  0015CC  EFEA  F00A         	goto	l5660
  6183  0015D0                     l5658:
  6184  0015D0  90D8               	bcf	status,0,c
  6185  0015D2  361D               	rlcf	___fladd@grs^0,f,c
  6186  0015D4                     l5660:
  6187  0015D4  501C               	movf	___fladd@bexp^0,w,c
  6188  0015D6  B4D8               	btfsc	status,2,c
  6189  0015D8  EFF0  F00A         	goto	u6381
  6190  0015DC  EFF2  F00A         	goto	u6380
  6191  0015E0                     u6381:
  6192  0015E0  EFF3  F00A         	goto	l5664
  6193  0015E4                     u6380:
  6194  0015E4  061C               	decf	___fladd@bexp^0,f,c
  6195  0015E6                     l5664:
  6196  0015E6  AE10               	btfss	(___fladd@b+2)^0,7,c
  6197  0015E8  EFF8  F00A         	goto	u6391
  6198  0015EC  EFFA  F00A         	goto	u6390
  6199  0015F0                     u6391:
  6200  0015F0  EFD0  F00A         	goto	l5648
  6201  0015F4                     u6390:
  6202  0015F4                     l5666:
  6203  0015F4  0E00               	movlw	0
  6204  0015F6  6E1B               	movwf	___fladd@aexp^0,c
  6205  0015F8  AE1D               	btfss	___fladd@grs^0,7,c
  6206  0015FA  EF01  F00B         	goto	u6401
  6207  0015FE  EF03  F00B         	goto	u6400
  6208  001602                     u6401:
  6209  001602  EF1B  F00B         	goto	l1294
  6210  001606                     u6400:
  6211  001606  C01D  F016         	movff	___fladd@grs,??___fladd
  6212  00160A  0E7F               	movlw	127
  6213  00160C  1616               	andwf	??___fladd^0,f,c
  6214  00160E  B4D8               	btfsc	status,2,c
  6215  001610  EF0C  F00B         	goto	u6411
  6216  001614  EF0E  F00B         	goto	u6410
  6217  001618                     u6411:
  6218  001618  EF12  F00B         	goto	l1295
  6219  00161C                     u6410:
  6220  00161C                     l5672:
  6221  00161C  0E01               	movlw	1
  6222  00161E  6E1B               	movwf	___fladd@aexp^0,c
  6223  001620  EF1B  F00B         	goto	l1294
  6224  001624                     l1295:
  6225  001624  A00E               	btfss	___fladd@b^0,0,c
  6226  001626  EF17  F00B         	goto	u6421
  6227  00162A  EF19  F00B         	goto	u6420
  6228  00162E                     u6421:
  6229  00162E  EF1B  F00B         	goto	l1294
  6230  001632                     u6420:
  6231  001632  EF0E  F00B         	goto	l5672
  6232  001636                     l1294:
  6233  001636  501B               	movf	___fladd@aexp^0,w,c
  6234  001638  B4D8               	btfsc	status,2,c
  6235  00163A  EF21  F00B         	goto	u6431
  6236  00163E  EF23  F00B         	goto	u6430
  6237  001642                     u6431:
  6238  001642  EF4E  F00B         	goto	l5684
  6239  001646                     u6430:
  6240  001646  0E01               	movlw	1
  6241  001648  260E               	addwf	___fladd@b^0,f,c
  6242  00164A  0E00               	movlw	0
  6243  00164C  220F               	addwfc	(___fladd@b+1)^0,f,c
  6244  00164E  2210               	addwfc	(___fladd@b+2)^0,f,c
  6245  001650  2211               	addwfc	(___fladd@b+3)^0,f,c
  6246  001652  A011               	btfss	(___fladd@b+3)^0,0,c
  6247  001654  EF2E  F00B         	goto	u6441
  6248  001658  EF30  F00B         	goto	u6440
  6249  00165C                     u6441:
  6250  00165C  EF4E  F00B         	goto	l5684
  6251  001660                     u6440:
  6252  001660  C00E  F016         	movff	___fladd@b,??___fladd
  6253  001664  C00F  F017         	movff	___fladd@b+1,??___fladd+1
  6254  001668  C010  F018         	movff	___fladd@b+2,??___fladd+2
  6255  00166C  C011  F019         	movff	___fladd@b+3,??___fladd+3
  6256  001670  3419               	rlcf	(??___fladd+3)^0,w,c
  6257  001672  3219               	rrcf	(??___fladd+3)^0,f,c
  6258  001674  3218               	rrcf	(??___fladd+2)^0,f,c
  6259  001676  3217               	rrcf	(??___fladd+1)^0,f,c
  6260  001678  3216               	rrcf	??___fladd^0,f,c
  6261  00167A  C016  F00E         	movff	??___fladd,___fladd@b
  6262  00167E  C017  F00F         	movff	??___fladd+1,___fladd@b+1
  6263  001682  C018  F010         	movff	??___fladd+2,___fladd@b+2
  6264  001686  C019  F011         	movff	??___fladd+3,___fladd@b+3
  6265  00168A  281C               	incf	___fladd@bexp^0,w,c
  6266  00168C  B4D8               	btfsc	status,2,c
  6267  00168E  EF4B  F00B         	goto	u6451
  6268  001692  EF4D  F00B         	goto	u6450
  6269  001696                     u6451:
  6270  001696  EF4E  F00B         	goto	l5684
  6271  00169A                     u6450:
  6272  00169A  2A1C               	incf	___fladd@bexp^0,f,c
  6273  00169C                     l5684:
  6274  00169C  281C               	incf	___fladd@bexp^0,w,c
  6275  00169E  B4D8               	btfsc	status,2,c
  6276  0016A0  EF54  F00B         	goto	u6461
  6277  0016A4  EF56  F00B         	goto	u6460
  6278  0016A8                     u6461:
  6279  0016A8  EF5E  F00B         	goto	l5688
  6280  0016AC                     u6460:
  6281  0016AC  501C               	movf	___fladd@bexp^0,w,c
  6282  0016AE  A4D8               	btfss	status,2,c
  6283  0016B0  EF5C  F00B         	goto	u6471
  6284  0016B4  EF5E  F00B         	goto	u6470
  6285  0016B8                     u6471:
  6286  0016B8  EF70  F00B         	goto	l5692
  6287  0016BC                     u6470:
  6288  0016BC                     l5688:
  6289  0016BC  0E00               	movlw	0
  6290  0016BE  6E0E               	movwf	___fladd@b^0,c
  6291  0016C0  0E00               	movlw	0
  6292  0016C2  6E0F               	movwf	(___fladd@b+1)^0,c
  6293  0016C4  0E00               	movlw	0
  6294  0016C6  6E10               	movwf	(___fladd@b+2)^0,c
  6295  0016C8  0E00               	movlw	0
  6296  0016CA  6E11               	movwf	(___fladd@b+3)^0,c
  6297  0016CC  501C               	movf	___fladd@bexp^0,w,c
  6298  0016CE  A4D8               	btfss	status,2,c
  6299  0016D0  EF6C  F00B         	goto	u6481
  6300  0016D4  EF6E  F00B         	goto	u6480
  6301  0016D8                     u6481:
  6302  0016D8  EF70  F00B         	goto	l5692
  6303  0016DC                     u6480:
  6304  0016DC  0E00               	movlw	0
  6305  0016DE  6E1A               	movwf	___fladd@signs^0,c
  6306  0016E0                     l5692:
  6307  0016E0  A01C               	btfss	___fladd@bexp^0,0,c
  6308  0016E2  EF75  F00B         	goto	u6491
  6309  0016E6  EF77  F00B         	goto	u6490
  6310  0016EA                     u6491:
  6311  0016EA  EF7A  F00B         	goto	l5696
  6312  0016EE                     u6490:
  6313  0016EE  8E10               	bsf	(___fladd@b+2)^0,7,c
  6314  0016F0  EF7B  F00B         	goto	l5698
  6315  0016F4                     l5696:
  6316  0016F4  9E10               	bcf	(___fladd@b+2)^0,7,c
  6317  0016F6                     l5698:
  6318  0016F6  90D8               	bcf	status,0,c
  6319  0016F8  301C               	rrcf	___fladd@bexp^0,w,c
  6320  0016FA  6E11               	movwf	(___fladd@b+3)^0,c
  6321  0016FC  AE1A               	btfss	___fladd@signs^0,7,c
  6322  0016FE  EF83  F00B         	goto	u6501
  6323  001702  EF85  F00B         	goto	u6500
  6324  001706                     u6501:
  6325  001706  EF86  F00B         	goto	l5704
  6326  00170A                     u6500:
  6327  00170A  8E11               	bsf	(___fladd@b+3)^0,7,c
  6328  00170C                     l5704:
  6329  00170C  C00E  F00E         	movff	___fladd@b,?___fladd
  6330  001710  C00F  F00F         	movff	___fladd@b+1,?___fladd+1
  6331  001714  C010  F010         	movff	___fladd@b+2,?___fladd+2
  6332  001718  C011  F011         	movff	___fladd@b+3,?___fladd+3
  6333  00171C                     l1277:
  6334  00171C  0012               	return		;funcret
  6335  00171E                     __end_of___fladd:
  6336                           	opt callstack 0
  6337                           
  6338 ;; *************** function ___flneg *****************
  6339 ;; Defined at:
  6340 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
  6341 ;; Parameters:    Size  Location     Type
  6342 ;;  f1              4   13[COMRAM] unsigned char 
  6343 ;; Auto vars:     Size  Location     Type
  6344 ;;		None
  6345 ;; Return value:  Size  Location     Type
  6346 ;;                  4   13[COMRAM] unsigned char 
  6347 ;; Registers used:
  6348 ;;		wreg, status,2, status,0
  6349 ;; Tracked objects:
  6350 ;;		On entry : 0/0
  6351 ;;		On exit  : 0/0
  6352 ;;		Unchanged: 0/0
  6353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6354 ;;      Params:         4       0       0       0       0       0       0
  6355 ;;      Locals:         0       0       0       0       0       0       0
  6356 ;;      Temps:          0       0       0       0       0       0       0
  6357 ;;      Totals:         4       0       0       0       0       0       0
  6358 ;;Total ram usage:        4 bytes
  6359 ;; Hardware stack levels used:    1
  6360 ;; Hardware stack levels required when called:    9
  6361 ;; This function calls:
  6362 ;;		Nothing
  6363 ;; This function is called by:
  6364 ;;		_efgtoa
  6365 ;; This function uses a non-reentrant model
  6366 ;;
  6367                           
  6368                           	psect	text19
  6369  003B04                     __ptext19:
  6370                           	opt callstack 0
  6371  003B04                     ___flneg:
  6372                           	opt callstack 17
  6373  003B04  500E               	movf	___flneg@f1^0,w,c
  6374  003B06  100F               	iorwf	(___flneg@f1+1)^0,w,c
  6375  003B08  1010               	iorwf	(___flneg@f1+2)^0,w,c
  6376  003B0A  1011               	iorwf	(___flneg@f1+3)^0,w,c
  6377  003B0C  B4D8               	btfsc	status,2,c
  6378  003B0E  EF8B  F01D         	goto	u7411
  6379  003B12  EF8D  F01D         	goto	u7410
  6380  003B16                     u7411:
  6381  003B16  EF95  F01D         	goto	l6200
  6382  003B1A                     u7410:
  6383  003B1A  0E00               	movlw	0
  6384  003B1C  1A0E               	xorwf	___flneg@f1^0,f,c
  6385  003B1E  0E00               	movlw	0
  6386  003B20  1A0F               	xorwf	(___flneg@f1+1)^0,f,c
  6387  003B22  0E00               	movlw	0
  6388  003B24  1A10               	xorwf	(___flneg@f1+2)^0,f,c
  6389  003B26  0E80               	movlw	128
  6390  003B28  1A11               	xorwf	(___flneg@f1+3)^0,f,c
  6391  003B2A                     l6200:
  6392  003B2A  C00E  F00E         	movff	___flneg@f1,?___flneg
  6393  003B2E  C00F  F00F         	movff	___flneg@f1+1,?___flneg+1
  6394  003B32  C010  F010         	movff	___flneg@f1+2,?___flneg+2
  6395  003B36  C011  F011         	movff	___flneg@f1+3,?___flneg+3
  6396  003B3A  0012               	return		;funcret
  6397  003B3C                     __end_of___flneg:
  6398                           	opt callstack 0
  6399                           
  6400 ;; *************** function ___flmul *****************
  6401 ;; Defined at:
  6402 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
  6403 ;; Parameters:    Size  Location     Type
  6404 ;;  b               4   27[COMRAM] unsigned char 
  6405 ;;  a               4   31[COMRAM] unsigned char 
  6406 ;; Auto vars:     Size  Location     Type
  6407 ;;  prod            4   46[COMRAM] struct .
  6408 ;;  grs             4   41[COMRAM] unsigned long 
  6409 ;;  temp            2   50[COMRAM] struct .
  6410 ;;  bexp            1   45[COMRAM] unsigned char 
  6411 ;;  aexp            1   40[COMRAM] unsigned char 
  6412 ;;  sign            1   39[COMRAM] unsigned char 
  6413 ;; Return value:  Size  Location     Type
  6414 ;;                  4   27[COMRAM] unsigned char 
  6415 ;; Registers used:
  6416 ;;		wreg, status,2, status,0, prodl, prodh
  6417 ;; Tracked objects:
  6418 ;;		On entry : 0/0
  6419 ;;		On exit  : 0/0
  6420 ;;		Unchanged: 0/0
  6421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6422 ;;      Params:         8       0       0       0       0       0       0
  6423 ;;      Locals:        13       0       0       0       0       0       0
  6424 ;;      Temps:          4       0       0       0       0       0       0
  6425 ;;      Totals:        25       0       0       0       0       0       0
  6426 ;;Total ram usage:       25 bytes
  6427 ;; Hardware stack levels used:    1
  6428 ;; Hardware stack levels required when called:    9
  6429 ;; This function calls:
  6430 ;;		Nothing
  6431 ;; This function is called by:
  6432 ;;		_main
  6433 ;;		_efgtoa
  6434 ;; This function uses a non-reentrant model
  6435 ;;
  6436                           
  6437                           	psect	text20
  6438  001B8A                     __ptext20:
  6439                           	opt callstack 0
  6440  001B8A                     ___flmul:
  6441                           	opt callstack 17
  6442  001B8A  501F               	movf	(___flmul@b+3)^0,w,c
  6443  001B8C  0B80               	andlw	128
  6444  001B8E  6E28               	movwf	___flmul@sign^0,c
  6445  001B90  501F               	movf	(___flmul@b+3)^0,w,c
  6446  001B92  241F               	addwf	(___flmul@b+3)^0,w,c
  6447  001B94  6E2E               	movwf	___flmul@bexp^0,c
  6448  001B96  AE1E               	btfss	(___flmul@b+2)^0,7,c
  6449  001B98  EFD0  F00D         	goto	u7021
  6450  001B9C  EFD2  F00D         	goto	u7020
  6451  001BA0                     u7021:
  6452  001BA0  EFD3  F00D         	goto	l5948
  6453  001BA4                     u7020:
  6454  001BA4  802E               	bsf	___flmul@bexp^0,0,c
  6455  001BA6                     l5948:
  6456  001BA6  502E               	movf	___flmul@bexp^0,w,c
  6457  001BA8  B4D8               	btfsc	status,2,c
  6458  001BAA  EFD9  F00D         	goto	u7031
  6459  001BAE  EFDB  F00D         	goto	u7030
  6460  001BB2                     u7031:
  6461  001BB2  EFEE  F00D         	goto	l5956
  6462  001BB6                     u7030:
  6463  001BB6  282E               	incf	___flmul@bexp^0,w,c
  6464  001BB8  A4D8               	btfss	status,2,c
  6465  001BBA  EFE1  F00D         	goto	u7041
  6466  001BBE  EFE3  F00D         	goto	u7040
  6467  001BC2                     u7041:
  6468  001BC2  EFEB  F00D         	goto	l5954
  6469  001BC6                     u7040:
  6470  001BC6  0E00               	movlw	0
  6471  001BC8  6E1C               	movwf	___flmul@b^0,c
  6472  001BCA  0E00               	movlw	0
  6473  001BCC  6E1D               	movwf	(___flmul@b+1)^0,c
  6474  001BCE  0E00               	movlw	0
  6475  001BD0  6E1E               	movwf	(___flmul@b+2)^0,c
  6476  001BD2  0E00               	movlw	0
  6477  001BD4  6E1F               	movwf	(___flmul@b+3)^0,c
  6478  001BD6                     l5954:
  6479  001BD6  8E1E               	bsf	(___flmul@b+2)^0,7,c
  6480  001BD8  EFF6  F00D         	goto	l5958
  6481  001BDC                     l5956:
  6482  001BDC  0E00               	movlw	0
  6483  001BDE  6E1C               	movwf	___flmul@b^0,c
  6484  001BE0  0E00               	movlw	0
  6485  001BE2  6E1D               	movwf	(___flmul@b+1)^0,c
  6486  001BE4  0E00               	movlw	0
  6487  001BE6  6E1E               	movwf	(___flmul@b+2)^0,c
  6488  001BE8  0E00               	movlw	0
  6489  001BEA  6E1F               	movwf	(___flmul@b+3)^0,c
  6490  001BEC                     l5958:
  6491  001BEC  5023               	movf	(___flmul@a+3)^0,w,c
  6492  001BEE  0B80               	andlw	128
  6493  001BF0  1A28               	xorwf	___flmul@sign^0,f,c
  6494  001BF2  5023               	movf	(___flmul@a+3)^0,w,c
  6495  001BF4  2423               	addwf	(___flmul@a+3)^0,w,c
  6496  001BF6  6E29               	movwf	___flmul@aexp^0,c
  6497  001BF8  AE22               	btfss	(___flmul@a+2)^0,7,c
  6498  001BFA  EF01  F00E         	goto	u7051
  6499  001BFE  EF03  F00E         	goto	u7050
  6500  001C02                     u7051:
  6501  001C02  EF04  F00E         	goto	l5966
  6502  001C06                     u7050:
  6503  001C06  8029               	bsf	___flmul@aexp^0,0,c
  6504  001C08                     l5966:
  6505  001C08  5029               	movf	___flmul@aexp^0,w,c
  6506  001C0A  B4D8               	btfsc	status,2,c
  6507  001C0C  EF0A  F00E         	goto	u7061
  6508  001C10  EF0C  F00E         	goto	u7060
  6509  001C14                     u7061:
  6510  001C14  EF1F  F00E         	goto	l5974
  6511  001C18                     u7060:
  6512  001C18  2829               	incf	___flmul@aexp^0,w,c
  6513  001C1A  A4D8               	btfss	status,2,c
  6514  001C1C  EF12  F00E         	goto	u7071
  6515  001C20  EF14  F00E         	goto	u7070
  6516  001C24                     u7071:
  6517  001C24  EF1C  F00E         	goto	l5972
  6518  001C28                     u7070:
  6519  001C28  0E00               	movlw	0
  6520  001C2A  6E20               	movwf	___flmul@a^0,c
  6521  001C2C  0E00               	movlw	0
  6522  001C2E  6E21               	movwf	(___flmul@a+1)^0,c
  6523  001C30  0E00               	movlw	0
  6524  001C32  6E22               	movwf	(___flmul@a+2)^0,c
  6525  001C34  0E00               	movlw	0
  6526  001C36  6E23               	movwf	(___flmul@a+3)^0,c
  6527  001C38                     l5972:
  6528  001C38  8E22               	bsf	(___flmul@a+2)^0,7,c
  6529  001C3A  EF27  F00E         	goto	l1354
  6530  001C3E                     l5974:
  6531  001C3E  0E00               	movlw	0
  6532  001C40  6E20               	movwf	___flmul@a^0,c
  6533  001C42  0E00               	movlw	0
  6534  001C44  6E21               	movwf	(___flmul@a+1)^0,c
  6535  001C46  0E00               	movlw	0
  6536  001C48  6E22               	movwf	(___flmul@a+2)^0,c
  6537  001C4A  0E00               	movlw	0
  6538  001C4C  6E23               	movwf	(___flmul@a+3)^0,c
  6539  001C4E                     l1354:
  6540  001C4E  5029               	movf	___flmul@aexp^0,w,c
  6541  001C50  B4D8               	btfsc	status,2,c
  6542  001C52  EF2D  F00E         	goto	u7081
  6543  001C56  EF2F  F00E         	goto	u7080
  6544  001C5A                     u7081:
  6545  001C5A  EF37  F00E         	goto	l5978
  6546  001C5E                     u7080:
  6547  001C5E  502E               	movf	___flmul@bexp^0,w,c
  6548  001C60  A4D8               	btfss	status,2,c
  6549  001C62  EF35  F00E         	goto	u7091
  6550  001C66  EF37  F00E         	goto	u7090
  6551  001C6A                     u7091:
  6552  001C6A  EF41  F00E         	goto	l5982
  6553  001C6E                     u7090:
  6554  001C6E                     l5978:
  6555  001C6E  0E00               	movlw	0
  6556  001C70  6E1C               	movwf	?___flmul^0,c
  6557  001C72  0E00               	movlw	0
  6558  001C74  6E1D               	movwf	(?___flmul+1)^0,c
  6559  001C76  0E00               	movlw	0
  6560  001C78  6E1E               	movwf	(?___flmul+2)^0,c
  6561  001C7A  0E00               	movlw	0
  6562  001C7C  6E1F               	movwf	(?___flmul+3)^0,c
  6563  001C7E  EFD9  F00F         	goto	l1358
  6564  001C82                     l5982:
  6565  001C82  5022               	movf	(___flmul@a+2)^0,w,c
  6566  001C84  021C               	mulwf	___flmul@b^0,c
  6567  001C86  CFF3 F033          	movff	prodl,___flmul@temp
  6568  001C8A  CFF4 F034          	movff	prodh,___flmul@temp+1
  6569  001C8E  5033               	movf	___flmul@temp^0,w,c
  6570  001C90  6E2A               	movwf	___flmul@grs^0,c
  6571  001C92  6A2B               	clrf	(___flmul@grs+1)^0,c
  6572  001C94  6A2C               	clrf	(___flmul@grs+2)^0,c
  6573  001C96  6A2D               	clrf	(___flmul@grs+3)^0,c
  6574  001C98  5034               	movf	(___flmul@temp+1)^0,w,c
  6575  001C9A  6E2F               	movwf	___flmul@prod^0,c
  6576  001C9C  6A30               	clrf	(___flmul@prod+1)^0,c
  6577  001C9E  6A31               	clrf	(___flmul@prod+2)^0,c
  6578  001CA0  6A32               	clrf	(___flmul@prod+3)^0,c
  6579  001CA2  5021               	movf	(___flmul@a+1)^0,w,c
  6580  001CA4  021D               	mulwf	(___flmul@b+1)^0,c
  6581  001CA6  CFF3 F033          	movff	prodl,___flmul@temp
  6582  001CAA  CFF4 F034          	movff	prodh,___flmul@temp+1
  6583  001CAE  5033               	movf	___flmul@temp^0,w,c
  6584  001CB0  262A               	addwf	___flmul@grs^0,f,c
  6585  001CB2  0E00               	movlw	0
  6586  001CB4  222B               	addwfc	(___flmul@grs+1)^0,f,c
  6587  001CB6  222C               	addwfc	(___flmul@grs+2)^0,f,c
  6588  001CB8  222D               	addwfc	(___flmul@grs+3)^0,f,c
  6589  001CBA  5034               	movf	(___flmul@temp+1)^0,w,c
  6590  001CBC  262F               	addwf	___flmul@prod^0,f,c
  6591  001CBE  0E00               	movlw	0
  6592  001CC0  2230               	addwfc	(___flmul@prod+1)^0,f,c
  6593  001CC2  2231               	addwfc	(___flmul@prod+2)^0,f,c
  6594  001CC4  2232               	addwfc	(___flmul@prod+3)^0,f,c
  6595  001CC6  5020               	movf	___flmul@a^0,w,c
  6596  001CC8  021E               	mulwf	(___flmul@b+2)^0,c
  6597  001CCA  CFF3 F033          	movff	prodl,___flmul@temp
  6598  001CCE  CFF4 F034          	movff	prodh,___flmul@temp+1
  6599  001CD2  5033               	movf	___flmul@temp^0,w,c
  6600  001CD4  262A               	addwf	___flmul@grs^0,f,c
  6601  001CD6  0E00               	movlw	0
  6602  001CD8  222B               	addwfc	(___flmul@grs+1)^0,f,c
  6603  001CDA  222C               	addwfc	(___flmul@grs+2)^0,f,c
  6604  001CDC  222D               	addwfc	(___flmul@grs+3)^0,f,c
  6605  001CDE  5034               	movf	(___flmul@temp+1)^0,w,c
  6606  001CE0  262F               	addwf	___flmul@prod^0,f,c
  6607  001CE2  0E00               	movlw	0
  6608  001CE4  2230               	addwfc	(___flmul@prod+1)^0,f,c
  6609  001CE6  2231               	addwfc	(___flmul@prod+2)^0,f,c
  6610  001CE8  2232               	addwfc	(___flmul@prod+3)^0,f,c
  6611  001CEA  C02C  F02D         	movff	___flmul@grs+2,___flmul@grs+3
  6612  001CEE  C02B  F02C         	movff	___flmul@grs+1,___flmul@grs+2
  6613  001CF2  C02A  F02B         	movff	___flmul@grs,___flmul@grs+1
  6614  001CF6  6A2A               	clrf	___flmul@grs^0,c
  6615  001CF8  5020               	movf	___flmul@a^0,w,c
  6616  001CFA  021D               	mulwf	(___flmul@b+1)^0,c
  6617  001CFC  CFF3 F033          	movff	prodl,___flmul@temp
  6618  001D00  CFF4 F034          	movff	prodh,___flmul@temp+1
  6619  001D04  5033               	movf	___flmul@temp^0,w,c
  6620  001D06  262A               	addwf	___flmul@grs^0,f,c
  6621  001D08  5034               	movf	(___flmul@temp+1)^0,w,c
  6622  001D0A  222B               	addwfc	(___flmul@grs+1)^0,f,c
  6623  001D0C  0E00               	movlw	0
  6624  001D0E  222C               	addwfc	(___flmul@grs+2)^0,f,c
  6625  001D10  0E00               	movlw	0
  6626  001D12  222D               	addwfc	(___flmul@grs+3)^0,f,c
  6627  001D14  5021               	movf	(___flmul@a+1)^0,w,c
  6628  001D16  021C               	mulwf	___flmul@b^0,c
  6629  001D18  CFF3 F033          	movff	prodl,___flmul@temp
  6630  001D1C  CFF4 F034          	movff	prodh,___flmul@temp+1
  6631  001D20  5033               	movf	___flmul@temp^0,w,c
  6632  001D22  262A               	addwf	___flmul@grs^0,f,c
  6633  001D24  5034               	movf	(___flmul@temp+1)^0,w,c
  6634  001D26  222B               	addwfc	(___flmul@grs+1)^0,f,c
  6635  001D28  0E00               	movlw	0
  6636  001D2A  222C               	addwfc	(___flmul@grs+2)^0,f,c
  6637  001D2C  0E00               	movlw	0
  6638  001D2E  222D               	addwfc	(___flmul@grs+3)^0,f,c
  6639  001D30  C02C  F02D         	movff	___flmul@grs+2,___flmul@grs+3
  6640  001D34  C02B  F02C         	movff	___flmul@grs+1,___flmul@grs+2
  6641  001D38  C02A  F02B         	movff	___flmul@grs,___flmul@grs+1
  6642  001D3C  6A2A               	clrf	___flmul@grs^0,c
  6643  001D3E  5020               	movf	___flmul@a^0,w,c
  6644  001D40  021C               	mulwf	___flmul@b^0,c
  6645  001D42  CFF3 F033          	movff	prodl,___flmul@temp
  6646  001D46  CFF4 F034          	movff	prodh,___flmul@temp+1
  6647  001D4A  5033               	movf	___flmul@temp^0,w,c
  6648  001D4C  262A               	addwf	___flmul@grs^0,f,c
  6649  001D4E  5034               	movf	(___flmul@temp+1)^0,w,c
  6650  001D50  222B               	addwfc	(___flmul@grs+1)^0,f,c
  6651  001D52  0E00               	movlw	0
  6652  001D54  222C               	addwfc	(___flmul@grs+2)^0,f,c
  6653  001D56  0E00               	movlw	0
  6654  001D58  222D               	addwfc	(___flmul@grs+3)^0,f,c
  6655  001D5A  5022               	movf	(___flmul@a+2)^0,w,c
  6656  001D5C  021D               	mulwf	(___flmul@b+1)^0,c
  6657  001D5E  CFF3 F033          	movff	prodl,___flmul@temp
  6658  001D62  CFF4 F034          	movff	prodh,___flmul@temp+1
  6659  001D66  5033               	movf	___flmul@temp^0,w,c
  6660  001D68  262F               	addwf	___flmul@prod^0,f,c
  6661  001D6A  5034               	movf	(___flmul@temp+1)^0,w,c
  6662  001D6C  2230               	addwfc	(___flmul@prod+1)^0,f,c
  6663  001D6E  0E00               	movlw	0
  6664  001D70  2231               	addwfc	(___flmul@prod+2)^0,f,c
  6665  001D72  0E00               	movlw	0
  6666  001D74  2232               	addwfc	(___flmul@prod+3)^0,f,c
  6667  001D76  5021               	movf	(___flmul@a+1)^0,w,c
  6668  001D78  021E               	mulwf	(___flmul@b+2)^0,c
  6669  001D7A  CFF3 F033          	movff	prodl,___flmul@temp
  6670  001D7E  CFF4 F034          	movff	prodh,___flmul@temp+1
  6671  001D82  5033               	movf	___flmul@temp^0,w,c
  6672  001D84  262F               	addwf	___flmul@prod^0,f,c
  6673  001D86  5034               	movf	(___flmul@temp+1)^0,w,c
  6674  001D88  2230               	addwfc	(___flmul@prod+1)^0,f,c
  6675  001D8A  0E00               	movlw	0
  6676  001D8C  2231               	addwfc	(___flmul@prod+2)^0,f,c
  6677  001D8E  0E00               	movlw	0
  6678  001D90  2232               	addwfc	(___flmul@prod+3)^0,f,c
  6679  001D92  5022               	movf	(___flmul@a+2)^0,w,c
  6680  001D94  021E               	mulwf	(___flmul@b+2)^0,c
  6681  001D96  CFF3 F033          	movff	prodl,___flmul@temp
  6682  001D9A  CFF4 F034          	movff	prodh,___flmul@temp+1
  6683  001D9E  5033               	movf	___flmul@temp^0,w,c
  6684  001DA0  6E24               	movwf	??___flmul^0,c
  6685  001DA2  5034               	movf	(___flmul@temp+1)^0,w,c
  6686  001DA4  6E25               	movwf	(??___flmul+1)^0,c
  6687  001DA6  6A26               	clrf	(??___flmul+2)^0,c
  6688  001DA8  6A27               	clrf	(??___flmul+3)^0,c
  6689  001DAA  C026  F027         	movff	??___flmul+2,??___flmul+3
  6690  001DAE  C025  F026         	movff	??___flmul+1,??___flmul+2
  6691  001DB2  C024  F025         	movff	??___flmul,??___flmul+1
  6692  001DB6  6A24               	clrf	??___flmul^0,c
  6693  001DB8  5024               	movf	??___flmul^0,w,c
  6694  001DBA  262F               	addwf	___flmul@prod^0,f,c
  6695  001DBC  5025               	movf	(??___flmul+1)^0,w,c
  6696  001DBE  2230               	addwfc	(___flmul@prod+1)^0,f,c
  6697  001DC0  5026               	movf	(??___flmul+2)^0,w,c
  6698  001DC2  2231               	addwfc	(___flmul@prod+2)^0,f,c
  6699  001DC4  5027               	movf	(??___flmul+3)^0,w,c
  6700  001DC6  2232               	addwfc	(___flmul@prod+3)^0,f,c
  6701  001DC8  C02A  F024         	movff	___flmul@grs,??___flmul
  6702  001DCC  C02B  F025         	movff	___flmul@grs+1,??___flmul+1
  6703  001DD0  C02C  F026         	movff	___flmul@grs+2,??___flmul+2
  6704  001DD4  C02D  F027         	movff	___flmul@grs+3,??___flmul+3
  6705  001DD8  0E19               	movlw	25
  6706  001DDA  EFF4  F00E         	goto	u7100
  6707  001DDE                     u7105:
  6708  001DDE  90D8               	bcf	status,0,c
  6709  001DE0  3227               	rrcf	(??___flmul+3)^0,f,c
  6710  001DE2  3226               	rrcf	(??___flmul+2)^0,f,c
  6711  001DE4  3225               	rrcf	(??___flmul+1)^0,f,c
  6712  001DE6  3224               	rrcf	??___flmul^0,f,c
  6713  001DE8                     u7100:
  6714  001DE8  2EE8               	decfsz	wreg,f,c
  6715  001DEA  EFEF  F00E         	goto	u7105
  6716  001DEE  5024               	movf	??___flmul^0,w,c
  6717  001DF0  262F               	addwf	___flmul@prod^0,f,c
  6718  001DF2  5025               	movf	(??___flmul+1)^0,w,c
  6719  001DF4  2230               	addwfc	(___flmul@prod+1)^0,f,c
  6720  001DF6  5026               	movf	(??___flmul+2)^0,w,c
  6721  001DF8  2231               	addwfc	(___flmul@prod+2)^0,f,c
  6722  001DFA  5027               	movf	(??___flmul+3)^0,w,c
  6723  001DFC  2232               	addwfc	(___flmul@prod+3)^0,f,c
  6724  001DFE  C02C  F02D         	movff	___flmul@grs+2,___flmul@grs+3
  6725  001E02  C02B  F02C         	movff	___flmul@grs+1,___flmul@grs+2
  6726  001E06  C02A  F02B         	movff	___flmul@grs,___flmul@grs+1
  6727  001E0A  6A2A               	clrf	___flmul@grs^0,c
  6728  001E0C  5029               	movf	___flmul@aexp^0,w,c
  6729  001E0E  C02E  F024         	movff	___flmul@bexp,??___flmul
  6730  001E12  6A25               	clrf	(??___flmul+1)^0,c
  6731  001E14  2624               	addwf	??___flmul^0,f,c
  6732  001E16  0E00               	movlw	0
  6733  001E18  2225               	addwfc	(??___flmul+1)^0,f,c
  6734  001E1A  0E82               	movlw	130
  6735  001E1C  2424               	addwf	??___flmul^0,w,c
  6736  001E1E  6E33               	movwf	___flmul@temp^0,c
  6737  001E20  0EFF               	movlw	255
  6738  001E22  2025               	addwfc	(??___flmul+1)^0,w,c
  6739  001E24  6E34               	movwf	(___flmul@temp+1)^0,c
  6740  001E26  EF2A  F00F         	goto	l6030
  6741  001E2A                     l6024:
  6742  001E2A  90D8               	bcf	status,0,c
  6743  001E2C  362F               	rlcf	___flmul@prod^0,f,c
  6744  001E2E  3630               	rlcf	(___flmul@prod+1)^0,f,c
  6745  001E30  3631               	rlcf	(___flmul@prod+2)^0,f,c
  6746  001E32  3632               	rlcf	(___flmul@prod+3)^0,f,c
  6747  001E34  AE2D               	btfss	(___flmul@grs+3)^0,7,c
  6748  001E36  EF1F  F00F         	goto	u7111
  6749  001E3A  EF21  F00F         	goto	u7110
  6750  001E3E                     u7111:
  6751  001E3E  EF22  F00F         	goto	l1361
  6752  001E42                     u7110:
  6753  001E42  802F               	bsf	___flmul@prod^0,0,c
  6754  001E44                     l1361:
  6755  001E44  90D8               	bcf	status,0,c
  6756  001E46  362A               	rlcf	___flmul@grs^0,f,c
  6757  001E48  362B               	rlcf	(___flmul@grs+1)^0,f,c
  6758  001E4A  362C               	rlcf	(___flmul@grs+2)^0,f,c
  6759  001E4C  362D               	rlcf	(___flmul@grs+3)^0,f,c
  6760  001E4E  0633               	decf	___flmul@temp^0,f,c
  6761  001E50  A0D8               	btfss	status,0,c
  6762  001E52  0634               	decf	(___flmul@temp+1)^0,f,c
  6763  001E54                     l6030:
  6764  001E54  AE31               	btfss	(___flmul@prod+2)^0,7,c
  6765  001E56  EF2F  F00F         	goto	u7121
  6766  001E5A  EF31  F00F         	goto	u7120
  6767  001E5E                     u7121:
  6768  001E5E  EF15  F00F         	goto	l6024
  6769  001E62                     u7120:
  6770  001E62  0E00               	movlw	0
  6771  001E64  6E29               	movwf	___flmul@aexp^0,c
  6772  001E66  AE2D               	btfss	(___flmul@grs+3)^0,7,c
  6773  001E68  EF38  F00F         	goto	u7131
  6774  001E6C  EF3A  F00F         	goto	u7130
  6775  001E70                     u7131:
  6776  001E70  EF5E  F00F         	goto	l1363
  6777  001E74                     u7130:
  6778  001E74  0EFF               	movlw	255
  6779  001E76  142A               	andwf	___flmul@grs^0,w,c
  6780  001E78  6E24               	movwf	??___flmul^0,c
  6781  001E7A  0EFF               	movlw	255
  6782  001E7C  142B               	andwf	(___flmul@grs+1)^0,w,c
  6783  001E7E  6E25               	movwf	(??___flmul+1)^0,c
  6784  001E80  0EFF               	movlw	255
  6785  001E82  142C               	andwf	(___flmul@grs+2)^0,w,c
  6786  001E84  6E26               	movwf	(??___flmul+2)^0,c
  6787  001E86  0E7F               	movlw	127
  6788  001E88  142D               	andwf	(___flmul@grs+3)^0,w,c
  6789  001E8A  6E27               	movwf	(??___flmul+3)^0,c
  6790  001E8C  5024               	movf	??___flmul^0,w,c
  6791  001E8E  1025               	iorwf	(??___flmul+1)^0,w,c
  6792  001E90  1026               	iorwf	(??___flmul+2)^0,w,c
  6793  001E92  1027               	iorwf	(??___flmul+3)^0,w,c
  6794  001E94  B4D8               	btfsc	status,2,c
  6795  001E96  EF4F  F00F         	goto	u7141
  6796  001E9A  EF51  F00F         	goto	u7140
  6797  001E9E                     u7141:
  6798  001E9E  EF55  F00F         	goto	l1364
  6799  001EA2                     u7140:
  6800  001EA2                     l6038:
  6801  001EA2  0E01               	movlw	1
  6802  001EA4  6E29               	movwf	___flmul@aexp^0,c
  6803  001EA6  EF5E  F00F         	goto	l1363
  6804  001EAA                     l1364:
  6805  001EAA  A02F               	btfss	___flmul@prod^0,0,c
  6806  001EAC  EF5A  F00F         	goto	u7151
  6807  001EB0  EF5C  F00F         	goto	u7150
  6808  001EB4                     u7151:
  6809  001EB4  EF5E  F00F         	goto	l1363
  6810  001EB8                     u7150:
  6811  001EB8  EF51  F00F         	goto	l6038
  6812  001EBC                     l1363:
  6813  001EBC  5029               	movf	___flmul@aexp^0,w,c
  6814  001EBE  B4D8               	btfsc	status,2,c
  6815  001EC0  EF64  F00F         	goto	u7161
  6816  001EC4  EF66  F00F         	goto	u7160
  6817  001EC8                     u7161:
  6818  001EC8  EF8A  F00F         	goto	l6050
  6819  001ECC                     u7160:
  6820  001ECC  0E01               	movlw	1
  6821  001ECE  262F               	addwf	___flmul@prod^0,f,c
  6822  001ED0  0E00               	movlw	0
  6823  001ED2  2230               	addwfc	(___flmul@prod+1)^0,f,c
  6824  001ED4  2231               	addwfc	(___flmul@prod+2)^0,f,c
  6825  001ED6  2232               	addwfc	(___flmul@prod+3)^0,f,c
  6826  001ED8  A032               	btfss	(___flmul@prod+3)^0,0,c
  6827  001EDA  EF71  F00F         	goto	u7171
  6828  001EDE  EF73  F00F         	goto	u7170
  6829  001EE2                     u7171:
  6830  001EE2  EF8A  F00F         	goto	l6050
  6831  001EE6                     u7170:
  6832  001EE6  C02F  F024         	movff	___flmul@prod,??___flmul
  6833  001EEA  C030  F025         	movff	___flmul@prod+1,??___flmul+1
  6834  001EEE  C031  F026         	movff	___flmul@prod+2,??___flmul+2
  6835  001EF2  C032  F027         	movff	___flmul@prod+3,??___flmul+3
  6836  001EF6  3427               	rlcf	(??___flmul+3)^0,w,c
  6837  001EF8  3227               	rrcf	(??___flmul+3)^0,f,c
  6838  001EFA  3226               	rrcf	(??___flmul+2)^0,f,c
  6839  001EFC  3225               	rrcf	(??___flmul+1)^0,f,c
  6840  001EFE  3224               	rrcf	??___flmul^0,f,c
  6841  001F00  C024  F02F         	movff	??___flmul,___flmul@prod
  6842  001F04  C025  F030         	movff	??___flmul+1,___flmul@prod+1
  6843  001F08  C026  F031         	movff	??___flmul+2,___flmul@prod+2
  6844  001F0C  C027  F032         	movff	??___flmul+3,___flmul@prod+3
  6845  001F10  4A33               	infsnz	___flmul@temp^0,f,c
  6846  001F12  2A34               	incf	(___flmul@temp+1)^0,f,c
  6847  001F14                     l6050:
  6848  001F14  BE34               	btfsc	(___flmul@temp+1)^0,7,c
  6849  001F16  EF95  F00F         	goto	u7181
  6850  001F1A  5034               	movf	(___flmul@temp+1)^0,w,c
  6851  001F1C  E108               	bnz	u7180
  6852  001F1E  2833               	incf	___flmul@temp^0,w,c
  6853  001F20  A0D8               	btfss	status,0,c
  6854  001F22  EF95  F00F         	goto	u7181
  6855  001F26  EF97  F00F         	goto	u7180
  6856  001F2A                     u7181:
  6857  001F2A  EFA1  F00F         	goto	l6054
  6858  001F2E                     u7180:
  6859  001F2E  0E00               	movlw	0
  6860  001F30  6E2F               	movwf	___flmul@prod^0,c
  6861  001F32  0E00               	movlw	0
  6862  001F34  6E30               	movwf	(___flmul@prod+1)^0,c
  6863  001F36  0E80               	movlw	128
  6864  001F38  6E31               	movwf	(___flmul@prod+2)^0,c
  6865  001F3A  0E7F               	movlw	127
  6866  001F3C  6E32               	movwf	(___flmul@prod+3)^0,c
  6867  001F3E  EFCF  F00F         	goto	l6066
  6868  001F42                     l6054:
  6869  001F42  BE34               	btfsc	(___flmul@temp+1)^0,7,c
  6870  001F44  EFAE  F00F         	goto	u7190
  6871  001F48  5034               	movf	(___flmul@temp+1)^0,w,c
  6872  001F4A  E106               	bnz	u7191
  6873  001F4C  0433               	decf	___flmul@temp^0,w,c
  6874  001F4E  B0D8               	btfsc	status,0,c
  6875  001F50  EFAC  F00F         	goto	u7191
  6876  001F54  EFAE  F00F         	goto	u7190
  6877  001F58                     u7191:
  6878  001F58  EFBA  F00F         	goto	l1371
  6879  001F5C                     u7190:
  6880  001F5C  0E00               	movlw	0
  6881  001F5E  6E2F               	movwf	___flmul@prod^0,c
  6882  001F60  0E00               	movlw	0
  6883  001F62  6E30               	movwf	(___flmul@prod+1)^0,c
  6884  001F64  0E00               	movlw	0
  6885  001F66  6E31               	movwf	(___flmul@prod+2)^0,c
  6886  001F68  0E00               	movlw	0
  6887  001F6A  6E32               	movwf	(___flmul@prod+3)^0,c
  6888  001F6C  0E00               	movlw	0
  6889  001F6E  6E28               	movwf	___flmul@sign^0,c
  6890  001F70  EFCF  F00F         	goto	l6066
  6891  001F74                     l1371:
  6892  001F74  C033  F02E         	movff	___flmul@temp,___flmul@bexp
  6893  001F78  0EFF               	movlw	255
  6894  001F7A  162F               	andwf	___flmul@prod^0,f,c
  6895  001F7C  0EFF               	movlw	255
  6896  001F7E  1630               	andwf	(___flmul@prod+1)^0,f,c
  6897  001F80  0E7F               	movlw	127
  6898  001F82  1631               	andwf	(___flmul@prod+2)^0,f,c
  6899  001F84  0E00               	movlw	0
  6900  001F86  1632               	andwf	(___flmul@prod+3)^0,f,c
  6901  001F88  A02E               	btfss	___flmul@bexp^0,0,c
  6902  001F8A  EFC9  F00F         	goto	u7201
  6903  001F8E  EFCB  F00F         	goto	u7200
  6904  001F92                     u7201:
  6905  001F92  EFCC  F00F         	goto	l6064
  6906  001F96                     u7200:
  6907  001F96  8E31               	bsf	(___flmul@prod+2)^0,7,c
  6908  001F98                     l6064:
  6909  001F98  90D8               	bcf	status,0,c
  6910  001F9A  302E               	rrcf	___flmul@bexp^0,w,c
  6911  001F9C  6E32               	movwf	(___flmul@prod+3)^0,c
  6912  001F9E                     l6066:
  6913  001F9E  5028               	movf	___flmul@sign^0,w,c
  6914  001FA0  1232               	iorwf	(___flmul@prod+3)^0,f,c
  6915  001FA2  C02F  F01C         	movff	___flmul@prod,?___flmul
  6916  001FA6  C030  F01D         	movff	___flmul@prod+1,?___flmul+1
  6917  001FAA  C031  F01E         	movff	___flmul@prod+2,?___flmul+2
  6918  001FAE  C032  F01F         	movff	___flmul@prod+3,?___flmul+3
  6919  001FB2                     l1358:
  6920  001FB2  0012               	return		;funcret
  6921  001FB4                     __end_of___flmul:
  6922                           	opt callstack 0
  6923                           
  6924 ;; *************** function ___flge *****************
  6925 ;; Defined at:
  6926 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
  6927 ;; Parameters:    Size  Location     Type
  6928 ;;  ff1             4   52[COMRAM] unsigned char 
  6929 ;;  ff2             4   56[COMRAM] unsigned char 
  6930 ;; Auto vars:     Size  Location     Type
  6931 ;;		None
  6932 ;; Return value:  Size  Location     Type
  6933 ;;		None               void
  6934 ;; Registers used:
  6935 ;;		wreg, status,2, status,0
  6936 ;; Tracked objects:
  6937 ;;		On entry : 0/0
  6938 ;;		On exit  : 0/0
  6939 ;;		Unchanged: 0/0
  6940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6941 ;;      Params:         8       0       0       0       0       0       0
  6942 ;;      Locals:         0       0       0       0       0       0       0
  6943 ;;      Temps:          4       0       0       0       0       0       0
  6944 ;;      Totals:        12       0       0       0       0       0       0
  6945 ;;Total ram usage:       12 bytes
  6946 ;; Hardware stack levels used:    1
  6947 ;; Hardware stack levels required when called:    9
  6948 ;; This function calls:
  6949 ;;		Nothing
  6950 ;; This function is called by:
  6951 ;;		_efgtoa
  6952 ;; This function uses a non-reentrant model
  6953 ;;
  6954                           
  6955                           	psect	text21
  6956  002E68                     __ptext21:
  6957                           	opt callstack 0
  6958  002E68                     ___flge:
  6959                           	opt callstack 17
  6960  002E68  0E00               	movlw	0
  6961  002E6A  1435               	andwf	___flge@ff1^0,w,c
  6962  002E6C  6E3D               	movwf	??___flge^0,c
  6963  002E6E  0E00               	movlw	0
  6964  002E70  1436               	andwf	(___flge@ff1+1)^0,w,c
  6965  002E72  6E3E               	movwf	(??___flge+1)^0,c
  6966  002E74  0E80               	movlw	128
  6967  002E76  1437               	andwf	(___flge@ff1+2)^0,w,c
  6968  002E78  6E3F               	movwf	(??___flge+2)^0,c
  6969  002E7A  0E7F               	movlw	127
  6970  002E7C  1438               	andwf	(___flge@ff1+3)^0,w,c
  6971  002E7E  6E40               	movwf	(??___flge+3)^0,c
  6972  002E80  503D               	movf	??___flge^0,w,c
  6973  002E82  103E               	iorwf	(??___flge+1)^0,w,c
  6974  002E84  103F               	iorwf	(??___flge+2)^0,w,c
  6975  002E86  1040               	iorwf	(??___flge+3)^0,w,c
  6976  002E88  A4D8               	btfss	status,2,c
  6977  002E8A  EF49  F017         	goto	u7361
  6978  002E8E  EF4B  F017         	goto	u7360
  6979  002E92                     u7361:
  6980  002E92  EF53  F017         	goto	l6178
  6981  002E96                     u7360:
  6982  002E96  0E00               	movlw	0
  6983  002E98  6E35               	movwf	___flge@ff1^0,c
  6984  002E9A  0E00               	movlw	0
  6985  002E9C  6E36               	movwf	(___flge@ff1+1)^0,c
  6986  002E9E  0E00               	movlw	0
  6987  002EA0  6E37               	movwf	(___flge@ff1+2)^0,c
  6988  002EA2  0E00               	movlw	0
  6989  002EA4  6E38               	movwf	(___flge@ff1+3)^0,c
  6990  002EA6                     l6178:
  6991  002EA6  0E00               	movlw	0
  6992  002EA8  1439               	andwf	___flge@ff2^0,w,c
  6993  002EAA  6E3D               	movwf	??___flge^0,c
  6994  002EAC  0E00               	movlw	0
  6995  002EAE  143A               	andwf	(___flge@ff2+1)^0,w,c
  6996  002EB0  6E3E               	movwf	(??___flge+1)^0,c
  6997  002EB2  0E80               	movlw	128
  6998  002EB4  143B               	andwf	(___flge@ff2+2)^0,w,c
  6999  002EB6  6E3F               	movwf	(??___flge+2)^0,c
  7000  002EB8  0E7F               	movlw	127
  7001  002EBA  143C               	andwf	(___flge@ff2+3)^0,w,c
  7002  002EBC  6E40               	movwf	(??___flge+3)^0,c
  7003  002EBE  503D               	movf	??___flge^0,w,c
  7004  002EC0  103E               	iorwf	(??___flge+1)^0,w,c
  7005  002EC2  103F               	iorwf	(??___flge+2)^0,w,c
  7006  002EC4  1040               	iorwf	(??___flge+3)^0,w,c
  7007  002EC6  A4D8               	btfss	status,2,c
  7008  002EC8  EF68  F017         	goto	u7371
  7009  002ECC  EF6A  F017         	goto	u7370
  7010  002ED0                     u7371:
  7011  002ED0  EF72  F017         	goto	l6182
  7012  002ED4                     u7370:
  7013  002ED4  0E00               	movlw	0
  7014  002ED6  6E39               	movwf	___flge@ff2^0,c
  7015  002ED8  0E00               	movlw	0
  7016  002EDA  6E3A               	movwf	(___flge@ff2+1)^0,c
  7017  002EDC  0E00               	movlw	0
  7018  002EDE  6E3B               	movwf	(___flge@ff2+2)^0,c
  7019  002EE0  0E00               	movlw	0
  7020  002EE2  6E3C               	movwf	(___flge@ff2+3)^0,c
  7021  002EE4                     l6182:
  7022  002EE4  AE38               	btfss	(___flge@ff1+3)^0,7,c
  7023  002EE6  EF77  F017         	goto	u7381
  7024  002EEA  EF79  F017         	goto	u7380
  7025  002EEE                     u7381:
  7026  002EEE  EF82  F017         	goto	l6186
  7027  002EF2                     u7380:
  7028  002EF2  6C35               	negf	___flge@ff1^0,c
  7029  002EF4  1E36               	comf	(___flge@ff1+1)^0,f,c
  7030  002EF6  B0D8               	btfsc	status,0,c
  7031  002EF8  2A36               	incf	(___flge@ff1+1)^0,f,c
  7032  002EFA  1E37               	comf	(___flge@ff1+2)^0,f,c
  7033  002EFC  B0D8               	btfsc	status,0,c
  7034  002EFE  2A37               	incf	(___flge@ff1+2)^0,f,c
  7035  002F00  0E80               	movlw	128
  7036  002F02  5638               	subfwb	(___flge@ff1+3)^0,f,c
  7037  002F04                     l6186:
  7038  002F04  AE3C               	btfss	(___flge@ff2+3)^0,7,c
  7039  002F06  EF87  F017         	goto	u7391
  7040  002F0A  EF89  F017         	goto	u7390
  7041  002F0E                     u7391:
  7042  002F0E  EF92  F017         	goto	l1005
  7043  002F12                     u7390:
  7044  002F12  6C39               	negf	___flge@ff2^0,c
  7045  002F14  1E3A               	comf	(___flge@ff2+1)^0,f,c
  7046  002F16  B0D8               	btfsc	status,0,c
  7047  002F18  2A3A               	incf	(___flge@ff2+1)^0,f,c
  7048  002F1A  1E3B               	comf	(___flge@ff2+2)^0,f,c
  7049  002F1C  B0D8               	btfsc	status,0,c
  7050  002F1E  2A3B               	incf	(___flge@ff2+2)^0,f,c
  7051  002F20  0E80               	movlw	128
  7052  002F22  563C               	subfwb	(___flge@ff2+3)^0,f,c
  7053  002F24                     l1005:
  7054  002F24  0E00               	movlw	0
  7055  002F26  1A35               	xorwf	___flge@ff1^0,f,c
  7056  002F28  0E00               	movlw	0
  7057  002F2A  1A36               	xorwf	(___flge@ff1+1)^0,f,c
  7058  002F2C  0E00               	movlw	0
  7059  002F2E  1A37               	xorwf	(___flge@ff1+2)^0,f,c
  7060  002F30  0E80               	movlw	128
  7061  002F32  1A38               	xorwf	(___flge@ff1+3)^0,f,c
  7062  002F34  0E00               	movlw	0
  7063  002F36  1A39               	xorwf	___flge@ff2^0,f,c
  7064  002F38  0E00               	movlw	0
  7065  002F3A  1A3A               	xorwf	(___flge@ff2+1)^0,f,c
  7066  002F3C  0E00               	movlw	0
  7067  002F3E  1A3B               	xorwf	(___flge@ff2+2)^0,f,c
  7068  002F40  0E80               	movlw	128
  7069  002F42  1A3C               	xorwf	(___flge@ff2+3)^0,f,c
  7070  002F44  5039               	movf	___flge@ff2^0,w,c
  7071  002F46  5C35               	subwf	___flge@ff1^0,w,c
  7072  002F48  503A               	movf	(___flge@ff2+1)^0,w,c
  7073  002F4A  5836               	subwfb	(___flge@ff1+1)^0,w,c
  7074  002F4C  503B               	movf	(___flge@ff2+2)^0,w,c
  7075  002F4E  5837               	subwfb	(___flge@ff1+2)^0,w,c
  7076  002F50  503C               	movf	(___flge@ff2+3)^0,w,c
  7077  002F52  5838               	subwfb	(___flge@ff1+3)^0,w,c
  7078  002F54  B0D8               	btfsc	status,0,c
  7079  002F56  EFAF  F017         	goto	u7401
  7080  002F5A  EFB1  F017         	goto	u7400
  7081  002F5E                     u7401:
  7082  002F5E  EFB4  F017         	goto	l6192
  7083  002F62                     u7400:
  7084  002F62  90D8               	bcf	status,0,c
  7085  002F64  EFB5  F017         	goto	l1010
  7086  002F68                     l6192:
  7087  002F68  80D8               	bsf	status,0,c
  7088  002F6A                     l1010:
  7089  002F6A  0012               	return		;funcret
  7090  002F6C                     __end_of___flge:
  7091                           	opt callstack 0
  7092                           
  7093 ;; *************** function ___fleq *****************
  7094 ;; Defined at:
  7095 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
  7096 ;; Parameters:    Size  Location     Type
  7097 ;;  ff1             4   13[COMRAM] unsigned char 
  7098 ;;  ff2             4   17[COMRAM] unsigned char 
  7099 ;; Auto vars:     Size  Location     Type
  7100 ;;		None
  7101 ;; Return value:  Size  Location     Type
  7102 ;;		None               void
  7103 ;; Registers used:
  7104 ;;		wreg, status,2, status,0
  7105 ;; Tracked objects:
  7106 ;;		On entry : 0/0
  7107 ;;		On exit  : 0/0
  7108 ;;		Unchanged: 0/0
  7109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7110 ;;      Params:         8       0       0       0       0       0       0
  7111 ;;      Locals:         0       0       0       0       0       0       0
  7112 ;;      Temps:          4       0       0       0       0       0       0
  7113 ;;      Totals:        12       0       0       0       0       0       0
  7114 ;;Total ram usage:       12 bytes
  7115 ;; Hardware stack levels used:    1
  7116 ;; Hardware stack levels required when called:    9
  7117 ;; This function calls:
  7118 ;;		Nothing
  7119 ;; This function is called by:
  7120 ;;		_efgtoa
  7121 ;; This function uses a non-reentrant model
  7122 ;;
  7123                           
  7124                           	psect	text22
  7125  003540                     __ptext22:
  7126                           	opt callstack 0
  7127  003540                     ___fleq:
  7128                           	opt callstack 17
  7129  003540  0E00               	movlw	0
  7130  003542  140E               	andwf	___fleq@ff1^0,w,c
  7131  003544  6E16               	movwf	??___fleq^0,c
  7132  003546  0E00               	movlw	0
  7133  003548  140F               	andwf	(___fleq@ff1+1)^0,w,c
  7134  00354A  6E17               	movwf	(??___fleq+1)^0,c
  7135  00354C  0E80               	movlw	128
  7136  00354E  1410               	andwf	(___fleq@ff1+2)^0,w,c
  7137  003550  6E18               	movwf	(??___fleq+2)^0,c
  7138  003552  0E7F               	movlw	127
  7139  003554  1411               	andwf	(___fleq@ff1+3)^0,w,c
  7140  003556  6E19               	movwf	(??___fleq+3)^0,c
  7141  003558  5016               	movf	??___fleq^0,w,c
  7142  00355A  1017               	iorwf	(??___fleq+1)^0,w,c
  7143  00355C  1018               	iorwf	(??___fleq+2)^0,w,c
  7144  00355E  1019               	iorwf	(??___fleq+3)^0,w,c
  7145  003560  A4D8               	btfss	status,2,c
  7146  003562  EFB5  F01A         	goto	u7331
  7147  003566  EFB7  F01A         	goto	u7330
  7148  00356A                     u7331:
  7149  00356A  EFBF  F01A         	goto	l6162
  7150  00356E                     u7330:
  7151  00356E  0E00               	movlw	0
  7152  003570  6E0E               	movwf	___fleq@ff1^0,c
  7153  003572  0E00               	movlw	0
  7154  003574  6E0F               	movwf	(___fleq@ff1+1)^0,c
  7155  003576  0E00               	movlw	0
  7156  003578  6E10               	movwf	(___fleq@ff1+2)^0,c
  7157  00357A  0E00               	movlw	0
  7158  00357C  6E11               	movwf	(___fleq@ff1+3)^0,c
  7159  00357E                     l6162:
  7160  00357E  0E00               	movlw	0
  7161  003580  1412               	andwf	___fleq@ff2^0,w,c
  7162  003582  6E16               	movwf	??___fleq^0,c
  7163  003584  0E00               	movlw	0
  7164  003586  1413               	andwf	(___fleq@ff2+1)^0,w,c
  7165  003588  6E17               	movwf	(??___fleq+1)^0,c
  7166  00358A  0E80               	movlw	128
  7167  00358C  1414               	andwf	(___fleq@ff2+2)^0,w,c
  7168  00358E  6E18               	movwf	(??___fleq+2)^0,c
  7169  003590  0E7F               	movlw	127
  7170  003592  1415               	andwf	(___fleq@ff2+3)^0,w,c
  7171  003594  6E19               	movwf	(??___fleq+3)^0,c
  7172  003596  5016               	movf	??___fleq^0,w,c
  7173  003598  1017               	iorwf	(??___fleq+1)^0,w,c
  7174  00359A  1018               	iorwf	(??___fleq+2)^0,w,c
  7175  00359C  1019               	iorwf	(??___fleq+3)^0,w,c
  7176  00359E  A4D8               	btfss	status,2,c
  7177  0035A0  EFD4  F01A         	goto	u7341
  7178  0035A4  EFD6  F01A         	goto	u7340
  7179  0035A8                     u7341:
  7180  0035A8  EFDE  F01A         	goto	l6166
  7181  0035AC                     u7340:
  7182  0035AC  0E00               	movlw	0
  7183  0035AE  6E12               	movwf	___fleq@ff2^0,c
  7184  0035B0  0E00               	movlw	0
  7185  0035B2  6E13               	movwf	(___fleq@ff2+1)^0,c
  7186  0035B4  0E00               	movlw	0
  7187  0035B6  6E14               	movwf	(___fleq@ff2+2)^0,c
  7188  0035B8  0E00               	movlw	0
  7189  0035BA  6E15               	movwf	(___fleq@ff2+3)^0,c
  7190  0035BC                     l6166:
  7191  0035BC  5012               	movf	___fleq@ff2^0,w,c
  7192  0035BE  180E               	xorwf	___fleq@ff1^0,w,c
  7193  0035C0  E10F               	bnz	u7350
  7194  0035C2  5013               	movf	(___fleq@ff2+1)^0,w,c
  7195  0035C4  180F               	xorwf	(___fleq@ff1+1)^0,w,c
  7196  0035C6  E10C               	bnz	u7350
  7197  0035C8  5014               	movf	(___fleq@ff2+2)^0,w,c
  7198  0035CA  1810               	xorwf	(___fleq@ff1+2)^0,w,c
  7199  0035CC  E109               	bnz	u7350
  7200  0035CE  5015               	movf	(___fleq@ff2+3)^0,w,c
  7201  0035D0  1811               	xorwf	(___fleq@ff1+3)^0,w,c
  7202  0035D2  B4D8               	btfsc	status,2,c
  7203  0035D4  EFEE  F01A         	goto	u7351
  7204  0035D8  EFF0  F01A         	goto	u7350
  7205  0035DC                     u7351:
  7206  0035DC  EFF3  F01A         	goto	l6170
  7207  0035E0                     u7350:
  7208  0035E0  90D8               	bcf	status,0,c
  7209  0035E2  EFF4  F01A         	goto	l999
  7210  0035E6                     l6170:
  7211  0035E6  80D8               	bsf	status,0,c
  7212  0035E8                     l999:
  7213  0035E8  0012               	return		;funcret
  7214  0035EA                     __end_of___fleq:
  7215                           	opt callstack 0
  7216                           
  7217 ;; *************** function ___fldiv *****************
  7218 ;; Defined at:
  7219 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
  7220 ;; Parameters:    Size  Location     Type
  7221 ;;  b               4   13[COMRAM] unsigned char 
  7222 ;;  a               4   17[COMRAM] unsigned char 
  7223 ;; Auto vars:     Size  Location     Type
  7224 ;;  grs             4   32[COMRAM] unsigned long 
  7225 ;;  rem             4   25[COMRAM] unsigned long 
  7226 ;;  new_exp         2   30[COMRAM] short 
  7227 ;;  aexp            1   37[COMRAM] unsigned char 
  7228 ;;  bexp            1   36[COMRAM] unsigned char 
  7229 ;;  sign            1   29[COMRAM] unsigned char 
  7230 ;; Return value:  Size  Location     Type
  7231 ;;                  4   13[COMRAM] unsigned char 
  7232 ;; Registers used:
  7233 ;;		wreg, status,2, status,0
  7234 ;; Tracked objects:
  7235 ;;		On entry : 0/0
  7236 ;;		On exit  : 0/0
  7237 ;;		Unchanged: 0/0
  7238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7239 ;;      Params:         8       0       0       0       0       0       0
  7240 ;;      Locals:        13       0       0       0       0       0       0
  7241 ;;      Temps:          4       0       0       0       0       0       0
  7242 ;;      Totals:        25       0       0       0       0       0       0
  7243 ;;Total ram usage:       25 bytes
  7244 ;; Hardware stack levels used:    1
  7245 ;; Hardware stack levels required when called:    9
  7246 ;; This function calls:
  7247 ;;		Nothing
  7248 ;; This function is called by:
  7249 ;;		_efgtoa
  7250 ;; This function uses a non-reentrant model
  7251 ;;
  7252                           
  7253                           	psect	text23
  7254  002368                     __ptext23:
  7255                           	opt callstack 0
  7256  002368                     ___fldiv:
  7257                           	opt callstack 17
  7258  002368  5011               	movf	(___fldiv@b+3)^0,w,c
  7259  00236A  0B80               	andlw	128
  7260  00236C  6E1E               	movwf	___fldiv@sign^0,c
  7261  00236E  5011               	movf	(___fldiv@b+3)^0,w,c
  7262  002370  2411               	addwf	(___fldiv@b+3)^0,w,c
  7263  002372  6E25               	movwf	___fldiv@bexp^0,c
  7264  002374  AE10               	btfss	(___fldiv@b+2)^0,7,c
  7265  002376  EFBF  F011         	goto	u6791
  7266  00237A  EFC1  F011         	goto	u6790
  7267  00237E                     u6791:
  7268  00237E  EFC2  F011         	goto	l5810
  7269  002382                     u6790:
  7270  002382  8025               	bsf	___fldiv@bexp^0,0,c
  7271  002384                     l5810:
  7272  002384  5025               	movf	___fldiv@bexp^0,w,c
  7273  002386  B4D8               	btfsc	status,2,c
  7274  002388  EFC8  F011         	goto	u6801
  7275  00238C  EFCA  F011         	goto	u6800
  7276  002390                     u6801:
  7277  002390  EFDF  F011         	goto	l5820
  7278  002394                     u6800:
  7279  002394  2825               	incf	___fldiv@bexp^0,w,c
  7280  002396  A4D8               	btfss	status,2,c
  7281  002398  EFD0  F011         	goto	u6811
  7282  00239C  EFD2  F011         	goto	u6810
  7283  0023A0                     u6811:
  7284  0023A0  EFDA  F011         	goto	l5816
  7285  0023A4                     u6810:
  7286  0023A4  0E00               	movlw	0
  7287  0023A6  6E0E               	movwf	___fldiv@b^0,c
  7288  0023A8  0E00               	movlw	0
  7289  0023AA  6E0F               	movwf	(___fldiv@b+1)^0,c
  7290  0023AC  0E00               	movlw	0
  7291  0023AE  6E10               	movwf	(___fldiv@b+2)^0,c
  7292  0023B0  0E00               	movlw	0
  7293  0023B2  6E11               	movwf	(___fldiv@b+3)^0,c
  7294  0023B4                     l5816:
  7295  0023B4  8E10               	bsf	(___fldiv@b+2)^0,7,c
  7296  0023B6  0E00               	movlw	0
  7297  0023B8  6E11               	movwf	(___fldiv@b+3)^0,c
  7298  0023BA  EFE7  F011         	goto	l5822
  7299  0023BE                     l5820:
  7300  0023BE  0E00               	movlw	0
  7301  0023C0  6E0E               	movwf	___fldiv@b^0,c
  7302  0023C2  0E00               	movlw	0
  7303  0023C4  6E0F               	movwf	(___fldiv@b+1)^0,c
  7304  0023C6  0E00               	movlw	0
  7305  0023C8  6E10               	movwf	(___fldiv@b+2)^0,c
  7306  0023CA  0E00               	movlw	0
  7307  0023CC  6E11               	movwf	(___fldiv@b+3)^0,c
  7308  0023CE                     l5822:
  7309  0023CE  5015               	movf	(___fldiv@a+3)^0,w,c
  7310  0023D0  0B80               	andlw	128
  7311  0023D2  1A1E               	xorwf	___fldiv@sign^0,f,c
  7312  0023D4  5015               	movf	(___fldiv@a+3)^0,w,c
  7313  0023D6  2415               	addwf	(___fldiv@a+3)^0,w,c
  7314  0023D8  6E26               	movwf	___fldiv@aexp^0,c
  7315  0023DA  AE14               	btfss	(___fldiv@a+2)^0,7,c
  7316  0023DC  EFF2  F011         	goto	u6821
  7317  0023E0  EFF4  F011         	goto	u6820
  7318  0023E4                     u6821:
  7319  0023E4  EFF5  F011         	goto	l5830
  7320  0023E8                     u6820:
  7321  0023E8  8026               	bsf	___fldiv@aexp^0,0,c
  7322  0023EA                     l5830:
  7323  0023EA  5026               	movf	___fldiv@aexp^0,w,c
  7324  0023EC  B4D8               	btfsc	status,2,c
  7325  0023EE  EFFB  F011         	goto	u6831
  7326  0023F2  EFFD  F011         	goto	u6830
  7327  0023F6                     u6831:
  7328  0023F6  EF12  F012         	goto	l5840
  7329  0023FA                     u6830:
  7330  0023FA  2826               	incf	___fldiv@aexp^0,w,c
  7331  0023FC  A4D8               	btfss	status,2,c
  7332  0023FE  EF03  F012         	goto	u6841
  7333  002402  EF05  F012         	goto	u6840
  7334  002406                     u6841:
  7335  002406  EF0D  F012         	goto	l5836
  7336  00240A                     u6840:
  7337  00240A  0E00               	movlw	0
  7338  00240C  6E12               	movwf	___fldiv@a^0,c
  7339  00240E  0E00               	movlw	0
  7340  002410  6E13               	movwf	(___fldiv@a+1)^0,c
  7341  002412  0E00               	movlw	0
  7342  002414  6E14               	movwf	(___fldiv@a+2)^0,c
  7343  002416  0E00               	movlw	0
  7344  002418  6E15               	movwf	(___fldiv@a+3)^0,c
  7345  00241A                     l5836:
  7346  00241A  8E14               	bsf	(___fldiv@a+2)^0,7,c
  7347  00241C  0E00               	movlw	0
  7348  00241E  6E15               	movwf	(___fldiv@a+3)^0,c
  7349  002420  EF1A  F012         	goto	l5842
  7350  002424                     l5840:
  7351  002424  0E00               	movlw	0
  7352  002426  6E12               	movwf	___fldiv@a^0,c
  7353  002428  0E00               	movlw	0
  7354  00242A  6E13               	movwf	(___fldiv@a+1)^0,c
  7355  00242C  0E00               	movlw	0
  7356  00242E  6E14               	movwf	(___fldiv@a+2)^0,c
  7357  002430  0E00               	movlw	0
  7358  002432  6E15               	movwf	(___fldiv@a+3)^0,c
  7359  002434                     l5842:
  7360  002434  5012               	movf	___fldiv@a^0,w,c
  7361  002436  1013               	iorwf	(___fldiv@a+1)^0,w,c
  7362  002438  1014               	iorwf	(___fldiv@a+2)^0,w,c
  7363  00243A  1015               	iorwf	(___fldiv@a+3)^0,w,c
  7364  00243C  A4D8               	btfss	status,2,c
  7365  00243E  EF23  F012         	goto	u6851
  7366  002442  EF25  F012         	goto	u6850
  7367  002446                     u6851:
  7368  002446  EF3D  F012         	goto	l5854
  7369  00244A                     u6850:
  7370  00244A  0E00               	movlw	0
  7371  00244C  6E0E               	movwf	___fldiv@b^0,c
  7372  00244E  0E00               	movlw	0
  7373  002450  6E0F               	movwf	(___fldiv@b+1)^0,c
  7374  002452  0E00               	movlw	0
  7375  002454  6E10               	movwf	(___fldiv@b+2)^0,c
  7376  002456  0E00               	movlw	0
  7377  002458  6E11               	movwf	(___fldiv@b+3)^0,c
  7378  00245A  0E80               	movlw	128
  7379  00245C  1210               	iorwf	(___fldiv@b+2)^0,f,c
  7380  00245E  0E7F               	movlw	127
  7381  002460  1211               	iorwf	(___fldiv@b+3)^0,f,c
  7382  002462                     l5848:
  7383  002462  501E               	movf	___fldiv@sign^0,w,c
  7384  002464  1211               	iorwf	(___fldiv@b+3)^0,f,c
  7385  002466  C00E  F00E         	movff	___fldiv@b,?___fldiv
  7386  00246A  C00F  F00F         	movff	___fldiv@b+1,?___fldiv+1
  7387  00246E  C010  F010         	movff	___fldiv@b+2,?___fldiv+2
  7388  002472  C011  F011         	movff	___fldiv@b+3,?___fldiv+3
  7389  002476  EF80  F013         	goto	l1322
  7390  00247A                     l5854:
  7391  00247A  5025               	movf	___fldiv@bexp^0,w,c
  7392  00247C  A4D8               	btfss	status,2,c
  7393  00247E  EF43  F012         	goto	u6861
  7394  002482  EF45  F012         	goto	u6860
  7395  002486                     u6861:
  7396  002486  EF4F  F012         	goto	l5862
  7397  00248A                     u6860:
  7398  00248A  0E00               	movlw	0
  7399  00248C  6E0E               	movwf	?___fldiv^0,c
  7400  00248E  0E00               	movlw	0
  7401  002490  6E0F               	movwf	(?___fldiv+1)^0,c
  7402  002492  0E00               	movlw	0
  7403  002494  6E10               	movwf	(?___fldiv+2)^0,c
  7404  002496  0E00               	movlw	0
  7405  002498  6E11               	movwf	(?___fldiv+3)^0,c
  7406  00249A  EF80  F013         	goto	l1322
  7407  00249E                     l5862:
  7408  00249E  5026               	movf	___fldiv@aexp^0,w,c
  7409  0024A0  C025  F016         	movff	___fldiv@bexp,??___fldiv
  7410  0024A4  6A17               	clrf	(??___fldiv+1)^0,c
  7411  0024A6  5E16               	subwf	??___fldiv^0,f,c
  7412  0024A8  0E00               	movlw	0
  7413  0024AA  5A17               	subwfb	(??___fldiv+1)^0,f,c
  7414  0024AC  0E7F               	movlw	127
  7415  0024AE  2416               	addwf	??___fldiv^0,w,c
  7416  0024B0  6E1F               	movwf	___fldiv@new_exp^0,c
  7417  0024B2  0E00               	movlw	0
  7418  0024B4  2017               	addwfc	(??___fldiv+1)^0,w,c
  7419  0024B6  6E20               	movwf	(___fldiv@new_exp+1)^0,c
  7420  0024B8  C00E  F01A         	movff	___fldiv@b,___fldiv@rem
  7421  0024BC  C00F  F01B         	movff	___fldiv@b+1,___fldiv@rem+1
  7422  0024C0  C010  F01C         	movff	___fldiv@b+2,___fldiv@rem+2
  7423  0024C4  C011  F01D         	movff	___fldiv@b+3,___fldiv@rem+3
  7424  0024C8  0E00               	movlw	0
  7425  0024CA  6E0E               	movwf	___fldiv@b^0,c
  7426  0024CC  0E00               	movlw	0
  7427  0024CE  6E0F               	movwf	(___fldiv@b+1)^0,c
  7428  0024D0  0E00               	movlw	0
  7429  0024D2  6E10               	movwf	(___fldiv@b+2)^0,c
  7430  0024D4  0E00               	movlw	0
  7431  0024D6  6E11               	movwf	(___fldiv@b+3)^0,c
  7432  0024D8  0E00               	movlw	0
  7433  0024DA  6E21               	movwf	___fldiv@grs^0,c
  7434  0024DC  0E00               	movlw	0
  7435  0024DE  6E22               	movwf	(___fldiv@grs+1)^0,c
  7436  0024E0  0E00               	movlw	0
  7437  0024E2  6E23               	movwf	(___fldiv@grs+2)^0,c
  7438  0024E4  0E00               	movlw	0
  7439  0024E6  6E24               	movwf	(___fldiv@grs+3)^0,c
  7440  0024E8  0E00               	movlw	0
  7441  0024EA  6E26               	movwf	___fldiv@aexp^0,c
  7442  0024EC  EFB0  F012         	goto	l1324
  7443  0024F0                     l5872:
  7444  0024F0  5026               	movf	___fldiv@aexp^0,w,c
  7445  0024F2  B4D8               	btfsc	status,2,c
  7446  0024F4  EF7E  F012         	goto	u6871
  7447  0024F8  EF80  F012         	goto	u6870
  7448  0024FC                     u6871:
  7449  0024FC  EF97  F012         	goto	l5880
  7450  002500                     u6870:
  7451  002500  90D8               	bcf	status,0,c
  7452  002502  361A               	rlcf	___fldiv@rem^0,f,c
  7453  002504  361B               	rlcf	(___fldiv@rem+1)^0,f,c
  7454  002506  361C               	rlcf	(___fldiv@rem+2)^0,f,c
  7455  002508  361D               	rlcf	(___fldiv@rem+3)^0,f,c
  7456  00250A  90D8               	bcf	status,0,c
  7457  00250C  360E               	rlcf	___fldiv@b^0,f,c
  7458  00250E  360F               	rlcf	(___fldiv@b+1)^0,f,c
  7459  002510  3610               	rlcf	(___fldiv@b+2)^0,f,c
  7460  002512  3611               	rlcf	(___fldiv@b+3)^0,f,c
  7461  002514  AE24               	btfss	(___fldiv@grs+3)^0,7,c
  7462  002516  EF8F  F012         	goto	u6881
  7463  00251A  EF91  F012         	goto	u6880
  7464  00251E                     u6881:
  7465  00251E  EF92  F012         	goto	l1327
  7466  002522                     u6880:
  7467  002522  800E               	bsf	___fldiv@b^0,0,c
  7468  002524                     l1327:
  7469  002524  90D8               	bcf	status,0,c
  7470  002526  3621               	rlcf	___fldiv@grs^0,f,c
  7471  002528  3622               	rlcf	(___fldiv@grs+1)^0,f,c
  7472  00252A  3623               	rlcf	(___fldiv@grs+2)^0,f,c
  7473  00252C  3624               	rlcf	(___fldiv@grs+3)^0,f,c
  7474  00252E                     l5880:
  7475  00252E  5012               	movf	___fldiv@a^0,w,c
  7476  002530  5C1A               	subwf	___fldiv@rem^0,w,c
  7477  002532  5013               	movf	(___fldiv@a+1)^0,w,c
  7478  002534  581B               	subwfb	(___fldiv@rem+1)^0,w,c
  7479  002536  5014               	movf	(___fldiv@a+2)^0,w,c
  7480  002538  581C               	subwfb	(___fldiv@rem+2)^0,w,c
  7481  00253A  5015               	movf	(___fldiv@a+3)^0,w,c
  7482  00253C  581D               	subwfb	(___fldiv@rem+3)^0,w,c
  7483  00253E  A0D8               	btfss	status,0,c
  7484  002540  EFA4  F012         	goto	u6891
  7485  002544  EFA6  F012         	goto	u6890
  7486  002548                     u6891:
  7487  002548  EFAF  F012         	goto	l5886
  7488  00254C                     u6890:
  7489  00254C  8C24               	bsf	(___fldiv@grs+3)^0,6,c
  7490  00254E  5012               	movf	___fldiv@a^0,w,c
  7491  002550  5E1A               	subwf	___fldiv@rem^0,f,c
  7492  002552  5013               	movf	(___fldiv@a+1)^0,w,c
  7493  002554  5A1B               	subwfb	(___fldiv@rem+1)^0,f,c
  7494  002556  5014               	movf	(___fldiv@a+2)^0,w,c
  7495  002558  5A1C               	subwfb	(___fldiv@rem+2)^0,f,c
  7496  00255A  5015               	movf	(___fldiv@a+3)^0,w,c
  7497  00255C  5A1D               	subwfb	(___fldiv@rem+3)^0,f,c
  7498  00255E                     l5886:
  7499  00255E  2A26               	incf	___fldiv@aexp^0,f,c
  7500  002560                     l1324:
  7501  002560  0E19               	movlw	25
  7502  002562  6426               	cpfsgt	___fldiv@aexp^0,c
  7503  002564  EFB6  F012         	goto	u6901
  7504  002568  EFB8  F012         	goto	u6900
  7505  00256C                     u6901:
  7506  00256C  EF78  F012         	goto	l5872
  7507  002570                     u6900:
  7508  002570  501A               	movf	___fldiv@rem^0,w,c
  7509  002572  101B               	iorwf	(___fldiv@rem+1)^0,w,c
  7510  002574  101C               	iorwf	(___fldiv@rem+2)^0,w,c
  7511  002576  101D               	iorwf	(___fldiv@rem+3)^0,w,c
  7512  002578  B4D8               	btfsc	status,2,c
  7513  00257A  EFC1  F012         	goto	u6911
  7514  00257E  EFC3  F012         	goto	u6910
  7515  002582                     u6911:
  7516  002582  EFDB  F012         	goto	l5898
  7517  002586                     u6910:
  7518  002586  8021               	bsf	___fldiv@grs^0,0,c
  7519  002588  EFDB  F012         	goto	l5898
  7520  00258C                     l5892:
  7521  00258C  90D8               	bcf	status,0,c
  7522  00258E  360E               	rlcf	___fldiv@b^0,f,c
  7523  002590  360F               	rlcf	(___fldiv@b+1)^0,f,c
  7524  002592  3610               	rlcf	(___fldiv@b+2)^0,f,c
  7525  002594  3611               	rlcf	(___fldiv@b+3)^0,f,c
  7526  002596  AE24               	btfss	(___fldiv@grs+3)^0,7,c
  7527  002598  EFD0  F012         	goto	u6921
  7528  00259C  EFD2  F012         	goto	u6920
  7529  0025A0                     u6921:
  7530  0025A0  EFD3  F012         	goto	l1333
  7531  0025A4                     u6920:
  7532  0025A4  800E               	bsf	___fldiv@b^0,0,c
  7533  0025A6                     l1333:
  7534  0025A6  90D8               	bcf	status,0,c
  7535  0025A8  3621               	rlcf	___fldiv@grs^0,f,c
  7536  0025AA  3622               	rlcf	(___fldiv@grs+1)^0,f,c
  7537  0025AC  3623               	rlcf	(___fldiv@grs+2)^0,f,c
  7538  0025AE  3624               	rlcf	(___fldiv@grs+3)^0,f,c
  7539  0025B0  061F               	decf	___fldiv@new_exp^0,f,c
  7540  0025B2  A0D8               	btfss	status,0,c
  7541  0025B4  0620               	decf	(___fldiv@new_exp+1)^0,f,c
  7542  0025B6                     l5898:
  7543  0025B6  AE10               	btfss	(___fldiv@b+2)^0,7,c
  7544  0025B8  EFE0  F012         	goto	u6931
  7545  0025BC  EFE2  F012         	goto	u6930
  7546  0025C0                     u6931:
  7547  0025C0  EFC6  F012         	goto	l5892
  7548  0025C4                     u6930:
  7549  0025C4  0E00               	movlw	0
  7550  0025C6  6E26               	movwf	___fldiv@aexp^0,c
  7551  0025C8  AE24               	btfss	(___fldiv@grs+3)^0,7,c
  7552  0025CA  EFE9  F012         	goto	u6941
  7553  0025CE  EFEB  F012         	goto	u6940
  7554  0025D2                     u6941:
  7555  0025D2  EF0F  F013         	goto	l1335
  7556  0025D6                     u6940:
  7557  0025D6  0EFF               	movlw	255
  7558  0025D8  1421               	andwf	___fldiv@grs^0,w,c
  7559  0025DA  6E16               	movwf	??___fldiv^0,c
  7560  0025DC  0EFF               	movlw	255
  7561  0025DE  1422               	andwf	(___fldiv@grs+1)^0,w,c
  7562  0025E0  6E17               	movwf	(??___fldiv+1)^0,c
  7563  0025E2  0EFF               	movlw	255
  7564  0025E4  1423               	andwf	(___fldiv@grs+2)^0,w,c
  7565  0025E6  6E18               	movwf	(??___fldiv+2)^0,c
  7566  0025E8  0E7F               	movlw	127
  7567  0025EA  1424               	andwf	(___fldiv@grs+3)^0,w,c
  7568  0025EC  6E19               	movwf	(??___fldiv+3)^0,c
  7569  0025EE  5016               	movf	??___fldiv^0,w,c
  7570  0025F0  1017               	iorwf	(??___fldiv+1)^0,w,c
  7571  0025F2  1018               	iorwf	(??___fldiv+2)^0,w,c
  7572  0025F4  1019               	iorwf	(??___fldiv+3)^0,w,c
  7573  0025F6  B4D8               	btfsc	status,2,c
  7574  0025F8  EF00  F013         	goto	u6951
  7575  0025FC  EF02  F013         	goto	u6950
  7576  002600                     u6951:
  7577  002600  EF06  F013         	goto	l1336
  7578  002604                     u6950:
  7579  002604                     l5906:
  7580  002604  0E01               	movlw	1
  7581  002606  6E26               	movwf	___fldiv@aexp^0,c
  7582  002608  EF0F  F013         	goto	l1335
  7583  00260C                     l1336:
  7584  00260C  A00E               	btfss	___fldiv@b^0,0,c
  7585  00260E  EF0B  F013         	goto	u6961
  7586  002612  EF0D  F013         	goto	u6960
  7587  002616                     u6961:
  7588  002616  EF0F  F013         	goto	l1335
  7589  00261A                     u6960:
  7590  00261A  EF02  F013         	goto	l5906
  7591  00261E                     l1335:
  7592  00261E  5026               	movf	___fldiv@aexp^0,w,c
  7593  002620  B4D8               	btfsc	status,2,c
  7594  002622  EF15  F013         	goto	u6971
  7595  002626  EF17  F013         	goto	u6970
  7596  00262A                     u6971:
  7597  00262A  EF3B  F013         	goto	l5918
  7598  00262E                     u6970:
  7599  00262E  0E01               	movlw	1
  7600  002630  260E               	addwf	___fldiv@b^0,f,c
  7601  002632  0E00               	movlw	0
  7602  002634  220F               	addwfc	(___fldiv@b+1)^0,f,c
  7603  002636  2210               	addwfc	(___fldiv@b+2)^0,f,c
  7604  002638  2211               	addwfc	(___fldiv@b+3)^0,f,c
  7605  00263A  A011               	btfss	(___fldiv@b+3)^0,0,c
  7606  00263C  EF22  F013         	goto	u6981
  7607  002640  EF24  F013         	goto	u6980
  7608  002644                     u6981:
  7609  002644  EF3B  F013         	goto	l5918
  7610  002648                     u6980:
  7611  002648  C00E  F016         	movff	___fldiv@b,??___fldiv
  7612  00264C  C00F  F017         	movff	___fldiv@b+1,??___fldiv+1
  7613  002650  C010  F018         	movff	___fldiv@b+2,??___fldiv+2
  7614  002654  C011  F019         	movff	___fldiv@b+3,??___fldiv+3
  7615  002658  3419               	rlcf	(??___fldiv+3)^0,w,c
  7616  00265A  3219               	rrcf	(??___fldiv+3)^0,f,c
  7617  00265C  3218               	rrcf	(??___fldiv+2)^0,f,c
  7618  00265E  3217               	rrcf	(??___fldiv+1)^0,f,c
  7619  002660  3216               	rrcf	??___fldiv^0,f,c
  7620  002662  C016  F00E         	movff	??___fldiv,___fldiv@b
  7621  002666  C017  F00F         	movff	??___fldiv+1,___fldiv@b+1
  7622  00266A  C018  F010         	movff	??___fldiv+2,___fldiv@b+2
  7623  00266E  C019  F011         	movff	??___fldiv+3,___fldiv@b+3
  7624  002672  4A1F               	infsnz	___fldiv@new_exp^0,f,c
  7625  002674  2A20               	incf	(___fldiv@new_exp+1)^0,f,c
  7626  002676                     l5918:
  7627  002676  BE20               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7628  002678  EF46  F013         	goto	u6991
  7629  00267C  5020               	movf	(___fldiv@new_exp+1)^0,w,c
  7630  00267E  E108               	bnz	u6990
  7631  002680  281F               	incf	___fldiv@new_exp^0,w,c
  7632  002682  A0D8               	btfss	status,0,c
  7633  002684  EF46  F013         	goto	u6991
  7634  002688  EF48  F013         	goto	u6990
  7635  00268C                     u6991:
  7636  00268C  EF53  F013         	goto	l5922
  7637  002690                     u6990:
  7638  002690  0E00               	movlw	0
  7639  002692  6E20               	movwf	(___fldiv@new_exp+1)^0,c
  7640  002694  681F               	setf	___fldiv@new_exp^0,c
  7641  002696  0E00               	movlw	0
  7642  002698  6E0E               	movwf	___fldiv@b^0,c
  7643  00269A  0E00               	movlw	0
  7644  00269C  6E0F               	movwf	(___fldiv@b+1)^0,c
  7645  00269E  0E00               	movlw	0
  7646  0026A0  6E10               	movwf	(___fldiv@b+2)^0,c
  7647  0026A2  0E00               	movlw	0
  7648  0026A4  6E11               	movwf	(___fldiv@b+3)^0,c
  7649  0026A6                     l5922:
  7650  0026A6  BE20               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7651  0026A8  EF60  F013         	goto	u7000
  7652  0026AC  5020               	movf	(___fldiv@new_exp+1)^0,w,c
  7653  0026AE  E106               	bnz	u7001
  7654  0026B0  041F               	decf	___fldiv@new_exp^0,w,c
  7655  0026B2  B0D8               	btfsc	status,0,c
  7656  0026B4  EF5E  F013         	goto	u7001
  7657  0026B8  EF60  F013         	goto	u7000
  7658  0026BC                     u7001:
  7659  0026BC  EF6E  F013         	goto	l5926
  7660  0026C0                     u7000:
  7661  0026C0  0E00               	movlw	0
  7662  0026C2  6E20               	movwf	(___fldiv@new_exp+1)^0,c
  7663  0026C4  0E00               	movlw	0
  7664  0026C6  6E1F               	movwf	___fldiv@new_exp^0,c
  7665  0026C8  0E00               	movlw	0
  7666  0026CA  6E0E               	movwf	___fldiv@b^0,c
  7667  0026CC  0E00               	movlw	0
  7668  0026CE  6E0F               	movwf	(___fldiv@b+1)^0,c
  7669  0026D0  0E00               	movlw	0
  7670  0026D2  6E10               	movwf	(___fldiv@b+2)^0,c
  7671  0026D4  0E00               	movlw	0
  7672  0026D6  6E11               	movwf	(___fldiv@b+3)^0,c
  7673  0026D8  0E00               	movlw	0
  7674  0026DA  6E1E               	movwf	___fldiv@sign^0,c
  7675  0026DC                     l5926:
  7676  0026DC  C01F  F025         	movff	___fldiv@new_exp,___fldiv@bexp
  7677  0026E0  A025               	btfss	___fldiv@bexp^0,0,c
  7678  0026E2  EF75  F013         	goto	u7011
  7679  0026E6  EF77  F013         	goto	u7010
  7680  0026EA                     u7011:
  7681  0026EA  EF7A  F013         	goto	l5932
  7682  0026EE                     u7010:
  7683  0026EE  8E10               	bsf	(___fldiv@b+2)^0,7,c
  7684  0026F0  EF7B  F013         	goto	l5934
  7685  0026F4                     l5932:
  7686  0026F4  9E10               	bcf	(___fldiv@b+2)^0,7,c
  7687  0026F6                     l5934:
  7688  0026F6  90D8               	bcf	status,0,c
  7689  0026F8  3025               	rrcf	___fldiv@bexp^0,w,c
  7690  0026FA  6E11               	movwf	(___fldiv@b+3)^0,c
  7691  0026FC  EF31  F012         	goto	l5848
  7692  002700                     l1322:
  7693  002700  0012               	return		;funcret
  7694  002702                     __end_of___fldiv:
  7695                           	opt callstack 0
  7696                           
  7697 ;; *************** function ___awmod *****************
  7698 ;; Defined at:
  7699 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  7700 ;; Parameters:    Size  Location     Type
  7701 ;;  dividend        2   13[COMRAM] int 
  7702 ;;  divisor         2   15[COMRAM] int 
  7703 ;; Auto vars:     Size  Location     Type
  7704 ;;  sign            1   18[COMRAM] unsigned char 
  7705 ;;  counter         1   17[COMRAM] unsigned char 
  7706 ;; Return value:  Size  Location     Type
  7707 ;;                  2   13[COMRAM] int 
  7708 ;; Registers used:
  7709 ;;		wreg, status,2, status,0
  7710 ;; Tracked objects:
  7711 ;;		On entry : 0/0
  7712 ;;		On exit  : 0/0
  7713 ;;		Unchanged: 0/0
  7714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7715 ;;      Params:         4       0       0       0       0       0       0
  7716 ;;      Locals:         2       0       0       0       0       0       0
  7717 ;;      Temps:          0       0       0       0       0       0       0
  7718 ;;      Totals:         6       0       0       0       0       0       0
  7719 ;;Total ram usage:        6 bytes
  7720 ;; Hardware stack levels used:    1
  7721 ;; Hardware stack levels required when called:    9
  7722 ;; This function calls:
  7723 ;;		Nothing
  7724 ;; This function is called by:
  7725 ;;		_efgtoa
  7726 ;; This function uses a non-reentrant model
  7727 ;;
  7728                           
  7729                           	psect	text24
  7730  003490                     __ptext24:
  7731                           	opt callstack 0
  7732  003490                     ___awmod:
  7733                           	opt callstack 17
  7734  003490  0E00               	movlw	0
  7735  003492  6E13               	movwf	___awmod@sign^0,c
  7736  003494  BE0F               	btfsc	(___awmod@dividend+1)^0,7,c
  7737  003496  EF51  F01A         	goto	u7270
  7738  00349A  EF4F  F01A         	goto	u7271
  7739  00349E                     u7271:
  7740  00349E  EF57  F01A         	goto	l6130
  7741  0034A2                     u7270:
  7742  0034A2  6C0E               	negf	___awmod@dividend^0,c
  7743  0034A4  1E0F               	comf	(___awmod@dividend+1)^0,f,c
  7744  0034A6  B0D8               	btfsc	status,0,c
  7745  0034A8  2A0F               	incf	(___awmod@dividend+1)^0,f,c
  7746  0034AA  0E01               	movlw	1
  7747  0034AC  6E13               	movwf	___awmod@sign^0,c
  7748  0034AE                     l6130:
  7749  0034AE  BE11               	btfsc	(___awmod@divisor+1)^0,7,c
  7750  0034B0  EF5E  F01A         	goto	u7280
  7751  0034B4  EF5C  F01A         	goto	u7281
  7752  0034B8                     u7281:
  7753  0034B8  EF62  F01A         	goto	l6134
  7754  0034BC                     u7280:
  7755  0034BC  6C10               	negf	___awmod@divisor^0,c
  7756  0034BE  1E11               	comf	(___awmod@divisor+1)^0,f,c
  7757  0034C0  B0D8               	btfsc	status,0,c
  7758  0034C2  2A11               	incf	(___awmod@divisor+1)^0,f,c
  7759  0034C4                     l6134:
  7760  0034C4  5010               	movf	___awmod@divisor^0,w,c
  7761  0034C6  1011               	iorwf	(___awmod@divisor+1)^0,w,c
  7762  0034C8  B4D8               	btfsc	status,2,c
  7763  0034CA  EF69  F01A         	goto	u7291
  7764  0034CE  EF6B  F01A         	goto	u7290
  7765  0034D2                     u7291:
  7766  0034D2  EF8F  F01A         	goto	l6150
  7767  0034D6                     u7290:
  7768  0034D6  0E01               	movlw	1
  7769  0034D8  6E12               	movwf	___awmod@counter^0,c
  7770  0034DA  EF73  F01A         	goto	l6140
  7771  0034DE                     l6138:
  7772  0034DE  90D8               	bcf	status,0,c
  7773  0034E0  3610               	rlcf	___awmod@divisor^0,f,c
  7774  0034E2  3611               	rlcf	(___awmod@divisor+1)^0,f,c
  7775  0034E4  2A12               	incf	___awmod@counter^0,f,c
  7776  0034E6                     l6140:
  7777  0034E6  AE11               	btfss	(___awmod@divisor+1)^0,7,c
  7778  0034E8  EF78  F01A         	goto	u7301
  7779  0034EC  EF7A  F01A         	goto	u7300
  7780  0034F0                     u7301:
  7781  0034F0  EF6F  F01A         	goto	l6138
  7782  0034F4                     u7300:
  7783  0034F4                     l6142:
  7784  0034F4  5010               	movf	___awmod@divisor^0,w,c
  7785  0034F6  5C0E               	subwf	___awmod@dividend^0,w,c
  7786  0034F8  5011               	movf	(___awmod@divisor+1)^0,w,c
  7787  0034FA  580F               	subwfb	(___awmod@dividend+1)^0,w,c
  7788  0034FC  A0D8               	btfss	status,0,c
  7789  0034FE  EF83  F01A         	goto	u7311
  7790  003502  EF85  F01A         	goto	u7310
  7791  003506                     u7311:
  7792  003506  EF89  F01A         	goto	l6146
  7793  00350A                     u7310:
  7794  00350A  5010               	movf	___awmod@divisor^0,w,c
  7795  00350C  5E0E               	subwf	___awmod@dividend^0,f,c
  7796  00350E  5011               	movf	(___awmod@divisor+1)^0,w,c
  7797  003510  5A0F               	subwfb	(___awmod@dividend+1)^0,f,c
  7798  003512                     l6146:
  7799  003512  90D8               	bcf	status,0,c
  7800  003514  3211               	rrcf	(___awmod@divisor+1)^0,f,c
  7801  003516  3210               	rrcf	___awmod@divisor^0,f,c
  7802  003518  2E12               	decfsz	___awmod@counter^0,f,c
  7803  00351A  EF7A  F01A         	goto	l6142
  7804  00351E                     l6150:
  7805  00351E  5013               	movf	___awmod@sign^0,w,c
  7806  003520  B4D8               	btfsc	status,2,c
  7807  003522  EF95  F01A         	goto	u7321
  7808  003526  EF97  F01A         	goto	u7320
  7809  00352A                     u7321:
  7810  00352A  EF9B  F01A         	goto	l6154
  7811  00352E                     u7320:
  7812  00352E  6C0E               	negf	___awmod@dividend^0,c
  7813  003530  1E0F               	comf	(___awmod@dividend+1)^0,f,c
  7814  003532  B0D8               	btfsc	status,0,c
  7815  003534  2A0F               	incf	(___awmod@dividend+1)^0,f,c
  7816  003536                     l6154:
  7817  003536  C00E  F00E         	movff	___awmod@dividend,?___awmod
  7818  00353A  C00F  F00F         	movff	___awmod@dividend+1,?___awmod+1
  7819  00353E  0012               	return		;funcret
  7820  003540                     __end_of___awmod:
  7821                           	opt callstack 0
  7822                           
  7823 ;; *************** function ___awdiv *****************
  7824 ;; Defined at:
  7825 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  7826 ;; Parameters:    Size  Location     Type
  7827 ;;  dividend        2   13[COMRAM] int 
  7828 ;;  divisor         2   15[COMRAM] int 
  7829 ;; Auto vars:     Size  Location     Type
  7830 ;;  quotient        2   19[COMRAM] int 
  7831 ;;  sign            1   18[COMRAM] unsigned char 
  7832 ;;  counter         1   17[COMRAM] unsigned char 
  7833 ;; Return value:  Size  Location     Type
  7834 ;;                  2   13[COMRAM] int 
  7835 ;; Registers used:
  7836 ;;		wreg, status,2, status,0
  7837 ;; Tracked objects:
  7838 ;;		On entry : 0/0
  7839 ;;		On exit  : 0/0
  7840 ;;		Unchanged: 0/0
  7841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7842 ;;      Params:         4       0       0       0       0       0       0
  7843 ;;      Locals:         4       0       0       0       0       0       0
  7844 ;;      Temps:          0       0       0       0       0       0       0
  7845 ;;      Totals:         8       0       0       0       0       0       0
  7846 ;;Total ram usage:        8 bytes
  7847 ;; Hardware stack levels used:    1
  7848 ;; Hardware stack levels required when called:    9
  7849 ;; This function calls:
  7850 ;;		Nothing
  7851 ;; This function is called by:
  7852 ;;		_efgtoa
  7853 ;; This function uses a non-reentrant model
  7854 ;;
  7855                           
  7856                           	psect	text25
  7857  00330A                     __ptext25:
  7858                           	opt callstack 0
  7859  00330A                     ___awdiv:
  7860                           	opt callstack 17
  7861  00330A  0E00               	movlw	0
  7862  00330C  6E13               	movwf	___awdiv@sign^0,c
  7863  00330E  BE11               	btfsc	(___awdiv@divisor+1)^0,7,c
  7864  003310  EF8E  F019         	goto	u7210
  7865  003314  EF8C  F019         	goto	u7211
  7866  003318                     u7211:
  7867  003318  EF94  F019         	goto	l6086
  7868  00331C                     u7210:
  7869  00331C  6C10               	negf	___awdiv@divisor^0,c
  7870  00331E  1E11               	comf	(___awdiv@divisor+1)^0,f,c
  7871  003320  B0D8               	btfsc	status,0,c
  7872  003322  2A11               	incf	(___awdiv@divisor+1)^0,f,c
  7873  003324  0E01               	movlw	1
  7874  003326  6E13               	movwf	___awdiv@sign^0,c
  7875  003328                     l6086:
  7876  003328  BE0F               	btfsc	(___awdiv@dividend+1)^0,7,c
  7877  00332A  EF9B  F019         	goto	u7220
  7878  00332E  EF99  F019         	goto	u7221
  7879  003332                     u7221:
  7880  003332  EFA1  F019         	goto	l6092
  7881  003336                     u7220:
  7882  003336  6C0E               	negf	___awdiv@dividend^0,c
  7883  003338  1E0F               	comf	(___awdiv@dividend+1)^0,f,c
  7884  00333A  B0D8               	btfsc	status,0,c
  7885  00333C  2A0F               	incf	(___awdiv@dividend+1)^0,f,c
  7886  00333E  0E01               	movlw	1
  7887  003340  1A13               	xorwf	___awdiv@sign^0,f,c
  7888  003342                     l6092:
  7889  003342  0E00               	movlw	0
  7890  003344  6E15               	movwf	(___awdiv@quotient+1)^0,c
  7891  003346  0E00               	movlw	0
  7892  003348  6E14               	movwf	___awdiv@quotient^0,c
  7893  00334A  5010               	movf	___awdiv@divisor^0,w,c
  7894  00334C  1011               	iorwf	(___awdiv@divisor+1)^0,w,c
  7895  00334E  B4D8               	btfsc	status,2,c
  7896  003350  EFAC  F019         	goto	u7231
  7897  003354  EFAE  F019         	goto	u7230
  7898  003358                     u7231:
  7899  003358  EFD6  F019         	goto	l6114
  7900  00335C                     u7230:
  7901  00335C  0E01               	movlw	1
  7902  00335E  6E12               	movwf	___awdiv@counter^0,c
  7903  003360  EFB6  F019         	goto	l6100
  7904  003364                     l6098:
  7905  003364  90D8               	bcf	status,0,c
  7906  003366  3610               	rlcf	___awdiv@divisor^0,f,c
  7907  003368  3611               	rlcf	(___awdiv@divisor+1)^0,f,c
  7908  00336A  2A12               	incf	___awdiv@counter^0,f,c
  7909  00336C                     l6100:
  7910  00336C  AE11               	btfss	(___awdiv@divisor+1)^0,7,c
  7911  00336E  EFBB  F019         	goto	u7241
  7912  003372  EFBD  F019         	goto	u7240
  7913  003376                     u7241:
  7914  003376  EFB2  F019         	goto	l6098
  7915  00337A                     u7240:
  7916  00337A                     l6102:
  7917  00337A  90D8               	bcf	status,0,c
  7918  00337C  3614               	rlcf	___awdiv@quotient^0,f,c
  7919  00337E  3615               	rlcf	(___awdiv@quotient+1)^0,f,c
  7920  003380  5010               	movf	___awdiv@divisor^0,w,c
  7921  003382  5C0E               	subwf	___awdiv@dividend^0,w,c
  7922  003384  5011               	movf	(___awdiv@divisor+1)^0,w,c
  7923  003386  580F               	subwfb	(___awdiv@dividend+1)^0,w,c
  7924  003388  A0D8               	btfss	status,0,c
  7925  00338A  EFC9  F019         	goto	u7251
  7926  00338E  EFCB  F019         	goto	u7250
  7927  003392                     u7251:
  7928  003392  EFD0  F019         	goto	l6110
  7929  003396                     u7250:
  7930  003396  5010               	movf	___awdiv@divisor^0,w,c
  7931  003398  5E0E               	subwf	___awdiv@dividend^0,f,c
  7932  00339A  5011               	movf	(___awdiv@divisor+1)^0,w,c
  7933  00339C  5A0F               	subwfb	(___awdiv@dividend+1)^0,f,c
  7934  00339E  8014               	bsf	___awdiv@quotient^0,0,c
  7935  0033A0                     l6110:
  7936  0033A0  90D8               	bcf	status,0,c
  7937  0033A2  3211               	rrcf	(___awdiv@divisor+1)^0,f,c
  7938  0033A4  3210               	rrcf	___awdiv@divisor^0,f,c
  7939  0033A6  2E12               	decfsz	___awdiv@counter^0,f,c
  7940  0033A8  EFBD  F019         	goto	l6102
  7941  0033AC                     l6114:
  7942  0033AC  5013               	movf	___awdiv@sign^0,w,c
  7943  0033AE  B4D8               	btfsc	status,2,c
  7944  0033B0  EFDC  F019         	goto	u7261
  7945  0033B4  EFDE  F019         	goto	u7260
  7946  0033B8                     u7261:
  7947  0033B8  EFE2  F019         	goto	l6118
  7948  0033BC                     u7260:
  7949  0033BC  6C14               	negf	___awdiv@quotient^0,c
  7950  0033BE  1E15               	comf	(___awdiv@quotient+1)^0,f,c
  7951  0033C0  B0D8               	btfsc	status,0,c
  7952  0033C2  2A15               	incf	(___awdiv@quotient+1)^0,f,c
  7953  0033C4                     l6118:
  7954  0033C4  C014  F00E         	movff	___awdiv@quotient,?___awdiv
  7955  0033C8  C015  F00F         	movff	___awdiv@quotient+1,?___awdiv+1
  7956  0033CC  0012               	return		;funcret
  7957  0033CE                     __end_of___awdiv:
  7958                           	opt callstack 0
  7959                           
  7960 ;; *************** function _atoi *****************
  7961 ;; Defined at:
  7962 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  7963 ;; Parameters:    Size  Location     Type
  7964 ;;  s               2   20[COMRAM] PTR const unsigned char 
  7965 ;;		 -> STR_7(22), 
  7966 ;; Auto vars:     Size  Location     Type
  7967 ;;  n               2   33[COMRAM] int 
  7968 ;;  neg             2   26[COMRAM] int 
  7969 ;; Return value:  Size  Location     Type
  7970 ;;                  2   20[COMRAM] int 
  7971 ;; Registers used:
  7972 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7973 ;; Tracked objects:
  7974 ;;		On entry : 0/0
  7975 ;;		On exit  : 0/0
  7976 ;;		Unchanged: 0/0
  7977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7978 ;;      Params:         2       0       0       0       0       0       0
  7979 ;;      Locals:         9       0       0       0       0       0       0
  7980 ;;      Temps:          4       0       0       0       0       0       0
  7981 ;;      Totals:        15       0       0       0       0       0       0
  7982 ;;Total ram usage:       15 bytes
  7983 ;; Hardware stack levels used:    1
  7984 ;; Hardware stack levels required when called:   10
  7985 ;; This function calls:
  7986 ;;		___wmul
  7987 ;;		_isdigit
  7988 ;;		_isspace
  7989 ;; This function is called by:
  7990 ;;		_vfpfcnvrt
  7991 ;; This function uses a non-reentrant model
  7992 ;;
  7993                           
  7994                           	psect	text26
  7995  002AC8                     __ptext26:
  7996                           	opt callstack 0
  7997  002AC8                     _atoi:
  7998                           	opt callstack 17
  7999  002AC8  0E00               	movlw	0
  8000  002ACA  6E23               	movwf	(atoi@n+1)^0,c
  8001  002ACC  0E00               	movlw	0
  8002  002ACE  6E22               	movwf	atoi@n^0,c
  8003  002AD0  0E00               	movlw	0
  8004  002AD2  6E1C               	movwf	(atoi@neg+1)^0,c
  8005  002AD4  0E00               	movlw	0
  8006  002AD6  6E1B               	movwf	atoi@neg^0,c
  8007  002AD8  EF70  F015         	goto	l6562
  8008  002ADC                     l6560:
  8009  002ADC  4A15               	infsnz	atoi@s^0,f,c
  8010  002ADE  2A16               	incf	(atoi@s+1)^0,f,c
  8011  002AE0                     l6562:
  8012  002AE0  0E01               	movlw	1
  8013  002AE2  6E21               	movwf	_atoi$1878^0,c
  8014  002AE4  C015  FFF6         	movff	atoi@s,tblptrl
  8015  002AE8  C016  FFF7         	movff	atoi@s+1,tblptrh
  8016  002AEC                     	if	0	;tblptru may be non-zero
  8017  002AEC                     	endif
  8018  002AEC                     	if	0	;tblptru may be non-zero
  8019  002AEC                     	endif
  8020  002AEC  0008               	tblrd		*
  8021  002AEE  50F5               	movf	tablat,w,c
  8022  002AF0  0A20               	xorlw	32
  8023  002AF2  B4D8               	btfsc	status,2,c
  8024  002AF4  EF7E  F015         	goto	u8031
  8025  002AF8  EF80  F015         	goto	u8030
  8026  002AFC                     u8031:
  8027  002AFC  EF9D  F015         	goto	l6570
  8028  002B00                     u8030:
  8029  002B00  0EF7               	movlw	247
  8030  002B02  6E17               	movwf	??_atoi^0,c
  8031  002B04  0EFF               	movlw	255
  8032  002B06  6E18               	movwf	(??_atoi+1)^0,c
  8033  002B08  C015  FFF6         	movff	atoi@s,tblptrl
  8034  002B0C  C016  FFF7         	movff	atoi@s+1,tblptrh
  8035  002B10                     	if	0	;tblptru may be non-zero
  8036  002B10                     	endif
  8037  002B10                     	if	0	;tblptru may be non-zero
  8038  002B10                     	endif
  8039  002B10  0008               	tblrd		*
  8040  002B12  50F5               	movf	tablat,w,c
  8041  002B14  6E19               	movwf	(??_atoi+2)^0,c
  8042  002B16  6A1A               	clrf	(??_atoi+3)^0,c
  8043  002B18  5017               	movf	??_atoi^0,w,c
  8044  002B1A  2619               	addwf	(??_atoi+2)^0,f,c
  8045  002B1C  5018               	movf	(??_atoi+1)^0,w,c
  8046  002B1E  221A               	addwfc	(??_atoi+3)^0,f,c
  8047  002B20  501A               	movf	(??_atoi+3)^0,w,c
  8048  002B22  E109               	bnz	u8040
  8049  002B24  0E05               	movlw	5
  8050  002B26  5C19               	subwf	(??_atoi+2)^0,w,c
  8051  002B28  A0D8               	btfss	status,0,c
  8052  002B2A  EF99  F015         	goto	u8041
  8053  002B2E  EF9B  F015         	goto	u8040
  8054  002B32                     u8041:
  8055  002B32  EF9D  F015         	goto	l6570
  8056  002B36                     u8040:
  8057  002B36  0E00               	movlw	0
  8058  002B38  6E21               	movwf	_atoi$1878^0,c
  8059  002B3A                     l6570:
  8060  002B3A  C021  F01D         	movff	_atoi$1878,_atoi$1877
  8061  002B3E  6A1E               	clrf	(_atoi$1877+1)^0,c
  8062  002B40  501D               	movf	_atoi$1877^0,w,c
  8063  002B42  101E               	iorwf	(_atoi$1877+1)^0,w,c
  8064  002B44  A4D8               	btfss	status,2,c
  8065  002B46  EFA7  F015         	goto	u8051
  8066  002B4A  EFA9  F015         	goto	u8050
  8067  002B4E                     u8051:
  8068  002B4E  EF6E  F015         	goto	l6560
  8069  002B52                     u8050:
  8070  002B52  EFB3  F015         	goto	l6580
  8071  002B56                     l6576:
  8072  002B56  0E00               	movlw	0
  8073  002B58  6E1C               	movwf	(atoi@neg+1)^0,c
  8074  002B5A  0E01               	movlw	1
  8075  002B5C  6E1B               	movwf	atoi@neg^0,c
  8076  002B5E                     l6578:
  8077  002B5E  4A15               	infsnz	atoi@s^0,f,c
  8078  002B60  2A16               	incf	(atoi@s+1)^0,f,c
  8079  002B62  EFE8  F015         	goto	l6586
  8080  002B66                     l6580:
  8081  002B66  C015  FFF6         	movff	atoi@s,tblptrl
  8082  002B6A  C016  FFF7         	movff	atoi@s+1,tblptrh
  8083  002B6E                     	if	0	;tblptru may be non-zero
  8084  002B6E                     	endif
  8085  002B6E                     	if	0	;tblptru may be non-zero
  8086  002B6E                     	endif
  8087  002B6E  0008               	tblrd		*
  8088  002B70  50F5               	movf	tablat,w,c
  8089  002B72  6E17               	movwf	??_atoi^0,c
  8090  002B74  6A18               	clrf	(??_atoi+1)^0,c
  8091                           
  8092                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8093                           ; Switch size 1, requested type "simple"
  8094                           ; Number of cases is 1, Range of values is 0 to 0
  8095                           ; switch strategies available:
  8096                           ; Name         Instructions Cycles
  8097                           ; simple_byte            4     3 (average)
  8098                           ;	Chosen strategy is simple_byte
  8099  002B76  5018               	movf	(??_atoi+1)^0,w,c
  8100  002B78  0A00               	xorlw	0	; case 0
  8101  002B7A  B4D8               	btfsc	status,2,c
  8102  002B7C  EFC2  F015         	goto	l7300
  8103  002B80  EFE8  F015         	goto	l6586
  8104  002B84                     l7300:
  8105                           
  8106                           ; Switch size 1, requested type "simple"
  8107                           ; Number of cases is 2, Range of values is 43 to 45
  8108                           ; switch strategies available:
  8109                           ; Name         Instructions Cycles
  8110                           ; simple_byte            7     4 (average)
  8111                           ;	Chosen strategy is simple_byte
  8112  002B84  5017               	movf	??_atoi^0,w,c
  8113  002B86  0A2B               	xorlw	43	; case 43
  8114  002B88  B4D8               	btfsc	status,2,c
  8115  002B8A  EFAF  F015         	goto	l6578
  8116  002B8E  0A06               	xorlw	6	; case 45
  8117  002B90  B4D8               	btfsc	status,2,c
  8118  002B92  EFAB  F015         	goto	l6576
  8119  002B96  EFE8  F015         	goto	l6586
  8120  002B9A                     l6582:
  8121  002B9A  C022  F00E         	movff	atoi@n,___wmul@multiplier
  8122  002B9E  C023  F00F         	movff	atoi@n+1,___wmul@multiplier+1
  8123  002BA2  0E00               	movlw	0
  8124  002BA4  6E11               	movwf	(___wmul@multiplicand+1)^0,c
  8125  002BA6  0E0A               	movlw	10
  8126  002BA8  6E10               	movwf	___wmul@multiplicand^0,c
  8127  002BAA  EC78  F01E         	call	___wmul	;wreg free
  8128  002BAE  C015  FFF6         	movff	atoi@s,tblptrl
  8129  002BB2  C016  FFF7         	movff	atoi@s+1,tblptrh
  8130  002BB6                     	if	0	;tblptru may be non-zero
  8131  002BB6                     	endif
  8132  002BB6                     	if	0	;tblptru may be non-zero
  8133  002BB6                     	endif
  8134  002BB6  0008               	tblrd		*
  8135  002BB8  50F5               	movf	tablat,w,c
  8136  002BBA  5E0E               	subwf	?___wmul^0,f,c
  8137  002BBC  0E00               	movlw	0
  8138  002BBE  5A0F               	subwfb	(?___wmul+1)^0,f,c
  8139  002BC0  0E30               	movlw	48
  8140  002BC2  240E               	addwf	?___wmul^0,w,c
  8141  002BC4  6E22               	movwf	atoi@n^0,c
  8142  002BC6  0E00               	movlw	0
  8143  002BC8  200F               	addwfc	(?___wmul+1)^0,w,c
  8144  002BCA  6E23               	movwf	(atoi@n+1)^0,c
  8145  002BCC  EFAF  F015         	goto	l6578
  8146  002BD0                     l6586:
  8147  002BD0  0ED0               	movlw	208
  8148  002BD2  6E17               	movwf	??_atoi^0,c
  8149  002BD4  0EFF               	movlw	255
  8150  002BD6  6E18               	movwf	(??_atoi+1)^0,c
  8151  002BD8  C015  FFF6         	movff	atoi@s,tblptrl
  8152  002BDC  C016  FFF7         	movff	atoi@s+1,tblptrh
  8153  002BE0                     	if	0	;tblptru may be non-zero
  8154  002BE0                     	endif
  8155  002BE0                     	if	0	;tblptru may be non-zero
  8156  002BE0                     	endif
  8157  002BE0  0008               	tblrd		*
  8158  002BE2  50F5               	movf	tablat,w,c
  8159  002BE4  6E19               	movwf	(??_atoi+2)^0,c
  8160  002BE6  6A1A               	clrf	(??_atoi+3)^0,c
  8161  002BE8  5017               	movf	??_atoi^0,w,c
  8162  002BEA  2619               	addwf	(??_atoi+2)^0,f,c
  8163  002BEC  5018               	movf	(??_atoi+1)^0,w,c
  8164  002BEE  221A               	addwfc	(??_atoi+3)^0,f,c
  8165  002BF0  501A               	movf	(??_atoi+3)^0,w,c
  8166  002BF2  E10A               	bnz	u8060
  8167  002BF4  0E0A               	movlw	10
  8168  002BF6  5C19               	subwf	(??_atoi+2)^0,w,c
  8169  002BF8  A0D8               	btfss	status,0,c
  8170  002BFA  EF01  F016         	goto	u8061
  8171  002BFE  EF04  F016         	goto	u8060
  8172  002C02                     u8061:
  8173  002C02  0E01               	movlw	1
  8174  002C04  EF05  F016         	goto	u8070
  8175  002C08                     u8060:
  8176  002C08  0E00               	movlw	0
  8177  002C0A                     u8070:
  8178  002C0A  6E1F               	movwf	_atoi$1879^0,c
  8179  002C0C  6A20               	clrf	(_atoi$1879+1)^0,c
  8180  002C0E  501F               	movf	_atoi$1879^0,w,c
  8181  002C10  1020               	iorwf	(_atoi$1879+1)^0,w,c
  8182  002C12  A4D8               	btfss	status,2,c
  8183  002C14  EF0E  F016         	goto	u8081
  8184  002C18  EF10  F016         	goto	u8080
  8185  002C1C                     u8081:
  8186  002C1C  EFCD  F015         	goto	l6582
  8187  002C20                     u8080:
  8188  002C20  501B               	movf	atoi@neg^0,w,c
  8189  002C22  101C               	iorwf	(atoi@neg+1)^0,w,c
  8190  002C24  A4D8               	btfss	status,2,c
  8191  002C26  EF17  F016         	goto	u8091
  8192  002C2A  EF19  F016         	goto	u8090
  8193  002C2E                     u8091:
  8194  002C2E  EF27  F016         	goto	l1450
  8195  002C32                     u8090:
  8196  002C32  C022  F017         	movff	atoi@n,??_atoi
  8197  002C36  C023  F018         	movff	atoi@n+1,??_atoi+1
  8198  002C3A  1E17               	comf	??_atoi^0,f,c
  8199  002C3C  1E18               	comf	(??_atoi+1)^0,f,c
  8200  002C3E  4A17               	infsnz	??_atoi^0,f,c
  8201  002C40  2A18               	incf	(??_atoi+1)^0,f,c
  8202  002C42  C017  F015         	movff	??_atoi,?_atoi
  8203  002C46  C018  F016         	movff	??_atoi+1,?_atoi+1
  8204  002C4A  EF2B  F016         	goto	l1453
  8205  002C4E                     l1450:
  8206  002C4E  C022  F015         	movff	atoi@n,?_atoi
  8207  002C52  C023  F016         	movff	atoi@n+1,?_atoi+1
  8208  002C56                     l1453:
  8209  002C56  0012               	return		;funcret
  8210  002C58                     __end_of_atoi:
  8211                           	opt callstack 0
  8212                           
  8213 ;; *************** function _isspace *****************
  8214 ;; Defined at:
  8215 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  8216 ;; Parameters:    Size  Location     Type
  8217 ;;  c               2   13[COMRAM] int 
  8218 ;; Auto vars:     Size  Location     Type
  8219 ;;		None
  8220 ;; Return value:  Size  Location     Type
  8221 ;;                  2   13[COMRAM] int 
  8222 ;; Registers used:
  8223 ;;		wreg, status,2, status,0
  8224 ;; Tracked objects:
  8225 ;;		On entry : 0/0
  8226 ;;		On exit  : 0/0
  8227 ;;		Unchanged: 0/0
  8228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8229 ;;      Params:         2       0       0       0       0       0       0
  8230 ;;      Locals:         1       0       0       0       0       0       0
  8231 ;;      Temps:          4       0       0       0       0       0       0
  8232 ;;      Totals:         7       0       0       0       0       0       0
  8233 ;;Total ram usage:        7 bytes
  8234 ;; Hardware stack levels used:    1
  8235 ;; Hardware stack levels required when called:    9
  8236 ;; This function calls:
  8237 ;;		Nothing
  8238 ;; This function is called by:
  8239 ;;		_atoi
  8240 ;; This function uses a non-reentrant model
  8241 ;;
  8242                           
  8243                           	psect	text27
  8244  0038A6                     __ptext27:
  8245                           	opt callstack 0
  8246  0038A6                     _isspace:
  8247                           	opt callstack 17
  8248  0038A6  0E01               	movlw	1
  8249  0038A8  6E14               	movwf	_isspace$1908^0,c
  8250  0038AA  0E20               	movlw	32
  8251  0038AC  180E               	xorwf	isspace@c^0,w,c
  8252  0038AE  100F               	iorwf	(isspace@c+1)^0,w,c
  8253  0038B0  B4D8               	btfsc	status,2,c
  8254  0038B2  EF5D  F01C         	goto	u7491
  8255  0038B6  EF5F  F01C         	goto	u7490
  8256  0038BA                     u7491:
  8257  0038BA  EF78  F01C         	goto	l6256
  8258  0038BE                     u7490:
  8259  0038BE  0EF7               	movlw	247
  8260  0038C0  6E10               	movwf	??_isspace^0,c
  8261  0038C2  0EFF               	movlw	255
  8262  0038C4  6E11               	movwf	(??_isspace+1)^0,c
  8263  0038C6  C00E  F012         	movff	isspace@c,??_isspace+2
  8264  0038CA  C00F  F013         	movff	isspace@c+1,??_isspace+3
  8265  0038CE  5010               	movf	??_isspace^0,w,c
  8266  0038D0  2612               	addwf	(??_isspace+2)^0,f,c
  8267  0038D2  5011               	movf	(??_isspace+1)^0,w,c
  8268  0038D4  2213               	addwfc	(??_isspace+3)^0,f,c
  8269  0038D6  5013               	movf	(??_isspace+3)^0,w,c
  8270  0038D8  E109               	bnz	u7500
  8271  0038DA  0E05               	movlw	5
  8272  0038DC  5C12               	subwf	(??_isspace+2)^0,w,c
  8273  0038DE  A0D8               	btfss	status,0,c
  8274  0038E0  EF74  F01C         	goto	u7501
  8275  0038E4  EF76  F01C         	goto	u7500
  8276  0038E8                     u7501:
  8277  0038E8  EF78  F01C         	goto	l6256
  8278  0038EC                     u7500:
  8279  0038EC  0E00               	movlw	0
  8280  0038EE  6E14               	movwf	_isspace$1908^0,c
  8281  0038F0                     l6256:
  8282  0038F0  C014  F00E         	movff	_isspace$1908,?_isspace
  8283  0038F4  6A0F               	clrf	(?_isspace+1)^0,c
  8284  0038F6  0012               	return		;funcret
  8285  0038F8                     __end_of_isspace:
  8286                           	opt callstack 0
  8287                           
  8288 ;; *************** function _isdigit *****************
  8289 ;; Defined at:
  8290 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  8291 ;; Parameters:    Size  Location     Type
  8292 ;;  c               2   13[COMRAM] int 
  8293 ;; Auto vars:     Size  Location     Type
  8294 ;;		None
  8295 ;; Return value:  Size  Location     Type
  8296 ;;                  2   13[COMRAM] int 
  8297 ;; Registers used:
  8298 ;;		wreg, status,2, status,0
  8299 ;; Tracked objects:
  8300 ;;		On entry : 0/0
  8301 ;;		On exit  : 0/0
  8302 ;;		Unchanged: 0/0
  8303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8304 ;;      Params:         2       0       0       0       0       0       0
  8305 ;;      Locals:         0       0       0       0       0       0       0
  8306 ;;      Temps:          4       0       0       0       0       0       0
  8307 ;;      Totals:         6       0       0       0       0       0       0
  8308 ;;Total ram usage:        6 bytes
  8309 ;; Hardware stack levels used:    1
  8310 ;; Hardware stack levels required when called:    9
  8311 ;; This function calls:
  8312 ;;		Nothing
  8313 ;; This function is called by:
  8314 ;;		_vfpfcnvrt
  8315 ;;		_atoi
  8316 ;; This function uses a non-reentrant model
  8317 ;;
  8318                           
  8319                           	psect	text28
  8320  003B3C                     __ptext28:
  8321                           	opt callstack 0
  8322  003B3C                     _isdigit:
  8323                           	opt callstack 18
  8324  003B3C  0ED0               	movlw	208
  8325  003B3E  6E10               	movwf	??_isdigit^0,c
  8326  003B40  0EFF               	movlw	255
  8327  003B42  6E11               	movwf	(??_isdigit+1)^0,c
  8328  003B44  C00E  F012         	movff	isdigit@c,??_isdigit+2
  8329  003B48  C00F  F013         	movff	isdigit@c+1,??_isdigit+3
  8330  003B4C  5010               	movf	??_isdigit^0,w,c
  8331  003B4E  2612               	addwf	(??_isdigit+2)^0,f,c
  8332  003B50  5011               	movf	(??_isdigit+1)^0,w,c
  8333  003B52  2213               	addwfc	(??_isdigit+3)^0,f,c
  8334  003B54  5013               	movf	(??_isdigit+3)^0,w,c
  8335  003B56  E10A               	bnz	u6770
  8336  003B58  0E0A               	movlw	10
  8337  003B5A  5C12               	subwf	(??_isdigit+2)^0,w,c
  8338  003B5C  A0D8               	btfss	status,0,c
  8339  003B5E  EFB3  F01D         	goto	u6771
  8340  003B62  EFB6  F01D         	goto	u6770
  8341  003B66                     u6771:
  8342  003B66  0E01               	movlw	1
  8343  003B68  EFB7  F01D         	goto	u6780
  8344  003B6C                     u6770:
  8345  003B6C  0E00               	movlw	0
  8346  003B6E                     u6780:
  8347  003B6E  6E0E               	movwf	?_isdigit^0,c
  8348  003B70  6A0F               	clrf	(?_isdigit+1)^0,c
  8349  003B72  0012               	return		;funcret
  8350  003B74                     __end_of_isdigit:
  8351                           	opt callstack 0
  8352                           
  8353 ;; *************** function ___wmul *****************
  8354 ;; Defined at:
  8355 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  8356 ;; Parameters:    Size  Location     Type
  8357 ;;  multiplier      2   13[COMRAM] unsigned int 
  8358 ;;  multiplicand    2   15[COMRAM] unsigned int 
  8359 ;; Auto vars:     Size  Location     Type
  8360 ;;  product         2   17[COMRAM] unsigned int 
  8361 ;; Return value:  Size  Location     Type
  8362 ;;                  2   13[COMRAM] unsigned int 
  8363 ;; Registers used:
  8364 ;;		wreg, status,2, status,0, prodl, prodh
  8365 ;; Tracked objects:
  8366 ;;		On entry : 0/0
  8367 ;;		On exit  : 0/0
  8368 ;;		Unchanged: 0/0
  8369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8370 ;;      Params:         4       0       0       0       0       0       0
  8371 ;;      Locals:         2       0       0       0       0       0       0
  8372 ;;      Temps:          0       0       0       0       0       0       0
  8373 ;;      Totals:         6       0       0       0       0       0       0
  8374 ;;Total ram usage:        6 bytes
  8375 ;; Hardware stack levels used:    1
  8376 ;; Hardware stack levels required when called:    9
  8377 ;; This function calls:
  8378 ;;		Nothing
  8379 ;; This function is called by:
  8380 ;;		_atoi
  8381 ;; This function uses a non-reentrant model
  8382 ;;
  8383                           
  8384                           	psect	text29
  8385  003CF0                     __ptext29:
  8386                           	opt callstack 0
  8387  003CF0                     ___wmul:
  8388                           	opt callstack 17
  8389  003CF0  500E               	movf	___wmul@multiplier^0,w,c
  8390  003CF2  0210               	mulwf	___wmul@multiplicand^0,c
  8391  003CF4  CFF3 F012          	movff	prodl,___wmul@product
  8392  003CF8  CFF4 F013          	movff	prodh,___wmul@product+1
  8393  003CFC  500E               	movf	___wmul@multiplier^0,w,c
  8394  003CFE  0211               	mulwf	(___wmul@multiplicand+1)^0,c
  8395  003D00  50F3               	movf	243,w,c
  8396  003D02  2613               	addwf	(___wmul@product+1)^0,f,c
  8397  003D04  500F               	movf	(___wmul@multiplier+1)^0,w,c
  8398  003D06  0210               	mulwf	___wmul@multiplicand^0,c
  8399  003D08  50F3               	movf	243,w,c
  8400  003D0A  2613               	addwf	(___wmul@product+1)^0,f,c
  8401  003D0C  C012  F00E         	movff	___wmul@product,?___wmul
  8402  003D10  C013  F00F         	movff	___wmul@product+1,?___wmul+1
  8403  003D14  0012               	return		;funcret
  8404  003D16                     __end_of___wmul:
  8405                           	opt callstack 0
  8406                           
  8407 ;; *************** function _putsXLCD *****************
  8408 ;; Defined at:
  8409 ;;		line 309 in file "xlcd.c"
  8410 ;; Parameters:    Size  Location     Type
  8411 ;;  buffer          2   14[COMRAM] PTR unsigned char 
  8412 ;;		 -> main@valor_analog(5), STR_6(31), STR_5(26), STR_4(25), 
  8413 ;;		 -> STR_3(3), STR_2(20), STR_1(23), main@name2(21), 
  8414 ;;		 -> main@name1(21), 
  8415 ;; Auto vars:     Size  Location     Type
  8416 ;;		None
  8417 ;; Return value:  Size  Location     Type
  8418 ;;                  1    wreg      void 
  8419 ;; Registers used:
  8420 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8421 ;; Tracked objects:
  8422 ;;		On entry : 0/0
  8423 ;;		On exit  : 0/0
  8424 ;;		Unchanged: 0/0
  8425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8426 ;;      Params:         2       0       0       0       0       0       0
  8427 ;;      Locals:         0       0       0       0       0       0       0
  8428 ;;      Temps:          0       0       0       0       0       0       0
  8429 ;;      Totals:         2       0       0       0       0       0       0
  8430 ;;Total ram usage:        2 bytes
  8431 ;; Hardware stack levels used:    1
  8432 ;; Hardware stack levels required when called:   11
  8433 ;; This function calls:
  8434 ;;		_BusyXLCD
  8435 ;;		_WriteDataXLCD
  8436 ;; This function is called by:
  8437 ;;		_main
  8438 ;; This function uses a non-reentrant model
  8439 ;;
  8440                           
  8441                           	psect	text30
  8442  00366A                     __ptext30:
  8443                           	opt callstack 0
  8444  00366A                     _putsXLCD:
  8445                           	opt callstack 19
  8446  00366A                     
  8447                           ;xlcd.c: 310:     while (*buffer)
  8448  00366A  EF55  F01B         	goto	l7014
  8449  00366E                     l7008:
  8450  00366E  ECE5  F01E         	call	_BusyXLCD	;wreg free
  8451  003672  0900               	iorlw	0
  8452  003674  A4D8               	btfss	status,2,c
  8453  003676  EF3F  F01B         	goto	u8471
  8454  00367A  EF41  F01B         	goto	u8470
  8455  00367E                     u8471:
  8456  00367E  EF37  F01B         	goto	l7008
  8457  003682                     u8470:
  8458  003682                     
  8459                           ;xlcd.c: 313:         WriteDataXLCD(*buffer);
  8460  003682  C00F  FFF6         	movff	putsXLCD@buffer,tblptrl
  8461  003686  C010  FFF7         	movff	putsXLCD@buffer+1,tblptrh
  8462  00368A  6AF8               	clrf	tblptru,c
  8463  00368C  0E05               	movlw	(high __ramtop+-1)
  8464  00368E  64F7               	cpfsgt	tblptrh,c
  8465  003690  D003               	bra	u8487
  8466  003692  0008               	tblrd		*
  8467  003694  50F5               	movf	tablat,w,c
  8468  003696  D005               	bra	u8480
  8469  003698                     u8487:
  8470  003698  CFF6 FFE1          	movff	tblptrl,fsr1l
  8471  00369C  CFF7 FFE2          	movff	tblptrh,fsr1h
  8472  0036A0  50E7               	movf	indf1,w,c
  8473  0036A2                     u8480:
  8474  0036A2  EC28  F01D         	call	_WriteDataXLCD
  8475  0036A6                     
  8476                           ;xlcd.c: 314:         buffer++;
  8477  0036A6  4A0F               	infsnz	putsXLCD@buffer^0,f,c
  8478  0036A8  2A10               	incf	(putsXLCD@buffer+1)^0,f,c
  8479  0036AA                     l7014:
  8480                           
  8481                           ;xlcd.c: 310:     while (*buffer)
  8482  0036AA  C00F  FFF6         	movff	putsXLCD@buffer,tblptrl
  8483  0036AE  C010  FFF7         	movff	putsXLCD@buffer+1,tblptrh
  8484  0036B2  6AF8               	clrf	tblptru,c
  8485  0036B4  0E05               	movlw	(high __ramtop+-1)
  8486  0036B6  64F7               	cpfsgt	tblptrh,c
  8487  0036B8  D003               	bra	u8497
  8488  0036BA  0008               	tblrd		*
  8489  0036BC  50F5               	movf	tablat,w,c
  8490  0036BE  D005               	bra	u8490
  8491  0036C0                     u8497:
  8492  0036C0  CFF6 FFE1          	movff	tblptrl,fsr1l
  8493  0036C4  CFF7 FFE2          	movff	tblptrh,fsr1h
  8494  0036C8  50E7               	movf	indf1,w,c
  8495  0036CA                     u8490:
  8496  0036CA  0900               	iorlw	0
  8497  0036CC  A4D8               	btfss	status,2,c
  8498  0036CE  EF6B  F01B         	goto	u8501
  8499  0036D2  EF6D  F01B         	goto	u8500
  8500  0036D6                     u8501:
  8501  0036D6  EF37  F01B         	goto	l7008
  8502  0036DA                     u8500:
  8503  0036DA  0012               	return		;funcret
  8504  0036DC                     __end_of_putsXLCD:
  8505                           	opt callstack 0
  8506                           
  8507 ;; *************** function ___xxtofl *****************
  8508 ;; Defined at:
  8509 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
  8510 ;; Parameters:    Size  Location     Type
  8511 ;;  sign            1    wreg     unsigned char 
  8512 ;;  val             4   13[COMRAM] long 
  8513 ;; Auto vars:     Size  Location     Type
  8514 ;;  sign            1   21[COMRAM] unsigned char 
  8515 ;;  arg             4   23[COMRAM] unsigned long 
  8516 ;;  exp             1   22[COMRAM] unsigned char 
  8517 ;; Return value:  Size  Location     Type
  8518 ;;                  4   13[COMRAM] unsigned char 
  8519 ;; Registers used:
  8520 ;;		wreg, status,2, status,0
  8521 ;; Tracked objects:
  8522 ;;		On entry : 0/0
  8523 ;;		On exit  : 0/0
  8524 ;;		Unchanged: 0/0
  8525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8526 ;;      Params:         4       0       0       0       0       0       0
  8527 ;;      Locals:         6       0       0       0       0       0       0
  8528 ;;      Temps:          4       0       0       0       0       0       0
  8529 ;;      Totals:        14       0       0       0       0       0       0
  8530 ;;Total ram usage:       14 bytes
  8531 ;; Hardware stack levels used:    1
  8532 ;; Hardware stack levels required when called:    9
  8533 ;; This function calls:
  8534 ;;		Nothing
  8535 ;; This function is called by:
  8536 ;;		_main
  8537 ;; This function uses a non-reentrant model
  8538 ;;
  8539                           
  8540                           	psect	text31
  8541  002914                     __ptext31:
  8542                           	opt callstack 0
  8543  002914                     ___xxtofl:
  8544                           	opt callstack 21
  8545                           
  8546                           ;incstack = 0
  8547                           ;___xxtofl@sign stored from wreg
  8548  002914  6E16               	movwf	___xxtofl@sign^0,c
  8549  002916  5016               	movf	___xxtofl@sign^0,w,c
  8550  002918  B4D8               	btfsc	status,2,c
  8551  00291A  EF91  F014         	goto	u8511
  8552  00291E  EF93  F014         	goto	u8510
  8553  002922                     u8511:
  8554  002922  EFB5  F014         	goto	l1395
  8555  002926                     u8510:
  8556  002926  BE11               	btfsc	(___xxtofl@val+3)^0,7,c
  8557  002928  EF9A  F014         	goto	u8520
  8558  00292C  EF98  F014         	goto	u8521
  8559  002930                     u8521:
  8560  002930  EFB5  F014         	goto	l1395
  8561  002934                     u8520:
  8562  002934  C00E  F012         	movff	___xxtofl@val,??___xxtofl
  8563  002938  C00F  F013         	movff	___xxtofl@val+1,??___xxtofl+1
  8564  00293C  C010  F014         	movff	___xxtofl@val+2,??___xxtofl+2
  8565  002940  C011  F015         	movff	___xxtofl@val+3,??___xxtofl+3
  8566  002944  1E12               	comf	??___xxtofl^0,f,c
  8567  002946  1E13               	comf	(??___xxtofl+1)^0,f,c
  8568  002948  1E14               	comf	(??___xxtofl+2)^0,f,c
  8569  00294A  1E15               	comf	(??___xxtofl+3)^0,f,c
  8570  00294C  2A12               	incf	??___xxtofl^0,f,c
  8571  00294E  0E00               	movlw	0
  8572  002950  2213               	addwfc	(??___xxtofl+1)^0,f,c
  8573  002952  2214               	addwfc	(??___xxtofl+2)^0,f,c
  8574  002954  2215               	addwfc	(??___xxtofl+3)^0,f,c
  8575  002956  C012  F018         	movff	??___xxtofl,___xxtofl@arg
  8576  00295A  C013  F019         	movff	??___xxtofl+1,___xxtofl@arg+1
  8577  00295E  C014  F01A         	movff	??___xxtofl+2,___xxtofl@arg+2
  8578  002962  C015  F01B         	movff	??___xxtofl+3,___xxtofl@arg+3
  8579  002966  EFBD  F014         	goto	l7034
  8580  00296A                     l1395:
  8581  00296A  C00E  F018         	movff	___xxtofl@val,___xxtofl@arg
  8582  00296E  C00F  F019         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8583  002972  C010  F01A         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8584  002976  C011  F01B         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8585  00297A                     l7034:
  8586  00297A  500E               	movf	___xxtofl@val^0,w,c
  8587  00297C  100F               	iorwf	(___xxtofl@val+1)^0,w,c
  8588  00297E  1010               	iorwf	(___xxtofl@val+2)^0,w,c
  8589  002980  1011               	iorwf	(___xxtofl@val+3)^0,w,c
  8590  002982  A4D8               	btfss	status,2,c
  8591  002984  EFC6  F014         	goto	u8531
  8592  002988  EFC8  F014         	goto	u8530
  8593  00298C                     u8531:
  8594  00298C  EFD2  F014         	goto	l7040
  8595  002990                     u8530:
  8596  002990  0E00               	movlw	0
  8597  002992  6E0E               	movwf	?___xxtofl^0,c
  8598  002994  0E00               	movlw	0
  8599  002996  6E0F               	movwf	(?___xxtofl+1)^0,c
  8600  002998  0E00               	movlw	0
  8601  00299A  6E10               	movwf	(?___xxtofl+2)^0,c
  8602  00299C  0E00               	movlw	0
  8603  00299E  6E11               	movwf	(?___xxtofl+3)^0,c
  8604  0029A0  EF63  F015         	goto	l1398
  8605  0029A4                     l7040:
  8606  0029A4  0E96               	movlw	150
  8607  0029A6  6E17               	movwf	___xxtofl@exp^0,c
  8608  0029A8  EFDC  F014         	goto	l7044
  8609  0029AC                     l7042:
  8610  0029AC  2A17               	incf	___xxtofl@exp^0,f,c
  8611  0029AE  90D8               	bcf	status,0,c
  8612  0029B0  321B               	rrcf	(___xxtofl@arg+3)^0,f,c
  8613  0029B2  321A               	rrcf	(___xxtofl@arg+2)^0,f,c
  8614  0029B4  3219               	rrcf	(___xxtofl@arg+1)^0,f,c
  8615  0029B6  3218               	rrcf	___xxtofl@arg^0,f,c
  8616  0029B8                     l7044:
  8617  0029B8  0E00               	movlw	0
  8618  0029BA  1418               	andwf	___xxtofl@arg^0,w,c
  8619  0029BC  6E12               	movwf	??___xxtofl^0,c
  8620  0029BE  0E00               	movlw	0
  8621  0029C0  1419               	andwf	(___xxtofl@arg+1)^0,w,c
  8622  0029C2  6E13               	movwf	(??___xxtofl+1)^0,c
  8623  0029C4  0E00               	movlw	0
  8624  0029C6  141A               	andwf	(___xxtofl@arg+2)^0,w,c
  8625  0029C8  6E14               	movwf	(??___xxtofl+2)^0,c
  8626  0029CA  0EFE               	movlw	254
  8627  0029CC  141B               	andwf	(___xxtofl@arg+3)^0,w,c
  8628  0029CE  6E15               	movwf	(??___xxtofl+3)^0,c
  8629  0029D0  5012               	movf	??___xxtofl^0,w,c
  8630  0029D2  1013               	iorwf	(??___xxtofl+1)^0,w,c
  8631  0029D4  1014               	iorwf	(??___xxtofl+2)^0,w,c
  8632  0029D6  1015               	iorwf	(??___xxtofl+3)^0,w,c
  8633  0029D8  A4D8               	btfss	status,2,c
  8634  0029DA  EFF1  F014         	goto	u8541
  8635  0029DE  EFF3  F014         	goto	u8540
  8636  0029E2                     u8541:
  8637  0029E2  EFD6  F014         	goto	l7042
  8638  0029E6                     u8540:
  8639  0029E6  EF01  F015         	goto	l1402
  8640  0029EA                     l7046:
  8641  0029EA  2A17               	incf	___xxtofl@exp^0,f,c
  8642  0029EC  0E01               	movlw	1
  8643  0029EE  2618               	addwf	___xxtofl@arg^0,f,c
  8644  0029F0  0E00               	movlw	0
  8645  0029F2  2219               	addwfc	(___xxtofl@arg+1)^0,f,c
  8646  0029F4  221A               	addwfc	(___xxtofl@arg+2)^0,f,c
  8647  0029F6  221B               	addwfc	(___xxtofl@arg+3)^0,f,c
  8648  0029F8  90D8               	bcf	status,0,c
  8649  0029FA  321B               	rrcf	(___xxtofl@arg+3)^0,f,c
  8650  0029FC  321A               	rrcf	(___xxtofl@arg+2)^0,f,c
  8651  0029FE  3219               	rrcf	(___xxtofl@arg+1)^0,f,c
  8652  002A00  3218               	rrcf	___xxtofl@arg^0,f,c
  8653  002A02                     l1402:
  8654  002A02  0E00               	movlw	0
  8655  002A04  1418               	andwf	___xxtofl@arg^0,w,c
  8656  002A06  6E12               	movwf	??___xxtofl^0,c
  8657  002A08  0E00               	movlw	0
  8658  002A0A  1419               	andwf	(___xxtofl@arg+1)^0,w,c
  8659  002A0C  6E13               	movwf	(??___xxtofl+1)^0,c
  8660  002A0E  0E00               	movlw	0
  8661  002A10  141A               	andwf	(___xxtofl@arg+2)^0,w,c
  8662  002A12  6E14               	movwf	(??___xxtofl+2)^0,c
  8663  002A14  0EFF               	movlw	255
  8664  002A16  141B               	andwf	(___xxtofl@arg+3)^0,w,c
  8665  002A18  6E15               	movwf	(??___xxtofl+3)^0,c
  8666  002A1A  5012               	movf	??___xxtofl^0,w,c
  8667  002A1C  1013               	iorwf	(??___xxtofl+1)^0,w,c
  8668  002A1E  1014               	iorwf	(??___xxtofl+2)^0,w,c
  8669  002A20  1015               	iorwf	(??___xxtofl+3)^0,w,c
  8670  002A22  A4D8               	btfss	status,2,c
  8671  002A24  EF16  F015         	goto	u8551
  8672  002A28  EF18  F015         	goto	u8550
  8673  002A2C                     u8551:
  8674  002A2C  EFF5  F014         	goto	l7046
  8675  002A30                     u8550:
  8676  002A30  EF20  F015         	goto	l7054
  8677  002A34                     l7052:
  8678  002A34  0617               	decf	___xxtofl@exp^0,f,c
  8679  002A36  90D8               	bcf	status,0,c
  8680  002A38  3618               	rlcf	___xxtofl@arg^0,f,c
  8681  002A3A  3619               	rlcf	(___xxtofl@arg+1)^0,f,c
  8682  002A3C  361A               	rlcf	(___xxtofl@arg+2)^0,f,c
  8683  002A3E  361B               	rlcf	(___xxtofl@arg+3)^0,f,c
  8684  002A40                     l7054:
  8685  002A40  BE1A               	btfsc	(___xxtofl@arg+2)^0,7,c
  8686  002A42  EF25  F015         	goto	u8561
  8687  002A46  EF27  F015         	goto	u8560
  8688  002A4A                     u8561:
  8689  002A4A  EF2F  F015         	goto	l1409
  8690  002A4E                     u8560:
  8691  002A4E  0E02               	movlw	2
  8692  002A50  6017               	cpfslt	___xxtofl@exp^0,c
  8693  002A52  EF2D  F015         	goto	u8571
  8694  002A56  EF2F  F015         	goto	u8570
  8695  002A5A                     u8571:
  8696  002A5A  EF1A  F015         	goto	l7052
  8697  002A5E                     u8570:
  8698  002A5E                     l1409:
  8699  002A5E  B017               	btfsc	___xxtofl@exp^0,0,c
  8700  002A60  EF34  F015         	goto	u8581
  8701  002A64  EF36  F015         	goto	u8580
  8702  002A68                     u8581:
  8703  002A68  EF37  F015         	goto	l7060
  8704  002A6C                     u8580:
  8705  002A6C  9E1A               	bcf	(___xxtofl@arg+2)^0,7,c
  8706  002A6E                     l7060:
  8707  002A6E  90D8               	bcf	status,0,c
  8708  002A70  3217               	rrcf	___xxtofl@exp^0,f,c
  8709  002A72  C017  F012         	movff	___xxtofl@exp,??___xxtofl
  8710  002A76  6A13               	clrf	(??___xxtofl+1)^0,c
  8711  002A78  6A14               	clrf	(??___xxtofl+2)^0,c
  8712  002A7A  6A15               	clrf	(??___xxtofl+3)^0,c
  8713  002A7C  C012  F015         	movff	??___xxtofl,??___xxtofl+3
  8714  002A80  6A14               	clrf	(??___xxtofl+2)^0,c
  8715  002A82  6A13               	clrf	(??___xxtofl+1)^0,c
  8716  002A84  6A12               	clrf	??___xxtofl^0,c
  8717  002A86  5012               	movf	??___xxtofl^0,w,c
  8718  002A88  1218               	iorwf	___xxtofl@arg^0,f,c
  8719  002A8A  5013               	movf	(??___xxtofl+1)^0,w,c
  8720  002A8C  1219               	iorwf	(___xxtofl@arg+1)^0,f,c
  8721  002A8E  5014               	movf	(??___xxtofl+2)^0,w,c
  8722  002A90  121A               	iorwf	(___xxtofl@arg+2)^0,f,c
  8723  002A92  5015               	movf	(??___xxtofl+3)^0,w,c
  8724  002A94  121B               	iorwf	(___xxtofl@arg+3)^0,f,c
  8725  002A96  5016               	movf	___xxtofl@sign^0,w,c
  8726  002A98  B4D8               	btfsc	status,2,c
  8727  002A9A  EF51  F015         	goto	u8591
  8728  002A9E  EF53  F015         	goto	u8590
  8729  002AA2                     u8591:
  8730  002AA2  EF5B  F015         	goto	l7070
  8731  002AA6                     u8590:
  8732  002AA6  BE11               	btfsc	(___xxtofl@val+3)^0,7,c
  8733  002AA8  EF5A  F015         	goto	u8600
  8734  002AAC  EF58  F015         	goto	u8601
  8735  002AB0                     u8601:
  8736  002AB0  EF5B  F015         	goto	l7070
  8737  002AB4                     u8600:
  8738  002AB4  8E1B               	bsf	(___xxtofl@arg+3)^0,7,c
  8739  002AB6                     l7070:
  8740  002AB6  C018  F00E         	movff	___xxtofl@arg,?___xxtofl
  8741  002ABA  C019  F00F         	movff	___xxtofl@arg+1,?___xxtofl+1
  8742  002ABE  C01A  F010         	movff	___xxtofl@arg+2,?___xxtofl+2
  8743  002AC2  C01B  F011         	movff	___xxtofl@arg+3,?___xxtofl+3
  8744  002AC6                     l1398:
  8745  002AC6  0012               	return		;funcret
  8746  002AC8                     __end_of___xxtofl:
  8747                           	opt callstack 0
  8748                           
  8749 ;; *************** function _TMR2_StopTimer *****************
  8750 ;; Defined at:
  8751 ;;		line 85 in file "mcc_generated_files/tmr2.c"
  8752 ;; Parameters:    Size  Location     Type
  8753 ;;		None
  8754 ;; Auto vars:     Size  Location     Type
  8755 ;;		None
  8756 ;; Return value:  Size  Location     Type
  8757 ;;                  1    wreg      void 
  8758 ;; Registers used:
  8759 ;;		None
  8760 ;; Tracked objects:
  8761 ;;		On entry : 0/0
  8762 ;;		On exit  : 0/0
  8763 ;;		Unchanged: 0/0
  8764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8765 ;;      Params:         0       0       0       0       0       0       0
  8766 ;;      Locals:         0       0       0       0       0       0       0
  8767 ;;      Temps:          0       0       0       0       0       0       0
  8768 ;;      Totals:         0       0       0       0       0       0       0
  8769 ;;Total ram usage:        0 bytes
  8770 ;; Hardware stack levels used:    1
  8771 ;; Hardware stack levels required when called:    9
  8772 ;; This function calls:
  8773 ;;		Nothing
  8774 ;; This function is called by:
  8775 ;;		_main
  8776 ;; This function uses a non-reentrant model
  8777 ;;
  8778                           
  8779                           	psect	text32
  8780  003E70                     __ptext32:
  8781                           	opt callstack 0
  8782  003E70                     _TMR2_StopTimer:
  8783                           	opt callstack 21
  8784  003E70                     
  8785                           ;mcc_generated_files/tmr2.c: 88:     T2CONbits.TMR2ON = 0;
  8786  003E70  94BA               	bcf	186,2,c	;volatile
  8787  003E72  0012               	return		;funcret
  8788  003E74                     __end_of_TMR2_StopTimer:
  8789                           	opt callstack 0
  8790                           
  8791 ;; *************** function _SYSTEM_Initialize *****************
  8792 ;; Defined at:
  8793 ;;		line 50 in file "mcc_generated_files/mcc.c"
  8794 ;; Parameters:    Size  Location     Type
  8795 ;;		None
  8796 ;; Auto vars:     Size  Location     Type
  8797 ;;		None
  8798 ;; Return value:  Size  Location     Type
  8799 ;;                  1    wreg      void 
  8800 ;; Registers used:
  8801 ;;		wreg, status,2, status,0, cstack
  8802 ;; Tracked objects:
  8803 ;;		On entry : 0/0
  8804 ;;		On exit  : 0/0
  8805 ;;		Unchanged: 0/0
  8806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8807 ;;      Params:         0       0       0       0       0       0       0
  8808 ;;      Locals:         0       0       0       0       0       0       0
  8809 ;;      Temps:          0       0       0       0       0       0       0
  8810 ;;      Totals:         0       0       0       0       0       0       0
  8811 ;;Total ram usage:        0 bytes
  8812 ;; Hardware stack levels used:    1
  8813 ;; Hardware stack levels required when called:   11
  8814 ;; This function calls:
  8815 ;;		_ADC_Initialize
  8816 ;;		_CCP5_Initialize
  8817 ;;		_EPWM2_Initialize
  8818 ;;		_EXT_INT_Initialize
  8819 ;;		_INTERRUPT_Initialize
  8820 ;;		_OSCILLATOR_Initialize
  8821 ;;		_PIN_MANAGER_Initialize
  8822 ;;		_TMR1_Initialize
  8823 ;;		_TMR2_Initialize
  8824 ;; This function is called by:
  8825 ;;		_main
  8826 ;; This function uses a non-reentrant model
  8827 ;;
  8828                           
  8829                           	psect	text33
  8830  003D16                     __ptext33:
  8831                           	opt callstack 0
  8832  003D16                     _SYSTEM_Initialize:
  8833                           	opt callstack 19
  8834  003D16                     
  8835                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  8836  003D16  EC1A  F01F         	call	_INTERRUPT_Initialize	;wreg free
  8837  003D1A                     
  8838                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  8839  003D1A  ECE8  F01C         	call	_PIN_MANAGER_Initialize	;wreg free
  8840  003D1E                     
  8841                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  8842  003D1E  EC0E  F01F         	call	_OSCILLATOR_Initialize	;wreg free
  8843  003D22                     
  8844                           ;mcc_generated_files/mcc.c: 56:     EPWM2_Initialize();
  8845  003D22  ECB1  F01E         	call	_EPWM2_Initialize	;wreg free
  8846  003D26                     
  8847                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
  8848  003D26  ECCF  F01E         	call	_ADC_Initialize	;wreg free
  8849  003D2A                     
  8850                           ;mcc_generated_files/mcc.c: 58:     CCP5_Initialize();
  8851  003D2A  ECF6  F01E         	call	_CCP5_Initialize	;wreg free
  8852  003D2E                     
  8853                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
  8854  003D2E  ECEE  F01E         	call	_TMR2_Initialize	;wreg free
  8855  003D32                     
  8856                           ;mcc_generated_files/mcc.c: 60:     TMR1_Initialize();
  8857  003D32  EC4F  F01E         	call	_TMR1_Initialize	;wreg free
  8858  003D36                     
  8859                           ;mcc_generated_files/mcc.c: 61:     EXT_INT_Initialize();
  8860  003D36  EC9E  F01E         	call	_EXT_INT_Initialize	;wreg free
  8861  003D3A  0012               	return		;funcret
  8862  003D3C                     __end_of_SYSTEM_Initialize:
  8863                           	opt callstack 0
  8864                           
  8865 ;; *************** function _TMR2_Initialize *****************
  8866 ;; Defined at:
  8867 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  8868 ;; Parameters:    Size  Location     Type
  8869 ;;		None
  8870 ;; Auto vars:     Size  Location     Type
  8871 ;;		None
  8872 ;; Return value:  Size  Location     Type
  8873 ;;                  1    wreg      void 
  8874 ;; Registers used:
  8875 ;;		wreg, status,2
  8876 ;; Tracked objects:
  8877 ;;		On entry : 0/0
  8878 ;;		On exit  : 0/0
  8879 ;;		Unchanged: 0/0
  8880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8881 ;;      Params:         0       0       0       0       0       0       0
  8882 ;;      Locals:         0       0       0       0       0       0       0
  8883 ;;      Temps:          0       0       0       0       0       0       0
  8884 ;;      Totals:         0       0       0       0       0       0       0
  8885 ;;Total ram usage:        0 bytes
  8886 ;; Hardware stack levels used:    1
  8887 ;; Hardware stack levels required when called:    9
  8888 ;; This function calls:
  8889 ;;		Nothing
  8890 ;; This function is called by:
  8891 ;;		_SYSTEM_Initialize
  8892 ;; This function uses a non-reentrant model
  8893 ;;
  8894                           
  8895                           	psect	text34
  8896  003DDC                     __ptext34:
  8897                           	opt callstack 0
  8898  003DDC                     _TMR2_Initialize:
  8899                           	opt callstack 20
  8900  003DDC                     
  8901                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xBB;
  8902  003DDC  0EBB               	movlw	187
  8903  003DDE  6EBB               	movwf	187,c	;volatile
  8904                           
  8905                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  8906  003DE0  0E00               	movlw	0
  8907  003DE2  6EBC               	movwf	188,c	;volatile
  8908  003DE4                     
  8909                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  8910  003DE4  929E               	bcf	158,1,c	;volatile
  8911                           
  8912                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x06;
  8913  003DE6  0E06               	movlw	6
  8914  003DE8  6EBA               	movwf	186,c	;volatile
  8915  003DEA  0012               	return		;funcret
  8916  003DEC                     __end_of_TMR2_Initialize:
  8917                           	opt callstack 0
  8918                           
  8919 ;; *************** function _TMR1_Initialize *****************
  8920 ;; Defined at:
  8921 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  8922 ;; Parameters:    Size  Location     Type
  8923 ;;		None
  8924 ;; Auto vars:     Size  Location     Type
  8925 ;;		None
  8926 ;; Return value:  Size  Location     Type
  8927 ;;                  1    wreg      void 
  8928 ;; Registers used:
  8929 ;;		wreg, status,2, status,0, cstack
  8930 ;; Tracked objects:
  8931 ;;		On entry : 0/0
  8932 ;;		On exit  : 0/0
  8933 ;;		Unchanged: 0/0
  8934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8935 ;;      Params:         0       0       0       0       0       0       0
  8936 ;;      Locals:         0       0       0       0       0       0       0
  8937 ;;      Temps:          0       0       0       0       0       0       0
  8938 ;;      Totals:         0       0       0       0       0       0       0
  8939 ;;Total ram usage:        0 bytes
  8940 ;; Hardware stack levels used:    1
  8941 ;; Hardware stack levels required when called:   10
  8942 ;; This function calls:
  8943 ;;		_TMR1_SetInterruptHandler
  8944 ;; This function is called by:
  8945 ;;		_SYSTEM_Initialize
  8946 ;; This function uses a non-reentrant model
  8947 ;;
  8948                           
  8949                           	psect	text35
  8950  003C9E                     __ptext35:
  8951                           	opt callstack 0
  8952  003C9E                     _TMR1_Initialize:
  8953                           	opt callstack 19
  8954  003C9E                     
  8955                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  8956  003C9E  0E00               	movlw	0
  8957  003CA0  6ECC               	movwf	204,c	;volatile
  8958                           
  8959                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0x24;
  8960  003CA2  0E24               	movlw	36
  8961  003CA4  6ECF               	movwf	207,c	;volatile
  8962                           
  8963                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0x46;
  8964  003CA6  0E46               	movlw	70
  8965  003CA8  6ECE               	movwf	206,c	;volatile
  8966  003CAA                     
  8967                           ;mcc_generated_files/tmr1.c: 78:     timer1ReloadVal=TMR1;
  8968  003CAA  CFCE F04F          	movff	4046,_timer1ReloadVal	;volatile
  8969  003CAE  CFCF F050          	movff	4047,_timer1ReloadVal+1	;volatile
  8970  003CB2                     
  8971                           ;mcc_generated_files/tmr1.c: 81:     PIR1bits.TMR1IF = 0;
  8972  003CB2  909E               	bcf	158,0,c	;volatile
  8973  003CB4                     
  8974                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  8975  003CB4  809D               	bsf	157,0,c	;volatile
  8976  003CB6                     
  8977                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  8978  003CB6  0E84               	movlw	low _TMR1_DefaultInterruptHandler
  8979  003CB8  6E0E               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
  8980  003CBA  0E3E               	movlw	high _TMR1_DefaultInterruptHandler
  8981  003CBC  6E0F               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
  8982  003CBE  EC15  F01F         	call	_TMR1_SetInterruptHandler	;wreg free
  8983  003CC2                     
  8984                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x31;
  8985  003CC2  0E31               	movlw	49
  8986  003CC4  6ECD               	movwf	205,c	;volatile
  8987  003CC6  0012               	return		;funcret
  8988  003CC8                     __end_of_TMR1_Initialize:
  8989                           	opt callstack 0
  8990                           
  8991 ;; *************** function _TMR1_SetInterruptHandler *****************
  8992 ;; Defined at:
  8993 ;;		line 172 in file "mcc_generated_files/tmr1.c"
  8994 ;; Parameters:    Size  Location     Type
  8995 ;;  InterruptHan    2   13[COMRAM] PTR FTN()void 
  8996 ;;		 -> convert_timer(1), TMR1_DefaultInterruptHandler(1), 
  8997 ;; Auto vars:     Size  Location     Type
  8998 ;;		None
  8999 ;; Return value:  Size  Location     Type
  9000 ;;                  1    wreg      void 
  9001 ;; Registers used:
  9002 ;;		wreg, status,2, status,0
  9003 ;; Tracked objects:
  9004 ;;		On entry : 0/0
  9005 ;;		On exit  : 0/0
  9006 ;;		Unchanged: 0/0
  9007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9008 ;;      Params:         2       0       0       0       0       0       0
  9009 ;;      Locals:         0       0       0       0       0       0       0
  9010 ;;      Temps:          0       0       0       0       0       0       0
  9011 ;;      Totals:         2       0       0       0       0       0       0
  9012 ;;Total ram usage:        2 bytes
  9013 ;; Hardware stack levels used:    1
  9014 ;; Hardware stack levels required when called:    9
  9015 ;; This function calls:
  9016 ;;		Nothing
  9017 ;; This function is called by:
  9018 ;;		_TMR1_Initialize
  9019 ;;		_main
  9020 ;; This function uses a non-reentrant model
  9021 ;;
  9022                           
  9023                           	psect	text36
  9024  003E2A                     __ptext36:
  9025                           	opt callstack 0
  9026  003E2A                     _TMR1_SetInterruptHandler:
  9027                           	opt callstack 21
  9028  003E2A                     
  9029                           ;mcc_generated_files/tmr1.c: 173:     TMR1_InterruptHandler = InterruptHandler;
  9030  003E2A  C00E  F1BB         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  9031  003E2E  C00F  F1BC         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  9032  003E32  0012               	return		;funcret
  9033  003E34                     __end_of_TMR1_SetInterruptHandler:
  9034                           	opt callstack 0
  9035                           
  9036 ;; *************** function _PIN_MANAGER_Initialize *****************
  9037 ;; Defined at:
  9038 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  9039 ;; Parameters:    Size  Location     Type
  9040 ;;		None
  9041 ;; Auto vars:     Size  Location     Type
  9042 ;;		None
  9043 ;; Return value:  Size  Location     Type
  9044 ;;                  1    wreg      void 
  9045 ;; Registers used:
  9046 ;;		wreg, status,2
  9047 ;; Tracked objects:
  9048 ;;		On entry : 0/0
  9049 ;;		On exit  : 0/0
  9050 ;;		Unchanged: 0/0
  9051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9052 ;;      Params:         0       0       0       0       0       0       0
  9053 ;;      Locals:         0       0       0       0       0       0       0
  9054 ;;      Temps:          0       0       0       0       0       0       0
  9055 ;;      Totals:         0       0       0       0       0       0       0
  9056 ;;Total ram usage:        0 bytes
  9057 ;; Hardware stack levels used:    1
  9058 ;; Hardware stack levels required when called:    9
  9059 ;; This function calls:
  9060 ;;		Nothing
  9061 ;; This function is called by:
  9062 ;;		_SYSTEM_Initialize
  9063 ;; This function uses a non-reentrant model
  9064 ;;
  9065                           
  9066                           	psect	text37
  9067  0039D0                     __ptext37:
  9068                           	opt callstack 0
  9069  0039D0                     _PIN_MANAGER_Initialize:
  9070                           	opt callstack 20
  9071  0039D0                     
  9072                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  9073  0039D0  0E00               	movlw	0
  9074  0039D2  6E8D               	movwf	141,c	;volatile
  9075                           
  9076                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  9077  0039D4  0E00               	movlw	0
  9078  0039D6  6E8C               	movwf	140,c	;volatile
  9079                           
  9080                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  9081  0039D8  0E00               	movlw	0
  9082  0039DA  6E89               	movwf	137,c	;volatile
  9083                           
  9084                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  9085  0039DC  0E00               	movlw	0
  9086  0039DE  6E8A               	movwf	138,c	;volatile
  9087                           
  9088                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  9089  0039E0  0E00               	movlw	0
  9090  0039E2  6E8B               	movwf	139,c	;volatile
  9091                           
  9092                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  9093  0039E4  0E07               	movlw	7
  9094  0039E6  6E96               	movwf	150,c	;volatile
  9095  0039E8                     
  9096                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  9097  0039E8  6892               	setf	146,c	;volatile
  9098                           
  9099                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xF7;
  9100  0039EA  0EF7               	movlw	247
  9101  0039EC  6E93               	movwf	147,c	;volatile
  9102  0039EE                     
  9103                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
  9104  0039EE  6894               	setf	148,c	;volatile
  9105                           
  9106                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0x00;
  9107  0039F0  0E00               	movlw	0
  9108  0039F2  6E95               	movwf	149,c	;volatile
  9109                           
  9110                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x00;
  9111  0039F4  0E00               	movlw	0
  9112  0039F6  010F               	movlb	15	; () banked
  9113  0039F8  6F3B               	movwf	59,b	;volatile
  9114                           
  9115                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xFC;
  9116  0039FA  0EFC               	movlw	252
  9117  0039FC  6F3A               	movwf	58,b	;volatile
  9118                           
  9119                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x3C;
  9120  0039FE  0E3C               	movlw	60
  9121  003A00  6F39               	movwf	57,b	;volatile
  9122                           
  9123                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  9124  003A02  0E07               	movlw	7
  9125  003A04  6F3C               	movwf	60,b	;volatile
  9126                           
  9127                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x2F;
  9128  003A06  0E2F               	movlw	47
  9129  003A08  6F38               	movwf	56,b	;volatile
  9130                           
  9131                           ;mcc_generated_files/pin_manager.c: 87:     WPUB = 0x03;
  9132  003A0A  0E03               	movlw	3
  9133  003A0C  6E61               	movwf	97,c	;volatile
  9134  003A0E                     
  9135                           ; BSR set to: 15
  9136                           ;mcc_generated_files/pin_manager.c: 88:     INTCON2bits.nRBPU = 0;
  9137  003A0E  9EF1               	bcf	241,7,c	;volatile
  9138  003A10                     
  9139                           ; BSR set to: 15
  9140  003A10  0012               	return		;funcret
  9141  003A12                     __end_of_PIN_MANAGER_Initialize:
  9142                           	opt callstack 0
  9143                           
  9144 ;; *************** function _OSCILLATOR_Initialize *****************
  9145 ;; Defined at:
  9146 ;;		line 64 in file "mcc_generated_files/mcc.c"
  9147 ;; Parameters:    Size  Location     Type
  9148 ;;		None
  9149 ;; Auto vars:     Size  Location     Type
  9150 ;;		None
  9151 ;; Return value:  Size  Location     Type
  9152 ;;                  1    wreg      void 
  9153 ;; Registers used:
  9154 ;;		wreg, status,2
  9155 ;; Tracked objects:
  9156 ;;		On entry : 0/0
  9157 ;;		On exit  : 0/0
  9158 ;;		Unchanged: 0/0
  9159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9160 ;;      Params:         0       0       0       0       0       0       0
  9161 ;;      Locals:         0       0       0       0       0       0       0
  9162 ;;      Temps:          0       0       0       0       0       0       0
  9163 ;;      Totals:         0       0       0       0       0       0       0
  9164 ;;Total ram usage:        0 bytes
  9165 ;; Hardware stack levels used:    1
  9166 ;; Hardware stack levels required when called:    9
  9167 ;; This function calls:
  9168 ;;		Nothing
  9169 ;; This function is called by:
  9170 ;;		_SYSTEM_Initialize
  9171 ;; This function uses a non-reentrant model
  9172 ;;
  9173                           
  9174                           	psect	text38
  9175  003E1C                     __ptext38:
  9176                           	opt callstack 0
  9177  003E1C                     _OSCILLATOR_Initialize:
  9178                           	opt callstack 20
  9179  003E1C                     
  9180                           ;mcc_generated_files/mcc.c: 67:     OSCCON = 0x30;
  9181  003E1C  0E30               	movlw	48
  9182  003E1E  6ED3               	movwf	211,c	;volatile
  9183                           
  9184                           ;mcc_generated_files/mcc.c: 69:     OSCCON2 = 0x04;
  9185  003E20  0E04               	movlw	4
  9186  003E22  6ED2               	movwf	210,c	;volatile
  9187                           
  9188                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  9189  003E24  0E00               	movlw	0
  9190  003E26  6E9B               	movwf	155,c	;volatile
  9191  003E28  0012               	return		;funcret
  9192  003E2A                     __end_of_OSCILLATOR_Initialize:
  9193                           	opt callstack 0
  9194                           
  9195 ;; *************** function _INTERRUPT_Initialize *****************
  9196 ;; Defined at:
  9197 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  9198 ;; Parameters:    Size  Location     Type
  9199 ;;		None
  9200 ;; Auto vars:     Size  Location     Type
  9201 ;;		None
  9202 ;; Return value:  Size  Location     Type
  9203 ;;                  1    wreg      void 
  9204 ;; Registers used:
  9205 ;;		None
  9206 ;; Tracked objects:
  9207 ;;		On entry : 0/0
  9208 ;;		On exit  : 0/0
  9209 ;;		Unchanged: 0/0
  9210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9211 ;;      Params:         0       0       0       0       0       0       0
  9212 ;;      Locals:         0       0       0       0       0       0       0
  9213 ;;      Temps:          0       0       0       0       0       0       0
  9214 ;;      Totals:         0       0       0       0       0       0       0
  9215 ;;Total ram usage:        0 bytes
  9216 ;; Hardware stack levels used:    1
  9217 ;; Hardware stack levels required when called:    9
  9218 ;; This function calls:
  9219 ;;		Nothing
  9220 ;; This function is called by:
  9221 ;;		_SYSTEM_Initialize
  9222 ;; This function uses a non-reentrant model
  9223 ;;
  9224                           
  9225                           	psect	text39
  9226  003E34                     __ptext39:
  9227                           	opt callstack 0
  9228  003E34                     _INTERRUPT_Initialize:
  9229                           	opt callstack 20
  9230  003E34                     
  9231                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 1;
  9232  003E34  8ED0               	bsf	208,7,c	;volatile
  9233                           
  9234                           ;mcc_generated_files/interrupt_manager.c: 60:     IPR1bits.ADIP = 1;
  9235  003E36  8C9F               	bsf	159,6,c	;volatile
  9236                           
  9237                           ;mcc_generated_files/interrupt_manager.c: 65:     IPR1bits.TMR1IP = 1;
  9238  003E38  809F               	bsf	159,0,c	;volatile
  9239                           
  9240                           ;mcc_generated_files/interrupt_manager.c: 69:     INTCON3bits.INT1IP = 0;
  9241  003E3A  9CF0               	bcf	240,6,c	;volatile
  9242  003E3C  0012               	return		;funcret
  9243  003E3E                     __end_of_INTERRUPT_Initialize:
  9244                           	opt callstack 0
  9245                           
  9246 ;; *************** function _EXT_INT_Initialize *****************
  9247 ;; Defined at:
  9248 ;;		line 86 in file "mcc_generated_files/ext_int.c"
  9249 ;; Parameters:    Size  Location     Type
  9250 ;;		None
  9251 ;; Auto vars:     Size  Location     Type
  9252 ;;		None
  9253 ;; Return value:  Size  Location     Type
  9254 ;;                  1    wreg      void 
  9255 ;; Registers used:
  9256 ;;		wreg, status,2, status,0, cstack
  9257 ;; Tracked objects:
  9258 ;;		On entry : 0/0
  9259 ;;		On exit  : 0/0
  9260 ;;		Unchanged: 0/0
  9261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9262 ;;      Params:         0       0       0       0       0       0       0
  9263 ;;      Locals:         0       0       0       0       0       0       0
  9264 ;;      Temps:          0       0       0       0       0       0       0
  9265 ;;      Totals:         0       0       0       0       0       0       0
  9266 ;;Total ram usage:        0 bytes
  9267 ;; Hardware stack levels used:    1
  9268 ;; Hardware stack levels required when called:   10
  9269 ;; This function calls:
  9270 ;;		_INT0_SetInterruptHandler
  9271 ;;		_INT1_SetInterruptHandler
  9272 ;; This function is called by:
  9273 ;;		_SYSTEM_Initialize
  9274 ;; This function uses a non-reentrant model
  9275 ;;
  9276                           
  9277                           	psect	text40
  9278  003D3C                     __ptext40:
  9279                           	opt callstack 0
  9280  003D3C                     _EXT_INT_Initialize:
  9281                           	opt callstack 19
  9282  003D3C                     
  9283                           ;mcc_generated_files/ext_int.c: 91:     (INTCONbits.INT0IF = 0);
  9284  003D3C  92F2               	bcf	242,1,c	;volatile
  9285                           
  9286                           ;mcc_generated_files/ext_int.c: 92:     (INTCON2bits.INTEDG0 = 0);
  9287  003D3E  9CF1               	bcf	241,6,c	;volatile
  9288  003D40                     
  9289                           ;mcc_generated_files/ext_int.c: 94:     INT0_SetInterruptHandler(INT0_DefaultInterruptHa
      +                          ndler);
  9290  003D40  0E86               	movlw	low _INT0_DefaultInterruptHandler
  9291  003D42  6E0E               	movwf	INT0_SetInterruptHandler@InterruptHandler^0,c
  9292  003D44  0E3E               	movlw	high _INT0_DefaultInterruptHandler
  9293  003D46  6E0F               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)^0,c
  9294  003D48  EC24  F01F         	call	_INT0_SetInterruptHandler	;wreg free
  9295  003D4C                     
  9296                           ;mcc_generated_files/ext_int.c: 95:     (INTCONbits.INT0IE = 1);
  9297  003D4C  88F2               	bsf	242,4,c	;volatile
  9298  003D4E                     
  9299                           ;mcc_generated_files/ext_int.c: 100:     (INTCON3bits.INT1IF = 0);
  9300  003D4E  90F0               	bcf	240,0,c	;volatile
  9301  003D50                     
  9302                           ;mcc_generated_files/ext_int.c: 101:     (INTCON2bits.INTEDG1 = 0);
  9303  003D50  9AF1               	bcf	241,5,c	;volatile
  9304                           
  9305                           ;mcc_generated_files/ext_int.c: 103:     INT1_SetInterruptHandler(INT1_DefaultInterruptH
      +                          andler);
  9306  003D52  0E82               	movlw	low _INT1_DefaultInterruptHandler
  9307  003D54  6E0E               	movwf	INT1_SetInterruptHandler@InterruptHandler^0,c
  9308  003D56  0E3E               	movlw	high _INT1_DefaultInterruptHandler
  9309  003D58  6E0F               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)^0,c
  9310  003D5A  EC1F  F01F         	call	_INT1_SetInterruptHandler	;wreg free
  9311  003D5E                     
  9312                           ;mcc_generated_files/ext_int.c: 104:     (INTCON3bits.INT1IE = 1);
  9313  003D5E  86F0               	bsf	240,3,c	;volatile
  9314  003D60  0012               	return		;funcret
  9315  003D62                     __end_of_EXT_INT_Initialize:
  9316                           	opt callstack 0
  9317                           
  9318 ;; *************** function _INT1_SetInterruptHandler *****************
  9319 ;; Defined at:
  9320 ;;		line 77 in file "mcc_generated_files/ext_int.c"
  9321 ;; Parameters:    Size  Location     Type
  9322 ;;  InterruptHan    2   13[COMRAM] PTR FTN()void 
  9323 ;;		 -> start(1), INT1_DefaultInterruptHandler(1), 
  9324 ;; Auto vars:     Size  Location     Type
  9325 ;;		None
  9326 ;; Return value:  Size  Location     Type
  9327 ;;                  1    wreg      void 
  9328 ;; Registers used:
  9329 ;;		wreg, status,2, status,0
  9330 ;; Tracked objects:
  9331 ;;		On entry : 0/0
  9332 ;;		On exit  : 0/0
  9333 ;;		Unchanged: 0/0
  9334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9335 ;;      Params:         2       0       0       0       0       0       0
  9336 ;;      Locals:         0       0       0       0       0       0       0
  9337 ;;      Temps:          0       0       0       0       0       0       0
  9338 ;;      Totals:         2       0       0       0       0       0       0
  9339 ;;Total ram usage:        2 bytes
  9340 ;; Hardware stack levels used:    1
  9341 ;; Hardware stack levels required when called:    9
  9342 ;; This function calls:
  9343 ;;		Nothing
  9344 ;; This function is called by:
  9345 ;;		_EXT_INT_Initialize
  9346 ;;		_main
  9347 ;; This function uses a non-reentrant model
  9348 ;;
  9349                           
  9350                           	psect	text41
  9351  003E3E                     __ptext41:
  9352                           	opt callstack 0
  9353  003E3E                     _INT1_SetInterruptHandler:
  9354                           	opt callstack 19
  9355  003E3E                     
  9356                           ;mcc_generated_files/ext_int.c: 78:     INT1_InterruptHandler = InterruptHandler;
  9357  003E3E  C00E  F1BD         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  9358  003E42  C00F  F1BE         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  9359  003E46  0012               	return		;funcret
  9360  003E48                     __end_of_INT1_SetInterruptHandler:
  9361                           	opt callstack 0
  9362                           
  9363 ;; *************** function _INT0_SetInterruptHandler *****************
  9364 ;; Defined at:
  9365 ;;		line 51 in file "mcc_generated_files/ext_int.c"
  9366 ;; Parameters:    Size  Location     Type
  9367 ;;  InterruptHan    2   13[COMRAM] PTR FTN()void 
  9368 ;;		 -> emrgencia(1), INT0_DefaultInterruptHandler(1), 
  9369 ;; Auto vars:     Size  Location     Type
  9370 ;;		None
  9371 ;; Return value:  Size  Location     Type
  9372 ;;                  1    wreg      void 
  9373 ;; Registers used:
  9374 ;;		wreg, status,2, status,0
  9375 ;; Tracked objects:
  9376 ;;		On entry : 0/0
  9377 ;;		On exit  : 0/0
  9378 ;;		Unchanged: 0/0
  9379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9380 ;;      Params:         2       0       0       0       0       0       0
  9381 ;;      Locals:         0       0       0       0       0       0       0
  9382 ;;      Temps:          0       0       0       0       0       0       0
  9383 ;;      Totals:         2       0       0       0       0       0       0
  9384 ;;Total ram usage:        2 bytes
  9385 ;; Hardware stack levels used:    1
  9386 ;; Hardware stack levels required when called:    9
  9387 ;; This function calls:
  9388 ;;		Nothing
  9389 ;; This function is called by:
  9390 ;;		_EXT_INT_Initialize
  9391 ;;		_main
  9392 ;; This function uses a non-reentrant model
  9393 ;;
  9394                           
  9395                           	psect	text42
  9396  003E48                     __ptext42:
  9397                           	opt callstack 0
  9398  003E48                     _INT0_SetInterruptHandler:
  9399                           	opt callstack 19
  9400  003E48                     
  9401                           ;mcc_generated_files/ext_int.c: 52:     INT0_InterruptHandler = InterruptHandler;
  9402  003E48  C00E  F1BF         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
  9403  003E4C  C00F  F1C0         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
  9404  003E50  0012               	return		;funcret
  9405  003E52                     __end_of_INT0_SetInterruptHandler:
  9406                           	opt callstack 0
  9407                           
  9408 ;; *************** function _EPWM2_Initialize *****************
  9409 ;; Defined at:
  9410 ;;		line 64 in file "mcc_generated_files/epwm2.c"
  9411 ;; Parameters:    Size  Location     Type
  9412 ;;		None
  9413 ;; Auto vars:     Size  Location     Type
  9414 ;;		None
  9415 ;; Return value:  Size  Location     Type
  9416 ;;                  1    wreg      void 
  9417 ;; Registers used:
  9418 ;;		wreg, status,2
  9419 ;; Tracked objects:
  9420 ;;		On entry : 0/0
  9421 ;;		On exit  : 0/0
  9422 ;;		Unchanged: 0/0
  9423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9424 ;;      Params:         0       0       0       0       0       0       0
  9425 ;;      Locals:         0       0       0       0       0       0       0
  9426 ;;      Temps:          0       0       0       0       0       0       0
  9427 ;;      Totals:         0       0       0       0       0       0       0
  9428 ;;Total ram usage:        0 bytes
  9429 ;; Hardware stack levels used:    1
  9430 ;; Hardware stack levels required when called:    9
  9431 ;; This function calls:
  9432 ;;		Nothing
  9433 ;; This function is called by:
  9434 ;;		_SYSTEM_Initialize
  9435 ;; This function uses a non-reentrant model
  9436 ;;
  9437                           
  9438                           	psect	text43
  9439  003D62                     __ptext43:
  9440                           	opt callstack 0
  9441  003D62                     _EPWM2_Initialize:
  9442                           	opt callstack 20
  9443  003D62                     
  9444                           ;mcc_generated_files/epwm2.c: 69:  CCP2CON = 0x3C;
  9445  003D62  0E3C               	movlw	60
  9446  003D64  6E66               	movwf	102,c	;volatile
  9447                           
  9448                           ;mcc_generated_files/epwm2.c: 72:  ECCP2AS = 0x00;
  9449  003D66  0E00               	movlw	0
  9450  003D68  6E64               	movwf	100,c	;volatile
  9451                           
  9452                           ;mcc_generated_files/epwm2.c: 75:  PWM2CON = 0x80;
  9453  003D6A  0E80               	movlw	128
  9454  003D6C  6E65               	movwf	101,c	;volatile
  9455                           
  9456                           ;mcc_generated_files/epwm2.c: 78:  PSTR2CON = 0x01;
  9457  003D6E  0E01               	movlw	1
  9458  003D70  6E63               	movwf	99,c	;volatile
  9459                           
  9460                           ;mcc_generated_files/epwm2.c: 81:  CCPR2H = 0x00;
  9461  003D72  0E00               	movlw	0
  9462  003D74  6E68               	movwf	104,c	;volatile
  9463                           
  9464                           ;mcc_generated_files/epwm2.c: 84:  CCPR2L = 0x5D;
  9465  003D76  0E5D               	movlw	93
  9466  003D78  6E67               	movwf	103,c	;volatile
  9467                           
  9468                           ;mcc_generated_files/epwm2.c: 87:  CCPTMRS0bits.C2TSEL = 0x0;
  9469  003D7A  0EE7               	movlw	-25
  9470  003D7C  010F               	movlb	15	; () banked
  9471  003D7E  1749               	andwf	73,f,b	;volatile
  9472  003D80                     
  9473                           ; BSR set to: 15
  9474  003D80  0012               	return		;funcret
  9475  003D82                     __end_of_EPWM2_Initialize:
  9476                           	opt callstack 0
  9477                           
  9478 ;; *************** function _CCP5_Initialize *****************
  9479 ;; Defined at:
  9480 ;;		line 49 in file "mcc_generated_files/ccp5.c"
  9481 ;; Parameters:    Size  Location     Type
  9482 ;;		None
  9483 ;; Auto vars:     Size  Location     Type
  9484 ;;		None
  9485 ;; Return value:  Size  Location     Type
  9486 ;;                  1    wreg      void 
  9487 ;; Registers used:
  9488 ;;		wreg, status,2
  9489 ;; Tracked objects:
  9490 ;;		On entry : 0/0
  9491 ;;		On exit  : 0/0
  9492 ;;		Unchanged: 0/0
  9493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9494 ;;      Params:         0       0       0       0       0       0       0
  9495 ;;      Locals:         0       0       0       0       0       0       0
  9496 ;;      Temps:          0       0       0       0       0       0       0
  9497 ;;      Totals:         0       0       0       0       0       0       0
  9498 ;;Total ram usage:        0 bytes
  9499 ;; Hardware stack levels used:    1
  9500 ;; Hardware stack levels required when called:    9
  9501 ;; This function calls:
  9502 ;;		Nothing
  9503 ;; This function is called by:
  9504 ;;		_SYSTEM_Initialize
  9505 ;; This function uses a non-reentrant model
  9506 ;;
  9507                           
  9508                           	psect	text44
  9509  003DEC                     __ptext44:
  9510                           	opt callstack 0
  9511  003DEC                     _CCP5_Initialize:
  9512                           	opt callstack 20
  9513  003DEC                     
  9514                           ;mcc_generated_files/ccp5.c: 53:  CCP5CON = 0x00;
  9515  003DEC  0E00               	movlw	0
  9516  003DEE  010F               	movlb	15	; () banked
  9517  003DF0  6F54               	movwf	84,b	;volatile
  9518                           
  9519                           ;mcc_generated_files/ccp5.c: 56:  CCPR5L = 0x00;
  9520  003DF2  0E00               	movlw	0
  9521  003DF4  6F55               	movwf	85,b	;volatile
  9522                           
  9523                           ;mcc_generated_files/ccp5.c: 59:  CCPR5H = 0x00;
  9524  003DF6  0E00               	movlw	0
  9525  003DF8  6F56               	movwf	86,b	;volatile
  9526  003DFA                     
  9527                           ; BSR set to: 15
  9528  003DFA  0012               	return		;funcret
  9529  003DFC                     __end_of_CCP5_Initialize:
  9530                           	opt callstack 0
  9531                           
  9532 ;; *************** function _ADC_Initialize *****************
  9533 ;; Defined at:
  9534 ;;		line 61 in file "mcc_generated_files/adc.c"
  9535 ;; Parameters:    Size  Location     Type
  9536 ;;		None
  9537 ;; Auto vars:     Size  Location     Type
  9538 ;;		None
  9539 ;; Return value:  Size  Location     Type
  9540 ;;                  1    wreg      void 
  9541 ;; Registers used:
  9542 ;;		wreg, status,2
  9543 ;; Tracked objects:
  9544 ;;		On entry : 0/0
  9545 ;;		On exit  : 0/0
  9546 ;;		Unchanged: 0/0
  9547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9548 ;;      Params:         0       0       0       0       0       0       0
  9549 ;;      Locals:         0       0       0       0       0       0       0
  9550 ;;      Temps:          0       0       0       0       0       0       0
  9551 ;;      Totals:         0       0       0       0       0       0       0
  9552 ;;Total ram usage:        0 bytes
  9553 ;; Hardware stack levels used:    1
  9554 ;; Hardware stack levels required when called:    9
  9555 ;; This function calls:
  9556 ;;		Nothing
  9557 ;; This function is called by:
  9558 ;;		_SYSTEM_Initialize
  9559 ;; This function uses a non-reentrant model
  9560 ;;
  9561                           
  9562                           	psect	text45
  9563  003D9E                     __ptext45:
  9564                           	opt callstack 0
  9565  003D9E                     _ADC_Initialize:
  9566                           	opt callstack 20
  9567  003D9E                     
  9568                           ;mcc_generated_files/adc.c: 66:     ADCON0 = 0x01;
  9569  003D9E  0E01               	movlw	1
  9570  003DA0  6EC2               	movwf	194,c	;volatile
  9571                           
  9572                           ;mcc_generated_files/adc.c: 69:     ADCON1 = 0x05;
  9573  003DA2  0E05               	movlw	5
  9574  003DA4  6EC1               	movwf	193,c	;volatile
  9575                           
  9576                           ;mcc_generated_files/adc.c: 72:     ADCON2 = 0x8D;
  9577  003DA6  0E8D               	movlw	141
  9578  003DA8  6EC0               	movwf	192,c	;volatile
  9579                           
  9580                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  9581  003DAA  0E00               	movlw	0
  9582  003DAC  6EC3               	movwf	195,c	;volatile
  9583                           
  9584                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  9585  003DAE  0E00               	movlw	0
  9586  003DB0  6EC4               	movwf	196,c	;volatile
  9587  003DB2                     
  9588                           ;mcc_generated_files/adc.c: 81:     PIE1bits.ADIE = 1;
  9589  003DB2  8C9D               	bsf	157,6,c	;volatile
  9590  003DB4  0012               	return		;funcret
  9591  003DB6                     __end_of_ADC_Initialize:
  9592                           	opt callstack 0
  9593                           
  9594 ;; *************** function _OpenXLCD *****************
  9595 ;; Defined at:
  9596 ;;		line 57 in file "xlcd.c"
  9597 ;; Parameters:    Size  Location     Type
  9598 ;;  lcdtype         1    wreg     unsigned char 
  9599 ;; Auto vars:     Size  Location     Type
  9600 ;;  lcdtype         1    0[COMRAM] unsigned char 
  9601 ;; Return value:  Size  Location     Type
  9602 ;;                  1    wreg      void 
  9603 ;; Registers used:
  9604 ;;		wreg, status,2, status,0, cstack
  9605 ;; Tracked objects:
  9606 ;;		On entry : 0/0
  9607 ;;		On exit  : 0/0
  9608 ;;		Unchanged: 0/0
  9609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9610 ;;      Params:         0       0       0       0       0       0       0
  9611 ;;      Locals:         0       0       0       0       0       0       0
  9612 ;;      Temps:          0       0       0       0       0       0       0
  9613 ;;      Totals:         0       0       0       0       0       0       0
  9614 ;;Total ram usage:        0 bytes
  9615 ;; Hardware stack levels used:    1
  9616 ;; Hardware stack levels required when called:   11
  9617 ;; This function calls:
  9618 ;;		_BusyXLCD
  9619 ;;		_DelayFor18TCY
  9620 ;;		_DelayPORXLCD
  9621 ;;		_DelayXLCD
  9622 ;;		_WriteCmdXLCD
  9623 ;; This function is called by:
  9624 ;;		_main
  9625 ;; This function uses a non-reentrant model
  9626 ;;
  9627                           
  9628                           	psect	text46
  9629  002C58                     __ptext46:
  9630                           	opt callstack 0
  9631  002C58                     _OpenXLCD:
  9632                           	opt callstack 19
  9633  002C58                     
  9634                           ;xlcd.c: 61:     DelayPORXLCD();
  9635  002C58  EC06  F01F         	call	_DelayPORXLCD	;wreg free
  9636  002C5C                     
  9637                           ;xlcd.c: 73:     PORTD &= 0xf0;
  9638  002C5C  0EF0               	movlw	240
  9639  002C5E  1683               	andwf	131,f,c	;volatile
  9640  002C60                     
  9641                           ;xlcd.c: 74:     TRISD |= 0x0f;
  9642  002C60  0E0F               	movlw	15
  9643  002C62  1295               	iorwf	149,f,c	;volatile
  9644  002C64                     
  9645                           ;xlcd.c: 77:     TRISDbits.TRISD5 = 0;
  9646  002C64  9A95               	bcf	149,5,c	;volatile
  9647  002C66                     
  9648                           ;xlcd.c: 78:     TRISDbits.TRISD4 = 0;
  9649  002C66  9895               	bcf	149,4,c	;volatile
  9650  002C68                     
  9651                           ;xlcd.c: 79:     TRISDbits.TRISD6 = 0;
  9652  002C68  9C95               	bcf	149,6,c	;volatile
  9653  002C6A                     
  9654                           ;xlcd.c: 80:     LATDbits.LATD5 = 0;
  9655  002C6A  9A8C               	bcf	140,5,c	;volatile
  9656  002C6C                     
  9657                           ;xlcd.c: 81:     LATDbits.LATD4 = 0;
  9658  002C6C  988C               	bcf	140,4,c	;volatile
  9659  002C6E                     
  9660                           ;xlcd.c: 82:     LATDbits.LATD6 = 0;
  9661  002C6E  9C8C               	bcf	140,6,c	;volatile
  9662                           
  9663                           ;xlcd.c: 85:     DelayPORXLCD();
  9664  002C70  EC06  F01F         	call	_DelayPORXLCD	;wreg free
  9665  002C74                     
  9666                           ;xlcd.c: 98:     TRISD &= 0xf0;
  9667  002C74  0EF0               	movlw	240
  9668  002C76  1695               	andwf	149,f,c	;volatile
  9669  002C78                     
  9670                           ;xlcd.c: 99:     PORTD &= 0xf0;
  9671  002C78  0EF0               	movlw	240
  9672  002C7A  1683               	andwf	131,f,c	;volatile
  9673  002C7C                     
  9674                           ;xlcd.c: 100:     PORTD |= 0b00000011;
  9675  002C7C  0E03               	movlw	3
  9676  002C7E  1283               	iorwf	131,f,c	;volatile
  9677  002C80                     
  9678                           ;xlcd.c: 103:     LATDbits.LATD6 = 1;
  9679  002C80  8C8C               	bsf	140,6,c	;volatile
  9680  002C82                     
  9681                           ;xlcd.c: 104:     DelayFor18TCY();
  9682  002C82  EC29  F01F         	call	_DelayFor18TCY	;wreg free
  9683  002C86                     
  9684                           ;xlcd.c: 105:     LATDbits.LATD6 = 0;
  9685  002C86  9C8C               	bcf	140,6,c	;volatile
  9686  002C88                     
  9687                           ;xlcd.c: 108:     DelayXLCD();
  9688  002C88  ECFE  F01E         	call	_DelayXLCD	;wreg free
  9689  002C8C                     
  9690                           ;xlcd.c: 119:     TRISD &= 0xf0;
  9691  002C8C  0EF0               	movlw	240
  9692  002C8E  1695               	andwf	149,f,c	;volatile
  9693  002C90                     
  9694                           ;xlcd.c: 120:     PORTD &= 0xf0;
  9695  002C90  0EF0               	movlw	240
  9696  002C92  1683               	andwf	131,f,c	;volatile
  9697  002C94                     
  9698                           ;xlcd.c: 121:     PORTD |= 0b00000011;
  9699  002C94  0E03               	movlw	3
  9700  002C96  1283               	iorwf	131,f,c	;volatile
  9701  002C98                     
  9702                           ;xlcd.c: 124:     LATDbits.LATD6 = 1;
  9703  002C98  8C8C               	bsf	140,6,c	;volatile
  9704                           
  9705                           ;xlcd.c: 125:     DelayFor18TCY();
  9706  002C9A  EC29  F01F         	call	_DelayFor18TCY	;wreg free
  9707  002C9E                     
  9708                           ;xlcd.c: 126:     LATDbits.LATD6 = 0;
  9709  002C9E  9C8C               	bcf	140,6,c	;volatile
  9710                           
  9711                           ;xlcd.c: 129:     DelayXLCD();
  9712  002CA0  ECFE  F01E         	call	_DelayXLCD	;wreg free
  9713  002CA4                     
  9714                           ;xlcd.c: 139:     PORTD &= 0xf0;
  9715  002CA4  0EF0               	movlw	240
  9716  002CA6  1683               	andwf	131,f,c	;volatile
  9717  002CA8                     
  9718                           ;xlcd.c: 140:     PORTD |= 0b00000011;
  9719  002CA8  0E03               	movlw	3
  9720  002CAA  1283               	iorwf	131,f,c	;volatile
  9721  002CAC                     
  9722                           ;xlcd.c: 143:     LATDbits.LATD6 = 1;
  9723  002CAC  8C8C               	bsf	140,6,c	;volatile
  9724                           
  9725                           ;xlcd.c: 144:     DelayFor18TCY();
  9726  002CAE  EC29  F01F         	call	_DelayFor18TCY	;wreg free
  9727  002CB2                     
  9728                           ;xlcd.c: 145:     LATDbits.LATD6 = 0;
  9729  002CB2  9C8C               	bcf	140,6,c	;volatile
  9730                           
  9731                           ;xlcd.c: 148:     DelayXLCD();
  9732  002CB4  ECFE  F01E         	call	_DelayXLCD	;wreg free
  9733  002CB8                     
  9734                           ;xlcd.c: 160:     PORTD &= 0xf0;
  9735  002CB8  0EF0               	movlw	240
  9736  002CBA  1683               	andwf	131,f,c	;volatile
  9737  002CBC                     
  9738                           ;xlcd.c: 161:     PORTD |= 0b00000010;
  9739  002CBC  8283               	bsf	131,1,c	;volatile
  9740  002CBE                     
  9741                           ;xlcd.c: 164:     LATDbits.LATD6 = 1;
  9742  002CBE  8C8C               	bsf	140,6,c	;volatile
  9743  002CC0                     
  9744                           ;xlcd.c: 165:     DelayFor18TCY();
  9745  002CC0  EC29  F01F         	call	_DelayFor18TCY	;wreg free
  9746  002CC4                     
  9747                           ;xlcd.c: 166:     LATDbits.LATD6 = 0;
  9748  002CC4  9C8C               	bcf	140,6,c	;volatile
  9749  002CC6                     
  9750                           ;xlcd.c: 175:     TRISD |= 0x0f;
  9751  002CC6  0E0F               	movlw	15
  9752  002CC8  1295               	iorwf	149,f,c	;volatile
  9753  002CCA                     l6982:
  9754  002CCA  ECE5  F01E         	call	_BusyXLCD	;wreg free
  9755  002CCE  0900               	iorlw	0
  9756  002CD0  A4D8               	btfss	status,2,c
  9757  002CD2  EF6D  F016         	goto	u8411
  9758  002CD6  EF6F  F016         	goto	u8410
  9759  002CDA                     u8411:
  9760  002CDA  EF65  F016         	goto	l6982
  9761  002CDE                     u8410:
  9762  002CDE                     
  9763                           ;xlcd.c: 183:     WriteCmdXLCD(0x28);
  9764  002CDE  0E28               	movlw	40
  9765  002CE0  EC09  F01D         	call	_WriteCmdXLCD
  9766  002CE4                     l6986:
  9767  002CE4  ECE5  F01E         	call	_BusyXLCD	;wreg free
  9768  002CE8  0900               	iorlw	0
  9769  002CEA  A4D8               	btfss	status,2,c
  9770  002CEC  EF7A  F016         	goto	u8421
  9771  002CF0  EF7C  F016         	goto	u8420
  9772  002CF4                     u8421:
  9773  002CF4  EF72  F016         	goto	l6986
  9774  002CF8                     u8420:
  9775  002CF8                     
  9776                           ;xlcd.c: 189:     WriteCmdXLCD(0x0D);
  9777  002CF8  0E0D               	movlw	13
  9778  002CFA  EC09  F01D         	call	_WriteCmdXLCD
  9779  002CFE                     l6990:
  9780  002CFE  ECE5  F01E         	call	_BusyXLCD	;wreg free
  9781  002D02  0900               	iorlw	0
  9782  002D04  A4D8               	btfss	status,2,c
  9783  002D06  EF87  F016         	goto	u8431
  9784  002D0A  EF89  F016         	goto	u8430
  9785  002D0E                     u8431:
  9786  002D0E  EF7F  F016         	goto	l6990
  9787  002D12                     u8430:
  9788  002D12                     l6992:
  9789  002D12  ECE5  F01E         	call	_BusyXLCD	;wreg free
  9790  002D16  0900               	iorlw	0
  9791  002D18  A4D8               	btfss	status,2,c
  9792  002D1A  EF91  F016         	goto	u8441
  9793  002D1E  EF93  F016         	goto	u8440
  9794  002D22                     u8441:
  9795  002D22  EF89  F016         	goto	l6992
  9796  002D26                     u8440:
  9797  002D26                     
  9798                           ;xlcd.c: 197:     WriteCmdXLCD(0x01);
  9799  002D26  0E01               	movlw	1
  9800  002D28  EC09  F01D         	call	_WriteCmdXLCD
  9801  002D2C                     l6996:
  9802  002D2C  ECE5  F01E         	call	_BusyXLCD	;wreg free
  9803  002D30  0900               	iorlw	0
  9804  002D32  A4D8               	btfss	status,2,c
  9805  002D34  EF9E  F016         	goto	u8451
  9806  002D38  EFA0  F016         	goto	u8450
  9807  002D3C                     u8451:
  9808  002D3C  EF96  F016         	goto	l6996
  9809  002D40                     u8450:
  9810  002D40                     
  9811                           ;xlcd.c: 202:     WriteCmdXLCD(0x06);
  9812  002D40  0E06               	movlw	6
  9813  002D42  EC09  F01D         	call	_WriteCmdXLCD
  9814  002D46                     l7000:
  9815  002D46  ECE5  F01E         	call	_BusyXLCD	;wreg free
  9816  002D4A  0900               	iorlw	0
  9817  002D4C  A4D8               	btfss	status,2,c
  9818  002D4E  EFAB  F016         	goto	u8461
  9819  002D52  EFAD  F016         	goto	u8460
  9820  002D56                     u8461:
  9821  002D56  EFA3  F016         	goto	l7000
  9822  002D5A                     u8460:
  9823  002D5A                     
  9824                           ;xlcd.c: 208:     WriteCmdXLCD(0x80);
  9825  002D5A  0E80               	movlw	128
  9826  002D5C  EC09  F01D         	call	_WriteCmdXLCD
  9827  002D60  0012               	return		;funcret
  9828  002D62                     __end_of_OpenXLCD:
  9829                           	opt callstack 0
  9830                           
  9831 ;; *************** function _WriteCmdXLCD *****************
  9832 ;; Defined at:
  9833 ;;		line 545 in file "xlcd.c"
  9834 ;; Parameters:    Size  Location     Type
  9835 ;;  cmd             1    wreg     unsigned char 
  9836 ;; Auto vars:     Size  Location     Type
  9837 ;;  cmd             1   13[COMRAM] unsigned char 
  9838 ;; Return value:  Size  Location     Type
  9839 ;;                  1    wreg      void 
  9840 ;; Registers used:
  9841 ;;		wreg, status,2, status,0, cstack
  9842 ;; Tracked objects:
  9843 ;;		On entry : 0/0
  9844 ;;		On exit  : 0/0
  9845 ;;		Unchanged: 0/0
  9846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9847 ;;      Params:         0       0       0       0       0       0       0
  9848 ;;      Locals:         1       0       0       0       0       0       0
  9849 ;;      Temps:          0       0       0       0       0       0       0
  9850 ;;      Totals:         1       0       0       0       0       0       0
  9851 ;;Total ram usage:        1 bytes
  9852 ;; Hardware stack levels used:    1
  9853 ;; Hardware stack levels required when called:   10
  9854 ;; This function calls:
  9855 ;;		_DelayFor18TCY
  9856 ;; This function is called by:
  9857 ;;		_main
  9858 ;;		_OpenXLCD
  9859 ;; This function uses a non-reentrant model
  9860 ;;
  9861                           
  9862                           	psect	text47
  9863  003A12                     __ptext47:
  9864                           	opt callstack 0
  9865  003A12                     _WriteCmdXLCD:
  9866                           	opt callstack 20
  9867                           
  9868                           ;incstack = 0
  9869                           ;WriteCmdXLCD@cmd stored from wreg
  9870  003A12  6E0E               	movwf	WriteCmdXLCD@cmd^0,c
  9871  003A14                     
  9872                           ;xlcd.c: 563:     TRISD &= 0xf0;
  9873  003A14  0EF0               	movlw	240
  9874  003A16  1695               	andwf	149,f,c	;volatile
  9875                           
  9876                           ;xlcd.c: 564:     PORTD &= 0xf0;
  9877  003A18  0EF0               	movlw	240
  9878  003A1A  1683               	andwf	131,f,c	;volatile
  9879                           
  9880                           ;xlcd.c: 565:     PORTD |= (cmd >> 4)&0x0f;
  9881  003A1C  380E               	swapf	WriteCmdXLCD@cmd^0,w,c
  9882  003A1E  0B0F               	andlw	15
  9883  003A20  0B0F               	andlw	15
  9884  003A22  1283               	iorwf	131,f,c	;volatile
  9885  003A24                     
  9886                           ;xlcd.c: 567:     LATDbits.LATD5 = 0;
  9887  003A24  9A8C               	bcf	140,5,c	;volatile
  9888  003A26                     
  9889                           ;xlcd.c: 568:     LATDbits.LATD4 = 0;
  9890  003A26  988C               	bcf	140,4,c	;volatile
  9891  003A28                     
  9892                           ;xlcd.c: 569:     DelayFor18TCY();
  9893  003A28  EC29  F01F         	call	_DelayFor18TCY	;wreg free
  9894  003A2C                     
  9895                           ;xlcd.c: 570:     LATDbits.LATD6 = 1;
  9896  003A2C  8C8C               	bsf	140,6,c	;volatile
  9897  003A2E                     
  9898                           ;xlcd.c: 571:     DelayFor18TCY();
  9899  003A2E  EC29  F01F         	call	_DelayFor18TCY	;wreg free
  9900  003A32                     
  9901                           ;xlcd.c: 572:     LATDbits.LATD6 = 0;
  9902  003A32  9C8C               	bcf	140,6,c	;volatile
  9903                           
  9904                           ;xlcd.c: 577:     PORTD &= 0xf0;
  9905  003A34  0EF0               	movlw	240
  9906  003A36  1683               	andwf	131,f,c	;volatile
  9907                           
  9908                           ;xlcd.c: 578:     PORTD |= cmd & 0x0f;
  9909  003A38  500E               	movf	WriteCmdXLCD@cmd^0,w,c
  9910  003A3A  0B0F               	andlw	15
  9911  003A3C  1283               	iorwf	131,f,c	;volatile
  9912  003A3E                     
  9913                           ;xlcd.c: 580:     DelayFor18TCY();
  9914  003A3E  EC29  F01F         	call	_DelayFor18TCY	;wreg free
  9915  003A42                     
  9916                           ;xlcd.c: 581:     LATDbits.LATD6 = 1;
  9917  003A42  8C8C               	bsf	140,6,c	;volatile
  9918  003A44                     
  9919                           ;xlcd.c: 582:     DelayFor18TCY();
  9920  003A44  EC29  F01F         	call	_DelayFor18TCY	;wreg free
  9921  003A48                     
  9922                           ;xlcd.c: 583:     LATDbits.LATD6 = 0;
  9923  003A48  9C8C               	bcf	140,6,c	;volatile
  9924                           
  9925                           ;xlcd.c: 587:     TRISD |= 0x0f;
  9926  003A4A  0E0F               	movlw	15
  9927  003A4C  1295               	iorwf	149,f,c	;volatile
  9928  003A4E  0012               	return		;funcret
  9929  003A50                     __end_of_WriteCmdXLCD:
  9930                           	opt callstack 0
  9931                           
  9932 ;; *************** function _DelayXLCD *****************
  9933 ;; Defined at:
  9934 ;;		line 33 in file "xlcd.c"
  9935 ;; Parameters:    Size  Location     Type
  9936 ;;		None
  9937 ;; Auto vars:     Size  Location     Type
  9938 ;;		None
  9939 ;; Return value:  Size  Location     Type
  9940 ;;                  1    wreg      void 
  9941 ;; Registers used:
  9942 ;;		wreg
  9943 ;; Tracked objects:
  9944 ;;		On entry : 0/0
  9945 ;;		On exit  : 0/0
  9946 ;;		Unchanged: 0/0
  9947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9948 ;;      Params:         0       0       0       0       0       0       0
  9949 ;;      Locals:         0       0       0       0       0       0       0
  9950 ;;      Temps:          1       0       0       0       0       0       0
  9951 ;;      Totals:         1       0       0       0       0       0       0
  9952 ;;Total ram usage:        1 bytes
  9953 ;; Hardware stack levels used:    1
  9954 ;; Hardware stack levels required when called:    9
  9955 ;; This function calls:
  9956 ;;		Nothing
  9957 ;; This function is called by:
  9958 ;;		_OpenXLCD
  9959 ;; This function uses a non-reentrant model
  9960 ;;
  9961                           
  9962                           	psect	text48
  9963  003DFC                     __ptext48:
  9964                           	opt callstack 0
  9965  003DFC                     _DelayXLCD:
  9966                           	opt callstack 20
  9967  003DFC                     
  9968                           ;xlcd.c: 36:     _delay((unsigned long)((15)*(12000000/4000.0)));
  9969  003DFC  0E3B               	movlw	59
  9970  003DFE  6E0E               	movwf	??_DelayXLCD^0,c
  9971  003E00  0E70               	movlw	112
  9972  003E02                     u8887:
  9973  003E02  2EE8               	decfsz	wreg,f,c
  9974  003E04  D7FE               	bra	u8887
  9975  003E06  2E0E               	decfsz	??_DelayXLCD^0,f,c
  9976  003E08  D7FC               	bra	u8887
  9977  003E0A  0012               	return		;funcret
  9978  003E0C                     __end_of_DelayXLCD:
  9979                           	opt callstack 0
  9980                           
  9981 ;; *************** function _DelayPORXLCD *****************
  9982 ;; Defined at:
  9983 ;;		line 25 in file "xlcd.c"
  9984 ;; Parameters:    Size  Location     Type
  9985 ;;		None
  9986 ;; Auto vars:     Size  Location     Type
  9987 ;;		None
  9988 ;; Return value:  Size  Location     Type
  9989 ;;                  1    wreg      void 
  9990 ;; Registers used:
  9991 ;;		wreg
  9992 ;; Tracked objects:
  9993 ;;		On entry : 0/0
  9994 ;;		On exit  : 0/0
  9995 ;;		Unchanged: 0/0
  9996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9997 ;;      Params:         0       0       0       0       0       0       0
  9998 ;;      Locals:         0       0       0       0       0       0       0
  9999 ;;      Temps:          1       0       0       0       0       0       0
 10000 ;;      Totals:         1       0       0       0       0       0       0
 10001 ;;Total ram usage:        1 bytes
 10002 ;; Hardware stack levels used:    1
 10003 ;; Hardware stack levels required when called:    9
 10004 ;; This function calls:
 10005 ;;		Nothing
 10006 ;; This function is called by:
 10007 ;;		_OpenXLCD
 10008 ;; This function uses a non-reentrant model
 10009 ;;
 10010                           
 10011                           	psect	text49
 10012  003E0C                     __ptext49:
 10013                           	opt callstack 0
 10014  003E0C                     _DelayPORXLCD:
 10015                           	opt callstack 20
 10016  003E0C                     
 10017                           ;xlcd.c: 28:     _delay((unsigned long)((15)*(12000000/4000.0)));
 10018  003E0C  0E3B               	movlw	59
 10019  003E0E  6E0E               	movwf	??_DelayPORXLCD^0,c
 10020  003E10  0E70               	movlw	112
 10021  003E12                     u8897:
 10022  003E12  2EE8               	decfsz	wreg,f,c
 10023  003E14  D7FE               	bra	u8897
 10024  003E16  2E0E               	decfsz	??_DelayPORXLCD^0,f,c
 10025  003E18  D7FC               	bra	u8897
 10026  003E1A  0012               	return		;funcret
 10027  003E1C                     __end_of_DelayPORXLCD:
 10028                           	opt callstack 0
 10029                           
 10030 ;; *************** function _CGRamAddr0 *****************
 10031 ;; Defined at:
 10032 ;;		line 98 in file "main.c"
 10033 ;; Parameters:    Size  Location     Type
 10034 ;;		None
 10035 ;; Auto vars:     Size  Location     Type
 10036 ;;		None
 10037 ;; Return value:  Size  Location     Type
 10038 ;;                  1    wreg      void 
 10039 ;; Registers used:
 10040 ;;		wreg, status,2, status,0, cstack
 10041 ;; Tracked objects:
 10042 ;;		On entry : 0/0
 10043 ;;		On exit  : 0/0
 10044 ;;		Unchanged: 0/0
 10045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10046 ;;      Params:         0       0       0       0       0       0       0
 10047 ;;      Locals:         0       0       0       0       0       0       0
 10048 ;;      Temps:          0       0       0       0       0       0       0
 10049 ;;      Totals:         0       0       0       0       0       0       0
 10050 ;;Total ram usage:        0 bytes
 10051 ;; Hardware stack levels used:    1
 10052 ;; Hardware stack levels required when called:   11
 10053 ;; This function calls:
 10054 ;;		_BusyXLCD
 10055 ;;		_SetCGRamAddr
 10056 ;;		_WriteDataXLCD
 10057 ;; This function is called by:
 10058 ;;		_main
 10059 ;; This function uses a non-reentrant model
 10060 ;;
 10061                           
 10062                           	psect	text50
 10063  002F6C                     __ptext50:
 10064                           	opt callstack 0
 10065  002F6C                     _CGRamAddr0:
 10066                           	opt callstack 19
 10067  002F6C                     l6882:
 10068  002F6C  ECE5  F01E         	call	_BusyXLCD	;wreg free
 10069  002F70  0900               	iorlw	0
 10070  002F72  A4D8               	btfss	status,2,c
 10071  002F74  EFBE  F017         	goto	u8311
 10072  002F78  EFC0  F017         	goto	u8310
 10073  002F7C                     u8311:
 10074  002F7C  EFB6  F017         	goto	l6882
 10075  002F80                     u8310:
 10076  002F80                     
 10077                           ;main.c: 107:     SetCGRamAddr(0b00000000);
 10078  002F80  0E00               	movlw	0
 10079  002F82  ECFD  F01B         	call	_SetCGRamAddr
 10080  002F86                     l6886:
 10081  002F86  ECE5  F01E         	call	_BusyXLCD	;wreg free
 10082  002F8A  0900               	iorlw	0
 10083  002F8C  A4D8               	btfss	status,2,c
 10084  002F8E  EFCB  F017         	goto	u8321
 10085  002F92  EFCD  F017         	goto	u8320
 10086  002F96                     u8321:
 10087  002F96  EFC3  F017         	goto	l6886
 10088  002F9A                     u8320:
 10089  002F9A                     
 10090                           ;main.c: 112:     WriteDataXLCD(0b00000111);
 10091  002F9A  0E07               	movlw	7
 10092  002F9C  EC28  F01D         	call	_WriteDataXLCD
 10093  002FA0                     l6890:
 10094  002FA0  ECE5  F01E         	call	_BusyXLCD	;wreg free
 10095  002FA4  0900               	iorlw	0
 10096  002FA6  A4D8               	btfss	status,2,c
 10097  002FA8  EFD8  F017         	goto	u8331
 10098  002FAC  EFDA  F017         	goto	u8330
 10099  002FB0                     u8331:
 10100  002FB0  EFD0  F017         	goto	l6890
 10101  002FB4                     u8330:
 10102  002FB4                     
 10103                           ;main.c: 114:     WriteDataXLCD(0b00001000);
 10104  002FB4  0E08               	movlw	8
 10105  002FB6  EC28  F01D         	call	_WriteDataXLCD
 10106  002FBA                     l6894:
 10107  002FBA  ECE5  F01E         	call	_BusyXLCD	;wreg free
 10108  002FBE  0900               	iorlw	0
 10109  002FC0  A4D8               	btfss	status,2,c
 10110  002FC2  EFE5  F017         	goto	u8341
 10111  002FC6  EFE7  F017         	goto	u8340
 10112  002FCA                     u8341:
 10113  002FCA  EFDD  F017         	goto	l6894
 10114  002FCE                     u8340:
 10115  002FCE                     
 10116                           ;main.c: 116:     WriteDataXLCD(0b00010000);
 10117  002FCE  0E10               	movlw	16
 10118  002FD0  EC28  F01D         	call	_WriteDataXLCD
 10119  002FD4                     l6898:
 10120  002FD4  ECE5  F01E         	call	_BusyXLCD	;wreg free
 10121  002FD8  0900               	iorlw	0
 10122  002FDA  A4D8               	btfss	status,2,c
 10123  002FDC  EFF2  F017         	goto	u8351
 10124  002FE0  EFF4  F017         	goto	u8350
 10125  002FE4                     u8351:
 10126  002FE4  EFEA  F017         	goto	l6898
 10127  002FE8                     u8350:
 10128  002FE8                     
 10129                           ;main.c: 118:     WriteDataXLCD(0b00010000);
 10130  002FE8  0E10               	movlw	16
 10131  002FEA  EC28  F01D         	call	_WriteDataXLCD
 10132  002FEE                     l6902:
 10133  002FEE  ECE5  F01E         	call	_BusyXLCD	;wreg free
 10134  002FF2  0900               	iorlw	0
 10135  002FF4  A4D8               	btfss	status,2,c
 10136  002FF6  EFFF  F017         	goto	u8361
 10137  002FFA  EF01  F018         	goto	u8360
 10138  002FFE                     u8361:
 10139  002FFE  EFF7  F017         	goto	l6902
 10140  003002                     u8360:
 10141  003002                     
 10142                           ;main.c: 120:     WriteDataXLCD(0b00010000);
 10143  003002  0E10               	movlw	16
 10144  003004  EC28  F01D         	call	_WriteDataXLCD
 10145  003008                     l6906:
 10146  003008  ECE5  F01E         	call	_BusyXLCD	;wreg free
 10147  00300C  0900               	iorlw	0
 10148  00300E  A4D8               	btfss	status,2,c
 10149  003010  EF0C  F018         	goto	u8371
 10150  003014  EF0E  F018         	goto	u8370
 10151  003018                     u8371:
 10152  003018  EF04  F018         	goto	l6906
 10153  00301C                     u8370:
 10154  00301C                     
 10155                           ;main.c: 122:     WriteDataXLCD(0b00001000);
 10156  00301C  0E08               	movlw	8
 10157  00301E  EC28  F01D         	call	_WriteDataXLCD
 10158  003022                     l6910:
 10159  003022  ECE5  F01E         	call	_BusyXLCD	;wreg free
 10160  003026  0900               	iorlw	0
 10161  003028  A4D8               	btfss	status,2,c
 10162  00302A  EF19  F018         	goto	u8381
 10163  00302E  EF1B  F018         	goto	u8380
 10164  003032                     u8381:
 10165  003032  EF11  F018         	goto	l6910
 10166  003036                     u8380:
 10167  003036                     
 10168                           ;main.c: 124:     WriteDataXLCD(0b00010111);
 10169  003036  0E17               	movlw	23
 10170  003038  EC28  F01D         	call	_WriteDataXLCD
 10171  00303C                     l6914:
 10172  00303C  ECE5  F01E         	call	_BusyXLCD	;wreg free
 10173  003040  0900               	iorlw	0
 10174  003042  A4D8               	btfss	status,2,c
 10175  003044  EF26  F018         	goto	u8391
 10176  003048  EF28  F018         	goto	u8390
 10177  00304C                     u8391:
 10178  00304C  EF1E  F018         	goto	l6914
 10179  003050                     u8390:
 10180  003050                     
 10181                           ;main.c: 126:     WriteDataXLCD(0b00000000);
 10182  003050  0E00               	movlw	0
 10183  003052  EC28  F01D         	call	_WriteDataXLCD
 10184  003056                     l6918:
 10185  003056  ECE5  F01E         	call	_BusyXLCD	;wreg free
 10186  00305A  0900               	iorlw	0
 10187  00305C  A4D8               	btfss	status,2,c
 10188  00305E  EF33  F018         	goto	u8401
 10189  003062  EF35  F018         	goto	u8400
 10190  003066                     u8401:
 10191  003066  EF2B  F018         	goto	l6918
 10192  00306A                     u8400:
 10193  00306A  0012               	return		;funcret
 10194  00306C                     __end_of_CGRamAddr0:
 10195                           	opt callstack 0
 10196                           
 10197 ;; *************** function _WriteDataXLCD *****************
 10198 ;; Defined at:
 10199 ;;		line 605 in file "xlcd.c"
 10200 ;; Parameters:    Size  Location     Type
 10201 ;;  data            1    wreg     unsigned char 
 10202 ;; Auto vars:     Size  Location     Type
 10203 ;;  data            1   13[COMRAM] unsigned char 
 10204 ;; Return value:  Size  Location     Type
 10205 ;;                  1    wreg      void 
 10206 ;; Registers used:
 10207 ;;		wreg, status,2, status,0, cstack
 10208 ;; Tracked objects:
 10209 ;;		On entry : 0/0
 10210 ;;		On exit  : 0/0
 10211 ;;		Unchanged: 0/0
 10212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10213 ;;      Params:         0       0       0       0       0       0       0
 10214 ;;      Locals:         1       0       0       0       0       0       0
 10215 ;;      Temps:          0       0       0       0       0       0       0
 10216 ;;      Totals:         1       0       0       0       0       0       0
 10217 ;;Total ram usage:        1 bytes
 10218 ;; Hardware stack levels used:    1
 10219 ;; Hardware stack levels required when called:   10
 10220 ;; This function calls:
 10221 ;;		_DelayFor18TCY
 10222 ;; This function is called by:
 10223 ;;		_CGRamAddr0
 10224 ;;		_main
 10225 ;;		_putsXLCD
 10226 ;; This function uses a non-reentrant model
 10227 ;;
 10228                           
 10229                           	psect	text51
 10230  003A50                     __ptext51:
 10231                           	opt callstack 0
 10232  003A50                     _WriteDataXLCD:
 10233                           	opt callstack 19
 10234                           
 10235                           ;incstack = 0
 10236                           ;WriteDataXLCD@data stored from wreg
 10237  003A50  6E0E               	movwf	WriteDataXLCD@data^0,c
 10238  003A52                     
 10239                           ;xlcd.c: 623:     TRISD &= 0xf0;
 10240  003A52  0EF0               	movlw	240
 10241  003A54  1695               	andwf	149,f,c	;volatile
 10242                           
 10243                           ;xlcd.c: 624:     PORTD &= 0xf0;
 10244  003A56  0EF0               	movlw	240
 10245  003A58  1683               	andwf	131,f,c	;volatile
 10246                           
 10247                           ;xlcd.c: 625:     PORTD |= ((data >> 4)&0x0f);
 10248  003A5A  380E               	swapf	WriteDataXLCD@data^0,w,c
 10249  003A5C  0B0F               	andlw	15
 10250  003A5E  0B0F               	andlw	15
 10251  003A60  1283               	iorwf	131,f,c	;volatile
 10252  003A62                     
 10253                           ;xlcd.c: 627:     LATDbits.LATD4 = 1;
 10254  003A62  888C               	bsf	140,4,c	;volatile
 10255  003A64                     
 10256                           ;xlcd.c: 628:     LATDbits.LATD5 = 0;
 10257  003A64  9A8C               	bcf	140,5,c	;volatile
 10258  003A66                     
 10259                           ;xlcd.c: 629:     DelayFor18TCY();
 10260  003A66  EC29  F01F         	call	_DelayFor18TCY	;wreg free
 10261  003A6A                     
 10262                           ;xlcd.c: 630:     LATDbits.LATD6 = 1;
 10263  003A6A  8C8C               	bsf	140,6,c	;volatile
 10264  003A6C                     
 10265                           ;xlcd.c: 631:     DelayFor18TCY();
 10266  003A6C  EC29  F01F         	call	_DelayFor18TCY	;wreg free
 10267  003A70                     
 10268                           ;xlcd.c: 632:     LATDbits.LATD6 = 0;
 10269  003A70  9C8C               	bcf	140,6,c	;volatile
 10270                           
 10271                           ;xlcd.c: 637:     PORTD &= 0xf0;
 10272  003A72  0EF0               	movlw	240
 10273  003A74  1683               	andwf	131,f,c	;volatile
 10274                           
 10275                           ;xlcd.c: 638:     PORTD |= (data & 0x0f);
 10276  003A76  500E               	movf	WriteDataXLCD@data^0,w,c
 10277  003A78  0B0F               	andlw	15
 10278  003A7A  1283               	iorwf	131,f,c	;volatile
 10279  003A7C                     
 10280                           ;xlcd.c: 640:     DelayFor18TCY();
 10281  003A7C  EC29  F01F         	call	_DelayFor18TCY	;wreg free
 10282  003A80                     
 10283                           ;xlcd.c: 641:     LATDbits.LATD6 = 1;
 10284  003A80  8C8C               	bsf	140,6,c	;volatile
 10285  003A82                     
 10286                           ;xlcd.c: 642:     DelayFor18TCY();
 10287  003A82  EC29  F01F         	call	_DelayFor18TCY	;wreg free
 10288  003A86                     
 10289                           ;xlcd.c: 643:     LATDbits.LATD6 = 0;
 10290  003A86  9C8C               	bcf	140,6,c	;volatile
 10291                           
 10292                           ;xlcd.c: 647:     TRISD |= 0x0f;
 10293  003A88  0E0F               	movlw	15
 10294  003A8A  1295               	iorwf	149,f,c	;volatile
 10295  003A8C  0012               	return		;funcret
 10296  003A8E                     __end_of_WriteDataXLCD:
 10297                           	opt callstack 0
 10298                           
 10299 ;; *************** function _SetCGRamAddr *****************
 10300 ;; Defined at:
 10301 ;;		line 431 in file "xlcd.c"
 10302 ;; Parameters:    Size  Location     Type
 10303 ;;  CGaddr          1    wreg     unsigned char 
 10304 ;; Auto vars:     Size  Location     Type
 10305 ;;  CGaddr          1   16[COMRAM] unsigned char 
 10306 ;; Return value:  Size  Location     Type
 10307 ;;                  1    wreg      void 
 10308 ;; Registers used:
 10309 ;;		wreg, status,2, status,0, cstack
 10310 ;; Tracked objects:
 10311 ;;		On entry : 0/0
 10312 ;;		On exit  : 0/0
 10313 ;;		Unchanged: 0/0
 10314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10315 ;;      Params:         0       0       0       0       0       0       0
 10316 ;;      Locals:         1       0       0       0       0       0       0
 10317 ;;      Temps:          3       0       0       0       0       0       0
 10318 ;;      Totals:         4       0       0       0       0       0       0
 10319 ;;Total ram usage:        4 bytes
 10320 ;; Hardware stack levels used:    1
 10321 ;; Hardware stack levels required when called:   10
 10322 ;; This function calls:
 10323 ;;		_DelayFor18TCY
 10324 ;; This function is called by:
 10325 ;;		_CGRamAddr0
 10326 ;; This function uses a non-reentrant model
 10327 ;;
 10328                           
 10329                           	psect	text52
 10330  0037FA                     __ptext52:
 10331                           	opt callstack 0
 10332  0037FA                     _SetCGRamAddr:
 10333                           	opt callstack 19
 10334                           
 10335                           ;incstack = 0
 10336                           ;SetCGRamAddr@CGaddr stored from wreg
 10337  0037FA  6E11               	movwf	SetCGRamAddr@CGaddr^0,c
 10338  0037FC                     
 10339                           ;xlcd.c: 449:     TRISD &= 0xf0;
 10340  0037FC  0EF0               	movlw	240
 10341  0037FE  1695               	andwf	149,f,c	;volatile
 10342                           
 10343                           ;xlcd.c: 450:     PORTD &= 0xf0;
 10344  003800  0EF0               	movlw	240
 10345  003802  1683               	andwf	131,f,c	;volatile
 10346                           
 10347                           ;xlcd.c: 451:     PORTD |= (((CGaddr | 0b01000000) >> 4) & 0x0f);
 10348  003804  5011               	movf	SetCGRamAddr@CGaddr^0,w,c
 10349  003806  6E0E               	movwf	??_SetCGRamAddr^0,c
 10350  003808  6A0F               	clrf	(??_SetCGRamAddr+1)^0,c
 10351  00380A  0E40               	movlw	64
 10352  00380C  120E               	iorwf	??_SetCGRamAddr^0,f,c
 10353  00380E  0E00               	movlw	0
 10354  003810  120F               	iorwf	(??_SetCGRamAddr+1)^0,f,c
 10355  003812  0E04               	movlw	4
 10356  003814  6E10               	movwf	(??_SetCGRamAddr+2)^0,c
 10357  003816                     u8295:
 10358  003816  340F               	rlcf	(??_SetCGRamAddr+1)^0,w,c
 10359  003818  320F               	rrcf	(??_SetCGRamAddr+1)^0,f,c
 10360  00381A  320E               	rrcf	??_SetCGRamAddr^0,f,c
 10361  00381C  2E10               	decfsz	(??_SetCGRamAddr+2)^0,f,c
 10362  00381E  EF0B  F01C         	goto	u8295
 10363  003822  500E               	movf	??_SetCGRamAddr^0,w,c
 10364  003824  0B0F               	andlw	15
 10365  003826  1283               	iorwf	131,f,c	;volatile
 10366  003828                     
 10367                           ;xlcd.c: 453:     LATDbits.LATD5 = 0;
 10368  003828  9A8C               	bcf	140,5,c	;volatile
 10369  00382A                     
 10370                           ;xlcd.c: 454:     LATDbits.LATD4 = 0;
 10371  00382A  988C               	bcf	140,4,c	;volatile
 10372  00382C                     
 10373                           ;xlcd.c: 455:     DelayFor18TCY();
 10374  00382C  EC29  F01F         	call	_DelayFor18TCY	;wreg free
 10375  003830                     
 10376                           ;xlcd.c: 456:     LATDbits.LATD6 = 1;
 10377  003830  8C8C               	bsf	140,6,c	;volatile
 10378  003832                     
 10379                           ;xlcd.c: 457:     DelayFor18TCY();
 10380  003832  EC29  F01F         	call	_DelayFor18TCY	;wreg free
 10381  003836                     
 10382                           ;xlcd.c: 458:     LATDbits.LATD6 = 0;
 10383  003836  9C8C               	bcf	140,6,c	;volatile
 10384                           
 10385                           ;xlcd.c: 463:     PORTD &= 0xf0;
 10386  003838  0EF0               	movlw	240
 10387  00383A  1683               	andwf	131,f,c	;volatile
 10388                           
 10389                           ;xlcd.c: 464:     PORTD |= (CGaddr & 0x0f);
 10390  00383C  5011               	movf	SetCGRamAddr@CGaddr^0,w,c
 10391  00383E  0B0F               	andlw	15
 10392  003840  1283               	iorwf	131,f,c	;volatile
 10393  003842                     
 10394                           ;xlcd.c: 466:     DelayFor18TCY();
 10395  003842  EC29  F01F         	call	_DelayFor18TCY	;wreg free
 10396  003846                     
 10397                           ;xlcd.c: 467:     LATDbits.LATD6 = 1;
 10398  003846  8C8C               	bsf	140,6,c	;volatile
 10399  003848                     
 10400                           ;xlcd.c: 468:     DelayFor18TCY();
 10401  003848  EC29  F01F         	call	_DelayFor18TCY	;wreg free
 10402  00384C                     
 10403                           ;xlcd.c: 469:     LATDbits.LATD6 = 0;
 10404  00384C  9C8C               	bcf	140,6,c	;volatile
 10405                           
 10406                           ;xlcd.c: 473:     TRISD |= 0x0f;
 10407  00384E  0E0F               	movlw	15
 10408  003850  1295               	iorwf	149,f,c	;volatile
 10409  003852  0012               	return		;funcret
 10410  003854                     __end_of_SetCGRamAddr:
 10411                           	opt callstack 0
 10412                           
 10413 ;; *************** function _DelayFor18TCY *****************
 10414 ;; Defined at:
 10415 ;;		line 18 in file "xlcd.c"
 10416 ;; Parameters:    Size  Location     Type
 10417 ;;		None
 10418 ;; Auto vars:     Size  Location     Type
 10419 ;;		None
 10420 ;; Return value:  Size  Location     Type
 10421 ;;                  1    wreg      void 
 10422 ;; Registers used:
 10423 ;;		wreg
 10424 ;; Tracked objects:
 10425 ;;		On entry : 0/0
 10426 ;;		On exit  : 0/0
 10427 ;;		Unchanged: 0/0
 10428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10429 ;;      Params:         0       0       0       0       0       0       0
 10430 ;;      Locals:         0       0       0       0       0       0       0
 10431 ;;      Temps:          0       0       0       0       0       0       0
 10432 ;;      Totals:         0       0       0       0       0       0       0
 10433 ;;Total ram usage:        0 bytes
 10434 ;; Hardware stack levels used:    1
 10435 ;; Hardware stack levels required when called:    9
 10436 ;; This function calls:
 10437 ;;		Nothing
 10438 ;; This function is called by:
 10439 ;;		_OpenXLCD
 10440 ;;		_SetCGRamAddr
 10441 ;;		_WriteCmdXLCD
 10442 ;;		_WriteDataXLCD
 10443 ;;		_ReadAddrXLCD
 10444 ;;		_ReadDataXLCD
 10445 ;;		_SetDDRamAddr
 10446 ;; This function uses a non-reentrant model
 10447 ;;
 10448                           
 10449                           	psect	text53
 10450  003E52                     __ptext53:
 10451                           	opt callstack 0
 10452  003E52                     _DelayFor18TCY:
 10453                           	opt callstack 19
 10454  003E52                     
 10455                           ;xlcd.c: 20:     _delay((unsigned long)((18)*(12000000/4000000.0)));
 10456  003E52  0E12               	movlw	18
 10457  003E54                     u8907:
 10458  003E54  2EE8               	decfsz	wreg,f,c
 10459  003E56  D7FE               	bra	u8907
 10460  003E58  0012               	return		;funcret
 10461  003E5A                     __end_of_DelayFor18TCY:
 10462                           	opt callstack 0
 10463                           
 10464 ;; *************** function _BusyXLCD *****************
 10465 ;; Defined at:
 10466 ;;		line 219 in file "xlcd.c"
 10467 ;; Parameters:    Size  Location     Type
 10468 ;;		None
 10469 ;; Auto vars:     Size  Location     Type
 10470 ;;		None
 10471 ;; Return value:  Size  Location     Type
 10472 ;;                  1    wreg      unsigned char 
 10473 ;; Registers used:
 10474 ;;		wreg
 10475 ;; Tracked objects:
 10476 ;;		On entry : 0/0
 10477 ;;		On exit  : 0/0
 10478 ;;		Unchanged: 0/0
 10479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10480 ;;      Params:         0       0       0       0       0       0       0
 10481 ;;      Locals:         0       0       0       0       0       0       0
 10482 ;;      Temps:          1       0       0       0       0       0       0
 10483 ;;      Totals:         1       0       0       0       0       0       0
 10484 ;;Total ram usage:        1 bytes
 10485 ;; Hardware stack levels used:    1
 10486 ;; Hardware stack levels required when called:    9
 10487 ;; This function calls:
 10488 ;;		Nothing
 10489 ;; This function is called by:
 10490 ;;		_CGRamAddr0
 10491 ;;		_main
 10492 ;;		_OpenXLCD
 10493 ;;		_putsXLCD
 10494 ;; This function uses a non-reentrant model
 10495 ;;
 10496                           
 10497                           	psect	text54
 10498  003DCA                     __ptext54:
 10499                           	opt callstack 0
 10500  003DCA                     _BusyXLCD:
 10501                           	opt callstack 20
 10502  003DCA                     
 10503                           ;xlcd.c: 221:     _delay((unsigned long)((15)*(12000000/4000.0)));
 10504  003DCA  0E3B               	movlw	59
 10505  003DCC  6E0E               	movwf	??_BusyXLCD^0,c
 10506  003DCE  0E70               	movlw	112
 10507  003DD0                     u8917:
 10508  003DD0  2EE8               	decfsz	wreg,f,c
 10509  003DD2  D7FE               	bra	u8917
 10510  003DD4  2E0E               	decfsz	??_BusyXLCD^0,f,c
 10511  003DD6  D7FC               	bra	u8917
 10512                           
 10513                           ;xlcd.c: 223:  return 0;
 10514  003DD8  0E00               	movlw	0
 10515  003DDA  0012               	return		;funcret
 10516  003DDC                     __end_of_BusyXLCD:
 10517                           	opt callstack 0
 10518                           
 10519 ;; *************** function _INTERRUPT_InterruptManagerLow *****************
 10520 ;; Defined at:
 10521 ;;		line 94 in file "mcc_generated_files/interrupt_manager.c"
 10522 ;; Parameters:    Size  Location     Type
 10523 ;;		None
 10524 ;; Auto vars:     Size  Location     Type
 10525 ;;		None
 10526 ;; Return value:  Size  Location     Type
 10527 ;;                  1    wreg      void 
 10528 ;; Registers used:
 10529 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 10530 ;; Tracked objects:
 10531 ;;		On entry : 0/0
 10532 ;;		On exit  : 0/0
 10533 ;;		Unchanged: 0/0
 10534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10535 ;;      Params:         0       0       0       0       0       0       0
 10536 ;;      Locals:         0       0       0       0       0       0       0
 10537 ;;      Temps:          5       0       0       0       0       0       0
 10538 ;;      Totals:         5       0       0       0       0       0       0
 10539 ;;Total ram usage:        5 bytes
 10540 ;; Hardware stack levels used:    1
 10541 ;; Hardware stack levels required when called:    8
 10542 ;; This function calls:
 10543 ;;		_INT1_ISR
 10544 ;; This function is called by:
 10545 ;;		Interrupt level 1
 10546 ;; This function uses a non-reentrant model
 10547 ;;
 10548                           
 10549                           	psect	intcodelo
 10550  000018                     __pintcodelo:
 10551                           	opt callstack 0
 10552  000018                     _INTERRUPT_InterruptManagerLow:
 10553                           	opt callstack 14
 10554                           
 10555                           ;incstack = 0
 10556  000018  8051               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
 10557  00001A  CFD8 F009          	movff	status,??_INTERRUPT_InterruptManagerLow
 10558  00001E  CFE8 F00A          	movff	wreg,??_INTERRUPT_InterruptManagerLow+1
 10559  000022  CFE0 F00B          	movff	bsr,??_INTERRUPT_InterruptManagerLow+2
 10560  000026  CFFA F00C          	movff	pclath,??_INTERRUPT_InterruptManagerLow+3
 10561  00002A  CFFB F00D          	movff	pclatu,??_INTERRUPT_InterruptManagerLow+4
 10562  00002E                     
 10563                           ;mcc_generated_files/interrupt_manager.c: 97:     if(INTCON3bits.INT1IE == 1 && INTCON3b
      +                          its.INT1IF == 1)
 10564  00002E  A6F0               	btfss	240,3,c	;volatile
 10565  000030  EF1C  F000         	goto	i1u577_21
 10566  000034  EF1E  F000         	goto	i1u577_20
 10567  000038                     i1u577_21:
 10568  000038  EF27  F000         	goto	i1l156
 10569  00003C                     i1u577_20:
 10570  00003C  A0F0               	btfss	240,0,c	;volatile
 10571  00003E  EF23  F000         	goto	i1u578_21
 10572  000042  EF25  F000         	goto	i1u578_20
 10573  000046                     i1u578_21:
 10574  000046  EF27  F000         	goto	i1l156
 10575  00004A                     i1u578_20:
 10576  00004A                     
 10577                           ;mcc_generated_files/interrupt_manager.c: 98:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 99:         INT1_ISR();
 10578  00004A  EC2D  F01F         	call	_INT1_ISR	;wreg free
 10579  00004E                     i1l156:
 10580  00004E  C00D  FFFB         	movff	??_INTERRUPT_InterruptManagerLow+4,pclatu
 10581  000052  C00C  FFFA         	movff	??_INTERRUPT_InterruptManagerLow+3,pclath
 10582  000056  C00B  FFE0         	movff	??_INTERRUPT_InterruptManagerLow+2,bsr
 10583  00005A  C00A  FFE8         	movff	??_INTERRUPT_InterruptManagerLow+1,wreg
 10584  00005E  C009  FFD8         	movff	??_INTERRUPT_InterruptManagerLow,status
 10585  000062  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
 10586  000064  0010               	retfie	
 10587  000066                     __end_of_INTERRUPT_InterruptManagerLow:
 10588                           	opt callstack 0
 10589                           
 10590 ;; *************** function _INT1_ISR *****************
 10591 ;; Defined at:
 10592 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 10593 ;; Parameters:    Size  Location     Type
 10594 ;;		None
 10595 ;; Auto vars:     Size  Location     Type
 10596 ;;		None
 10597 ;; Return value:  Size  Location     Type
 10598 ;;                  1    wreg      void 
 10599 ;; Registers used:
 10600 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 10601 ;; Tracked objects:
 10602 ;;		On entry : 0/0
 10603 ;;		On exit  : 0/0
 10604 ;;		Unchanged: 0/0
 10605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10606 ;;      Params:         0       0       0       0       0       0       0
 10607 ;;      Locals:         0       0       0       0       0       0       0
 10608 ;;      Temps:          0       0       0       0       0       0       0
 10609 ;;      Totals:         0       0       0       0       0       0       0
 10610 ;;Total ram usage:        0 bytes
 10611 ;; Hardware stack levels used:    1
 10612 ;; Hardware stack levels required when called:    7
 10613 ;; This function calls:
 10614 ;;		_INT1_CallBack
 10615 ;; This function is called by:
 10616 ;;		_INTERRUPT_InterruptManagerLow
 10617 ;; This function uses a non-reentrant model
 10618 ;;
 10619                           
 10620                           	psect	text56
 10621  003E5A                     __ptext56:
 10622                           	opt callstack 0
 10623  003E5A                     _INT1_ISR:
 10624                           	opt callstack 14
 10625  003E5A                     
 10626                           ;mcc_generated_files/ext_int.c: 61:     (INTCON3bits.INT1IF = 0);
 10627  003E5A  90F0               	bcf	240,0,c	;volatile
 10628  003E5C                     
 10629                           ;mcc_generated_files/ext_int.c: 64:     INT1_CallBack();
 10630  003E5C  EC0A  F01E         	call	_INT1_CallBack	;wreg free
 10631  003E60  0012               	return		;funcret
 10632  003E62                     __end_of_INT1_ISR:
 10633                           	opt callstack 0
 10634                           
 10635 ;; *************** function _INT1_CallBack *****************
 10636 ;; Defined at:
 10637 ;;		line 68 in file "mcc_generated_files/ext_int.c"
 10638 ;; Parameters:    Size  Location     Type
 10639 ;;		None
 10640 ;; Auto vars:     Size  Location     Type
 10641 ;;		None
 10642 ;; Return value:  Size  Location     Type
 10643 ;;                  1    wreg      void 
 10644 ;; Registers used:
 10645 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 10646 ;; Tracked objects:
 10647 ;;		On entry : 0/0
 10648 ;;		On exit  : 0/0
 10649 ;;		Unchanged: 0/0
 10650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10651 ;;      Params:         0       0       0       0       0       0       0
 10652 ;;      Locals:         0       0       0       0       0       0       0
 10653 ;;      Temps:          0       0       0       0       0       0       0
 10654 ;;      Totals:         0       0       0       0       0       0       0
 10655 ;;Total ram usage:        0 bytes
 10656 ;; Hardware stack levels used:    1
 10657 ;; Hardware stack levels required when called:    6
 10658 ;; This function calls:
 10659 ;;		Absolute function
 10660 ;;		_INT1_DefaultInterruptHandler
 10661 ;;		_start
 10662 ;; This function is called by:
 10663 ;;		_INT1_ISR
 10664 ;; This function uses a non-reentrant model
 10665 ;;
 10666                           
 10667                           	psect	text57
 10668  003C14                     __ptext57:
 10669                           	opt callstack 0
 10670  003C14                     _INT1_CallBack:
 10671                           	opt callstack 14
 10672  003C14                     
 10673                           ;mcc_generated_files/ext_int.c: 71:     if(INT1_InterruptHandler)
 10674  003C14  0101               	movlb	1	; () banked
 10675  003C16  51BD               	movf	_INT1_InterruptHandler& (0+255),w,b
 10676  003C18  11BE               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 10677  003C1A  B4D8               	btfsc	status,2,c
 10678  003C1C  EF12  F01E         	goto	i1u534_21
 10679  003C20  EF14  F01E         	goto	i1u534_20
 10680  003C24                     i1u534_21:
 10681  003C24  EF21  F01E         	goto	i1l106
 10682  003C28                     i1u534_20:
 10683  003C28                     
 10684                           ; BSR set to: 1
 10685                           ;mcc_generated_files/ext_int.c: 72:     {;mcc_generated_files/ext_int.c: 73:         INT
      +                          1_InterruptHandler();
 10686  003C28  D802               	call	i1u535_28
 10687  003C2A  EF21  F01E         	goto	i1u535_29
 10688  003C2E                     i1u535_28:
 10689  003C2E  0005               	push	
 10690  003C30  6EFA               	movwf	pclath,c
 10691  003C32  51BD               	movf	_INT1_InterruptHandler& (0+255),w,b
 10692  003C34  6EFD               	movwf	tosl,c
 10693  003C36  51BE               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 10694  003C38  6EFE               	movwf	tosh,c
 10695  003C3A  50F8               	movf	tblptru,w,c
 10696  003C3C  6EFF               	movwf	tosu,c
 10697  003C3E  50FA               	movf	pclath,w,c
 10698  003C40  0012               	return		;indir
 10699  003C42                     i1u535_29:
 10700  003C42                     i1l106:
 10701  003C42  0012               	return		;funcret
 10702  003C44                     __end_of_INT1_CallBack:
 10703                           	opt callstack 0
 10704                           
 10705 ;; *************** function _INT1_DefaultInterruptHandler *****************
 10706 ;; Defined at:
 10707 ;;		line 81 in file "mcc_generated_files/ext_int.c"
 10708 ;; Parameters:    Size  Location     Type
 10709 ;;		None
 10710 ;; Auto vars:     Size  Location     Type
 10711 ;;		None
 10712 ;; Return value:  Size  Location     Type
 10713 ;;                  1    wreg      void 
 10714 ;; Registers used:
 10715 ;;		None
 10716 ;; Tracked objects:
 10717 ;;		On entry : 0/0
 10718 ;;		On exit  : 0/0
 10719 ;;		Unchanged: 0/0
 10720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10721 ;;      Params:         0       0       0       0       0       0       0
 10722 ;;      Locals:         0       0       0       0       0       0       0
 10723 ;;      Temps:          0       0       0       0       0       0       0
 10724 ;;      Totals:         0       0       0       0       0       0       0
 10725 ;;Total ram usage:        0 bytes
 10726 ;; Hardware stack levels used:    1
 10727 ;; Hardware stack levels required when called:    5
 10728 ;; This function calls:
 10729 ;;		Nothing
 10730 ;; This function is called by:
 10731 ;;		_EXT_INT_Initialize
 10732 ;;		_INT1_CallBack
 10733 ;; This function uses a non-reentrant model
 10734 ;;
 10735                           
 10736                           	psect	text58
 10737  003E82                     __ptext58:
 10738                           	opt callstack 0
 10739  003E82                     _INT1_DefaultInterruptHandler:
 10740                           	opt callstack 14
 10741  003E82  0012               	return		;funcret
 10742  003E84                     __end_of_INT1_DefaultInterruptHandler:
 10743                           	opt callstack 0
 10744                           
 10745 ;; *************** function _start *****************
 10746 ;; Defined at:
 10747 ;;		line 81 in file "main.c"
 10748 ;; Parameters:    Size  Location     Type
 10749 ;;		None
 10750 ;; Auto vars:     Size  Location     Type
 10751 ;;		None
 10752 ;; Return value:  Size  Location     Type
 10753 ;;                  1    wreg      void 
 10754 ;; Registers used:
 10755 ;;		wreg, status,2, status,0
 10756 ;; Tracked objects:
 10757 ;;		On entry : 0/0
 10758 ;;		On exit  : 0/0
 10759 ;;		Unchanged: 0/0
 10760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10761 ;;      Params:         0       0       0       0       0       0       0
 10762 ;;      Locals:         0       0       0       0       0       0       0
 10763 ;;      Temps:          0       0       0       0       0       0       0
 10764 ;;      Totals:         0       0       0       0       0       0       0
 10765 ;;Total ram usage:        0 bytes
 10766 ;; Hardware stack levels used:    1
 10767 ;; Hardware stack levels required when called:    5
 10768 ;; This function calls:
 10769 ;;		Nothing
 10770 ;; This function is called by:
 10771 ;;		_main
 10772 ;;		_INT1_CallBack
 10773 ;; This function uses a non-reentrant model
 10774 ;;
 10775                           
 10776                           	psect	text59
 10777  003BE0                     __ptext59:
 10778                           	opt callstack 0
 10779  003BE0                     _start:
 10780                           	opt callstack 14
 10781  003BE0                     
 10782                           ;main.c: 83:         if (start_flag == 1) {
 10783  003BE0  0100               	movlb	0	; () banked
 10784  003BE2  05D5               	decf	_start_flag& (0+255),w,b	;volatile
 10785  003BE4  A4D8               	btfss	status,2,c
 10786  003BE6  EFF7  F01D         	goto	i1u516_21
 10787  003BEA  EFF9  F01D         	goto	i1u516_20
 10788  003BEE                     i1u516_21:
 10789  003BEE  EFFD  F01D         	goto	i1l4718
 10790  003BF2                     i1u516_20:
 10791  003BF2                     
 10792                           ; BSR set to: 0
 10793                           ;main.c: 84:             start_flag = 0;
 10794  003BF2  0E00               	movlw	0
 10795  003BF4  6FD5               	movwf	_start_flag& (0+255),b	;volatile
 10796                           
 10797                           ;main.c: 85:         } else if (start_flag == 0) {
 10798  003BF6  EF07  F01E         	goto	i1l333
 10799  003BFA                     i1l4718:
 10800                           
 10801                           ; BSR set to: 0
 10802  003BFA  51D5               	movf	_start_flag& (0+255),w,b	;volatile
 10803  003BFC  A4D8               	btfss	status,2,c
 10804  003BFE  EF03  F01E         	goto	i1u517_21
 10805  003C02  EF05  F01E         	goto	i1u517_20
 10806  003C06                     i1u517_21:
 10807  003C06  EF07  F01E         	goto	i1l333
 10808  003C0A                     i1u517_20:
 10809  003C0A                     
 10810                           ; BSR set to: 0
 10811                           ;main.c: 86:             start_flag = 1;
 10812  003C0A  0E01               	movlw	1
 10813  003C0C  6FD5               	movwf	_start_flag& (0+255),b	;volatile
 10814  003C0E                     i1l333:
 10815                           
 10816                           ; BSR set to: 0
 10817                           ;main.c: 88:         write_flag = 1;
 10818  003C0E  0E01               	movlw	1
 10819  003C10  6FD4               	movwf	_write_flag& (0+255),b	;volatile
 10820  003C12                     
 10821                           ; BSR set to: 0
 10822  003C12  0012               	return		;funcret
 10823  003C14                     __end_of_start:
 10824                           	opt callstack 0
 10825                           
 10826 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
 10827 ;; Defined at:
 10828 ;;		line 73 in file "mcc_generated_files/interrupt_manager.c"
 10829 ;; Parameters:    Size  Location     Type
 10830 ;;		None
 10831 ;; Auto vars:     Size  Location     Type
 10832 ;;		None
 10833 ;; Return value:  Size  Location     Type
 10834 ;;                  1    wreg      void 
 10835 ;; Registers used:
 10836 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 10837 ;; Tracked objects:
 10838 ;;		On entry : 0/0
 10839 ;;		On exit  : 0/0
 10840 ;;		Unchanged: 0/0
 10841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10842 ;;      Params:         0       0       0       0       0       0       0
 10843 ;;      Locals:         0       0       0       0       0       0       0
 10844 ;;      Temps:          2       0       0       0       0       0       0
 10845 ;;      Totals:         2       0       0       0       0       0       0
 10846 ;;Total ram usage:        2 bytes
 10847 ;; Hardware stack levels used:    1
 10848 ;; Hardware stack levels required when called:    4
 10849 ;; This function calls:
 10850 ;;		_ADC_ISR
 10851 ;;		_INT0_ISR
 10852 ;;		_TMR1_ISR
 10853 ;; This function is called by:
 10854 ;;		Interrupt level 2
 10855 ;; This function uses a non-reentrant model
 10856 ;;
 10857                           
 10858                           	psect	intcode
 10859  000008                     __pintcode:
 10860                           	opt callstack 0
 10861  000008                     _INTERRUPT_InterruptManagerHigh:
 10862                           	opt callstack 14
 10863                           
 10864                           ; BSR set to: 0
 10865                           ;incstack = 0
 10866  000008  8251               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 10867  00000A  EFF5  F01A         	goto	int_func
 10868                           
 10869                           	psect	intcode_body
 10870  0035EA                     __pintcode_body:
 10871                           	opt callstack 14
 10872  0035EA                     int_func:
 10873                           	opt callstack 14
 10874  0035EA  CFFA F007          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
 10875  0035EE  CFFB F008          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
 10876  0035F2                     
 10877                           ;mcc_generated_files/interrupt_manager.c: 76:     if(PIE1bits.ADIE == 1 && PIR1bits.ADIF
      +                           == 1)
 10878  0035F2  AC9D               	btfss	157,6,c	;volatile
 10879  0035F4  EFFE  F01A         	goto	i2u571_41
 10880  0035F8  EF00  F01B         	goto	i2u571_40
 10881  0035FC                     i2u571_41:
 10882  0035FC  EF0B  F01B         	goto	i2l143
 10883  003600                     i2u571_40:
 10884  003600  AC9E               	btfss	158,6,c	;volatile
 10885  003602  EF05  F01B         	goto	i2u572_41
 10886  003606  EF07  F01B         	goto	i2u572_40
 10887  00360A                     i2u572_41:
 10888  00360A  EF0B  F01B         	goto	i2l143
 10889  00360E                     i2u572_40:
 10890  00360E                     
 10891                           ;mcc_generated_files/interrupt_manager.c: 77:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 78:         ADC_ISR();
 10892  00360E  ECC1  F01E         	call	_ADC_ISR	;wreg free
 10893                           
 10894                           ;mcc_generated_files/interrupt_manager.c: 79:     }
 10895  003612  EF2F  F01B         	goto	i2l149
 10896  003616                     i2l143:
 10897  003616  A8F2               	btfss	242,4,c	;volatile
 10898  003618  EF10  F01B         	goto	i2u573_41
 10899  00361C  EF12  F01B         	goto	i2u573_40
 10900  003620                     i2u573_41:
 10901  003620  EF1D  F01B         	goto	i2l145
 10902  003624                     i2u573_40:
 10903  003624  A2F2               	btfss	242,1,c	;volatile
 10904  003626  EF17  F01B         	goto	i2u574_41
 10905  00362A  EF19  F01B         	goto	i2u574_40
 10906  00362E                     i2u574_41:
 10907  00362E  EF1D  F01B         	goto	i2l145
 10908  003632                     i2u574_40:
 10909  003632                     
 10910                           ;mcc_generated_files/interrupt_manager.c: 81:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 82:         INT0_ISR();
 10911  003632  EC31  F01F         	call	_INT0_ISR	;wreg free
 10912                           
 10913                           ;mcc_generated_files/interrupt_manager.c: 83:     }
 10914  003636  EF2F  F01B         	goto	i2l149
 10915  00363A                     i2l145:
 10916  00363A  A09D               	btfss	157,0,c	;volatile
 10917  00363C  EF22  F01B         	goto	i2u575_41
 10918  003640  EF24  F01B         	goto	i2u575_40
 10919  003644                     i2u575_41:
 10920  003644  EF2F  F01B         	goto	i2l146
 10921  003648                     i2u575_40:
 10922  003648  A09E               	btfss	158,0,c	;volatile
 10923  00364A  EF29  F01B         	goto	i2u576_41
 10924  00364E  EF2B  F01B         	goto	i2u576_40
 10925  003652                     i2u576_41:
 10926  003652  EF2F  F01B         	goto	i2l146
 10927  003656                     i2u576_40:
 10928  003656                     
 10929                           ;mcc_generated_files/interrupt_manager.c: 85:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 86:         TMR1_ISR();
 10930  003656  EC47  F01D         	call	_TMR1_ISR	;wreg free
 10931                           
 10932                           ;mcc_generated_files/interrupt_manager.c: 87:     }
 10933  00365A  EF2F  F01B         	goto	i2l149
 10934  00365E                     i2l146:
 10935  00365E                     i2l149:
 10936  00365E  C008  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
 10937  003662  C007  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
 10938  003666  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10939  003668  0011               	retfie		f
 10940  00366A                     __end_of_INTERRUPT_InterruptManagerHigh:
 10941                           	opt callstack 0
 10942                           
 10943 ;; *************** function _TMR1_ISR *****************
 10944 ;; Defined at:
 10945 ;;		line 158 in file "mcc_generated_files/tmr1.c"
 10946 ;; Parameters:    Size  Location     Type
 10947 ;;		None
 10948 ;; Auto vars:     Size  Location     Type
 10949 ;;		None
 10950 ;; Return value:  Size  Location     Type
 10951 ;;                  1    wreg      void 
 10952 ;; Registers used:
 10953 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 10954 ;; Tracked objects:
 10955 ;;		On entry : 0/0
 10956 ;;		On exit  : 0/0
 10957 ;;		Unchanged: 0/0
 10958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10959 ;;      Params:         0       0       0       0       0       0       0
 10960 ;;      Locals:         0       0       0       0       0       0       0
 10961 ;;      Temps:          0       0       0       0       0       0       0
 10962 ;;      Totals:         0       0       0       0       0       0       0
 10963 ;;Total ram usage:        0 bytes
 10964 ;; Hardware stack levels used:    1
 10965 ;; Hardware stack levels required when called:    2
 10966 ;; This function calls:
 10967 ;;		Absolute function
 10968 ;;		_TMR1_DefaultInterruptHandler
 10969 ;;		_TMR1_WriteTimer
 10970 ;;		_convert_timer
 10971 ;; This function is called by:
 10972 ;;		_INTERRUPT_InterruptManagerHigh
 10973 ;; This function uses a non-reentrant model
 10974 ;;
 10975                           
 10976                           	psect	text61
 10977  003A8E                     __ptext61:
 10978                           	opt callstack 0
 10979  003A8E                     _TMR1_ISR:
 10980                           	opt callstack 15
 10981  003A8E                     
 10982                           ;mcc_generated_files/tmr1.c: 162:     PIR1bits.TMR1IF = 0;
 10983  003A8E  909E               	bcf	158,0,c	;volatile
 10984  003A90                     
 10985                           ;mcc_generated_files/tmr1.c: 163:     TMR1_WriteTimer(timer1ReloadVal);
 10986  003A90  C04F  F001         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
 10987  003A94  C050  F002         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
 10988  003A98  EC64  F01E         	call	_TMR1_WriteTimer	;wreg free
 10989  003A9C                     
 10990                           ;mcc_generated_files/tmr1.c: 165:     if(TMR1_InterruptHandler)
 10991  003A9C  0101               	movlb	1	; () banked
 10992  003A9E  51BB               	movf	_TMR1_InterruptHandler& (0+255),w,b
 10993  003AA0  11BC               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 10994  003AA2  B4D8               	btfsc	status,2,c
 10995  003AA4  EF56  F01D         	goto	i2u539_41
 10996  003AA8  EF58  F01D         	goto	i2u539_40
 10997  003AAC                     i2u539_41:
 10998  003AAC  EF65  F01D         	goto	i2l270
 10999  003AB0                     i2u539_40:
 11000  003AB0                     
 11001                           ; BSR set to: 1
 11002                           ;mcc_generated_files/tmr1.c: 166:     {;mcc_generated_files/tmr1.c: 167:         TMR1_In
      +                          terruptHandler();
 11003  003AB0  D802               	call	i2u540_48
 11004  003AB2  EF65  F01D         	goto	i2u540_49
 11005  003AB6                     i2u540_48:
 11006  003AB6  0005               	push	
 11007  003AB8  6EFA               	movwf	pclath,c
 11008  003ABA  51BB               	movf	_TMR1_InterruptHandler& (0+255),w,b
 11009  003ABC  6EFD               	movwf	tosl,c
 11010  003ABE  51BC               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 11011  003AC0  6EFE               	movwf	tosh,c
 11012  003AC2  50F8               	movf	tblptru,w,c
 11013  003AC4  6EFF               	movwf	tosu,c
 11014  003AC6  50FA               	movf	pclath,w,c
 11015  003AC8  0012               	return		;indir
 11016  003ACA                     i2u540_49:
 11017  003ACA                     i2l270:
 11018  003ACA  0012               	return		;funcret
 11019  003ACC                     __end_of_TMR1_ISR:
 11020                           	opt callstack 0
 11021                           
 11022 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 11023 ;; Defined at:
 11024 ;;		line 176 in file "mcc_generated_files/tmr1.c"
 11025 ;; Parameters:    Size  Location     Type
 11026 ;;		None
 11027 ;; Auto vars:     Size  Location     Type
 11028 ;;		None
 11029 ;; Return value:  Size  Location     Type
 11030 ;;                  1    wreg      void 
 11031 ;; Registers used:
 11032 ;;		None
 11033 ;; Tracked objects:
 11034 ;;		On entry : 0/0
 11035 ;;		On exit  : 0/0
 11036 ;;		Unchanged: 0/0
 11037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11038 ;;      Params:         0       0       0       0       0       0       0
 11039 ;;      Locals:         0       0       0       0       0       0       0
 11040 ;;      Temps:          0       0       0       0       0       0       0
 11041 ;;      Totals:         0       0       0       0       0       0       0
 11042 ;;Total ram usage:        0 bytes
 11043 ;; Hardware stack levels used:    1
 11044 ;; This function calls:
 11045 ;;		Nothing
 11046 ;; This function is called by:
 11047 ;;		_TMR1_Initialize
 11048 ;;		_TMR1_ISR
 11049 ;; This function uses a non-reentrant model
 11050 ;;
 11051                           
 11052                           	psect	text62
 11053  003E84                     __ptext62:
 11054                           	opt callstack 0
 11055  003E84                     _TMR1_DefaultInterruptHandler:
 11056                           	opt callstack 16
 11057  003E84  0012               	return		;funcret
 11058  003E86                     __end_of_TMR1_DefaultInterruptHandler:
 11059                           	opt callstack 0
 11060                           
 11061 ;; *************** function _convert_timer *****************
 11062 ;; Defined at:
 11063 ;;		line 92 in file "main.c"
 11064 ;; Parameters:    Size  Location     Type
 11065 ;;		None
 11066 ;; Auto vars:     Size  Location     Type
 11067 ;;		None
 11068 ;; Return value:  Size  Location     Type
 11069 ;;                  1    wreg      void 
 11070 ;; Registers used:
 11071 ;;		cstack
 11072 ;; Tracked objects:
 11073 ;;		On entry : 0/0
 11074 ;;		On exit  : 0/0
 11075 ;;		Unchanged: 0/0
 11076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11077 ;;      Params:         0       0       0       0       0       0       0
 11078 ;;      Locals:         0       0       0       0       0       0       0
 11079 ;;      Temps:          0       0       0       0       0       0       0
 11080 ;;      Totals:         0       0       0       0       0       0       0
 11081 ;;Total ram usage:        0 bytes
 11082 ;; Hardware stack levels used:    1
 11083 ;; Hardware stack levels required when called:    1
 11084 ;; This function calls:
 11085 ;;		_ADC_StartConversion
 11086 ;; This function is called by:
 11087 ;;		_main
 11088 ;;		_TMR1_ISR
 11089 ;; This function uses a non-reentrant model
 11090 ;;
 11091                           
 11092                           	psect	text63
 11093  003E6A                     __ptext63:
 11094                           	opt callstack 0
 11095  003E6A                     _convert_timer:
 11096                           	opt callstack 15
 11097  003E6A                     
 11098                           ;main.c: 94:     ADC_StartConversion();
 11099  003E6A  EC3A  F01F         	call	_ADC_StartConversion	;wreg free
 11100  003E6E  0012               	return		;funcret
 11101  003E70                     __end_of_convert_timer:
 11102                           	opt callstack 0
 11103                           
 11104 ;; *************** function _ADC_StartConversion *****************
 11105 ;; Defined at:
 11106 ;;		line 92 in file "mcc_generated_files/adc.c"
 11107 ;; Parameters:    Size  Location     Type
 11108 ;;		None
 11109 ;; Auto vars:     Size  Location     Type
 11110 ;;		None
 11111 ;; Return value:  Size  Location     Type
 11112 ;;                  1    wreg      void 
 11113 ;; Registers used:
 11114 ;;		None
 11115 ;; Tracked objects:
 11116 ;;		On entry : 0/0
 11117 ;;		On exit  : 0/0
 11118 ;;		Unchanged: 0/0
 11119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11120 ;;      Params:         0       0       0       0       0       0       0
 11121 ;;      Locals:         0       0       0       0       0       0       0
 11122 ;;      Temps:          0       0       0       0       0       0       0
 11123 ;;      Totals:         0       0       0       0       0       0       0
 11124 ;;Total ram usage:        0 bytes
 11125 ;; Hardware stack levels used:    1
 11126 ;; This function calls:
 11127 ;;		Nothing
 11128 ;; This function is called by:
 11129 ;;		_convert_timer
 11130 ;; This function uses a non-reentrant model
 11131 ;;
 11132                           
 11133                           	psect	text64
 11134  003E74                     __ptext64:
 11135                           	opt callstack 0
 11136  003E74                     _ADC_StartConversion:
 11137                           	opt callstack 15
 11138  003E74                     
 11139                           ;mcc_generated_files/adc.c: 95:     ADCON0bits.GO_nDONE = 1;
 11140  003E74  82C2               	bsf	194,1,c	;volatile
 11141  003E76  0012               	return		;funcret
 11142  003E78                     __end_of_ADC_StartConversion:
 11143                           	opt callstack 0
 11144                           
 11145 ;; *************** function _TMR1_WriteTimer *****************
 11146 ;; Defined at:
 11147 ;;		line 121 in file "mcc_generated_files/tmr1.c"
 11148 ;; Parameters:    Size  Location     Type
 11149 ;;  timerVal        2    0[COMRAM] unsigned short 
 11150 ;; Auto vars:     Size  Location     Type
 11151 ;;		None
 11152 ;; Return value:  Size  Location     Type
 11153 ;;                  1    wreg      void 
 11154 ;; Registers used:
 11155 ;;		wreg, status,2
 11156 ;; Tracked objects:
 11157 ;;		On entry : 0/0
 11158 ;;		On exit  : 0/0
 11159 ;;		Unchanged: 0/0
 11160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11161 ;;      Params:         2       0       0       0       0       0       0
 11162 ;;      Locals:         0       0       0       0       0       0       0
 11163 ;;      Temps:          0       0       0       0       0       0       0
 11164 ;;      Totals:         2       0       0       0       0       0       0
 11165 ;;Total ram usage:        2 bytes
 11166 ;; Hardware stack levels used:    1
 11167 ;; This function calls:
 11168 ;;		Nothing
 11169 ;; This function is called by:
 11170 ;;		_TMR1_ISR
 11171 ;;		_TMR1_Reload
 11172 ;; This function uses a non-reentrant model
 11173 ;;
 11174                           
 11175                           	psect	text65
 11176  003CC8                     __ptext65:
 11177                           	opt callstack 0
 11178  003CC8                     _TMR1_WriteTimer:
 11179                           	opt callstack 16
 11180  003CC8                     
 11181                           ;mcc_generated_files/tmr1.c: 121: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 122: {;mcc_generated_files/tmr1.c: 123:     if (T1CONbits.T1SYNC == 1)
 11182  003CC8  A4CD               	btfss	205,2,c	;volatile
 11183  003CCA  EF69  F01E         	goto	i2u536_41
 11184  003CCE  EF6B  F01E         	goto	i2u536_40
 11185  003CD2                     i2u536_41:
 11186  003CD2  EF73  F01E         	goto	i2l4886
 11187  003CD6                     i2u536_40:
 11188  003CD6                     
 11189                           ;mcc_generated_files/tmr1.c: 124:     {;mcc_generated_files/tmr1.c: 126:         T1CONbi
      +                          ts.TMR1ON = 0;
 11190  003CD6  90CD               	bcf	205,0,c	;volatile
 11191  003CD8                     
 11192                           ;mcc_generated_files/tmr1.c: 129:         TMR1H = (timerVal >> 8);
 11193  003CD8  5002               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
 11194  003CDA  6ECF               	movwf	207,c	;volatile
 11195  003CDC                     
 11196                           ;mcc_generated_files/tmr1.c: 130:         TMR1L = (uint8_t) timerVal;
 11197  003CDC  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 11198  003CE0                     
 11199                           ;mcc_generated_files/tmr1.c: 133:         T1CONbits.TMR1ON =1;
 11200  003CE0  80CD               	bsf	205,0,c	;volatile
 11201                           
 11202                           ;mcc_generated_files/tmr1.c: 134:     }
 11203  003CE2  EF77  F01E         	goto	i2l257
 11204  003CE6                     i2l4886:
 11205                           
 11206                           ;mcc_generated_files/tmr1.c: 136:     {;mcc_generated_files/tmr1.c: 138:         TMR1H =
      +                           (timerVal >> 8);
 11207  003CE6  5002               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
 11208  003CE8  6ECF               	movwf	207,c	;volatile
 11209  003CEA                     
 11210                           ;mcc_generated_files/tmr1.c: 139:         TMR1L = (uint8_t) timerVal;
 11211  003CEA  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 11212  003CEE                     i2l257:
 11213  003CEE  0012               	return		;funcret
 11214  003CF0                     __end_of_TMR1_WriteTimer:
 11215                           	opt callstack 0
 11216                           
 11217 ;; *************** function _INT0_ISR *****************
 11218 ;; Defined at:
 11219 ;;		line 33 in file "mcc_generated_files/ext_int.c"
 11220 ;; Parameters:    Size  Location     Type
 11221 ;;		None
 11222 ;; Auto vars:     Size  Location     Type
 11223 ;;		None
 11224 ;; Return value:  Size  Location     Type
 11225 ;;                  1    wreg      void 
 11226 ;; Registers used:
 11227 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 11228 ;; Tracked objects:
 11229 ;;		On entry : 0/0
 11230 ;;		On exit  : 0/0
 11231 ;;		Unchanged: 0/0
 11232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11233 ;;      Params:         0       0       0       0       0       0       0
 11234 ;;      Locals:         0       0       0       0       0       0       0
 11235 ;;      Temps:          0       0       0       0       0       0       0
 11236 ;;      Totals:         0       0       0       0       0       0       0
 11237 ;;Total ram usage:        0 bytes
 11238 ;; Hardware stack levels used:    1
 11239 ;; Hardware stack levels required when called:    3
 11240 ;; This function calls:
 11241 ;;		_INT0_CallBack
 11242 ;; This function is called by:
 11243 ;;		_INTERRUPT_InterruptManagerHigh
 11244 ;; This function uses a non-reentrant model
 11245 ;;
 11246                           
 11247                           	psect	text66
 11248  003E62                     __ptext66:
 11249                           	opt callstack 0
 11250  003E62                     _INT0_ISR:
 11251                           	opt callstack 14
 11252  003E62                     
 11253                           ;mcc_generated_files/ext_int.c: 35:     (INTCONbits.INT0IF = 0);
 11254  003E62  92F2               	bcf	242,1,c	;volatile
 11255  003E64                     
 11256                           ;mcc_generated_files/ext_int.c: 38:     INT0_CallBack();
 11257  003E64  EC22  F01E         	call	_INT0_CallBack	;wreg free
 11258  003E68  0012               	return		;funcret
 11259  003E6A                     __end_of_INT0_ISR:
 11260                           	opt callstack 0
 11261                           
 11262 ;; *************** function _INT0_CallBack *****************
 11263 ;; Defined at:
 11264 ;;		line 42 in file "mcc_generated_files/ext_int.c"
 11265 ;; Parameters:    Size  Location     Type
 11266 ;;		None
 11267 ;; Auto vars:     Size  Location     Type
 11268 ;;		None
 11269 ;; Return value:  Size  Location     Type
 11270 ;;                  1    wreg      void 
 11271 ;; Registers used:
 11272 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 11273 ;; Tracked objects:
 11274 ;;		On entry : 0/0
 11275 ;;		On exit  : 0/0
 11276 ;;		Unchanged: 0/0
 11277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11278 ;;      Params:         0       0       0       0       0       0       0
 11279 ;;      Locals:         0       0       0       0       0       0       0
 11280 ;;      Temps:          0       0       0       0       0       0       0
 11281 ;;      Totals:         0       0       0       0       0       0       0
 11282 ;;Total ram usage:        0 bytes
 11283 ;; Hardware stack levels used:    1
 11284 ;; Hardware stack levels required when called:    2
 11285 ;; This function calls:
 11286 ;;		Absolute function
 11287 ;;		_INT0_DefaultInterruptHandler
 11288 ;;		_emrgencia
 11289 ;; This function is called by:
 11290 ;;		_INT0_ISR
 11291 ;; This function uses a non-reentrant model
 11292 ;;
 11293                           
 11294                           	psect	text67
 11295  003C44                     __ptext67:
 11296                           	opt callstack 0
 11297  003C44                     _INT0_CallBack:
 11298                           	opt callstack 14
 11299  003C44                     
 11300                           ;mcc_generated_files/ext_int.c: 45:     if(INT0_InterruptHandler)
 11301  003C44  0101               	movlb	1	; () banked
 11302  003C46  51BF               	movf	_INT0_InterruptHandler& (0+255),w,b
 11303  003C48  11C0               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 11304  003C4A  B4D8               	btfsc	status,2,c
 11305  003C4C  EF2A  F01E         	goto	i2u532_41
 11306  003C50  EF2C  F01E         	goto	i2u532_40
 11307  003C54                     i2u532_41:
 11308  003C54  EF39  F01E         	goto	i2l93
 11309  003C58                     i2u532_40:
 11310  003C58                     
 11311                           ; BSR set to: 1
 11312                           ;mcc_generated_files/ext_int.c: 46:     {;mcc_generated_files/ext_int.c: 47:         INT
      +                          0_InterruptHandler();
 11313  003C58  D802               	call	i2u533_48
 11314  003C5A  EF39  F01E         	goto	i2u533_49
 11315  003C5E                     i2u533_48:
 11316  003C5E  0005               	push	
 11317  003C60  6EFA               	movwf	pclath,c
 11318  003C62  51BF               	movf	_INT0_InterruptHandler& (0+255),w,b
 11319  003C64  6EFD               	movwf	tosl,c
 11320  003C66  51C0               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 11321  003C68  6EFE               	movwf	tosh,c
 11322  003C6A  50F8               	movf	tblptru,w,c
 11323  003C6C  6EFF               	movwf	tosu,c
 11324  003C6E  50FA               	movf	pclath,w,c
 11325  003C70  0012               	return		;indir
 11326  003C72                     i2u533_49:
 11327  003C72                     i2l93:
 11328  003C72  0012               	return		;funcret
 11329  003C74                     __end_of_INT0_CallBack:
 11330                           	opt callstack 0
 11331                           
 11332 ;; *************** function _INT0_DefaultInterruptHandler *****************
 11333 ;; Defined at:
 11334 ;;		line 55 in file "mcc_generated_files/ext_int.c"
 11335 ;; Parameters:    Size  Location     Type
 11336 ;;		None
 11337 ;; Auto vars:     Size  Location     Type
 11338 ;;		None
 11339 ;; Return value:  Size  Location     Type
 11340 ;;                  1    wreg      void 
 11341 ;; Registers used:
 11342 ;;		None
 11343 ;; Tracked objects:
 11344 ;;		On entry : 0/0
 11345 ;;		On exit  : 0/0
 11346 ;;		Unchanged: 0/0
 11347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11348 ;;      Params:         0       0       0       0       0       0       0
 11349 ;;      Locals:         0       0       0       0       0       0       0
 11350 ;;      Temps:          0       0       0       0       0       0       0
 11351 ;;      Totals:         0       0       0       0       0       0       0
 11352 ;;Total ram usage:        0 bytes
 11353 ;; Hardware stack levels used:    1
 11354 ;; This function calls:
 11355 ;;		Nothing
 11356 ;; This function is called by:
 11357 ;;		_EXT_INT_Initialize
 11358 ;;		_INT0_CallBack
 11359 ;; This function uses a non-reentrant model
 11360 ;;
 11361                           
 11362                           	psect	text68
 11363  003E86                     __ptext68:
 11364                           	opt callstack 0
 11365  003E86                     _INT0_DefaultInterruptHandler:
 11366                           	opt callstack 15
 11367  003E86  0012               	return		;funcret
 11368  003E88                     __end_of_INT0_DefaultInterruptHandler:
 11369                           	opt callstack 0
 11370                           
 11371 ;; *************** function _emrgencia *****************
 11372 ;; Defined at:
 11373 ;;		line 63 in file "main.c"
 11374 ;; Parameters:    Size  Location     Type
 11375 ;;		None
 11376 ;; Auto vars:     Size  Location     Type
 11377 ;;		None
 11378 ;; Return value:  Size  Location     Type
 11379 ;;                  1    wreg      void 
 11380 ;; Registers used:
 11381 ;;		wreg, status,2, cstack
 11382 ;; Tracked objects:
 11383 ;;		On entry : 0/0
 11384 ;;		On exit  : 0/0
 11385 ;;		Unchanged: 0/0
 11386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11387 ;;      Params:         0       0       0       0       0       0       0
 11388 ;;      Locals:         0       0       0       0       0       0       0
 11389 ;;      Temps:          0       0       0       0       0       0       0
 11390 ;;      Totals:         0       0       0       0       0       0       0
 11391 ;;Total ram usage:        0 bytes
 11392 ;; Hardware stack levels used:    1
 11393 ;; Hardware stack levels required when called:    1
 11394 ;; This function calls:
 11395 ;;		_TMR2_StartTimer
 11396 ;;		i2_TMR2_StopTimer
 11397 ;; This function is called by:
 11398 ;;		_main
 11399 ;;		_INT0_CallBack
 11400 ;; This function uses a non-reentrant model
 11401 ;;
 11402                           
 11403                           	psect	text69
 11404  003BAA                     __ptext69:
 11405                           	opt callstack 0
 11406  003BAA                     _emrgencia:
 11407                           	opt callstack 14
 11408  003BAA                     
 11409                           ;main.c: 64:     if (INTCON2bits.INTEDG0 == 0)
 11410  003BAA  BCF1               	btfsc	241,6,c	;volatile
 11411  003BAC  EFDA  F01D         	goto	i2u515_41
 11412  003BB0  EFDC  F01D         	goto	i2u515_40
 11413  003BB4                     i2u515_41:
 11414  003BB4  EFE6  F01D         	goto	i2l4706
 11415  003BB8                     i2u515_40:
 11416  003BB8                     
 11417                           ;main.c: 65:     {;main.c: 66:         emerg_flag = 1;
 11418  003BB8  0E01               	movlw	1
 11419  003BBA  0100               	movlb	0	; () banked
 11420  003BBC  6FD6               	movwf	_emerg_flag& (0+255),b	;volatile
 11421                           
 11422                           ;main.c: 67:         start_flag = 0;
 11423  003BBE  0E00               	movlw	0
 11424  003BC0  6FD5               	movwf	_start_flag& (0+255),b	;volatile
 11425  003BC2                     
 11426                           ; BSR set to: 0
 11427                           ;main.c: 68:         INTCON2bits.INTEDG0 = 1;
 11428  003BC2  8CF1               	bsf	241,6,c	;volatile
 11429  003BC4                     
 11430                           ; BSR set to: 0
 11431                           ;main.c: 69:         TMR2_StartTimer();
 11432  003BC4  EC3E  F01F         	call	_TMR2_StartTimer	;wreg free
 11433                           
 11434                           ;main.c: 71:     } else
 11435  003BC8  EFEC  F01D         	goto	i2l4712
 11436  003BCC                     i2l4706:
 11437                           
 11438                           ;main.c: 72:     {;main.c: 73:         emerg_flag = 0;
 11439  003BCC  0E00               	movlw	0
 11440  003BCE  0100               	movlb	0	; () banked
 11441  003BD0  6FD6               	movwf	_emerg_flag& (0+255),b	;volatile
 11442  003BD2                     
 11443                           ; BSR set to: 0
 11444                           ;main.c: 74:         INTCON2bits.INTEDG0 = 0;
 11445  003BD2  9CF1               	bcf	241,6,c	;volatile
 11446  003BD4                     
 11447                           ; BSR set to: 0
 11448                           ;main.c: 75:         TMR2_StopTimer();
 11449  003BD4  EC3C  F01F         	call	i2_TMR2_StopTimer	;wreg free
 11450  003BD8                     i2l4712:
 11451                           
 11452                           ;main.c: 77:     write_flag = 1;
 11453  003BD8  0E01               	movlw	1
 11454  003BDA  0100               	movlb	0	; () banked
 11455  003BDC  6FD4               	movwf	_write_flag& (0+255),b	;volatile
 11456  003BDE                     
 11457                           ; BSR set to: 0
 11458  003BDE  0012               	return		;funcret
 11459  003BE0                     __end_of_emrgencia:
 11460                           	opt callstack 0
 11461                           
 11462 ;; *************** function i2_TMR2_StopTimer *****************
 11463 ;; Defined at:
 11464 ;;		line 85 in file "mcc_generated_files/tmr2.c"
 11465 ;; Parameters:    Size  Location     Type
 11466 ;;		None
 11467 ;; Auto vars:     Size  Location     Type
 11468 ;;		None
 11469 ;; Return value:  Size  Location     Type
 11470 ;;                  1    wreg      void 
 11471 ;; Registers used:
 11472 ;;		None
 11473 ;; Tracked objects:
 11474 ;;		On entry : 0/0
 11475 ;;		On exit  : 0/0
 11476 ;;		Unchanged: 0/0
 11477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11478 ;;      Params:         0       0       0       0       0       0       0
 11479 ;;      Locals:         0       0       0       0       0       0       0
 11480 ;;      Temps:          0       0       0       0       0       0       0
 11481 ;;      Totals:         0       0       0       0       0       0       0
 11482 ;;Total ram usage:        0 bytes
 11483 ;; Hardware stack levels used:    1
 11484 ;; This function calls:
 11485 ;;		Nothing
 11486 ;; This function is called by:
 11487 ;;		_emrgencia
 11488 ;; This function uses a non-reentrant model
 11489 ;;
 11490                           
 11491                           	psect	text70
 11492  003E78                     __ptext70:
 11493                           	opt callstack 0
 11494  003E78                     i2_TMR2_StopTimer:
 11495                           	opt callstack 14
 11496  003E78                     
 11497                           ;mcc_generated_files/tmr2.c: 88:     T2CONbits.TMR2ON = 0;
 11498  003E78  94BA               	bcf	186,2,c	;volatile
 11499  003E7A  0012               	return		;funcret
 11500  003E7C                     __end_ofi2_TMR2_StopTimer:
 11501                           	opt callstack 0
 11502                           
 11503 ;; *************** function _TMR2_StartTimer *****************
 11504 ;; Defined at:
 11505 ;;		line 79 in file "mcc_generated_files/tmr2.c"
 11506 ;; Parameters:    Size  Location     Type
 11507 ;;		None
 11508 ;; Auto vars:     Size  Location     Type
 11509 ;;		None
 11510 ;; Return value:  Size  Location     Type
 11511 ;;                  1    wreg      void 
 11512 ;; Registers used:
 11513 ;;		None
 11514 ;; Tracked objects:
 11515 ;;		On entry : 0/0
 11516 ;;		On exit  : 0/0
 11517 ;;		Unchanged: 0/0
 11518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11519 ;;      Params:         0       0       0       0       0       0       0
 11520 ;;      Locals:         0       0       0       0       0       0       0
 11521 ;;      Temps:          0       0       0       0       0       0       0
 11522 ;;      Totals:         0       0       0       0       0       0       0
 11523 ;;Total ram usage:        0 bytes
 11524 ;; Hardware stack levels used:    1
 11525 ;; This function calls:
 11526 ;;		Nothing
 11527 ;; This function is called by:
 11528 ;;		_emrgencia
 11529 ;; This function uses a non-reentrant model
 11530 ;;
 11531                           
 11532                           	psect	text71
 11533  003E7C                     __ptext71:
 11534                           	opt callstack 0
 11535  003E7C                     _TMR2_StartTimer:
 11536                           	opt callstack 14
 11537  003E7C                     
 11538                           ;mcc_generated_files/tmr2.c: 82:     T2CONbits.TMR2ON = 1;
 11539  003E7C  84BA               	bsf	186,2,c	;volatile
 11540  003E7E  0012               	return		;funcret
 11541  003E80                     __end_of_TMR2_StartTimer:
 11542                           	opt callstack 0
 11543                           
 11544 ;; *************** function _ADC_ISR *****************
 11545 ;; Defined at:
 11546 ;;		line 136 in file "mcc_generated_files/adc.c"
 11547 ;; Parameters:    Size  Location     Type
 11548 ;;		None
 11549 ;; Auto vars:     Size  Location     Type
 11550 ;;  anval           2    4[COMRAM] unsigned short 
 11551 ;; Return value:  Size  Location     Type
 11552 ;;                  1    wreg      void 
 11553 ;; Registers used:
 11554 ;;		wreg, status,2, status,0, cstack
 11555 ;; Tracked objects:
 11556 ;;		On entry : 0/0
 11557 ;;		On exit  : 0/0
 11558 ;;		Unchanged: 0/0
 11559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11560 ;;      Params:         0       0       0       0       0       0       0
 11561 ;;      Locals:         2       0       0       0       0       0       0
 11562 ;;      Temps:          0       0       0       0       0       0       0
 11563 ;;      Totals:         2       0       0       0       0       0       0
 11564 ;;Total ram usage:        2 bytes
 11565 ;; Hardware stack levels used:    1
 11566 ;; Hardware stack levels required when called:    1
 11567 ;; This function calls:
 11568 ;;		_ADC_GetConversionResult
 11569 ;; This function is called by:
 11570 ;;		_INTERRUPT_InterruptManagerHigh
 11571 ;; This function uses a non-reentrant model
 11572 ;;
 11573                           
 11574                           	psect	text72
 11575  003D82                     __ptext72:
 11576                           	opt callstack 0
 11577  003D82                     _ADC_ISR:
 11578                           	opt callstack 16
 11579  003D82                     
 11580                           ;mcc_generated_files/adc.c: 140:     adc_result_t anval = ADC_GetConversionResult();
 11581  003D82  ECDB  F01E         	call	_ADC_GetConversionResult	;wreg free
 11582  003D86  C001  F005         	movff	?_ADC_GetConversionResult,ADC_ISR@anval
 11583  003D8A  C002  F006         	movff	?_ADC_GetConversionResult+1,ADC_ISR@anval+1
 11584  003D8E                     
 11585                           ;mcc_generated_files/adc.c: 141:     valor = anval;
 11586  003D8E  C005  F04D         	movff	ADC_ISR@anval,_valor
 11587  003D92  C006  F04E         	movff	ADC_ISR@anval+1,_valor+1
 11588  003D96                     
 11589                           ;mcc_generated_files/adc.c: 143:     PIR1bits.ADIF = 0;
 11590  003D96  9C9E               	bcf	158,6,c	;volatile
 11591  003D98                     
 11592                           ;mcc_generated_files/adc.c: 145:     adc_flag=1;
 11593  003D98  0E01               	movlw	1
 11594  003D9A  6E4C               	movwf	_adc_flag^0,c
 11595  003D9C  0012               	return		;funcret
 11596  003D9E                     __end_of_ADC_ISR:
 11597                           	opt callstack 0
 11598                           
 11599 ;; *************** function _ADC_GetConversionResult *****************
 11600 ;; Defined at:
 11601 ;;		line 105 in file "mcc_generated_files/adc.c"
 11602 ;; Parameters:    Size  Location     Type
 11603 ;;		None
 11604 ;; Auto vars:     Size  Location     Type
 11605 ;;		None
 11606 ;; Return value:  Size  Location     Type
 11607 ;;                  2    0[COMRAM] unsigned short 
 11608 ;; Registers used:
 11609 ;;		wreg, status,2, status,0
 11610 ;; Tracked objects:
 11611 ;;		On entry : 0/0
 11612 ;;		On exit  : 0/0
 11613 ;;		Unchanged: 0/0
 11614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11615 ;;      Params:         2       0       0       0       0       0       0
 11616 ;;      Locals:         0       0       0       0       0       0       0
 11617 ;;      Temps:          2       0       0       0       0       0       0
 11618 ;;      Totals:         4       0       0       0       0       0       0
 11619 ;;Total ram usage:        4 bytes
 11620 ;; Hardware stack levels used:    1
 11621 ;; This function calls:
 11622 ;;		Nothing
 11623 ;; This function is called by:
 11624 ;;		_ADC_ISR
 11625 ;; This function uses a non-reentrant model
 11626 ;;
 11627                           
 11628                           	psect	text73
 11629  003DB6                     __ptext73:
 11630                           	opt callstack 0
 11631  003DB6                     _ADC_GetConversionResult:
 11632                           	opt callstack 16
 11633  003DB6                     
 11634                           ;mcc_generated_files/adc.c: 108:      return ((adc_result_t)((ADRESH << 8) + ADRESL));
 11635  003DB6  50C4               	movf	196,w,c	;volatile
 11636  003DB8  6E04               	movwf	(??_ADC_GetConversionResult+1)^0,c
 11637  003DBA  6A03               	clrf	??_ADC_GetConversionResult^0,c
 11638  003DBC  50C3               	movf	195,w,c	;volatile
 11639  003DBE  2403               	addwf	??_ADC_GetConversionResult^0,w,c
 11640  003DC0  6E01               	movwf	?_ADC_GetConversionResult^0,c
 11641  003DC2  0E00               	movlw	0
 11642  003DC4  2004               	addwfc	(??_ADC_GetConversionResult+1)^0,w,c
 11643  003DC6  6E02               	movwf	(?_ADC_GetConversionResult+1)^0,c
 11644  003DC8  0012               	return		;funcret
 11645  003DCA                     __end_of_ADC_GetConversionResult:
 11646                           	opt callstack 0
 11647                           
 11648                           	psect	text74
 11649  000000                     __ptext74:
 11650                           	opt callstack 0
 11651  000000                     
 11652                           	psect	rparam
 11653  0000                     
 11654                           	psect	temp
 11655  000051                     btemp:
 11656                           	opt callstack 0
 11657  000051                     	ds	1
 11658  0000                     int$flags	set	btemp
 11659  0000                     wtemp8	set	btemp+1
 11660  0000                     ttemp5	set	btemp+1
 11661  0000                     ttemp6	set	btemp+4
 11662  0000                     ttemp7	set	btemp+8
 11663                           tosu	equ	0xFFF
 11664                           tosh	equ	0xFFE
 11665                           tosl	equ	0xFFD
 11666                           stkptr	equ	0xFFC
 11667                           pclatu	equ	0xFFB
 11668                           pclath	equ	0xFFA
 11669                           pcl	equ	0xFF9
 11670                           tblptru	equ	0xFF8
 11671                           tblptrh	equ	0xFF7
 11672                           tblptrl	equ	0xFF6
 11673                           tablat	equ	0xFF5
 11674                           prodh	equ	0xFF4
 11675                           prodl	equ	0xFF3
 11676                           indf0	equ	0xFEF
 11677                           postinc0	equ	0xFEE
 11678                           postdec0	equ	0xFED
 11679                           preinc0	equ	0xFEC
 11680                           plusw0	equ	0xFEB
 11681                           fsr0h	equ	0xFEA
 11682                           fsr0l	equ	0xFE9
 11683                           wreg	equ	0xFE8
 11684                           indf1	equ	0xFE7
 11685                           postinc1	equ	0xFE6
 11686                           postdec1	equ	0xFE5
 11687                           preinc1	equ	0xFE4
 11688                           plusw1	equ	0xFE3
 11689                           fsr1h	equ	0xFE2
 11690                           fsr1l	equ	0xFE1
 11691                           bsr	equ	0xFE0
 11692                           indf2	equ	0xFDF
 11693                           postinc2	equ	0xFDE
 11694                           postdec2	equ	0xFDD
 11695                           preinc2	equ	0xFDC
 11696                           plusw2	equ	0xFDB
 11697                           fsr2h	equ	0xFDA
 11698                           fsr2l	equ	0xFD9
 11699                           status	equ	0xFD8


Data Sizes:
    Strings     169
    Constant    0
    Data        42
    BSS         105
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     66      80
    BANK0           160    116     119
    BANK1           256     55     193
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_18(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_18(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_13(CODE[4]), STR_12(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_13(CODE[4]), STR_12(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_7(CODE[22]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 5
		 -> main@valor_analog(BANK1[5]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 5
		 -> main@valor_analog(BANK1[5]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1921_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 5
		 -> main@valor_analog(BANK1[5]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 5
		 -> main@valor_analog(BANK1[5]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_7(CODE[22]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_7(CODE[22]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 22
		 -> STR_7(CODE[22]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    putsXLCD@buffer	PTR unsigned char  size(2) Largest target is 31
		 -> main@valor_analog(BANK1[5]), STR_6(CODE[31]), STR_5(CODE[26]), STR_4(CODE[25]), 
		 -> STR_3(CODE[3]), STR_2(CODE[20]), STR_1(CODE[23]), main@name2(BANK1[21]), 
		 -> main@name1(BANK1[21]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> convert_timer(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> convert_timer(), TMR1_DefaultInterruptHandler(), Absolute function(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> start(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> start(), INT1_DefaultInterruptHandler(), Absolute function(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> emrgencia(), INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> emrgencia(), INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _efgtoa->___flge
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    _atoi->_isspace
    _putsXLCD->_BusyXLCD
    _putsXLCD->_WriteDataXLCD
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _EXT_INT_Initialize->_INT0_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _OpenXLCD->_BusyXLCD
    _OpenXLCD->_DelayPORXLCD
    _OpenXLCD->_DelayXLCD
    _OpenXLCD->_WriteCmdXLCD
    _CGRamAddr0->_SetCGRamAddr

Critical Paths under _INTERRUPT_InterruptManagerLow in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _INTERRUPT_InterruptManagerHigh->_ADC_ISR
    _TMR1_ISR->_TMR1_WriteTimer
    _ADC_ISR->_ADC_GetConversionResult

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                57    57      0   43709
                                            114 BANK0      2     2      0
                                              0 BANK1     55    55      0
                           _BusyXLCD
                         _CGRamAddr0
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
                           _OpenXLCD
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                     _TMR2_StopTimer
                       _WriteCmdXLCD
                      _WriteDataXLCD
                            ___flmul
                           ___xxtofl
                           _putsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   36887
                                             96 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   36383
                                             64 COMRAM     2     2      0
                                             90 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           48    42      6   35856
                                             68 BANK0     22    16      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     595
                                             13 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   29047
                                              0 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2    1142
                                             19 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     551
                                             13 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4    1037
                                             13 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3957
                                             29 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                             13 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             22 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1037
                                             13 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     669
                                             38 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     375
                                             13 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     517
                                             13 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4007
                                             52 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3442
                                             13 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     155
                                             13 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3413
                                             27 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     806
                                             52 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     770
                                             13 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2723
                                             13 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                             13 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                             13 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1515
                                             20 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                             13 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                             13 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     412
                                             13 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _putsXLCD                                             2     0      2     937
                                             14 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     566
                                             13 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _TMR2_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     633
                     _ADC_Initialize
                    _CCP5_Initialize
                   _EPWM2_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     211
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     211
                                             13 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     422
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             2     0      2     211
                                             13 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             2     0      2     211
                                             13 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EPWM2_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OpenXLCD                                             1     1      0      62
                           _BusyXLCD
                      _DelayFor18TCY
                       _DelayPORXLCD
                          _DelayXLCD
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (1) _WriteCmdXLCD                                         1     1      0      62
                                             13 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _DelayXLCD                                            1     1      0       0
                                             13 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _DelayPORXLCD                                         1     1      0       0
                                             13 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _CGRamAddr0                                           0     0      0     124
                           _BusyXLCD
                       _SetCGRamAddr
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteDataXLCD                                        1     1      0      62
                                             13 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _SetCGRamAddr                                         4     4      0      62
                                             13 COMRAM     4     4      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayFor18TCY                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BusyXLCD                                             1     1      0       0
                                             13 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManagerLow                        5     5      0       0
                                              8 COMRAM     5     5      0
                           _INT1_ISR
 ---------------------------------------------------------------------------------
 (10) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (11) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                              _start *
 ---------------------------------------------------------------------------------
 (12) _start                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManagerHigh                      2     2      0     263
                                              6 COMRAM     2     2      0
                            _ADC_ISR
                           _INT0_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (14) _TMR1_ISR                                            0     0      0     240
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                      _convert_timer *
 ---------------------------------------------------------------------------------
 (15) _convert_timer                                       0     0      0       0
                _ADC_StartConversion
 ---------------------------------------------------------------------------------
 (16) _ADC_StartConversion                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _TMR1_WriteTimer                                     2     0      2     240
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (15) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
                          _emrgencia *
 ---------------------------------------------------------------------------------
 (16) _emrgencia                                           0     0      0       0
                    _TMR2_StartTimer
                   i2_TMR2_StopTimer
 ---------------------------------------------------------------------------------
 (17) i2_TMR2_StopTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _TMR2_StartTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _ADC_ISR                                             2     2      0      23
                                              4 COMRAM     2     2      0
            _ADC_GetConversionResult
 ---------------------------------------------------------------------------------
 (15) _ADC_GetConversionResult                             4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BusyXLCD
   _CGRamAddr0
     _BusyXLCD
     _SetCGRamAddr
       _DelayFor18TCY
     _WriteDataXLCD
       _DelayFor18TCY
   _INT0_SetInterruptHandler
   _INT1_SetInterruptHandler
   _OpenXLCD
     _BusyXLCD
     _DelayFor18TCY
     _DelayPORXLCD
     _DelayXLCD
     _WriteCmdXLCD
       _DelayFor18TCY
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP5_Initialize
     _EPWM2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
   _TMR1_SetInterruptHandler
   _TMR2_StopTimer
   _WriteCmdXLCD
     _DelayFor18TCY
   _WriteDataXLCD
     _DelayFor18TCY
   ___flmul
     ___xxtofl (ARG)
   ___xxtofl
   _putsXLCD
     _BusyXLCD
     _WriteDataXLCD
       _DelayFor18TCY
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper

 _INTERRUPT_InterruptManagerLow (ROOT)
   _INT1_ISR
     _INT1_CallBack
       Absolute function(Fake) *
       _INT1_DefaultInterruptHandler *
       _start *

 _INTERRUPT_InterruptManagerHigh (ROOT)
   _ADC_ISR
     _ADC_GetConversionResult
   _INT0_ISR
     _INT0_CallBack
       Absolute function(Fake) *
       _INT0_DefaultInterruptHandler *
       _emrgencia *
         _TMR2_StartTimer
         i2_TMR2_StopTimer
   _TMR1_ISR
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _convert_timer *
       _ADC_StartConversion

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     37      C1       6       75.4%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     74      77       4       74.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     42      50       1       85.1%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     188       9        0.0%
DATA                 0      0     188      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Nov 27 10:30:53 2019

                            ___fldiv@aexp 0026                              ___fldiv@bexp 0025  
                                       _k 0108                              ___fldiv@sign 001E  
                                      l30 3E28                                        l27 3D3A  
                                      l69 3A10                                        l96 3E50  
                            ___awdiv@sign 0013                                        bsr 000FE0  
                     ___wmul@multiplicand 0010                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                               __CFG_LVP$ON 000000  
                                     l115 3D60                                       l109 3E46  
                                     l138 3E3C                                       l243 3CC6  
                                     l165 3DFA                                       l190 3DB4  
                                     l273 3E32                                       l514 3A4E  
                                     l530 3DEA                                       l610 3412  
                                     l371 306A                                       l460 3E58  
                                     l508 3852                                       l517 3A8C  
                                     l613 3454                                       l463 3E1A  
                                     l615 348E                                       l536 3E72  
                                     l633 125C                                       l490 3DDA  
                                     l466 3E0A                                       l730 1ACE  
                                     l651 0A98                                       l723 1B88  
                                     l740 3D14                                       l566 3D80  
                                     l487 2D60                                       l736 3734  
                                     l737 373C                                       l499 36DA  
                                     l677 0E30                                       l971 33CC  
                                     l984 353E                                       l999 35E8  
                            __CFG_CPB$OFF 000000                                       _PR2 000FBB  
                            __CFG_CPD$OFF 000000                ??_INT0_SetInterruptHandler 0010  
                         _timer1ReloadVal 004F                                       _pad 33CE  
                         __end_of_ADC_ISR 3D9E                     __size_of_WriteCmdXLCD 003E  
                            ___awmod@sign 0013                           _TMR2_Initialize 3DDC  
                                     tosl 000FFD                                       wreg 000FE8  
                           _INT0_CallBack 3C44                  __end_of_EPWM2_Initialize 3D82  
                            ___flmul@aexp 0029                              ___flmul@bexp 002E  
                            ___flmul@sign 0028                              ___flmul@temp 0033  
                            ___flmul@prod 002F                           _CCP5_Initialize 3DEC  
                           _INT1_CallBack 3C14                              ___fltol@exp1 0017  
                                    l1010 2F6A                                      l1005 2F24  
                                    l1014 3B3A                                      l1037 2E66  
                                    l1310 398A                                      l1402 2A02  
                                    l1322 2700                                      l1324 2560  
                                    l1333 25A6                                      l1421 3168  
                                    l1270 1400                                      l1335 261E  
                                    l1327 2524                                      l1336 260C  
                                    l1409 2A5E                                      l1361 1E44  
                                    l1513 38A4                                      l1450 2C4E  
                                    l1354 1C4E                                      l1506 39CE  
                                    l1522 37F8                                      l1371 1F74  
                                    l1363 1EBC                                      l1364 1EAA  
                                    l1268 144C                                      l1516 3E80  
                                    l1532 323E                                      l1453 2C56  
                                    l1285 1566                                      l1277 171C  
                                    l1269 143A                                      l1358 1FB2  
                                    l1294 1636                                      l1462 2856  
                                    l1542 3794                                      l1295 1624  
                                    l1528 3BA8                                      l1395 296A  
                                    l1459 2912                                      l1483 3B02  
                                    l1547 379C                                      l1469 3B72  
                                    l1477 38F6                                      l1398 2AC6  
                                    l6000 1D04                                      l6010 1D5A  
                                    l6002 1D14                                      l1498 3308  
                                    l6100 336C                                      l6020 1DFE  
                                    l6012 1D76                                      l6004 1D20  
                                    l6110 33A0                                      l6102 337A  
                                    l6030 1E54                                      l6022 1E0C  
                                    l6014 1D82                                      l6006 1D30  
                                    l7000 2D46                                      l6112 33A6  
                                    l6104 3380                                      l6032 1E62  
                                    l6024 1E2A                                      l6016 1D9E  
                                    l6008 1D4A                                      l6200 3B2A  
                                    l7002 2D5A                                      l7010 3682  
                                    l6106 3396                                      l6114 33AC  
                                    l6130 34AE                                      l6122 3490  
                                    l6042 1ECC                                      l6050 1F14  
                                    l6034 1E66                                      l6026 1E34  
                                    l6018 1DC8                                      l6210 2D8C  
                                    l7012 36A6                                      l6116 33BC  
                                    l6108 339E                                      l6140 34E6  
                                    l6132 34BC                                      l6124 3494  
                                    l6060 1F88                                      l6052 1F2E  
                                    l6044 1ED8                                      l6036 1E74  
                                    l6028 1E42                                      l6220 2DDA  
                                    l6212 2DB6                                      l6204 2D62  
                                    l6300 07F0                                      l7020 386E  
                                    l7100 2052                                      l7030 2926  
                                    l7014 36AA                                      l7006 366A  
                                    l6118 33C4                                      l6142 34F4  
                                    l6150 351E                                      l6134 34C4  
                                    l6126 34A2                                      l6062 1F96  
                                    l6054 1F42                                      l6046 1EE6  
                                    l6038 1EA2                                      l5510 1278  
                                    l6230 2E06                                      l6214 2DB8  
                                    l6206 2D78                                      l5502 3ACC  
                                    l6310 0860                                      l6302 0808  
                                    l7022 3876                                      l7110 20A0  
                                    l7102 2066                                      ?_pad 001E  
                                    l7040 29A4                                      l7032 2934  
                                    l7008 366E                                      l6080 330E  
                                    l6152 352E                                      l6144 350A  
                                    l6136 34D6                                      l6128 34AA  
                                    l6160 356E                                      l6064 1F98  
                                    l6056 1F5C                                      l6048 1F10  
                                    l5600 142C                                      l5520 12AC  
                                    l5512 127A                                      l6072 3946  
                                    l6240 2E36                                      l6216 2DC8  
                                    l6400 0BE2                                      l6304 0812  
                                    l7024 3892                                      l7016 3854  
                                    l7200 233C                                      l7120 20E6  
                                    l7112 20AC                                      l7104 2072  
                                    l7050 29F8                                      l7042 29AC  
                                    l7034 297A                                      l6250 38AA  
                                    l6090 333E                                      l6082 331C  
                                    l6154 3536                                      l6146 3512  
                                    l6138 34DE                                      l6170 35E6  
                                    l6162 357E                                      l6058 1F78  
                                    l6066 1F9E                                      l5602 142E  
                                    l5530 12DE                                      l5514 128A  
                                    l5522 12B4                                      l5506 125E  
                                    l6074 3956                                      l6242 2E46  
                                    l6226 2DF2                                      l6218 2DCC  
                                    l6410 0CF6                                      l6402 0C46  
                                    l6314 0896                                      l7018 3866  
                                    l7202 2350                                      l7130 212C  
                                    l7122 20F2                                      l7114 20C6  
                                    l7106 2086                                      l7060 2A6E  
                                    l7052 2A34                                      l7044 29B8  
                                    l7036 2990                                      l7028 2916  
                                    l6252 38BE                                      l7300 2B84  
                                    l6092 3342                                      l6084 3324  
                                    l6148 3518                                      l6164 35AC  
                                    l6180 2ED4                                      l6068 1FA2  
                                    l5700 16FC                                      l5620 14B6  
                                    l5612 147E                                      l5604 1438  
                                    l5540 1314                                      l5532 12E4  
                                    l5524 12C4                                      l5516 129A  
                                    l5508 126A                                      l6244 2E56  
                                    l6236 2E1A                                      l6228 2DFC  
                                    l6500 10D0                                      l6420 0DB4  
                                    l6412 0D2A                                      l6404 0C9E  
                                    l6340 09F8                                      l6332 0930  
                                    l6316 08A8                                      l6308 083A  
                                    l6260 06AC                                      l7204 235C  
                                    l7132 2132                                      l7124 2106  
                                    l7116 20CC                                      l7108 208C  
                                    l7070 2AB6                                      l7062 2A72  
                                    l7054 2A40                                      l7046 29EA  
                                    l6254 38EC                                      l6094 334A  
                                    l6086 3328                                      l6078 330A  
                                    l6166 35BC                                      l6158 3540  
                                    l6190 2F62                                      l6182 2EE4  
                                    l6174 2E68                                      l5702 170A  
                                    l5622 14BA                                      l5614 148E  
                                    l5606 145A                                      l5630 14DA  
                                    l5550 1350                                      l5542 1324  
                                    l5534 12F2                                      l5526 12CA  
                                    l5518 12AA                                      l6238 2E26  
                                    l5470 3240                                      l5710 33DC  
                                    l6510 1102                                      l6502 10D8  
                                    l6430 0E28                                      l6422 0DC4  
                                    l6414 0D5C                                      l6406 0CD2  
                                    l6350 0A58                                      l6342 0A00  
                                    l6334 0964                                      l6318 08C4  
                                    l6326 08E0                                      l6270 0700  
                                    l6262 06B6                                      l7142 215C  
                                    l7134 2146                                      l7126 210C  
                                    l7118 20E0                                      l7064 2A96  
                                    l7056 2A4E                                      l7048 29EC  
                                    l5800 3D0C                                      l6256 38F0  
                                    l6248 38A6                                      l6096 335C  
                                    l6088 3336                                      l6168 35E0  
                                    l6192 2F68                                      l6184 2EF2  
                                    l6176 2E96                                      l5704 170C  
                                    l5632 1500                                      l5640 1556  
                                    l5624 14C8                                      l5616 149C  
                                    l5608 146A                                      l5560 136E  
                                    l5552 135E                                      l5544 1326  
                                    l5536 12F4                                      l5528 12DC  
                                    l5480 32C2                                      l5472 3252  
                                    l5720 3432                                      l5712 33F0  
                                    l6512 1108                                      l6520 1158  
                                    l6504 10E6                                      l6440 0EE4  
                                    l6432 0E4C                                      l6424 0DF8  
                                    l6416 0D72                                      l6408 0CD8  
                                    l6352 0A6A                                      l6336 096A  
                                    l6344 0A32                                      l6328 08FA  
                                    l6280 0744                                      l6272 070A  
                                    l6264 06C6                                      l6600 316A  
                                    l7160 21D4                                      l7152 2180  
                                    l7144 2162                                      l7136 2152  
                                    l7128 2118                                      l7080 1FCE  
                                    l7066 2AA6                                      l7058 2A6C  
                                    l6098 3364                                      l5810 2384  
                                    l6186 2F04                                      l6178 2EA6  
                                    l5650 15AA                                      l5642 157C  
                                    l5634 1534                                      l5626 14CA  
                                    l5618 14AA                                      l5570 1382  
                                    l5562 1372                                      l5554 1362  
                                    l5538 1304                                      l5546 132E  
                                    l5730 306C                                      l5474 3264  
                                    l5490 39AE                                      l5722 3436  
                                    l5714 33FE                                      l6530 11A8  
                                    l6522 116A                                      l6514 112E  
                                    l6506 10EE                                      l6450 0F2C  
                                    l6442 0EF2                                      l6434 0EB0  
                                    l6426 0E08                                      l6418 0DA4  
                                    l6370 0B1A                                      l6354 0A72  
                                    l6346 0A42                                      l6338 09C4  
                                    l6282 0750                                      l6290 0766  
                                    l6274 0712                                      l6266 06D4  
                                    l6610 31C6                                      l6602 3194  
                                    l7170 2228                                      l7162 21E8  
                                    l7154 2192                                      l7146 2176  
                                    l7090 2014                                      l7082 1FE0  
                                    l7074 1FB4                                      l6620 3E48  
                                    l7068 2AB4                                      l5900 25C4  
                                    l5812 2394                                      l5820 23BE  
                                    l5804 2368                                      l6188 2F12  
                                    l6196 3B04                                      l5660 15D4  
                                    l5652 15B8                                      l5644 158C  
                                    l5636 1536                                      l5628 14D4  
                                    l5580 1396                                      l5572 1386  
                                    l5564 1376                                      l5556 1366  
                                    l5548 133E                                      l5732 308C  
                                    l5476 326E                                      l5484 398C  
                                    l5492 3B74                                      l5724 3462  
                                    l5716 340A                                      l5708 33CE  
                                    l6532 11B0                                      l6524 1184  
                                    l6516 114A                                      l6508 10F6  
                                    l6460 0F56                                      l6452 0F30  
                                    l6436 0EBE                                      l6444 0EFA  
                                    l6428 0E1C                                      l6380 0B52  
                                    l6372 0B22                                      l6364 0AB6  
                                    l6356 0A8C                                      l6348 0A46  
                                    l6292 078C                                      l6284 0758  
                                    l6276 0724                                      l6268 06DC  
                                    l6612 31E2                                      l6700 1B14  
                                    l7180 2268                                      l7172 222C  
                                    l7164 21EE                                      l7156 21B4  
                                    l7092 201A                                      l7084 1FE6  
                                    l7076 1FB8                                      l6622 3E3E  
                                    l5910 262E                                      l5902 25C8  
                                    l5830 23EA                                      l5822 23CE  
                                    l5814 23A4                                      l5806 2374  
                                    l6198 3B1A                                      l5670 1606  
                                    l5662 15E4                                      l5654 15BA  
                                    l5638 1546                                      l5590 13E8  
                                    l5582 139A                                      l5574 138A  
                                    l5566 137A                                      l5558 136A  
                                    l5734 30CA                                      l5742 310A  
                                    l5478 328C                                      l5486 3998  
                                    l5494 3B80                                      l5726 3476  
                                    l5718 341E                                      l6550 1236  
                                    l6542 1200                                      l6534 11C0  
                                    l6526 118A                                      l6518 1152  
                                    l6470 0F8A                                      l6462 0F5C  
                                    l6454 0F36                                      l6446 0F0E  
                                    l6438 0ED2                                      l6390 0B9C  
                                    l6382 0B60                                      l6366 0AC8  
                                    l6374 0B26                                      l6358 0AA4  
                                    l6286 075C                                      l6278 0732  
                                    l6614 31F4                                      l6606 31A0  
                                    l6702 1B28                                      l6630 171E  
                                    l7190 22A8                                      l7182 2278  
                                    l7174 2240                                      l7166 21F0  
                                    l7158 21B8                                      l7094 202E  
                                    l7086 1FFA                                      l7078 1FBC  
                                    l6800 3A64                                      l6720 3E34  
                                    l6624 3E2A                                      l6560 2ADC  
                                    l5920 2690                                      l5912 263A  
                                    l5904 25D6                                      l5832 23FA  
                                    l5840 2424                                      l5824 23D4  
                                    l5816 23B4                                      l5808 2382  
                                    l5680 1660                                      l5672 161C  
                                    l5656 15C8                                      l5648 15A0  
                                    l5664 15E6                                      l5592 13F8  
                                    l5576 138E                                      l5568 137E  
                                    l5584 139E                                      l5744 311C  
                                    l5736 30F2                                      l5488 39AA  
                                    l5496 3B84                                      l5752 379E  
                                    l5760 3774                                      l6552 123C  
                                    l6544 1212                                      l6536 11C6  
                                    l6528 119C                                      l6456 0F42  
                                    l6448 0F1C                                      l6464 0F62  
                                    l6472 0F90                                      l6480 1028  
                                    l6392 0BAE                                      l6384 0B64  
                                    l6376 0B2E                                      l6368 0AE4  
                                    l6296 07C2                                      l6288 0760  
                                    l6616 321C                                      l6608 31AE  
                                    l6640 1788                                      l6632 1742  
                                    l6712 1B52                                      l7184 227E  
                                    l7176 2252                                      l7192 22B4  
                                    l7168 2216                                      l7096 2034  
                                    l7088 2000                                      l6626 3E52  
                                    l6810 3A7C                                      l6802 3A66  
                                    l6730 3E1C                                      l6722 39D0  
                                    l6570 2B3A                                      l6562 2AE0  
                                    l5930 26EE                                      l5922 26A6  
                                    l5914 2648                                      l5906 2604  
                                    l5850 2466                                      l5842 2434  
                                    l5834 240A                                      l5826 23DA  
                                    l5818 23B6                                      l5690 16DC  
                                    l5682 169A                                      l5658 15D0  
                                    l5666 15F4                                      l5594 140E  
                                    l5586 13A2                                      l5578 1392  
                                    l5738 30FE                                      l5770 2778  
                                    l5498 3B9C                                      l5754 37AE  
                                    l5762 3786                                      l6546 121E  
                                    l6538 11CC                                      l6490 1092  
                                    l6482 1046                                      l6474 0FE8  
                                    l6466 0F74                                      l6458 0F52  
                                    l6386 0B76                                      l6394 0BB6  
                                    l6378 0B40                                      l6298 07D4  
                                    l6714 1B76                                      l6706 1B36  
                                    l6650 181C                                      l6642 1790  
                                    l6634 1750                                      l7194 22C4  
                                    l7178 2262                                      l7186 228E  
                                    l7098 2048                                      l6812 3A80  
                                    l6804 3A6A                                      l6900 2FE8  
                                    l6820 3A14                                      l6732 3D62  
                                    l6724 39E8                                      l6740 3DDC  
                                    l6580 2B66                                      l6564 2AE4  
                                    l5932 26F4                                      l5924 26C0  
                                    l5916 2672                                      l5844 244A  
                                    l5836 241A                                      l5828 23E8  
                                    l5692 16E0                                      l5676 1646  
                                    l5684 169C                                      l5668 15F8  
                                    l5596 141A                                      l5588 13CC  
                                    l5748 3160                                      l5780 2846  
                                    l5772 278C                                      l5756 373E  
                                    l6548 1226                                      l6492 1096  
                                    l6484 1062                                      l6476 101C  
                                    l6468 0F86                                      l6396 0BBE  
                                    l6388 0B84                                      l6708 1B44  
                                    l6660 18A6                                      l6652 182A  
                                    l6644 179E                                      l6636 1760  
                                    l7196 2310                                      l7188 2294  
                                    l6814 3A82                                      l6806 3A6C  
                                    l6910 3022                                      l6902 2FEE  
                                    l6830 3A2E                                      l6822 3A24  
                                    l6734 3D9E                                      l6726 39EE  
                                    l6750 3CB4                                      l6742 3DE4  
                                    l6590 2C0E                                      l6582 2B9A  
                                    l6574 2B40                                      l6566 2B00  
                                    l6558 2AC8                                      l5934 26F6  
                                    l5926 26DC                                      l5918 2676  
                                    l5870 24E8                                      l5862 249E  
                                    l5846 245A                                      l5854 247A  
                                    l5838 241C                                      l5950 1BB6  
                                    l5942 1B8A                                      l5694 16EE  
                                    l5686 16AC                                      l5678 1652  
                                    l5598 141E                                      l5790 2902  
                                    l5774 279A                                      l5782 287A  
                                    l5766 2702                                      l6494 10A6  
                                    l6486 1074                                      l6478 1024  
                                    l6398 0BCE                                      l6670 193C  
                                    l6662 18B6                                      l6646 17C2  
                                    l6638 1764                                      l7198 2336  
                                    l6816 3A86                                      l6808 3A70  
                                    l6912 3036                                      l6904 3002  
                                    l6840 3A48                                      l6832 3A32  
                                    l6824 3A26                                      l6920 2C58  
                                    l6736 3DB2                                      l6760 3D4C  
                                    l6728 3A0E                                      l6752 3CB6  
                                    l6744 3C9E                                      l6592 2C20  
                                    l6576 2B56                                      l6568 2B36  
                                    l5928 26E0                                      l5880 252E  
                                    l5872 24F0                                      l5864 24B8  
                                    l5856 248A                                      l5848 2462  
                                    l5960 1BF2                                      l5952 1BC6  
                                    l5944 1B96                                      l5696 16F4  
                                    l5688 16BC                                      l5784 28B6  
                                    l5768 2722                                      l6496 10B8  
                                    l6488 1082                                      l6672 1952  
                                    l6680 19BC                                      l6664 18E8  
                                    l6656 1872                                      l6648 17FC  
                                    l6914 303C                                      l6906 3008  
                                    l6834 3A3E                                      l6826 3A28  
                                    l6930 2C68                                      l6922 2C5C  
                                    l6738 3DEC                                      l6762 3D4E  
                                    l6754 3CC2                                      l6746 3CAA  
                                    l5794 3B3C                                      l6594 2C32  
                                    l6586 2BD0                                      l6578 2B5E  
                                    l5890 2586                                      l5882 254C  
                                    l5874 2500                                      l5866 24C8  
                                    l5858 248A                                      l5970 1C28  
                                    l5962 1BF8                                      l5954 1BD6  
                                    l5946 1BA4                                      l5698 16F6  
                                    l5786 28CA                                      l5778 280A  
                                    l6498 10C0                                      l6690 1A9E  
                                    l6682 19EA                                      l6674 1960  
                                    l6666 18F8                                      l6658 1884  
                                    l6780 3830                                      l6772 37FC  
                                    l6916 3050                                      l6908 301C  
                                    l6844 3E0C                                      l6836 3A42  
                                    l6828 3A2C                                      l6940 2C78  
                                    l6932 2C6A                                      l6924 2C60  
                                    l6764 3D50                                      l6756 3D3C  
                                    l6748 3CB2                                      l6860 3D16  
                                    l5892 258C                                      l5884 254E  
                                    l5876 2514                                      l5868 24D8  
                                    l5972 1C38                                      l5964 1C06  
                                    l5956 1BDC                                      l5948 1BA6  
                                    l5788 28F2                                      l6676 1990  
                                    l6668 192A                                      l6852 36DC  
                                    l6790 3848                                      l6782 3832  
                                    l6774 3828                                      l6918 3056  
                                    l6838 3A44                                      l6950 2C88  
                                    l6942 2C7C                                      l6934 2C6C  
                                    l6926 2C64                                      l6766 3D5E  
                                    l6758 3D40                                      l6870 3D2A  
                                    l6862 3D1A                                      l5798 3CF0  
                                    l5894 2596                                      l5886 255E  
                                    l5878 2522                                      l5990 1CBA  
                                    l5982 1C82                                      l5974 1C3E  
                                    l5966 1C08                                      l5958 1BEC  
                                    l6686 1A58                                      l6854 36E4  
                                    l6768 3DCA                                      l6792 384C  
                                    l6784 3836                                      l6776 382A  
                                    l6880 2F6C                                      l6848 3DFC  
                                    l6960 2C9E                                      l6952 2C8C  
                                    l6944 2C80                                      l6936 2C6E  
                                    l6928 2C66                                      l6872 3D2E  
                                    l6864 3D1E                                      l5896 25A4  
                                    l5888 2570                                      l5992 1CD2  
                                    l5984 1C8E                                      l5976 1C5E  
                                    l5968 1C18                                      l6688 1A6A  
                                    l6696 1AE2                                      l6856 36F0  
                                    l6786 3842                                      l6778 382C  
                                    l6890 2FA0                                      l6882 2F6C  
                                    l6970 2CB8                                      l6962 2CA4  
                                    l6954 2C90                                      l6946 2C82  
                                    l6938 2C74                                      l6874 3D32  
                                    l6866 3D22                                      l5898 25B6  
                                    l5994 1CDE                                      l5986 1C98  
                                    l5978 1C6E                                      l6698 1B06  
                                    l6858 3718                                      l6788 3846  
                                    l6796 3A52                                      l6892 2FB4  
                                    l6884 2F80                                      l6980 2CC6  
                                    l6972 2CBC                                      l6964 2CA8  
                                    l6956 2C94                                      l6948 2C86  
                                    l6876 3D36                                      l6868 3D26  
                                    l5996 1CEA                                      l5988 1CAE  
                                    l6798 3A62                                      l6894 2FBA  
                                    l6886 2F86                                      l6990 2CFE  
                                    l6982 2CCA                                      l6974 2CBE  
                                    l6966 2CAC                                      l6958 2C98  
                                    l6878 3E70                                      l5998 1CF8  
                                    l6896 2FCE                                      l6888 2F9A  
                                    l6992 2D12                                      l6984 2CDE  
                                    l6976 2CC0                                      l6968 2CB2  
                                    l6898 2FD4                                      l6994 2D26  
                                    l6986 2CE4                                      l6978 2CC4  
                                    l6996 2D2C                                      l6988 2CF8  
                                    l6998 2D40                                      STR_1 0653  
                                    STR_2 0680                                      STR_3 06A7  
                                    STR_4 063A                                      STR_5 0620  
                                    STR_6 0601                                      STR_7 066A  
                                    STR_8 0694                                      STR_9 069C  
                                    _LATA 000F89                                      _LATB 000F8A  
                                    _LATC 000F8B                                      _LATD 000F8C  
                                    _LATE 000F8D                                      u6100 3AFC  
                                    u6101 3AF6                                      u6110 3AFE  
                                    u7000 26C0                                      u6200 135E  
                                    u6120 1278                                      u6040 3252  
                                    u7001 26BC                                      u6201 135A  
                                    u6121 1274                                      u6041 324E  
                                    u7010 26EE                                      u6210 13CC  
                                    u6130 128A                                      u6050 3264  
                                    u7011 26EA                                      u6211 13C8  
                                    u6131 1286                                      u6051 3260  
                                    u7100 1DE8                                      u7020 1BA4  
                                    u6300 14AA                                      u6220 13E4  
                                    u6140 129A                                      u6060 328C  
                                    u7021 1BA0                                      u6301 14A6  
                                    u6221 13DE                                      u6141 1296  
                                    u6061 3288                                      u7110 1E42  
                                    u7030 1BB6                                      u6310 14C8  
                                    u6230 13E6                                      u6150 12DC  
                                    u6070 32C2                                      u7111 1E3E  
                                    u7031 1BB2                                      u6311 14C4  
                                    u6151 12D8                                      u6071 32BE  
                                    u7200 1F96                                      u7120 1E62  
                                    u7040 1BC6                                      u6400 1606  
                                    u6320 1500                                      u6240 140E  
                                    u6160 12F2                                      u6080 39CE  
                                    u8000 11FA                                      u7201 1F92  
                                    u7121 1E5E                                      u7105 1DDE  
                                    u7041 1BC2                                      u6401 1602  
                                    u6321 14FC                                      u6241 140A  
                                    u6161 12EE                                      u6081 39CA  
                                    u8001 11F4                                      u7210 331C  
                                    u7130 1E74                                      u7050 1C06  
                                    u6410 161C                                      u6330 1546  
                                    u6250 142C                                      u6170 1304  
                                    u6090 3B9C                                      u8010 11FC  
                                    u7211 3318                                      u7131 1E70  
                                    u7051 1C02                                      u6411 1618  
                                    u6331 1542                                      u6251 1428  
                                    u6171 1300                                      u6091 3B98  
                                    u7220 3336                                      u7300 34F4  
                                    u7140 1EA2                                      u7060 1C18  
                                    u6500 170A                                      u6420 1632  
                                    u6340 157C                                      u6260 144C  
                                    u6180 1314                                      u8020 1212  
                                    u8100 3194                                      u7221 3332  
                                    u7301 34F0                                      u7141 1E9E  
                                    u7061 1C14                                      u6501 1706  
                                    u6421 162E                                      u6341 1578  
                                    u6261 1448                                      u6181 1310  
                                    u8021 120E                                      u8101 3190  
                                    u8030 2B00                                      u7230 335C  
                                    u7310 350A                                      u7150 1EB8  
                                    u7070 1C28                                      u6430 1646  
                                    u6350 158C                                      u6270 145A  
                                    u6190 1350                                      u6510 33DC  
                                    u8110 31C6                                      u8031 2AFC  
                                    u7231 3358                                      u7311 3506  
                                    u7151 1EB4                                      u7071 1C24  
                                    u6431 1642                                      u6351 1588  
                                    u6271 1456                                      u6191 134C  
                                    u6511 33D8                                      u8111 31C2  
                                    u8040 2B36                                      u7240 337A  
                                    u7320 352E                                      u7400 2F62  
                                    u7160 1ECC                                      u7080 1C5E  
                                    u6440 1660                                      u6360 15B8  
                                    u6280 146A                                      u6600 3156  
                                    u6520 33FE                                      u8120 31E2  
                                    u8200 1884                                      u8041 2B32  
                                    u7241 3376                                      u7321 352A  
                                    u7401 2F5E                                      u7161 1EC8  
                                    u7081 1C5A                                      u6441 165C  
                                    u6361 15B4                                      u6281 1466  
                                    u6601 3150                                      u6521 33FA  
                                    u8121 31DE                                      u8201 1880  
                                    u8050 2B52                                      u7250 3396  
                                    u7330 356E                                      u7170 1EE6  
                                    u7090 1C6E                                      u7410 3B1A  
                                    u6450 169A                                      u6370 15C8  
                                    u6290 149C                                      u6610 3158  
                                    u6530 3454                                      u8130 31F4  
                                    u8210 18B6                                      u8051 2B4E  
                                    u7251 3392                                      u7331 356A  
                                    u7171 1EE2                                      u7091 1C6A  
                                    u7411 3B16                                      u6451 1696  
                                    u6371 15C4                                      u6291 1498  
                                    u6531 3450                                      u8131 31F0  
                                    u8211 18B2                                      u7500 38EC  
                                    u8060 2C08                                      u7260 33BC  
                                    u7340 35AC                                      u7180 1F2E  
                                    u6460 16AC                                      u6380 15E4  
                                    u7420 2D78                                      u6540 3462  
                                    u6620 37E6                                      u8140 321C  
                                    u8220 18F8                                      u8300 3734  
                                    u7501 38E8                                      u8061 2C02  
                                    u7261 33B8                                      u7341 35A8  
                                    u7181 1F2A                                      u6461 16A8  
                                    u6381 15E0                                      u7421 2D74  
                                    u6541 345E                                      u8141 3218  
                                    u8221 18F4                                      u8301 3730  
                                    u8310 2F80                                      u8070 2C0A  
                                    u7270 34A2                                      u7350 35E0  
                                    u7190 1F5C                                      u6470 16BC  
                                    u6390 15F4                                      u7430 2DAC  
                                    u6550 30AC                                      u6710 2806  
                                    u6630 37F8                                      u7510 06D4  
                                    u8230 193C                                      u8150 1742  
                                    u8311 2F7C                                      u7271 349E  
                                    u7351 35DC                                      u7191 1F58  
                                    u6471 16B8                                      u6391 15F0  
                                    u6711 2802                                      u6631 37F4  
                                    u7511 06D0                                      u8231 1938  
                                    u8151 173E                                      u8400 306A  
                                    u8320 2F9A                                      u8080 2C20  
                                    u7280 34BC                                      u6800 2394  
                                    u7360 2E96                                      u6480 16DC  
                                    u7440 2DDA                                      u6560 30CA  
                                    u6720 282A                                      u6640 376E  
                                    u7600 0890                                      u7520 0724  
                                    u8240 19EA                                      u8160 1788  
                                    u8401 3066                                      u8321 2F96  
                                    u8081 2C1C                                      u7281 34B8  
                                    u6801 2390                                      u7361 2E92  
                                    u6481 16D8                                      u7441 2DD6  
                                    u6561 30C6                                      u6705 27AE  
                                    u6641 3768                                      u7601 088A  
                                    u7521 0720                                      u8241 19E6  
                                    u8161 1784                                      u8330 2FB4  
                                    u8410 2CDE                                      u8090 2C32  
                                    u7290 34D6                                      u6810 23A4  
                                    u7370 2ED4                                      u6490 16EE  
                                    u7450 2DEE                                      u6570 30F2  
                                    u6730 2846                                      u6706 27B8  
                                    u6650 3770                                      u7610 0892  
                                    u7530 0732                                      u8250 1A52  
                                    u8170 17C2                                      u8331 2FB0  
                                    u8411 2CDA                                      u8091 2C2E  
                                    u7291 34D2                                      u6811 23A0  
                                    u7371 2ED0                                      u6491 16EA  
                                    u7451 2DEA                                      u7435 2DA2  
                                    u6571 30EE                                      u6555 30A2  
                                    u6731 2842                                      u6707 27C8  
                                    u6627 37DC                                      u7531 072E  
                                    u8251 1A4C                                      u8171 17BE  
                                    u8340 2FCE                                      u8420 2CF8  
                                    u8500 36DA                                      u6900 2570  
                                    u6820 23E8                                      u7380 2EF2  
                                    u7460 2E16                                      u6580 311C  
                                    u6740 289A                                      u6660 3786  
                                    u7700 0AC8                                      u7620 08A8  
                                    u7540 0744                                      u8260 1A54  
                                    u8180 186C                                      i2l93 3C72  
                                    u8341 2FCA                                      u8421 2CF4  
                                    u8501 36D6                                      u6901 256C  
                                    u6821 23E4                                      u7381 2EEE  
                                    u7461 2E12                                      u6581 3118  
                                    u6725 2820                                      u6661 3782  
                                    u7701 0AC4                                      u7621 08A4  
                                    u7541 0740                                      u8181 1866  
                                    u8350 2FE8                                      u8430 2D12  
                                    u8510 2926                                      u6910 2586  
                                    u6830 23FA                                      u7390 2F12  
                                    u7470 2E36                                      u6750 28B6  
                                    u6670 274A                                      u7710 0AE4  
                                    u7630 092C                                      u7550 078C  
                                    u8270 1A6A                                      u8190 186E  
                                    u8351 2FE4                                      u8431 2D0E  
                                    u8511 2922                                      u6911 2582  
                                    u6831 23F6                                      u7391 2F0E  
                                    u7471 2E32                                      u6751 28B2  
                                    u7711 0AE0                                      u7631 0928  
                                    u7551 0788                                      u8271 1A66  
                                    u8360 3002                                      u8440 2D26  
                                    u8600 2AB4                                      u8520 2934  
                                    u6920 25A4                                      u6840 240A  
                                    u7480 2E46                                      u6760 28F2  
                                    u6680 2778                                      u7800 0D5C  
                                    u7720 0B1A                                      u7640 09C0  
                                    u7560 07BC                                      u8280 1B06  
                                    i2l89 3E68                                      u8361 2FFE  
                                    u8441 2D22                                      u8601 2AB0  
                                    u8521 2930                                      u6921 25A0  
                                    u6841 2406                                      u7481 2E42  
                                    u6761 28EE                                      u6745 2890  
                                    u6681 2774                                      u7801 0D58  
                                    u7721 0B16                                      u7641 09BC  
                                    u7561 07B6                                      u8281 1B02  
                                    u8370 301C                                      u8450 2D40  
                                    u8530 2990                                      u6770 3B6C  
                                    u7490 38BE                                      u6930 25C4  
                                    u6850 244A                                      u6690 279A  
                                    u7810 0DA4                                      u7730 0B40  
                                    u7650 0A32                                      u7570 07BE  
                                    i2l99 3E86                                      u8371 3018  
                                    u8451 2D3C                                      u8531 298C  
                                    u6771 3B66                                      u7491 38BA  
                                    u6931 25C0                                      u6851 2446  
                                    u6595 312E                                      u6691 2796  
                                    u6675 2740                                      u7811 0DA0  
                                    u7731 0B3C                                      u7651 0A2E  
                                    u8611 1FC6                                      u8380 3036  
                                    u8460 2D5A                                      u8540 29E6  
                                    u6780 3B6E                                      u6940 25D6  
                                    u6860 248A                                      u7900 0F74  
                                    u7820 0DB4                                      u7740 0B52  
                                    u7660 0A58                                      u7580 07D4  
                                    u8700 20E0                                      u8381 3032  
                                    u8461 2D56                                      u8541 29E2  
                                    u6941 25D2                                      u6861 2486  
                                    u7901 0F70                                      u7821 0DB0  
                                    u7741 0B4E                                      u7661 0A54  
                                    u7581 07D0                                      u8701 20DC  
                                    u8621 1FD8                                      u8390 3050  
                                    u8550 2A30                                      u8470 3682  
                                    u6950 2604                                      u6870 2500  
                                    u6790 2382                                      u7910 1046  
                                    u7830 0E1C                                      u7750 0B60  
                                    u7670 0A6A                                      u7590 0860  
                                    u8710 2106                                      u8630 1FFA  
                                    u8295 3816                                      u8391 304C  
                                    u8551 2A2C                                      u8471 367E  
                                    u6951 2600                                      u6871 24FC  
                                    u6791 237E                                      u7911 1042  
                                    u7831 0E18                                      u7751 0B5C  
                                    u7671 0A66                                      u7591 085C  
                                    u8711 2102                                      u8631 1FF6  
                                    u8560 2A4E                                      u8480 36A2  
                                    u6960 261A                                      u6880 2522  
                                    u7920 1062                                      u7840 0EBE  
                                    u7760 0B76                                      u7680 0A8C  
                                    u8800 2252                                      u8720 212C  
                                    u8640 2014                                      u8561 2A4A  
                                    u6961 2616                                      u6881 251E  
                                    u7921 105E                                      u7841 0EBA  
                                    u7761 0B72                                      u7681 0A88  
                                    u8801 224E                                      u8721 2128  
                                    u8641 2010                                      u8570 2A5E  
                                    u8490 36CA                                      u6970 262E  
                                    u6890 254C                                      u7930 1074  
                                    u7850 0ED2                                      u7770 0B84  
                                    u7690 0AB2                                      u8810 2262  
                                    u8730 2146                                      u8650 202E  
                                    u8571 2A5A                                      u6971 262A  
                                    u6891 2548                                      u7931 1070  
                                    u7851 0ECE                                      u7771 0B80  
                                    u7691 0AAE                                      u8811 225E  
                                    u8731 2142                                      u8651 202A  
                                    u8580 2A6C                                      u6980 2648  
                                    u7940 1082                                      u7860 0EE4  
                                    u7780 0BAE                                      u8820 22A8  
                                    u8740 2176                                      u8660 2048  
                                    u8581 2A68                                      u6981 2644  
                                    u7941 107E                                      u7861 0EE0  
                                    u7781 0BAA                                      u8821 22A4  
                                    u8741 2172                                      u8661 2044  
                                    u8590 2AA6                                      u6990 2690  
                                    u7950 10B8                                      u7870 0EF2  
                                    u7790 0CF6                                      u8830 22C4  
                                    u8750 21B4                                      u8670 2066  
                                    u8591 2AA2                                      u8487 3698  
                                    u6991 268C                                      u7951 10B4  
                                    u7871 0EEE                                      u7791 0CF2  
                                    u8831 22C0                                      u8751 21B0  
                                    u8671 2062                                      u7960 10E6  
                                    u7880 0F0E                                      u8840 2350  
                                    u8760 21D4                                      u8680 2086  
                                    u8497 36C0                                      u7961 10E2  
                                    u7881 0F0A                                      u8841 234C  
                                    u8761 21D0                                      u8681 2082  
                                    u7970 116A                                      u7890 0F1C  
                                    u8770 21E8                                      u8690 20A0  
                                    u8907 3E54                                      u7971 1166  
                                    u7891 0F18                                      u8771 21E4  
                                    u8691 209C                                      u7980 1184  
                                    u8780 2228                                      u8917 3DD0  
                                    u7981 1180                                      u8781 2224  
                                    u7990 119C                                      u8790 2240  
                                    u7991 1198                                      u8791 223C  
                                    u8867 20B8                                      u8877 2188  
                                    u8887 3E02                                      u8897 3E12  
                                    _TMR1 000FCE                                      _TMR2 000FBC  
                                    _WPUB 000F61                                      _dbuf 010A  
                                    _atoi 2AC8                                      _main 1FB4  
                                    _prec 0047                                      _nout 0043  
                                    pad@i 0025                                      pad@p 0022  
                                    fsr1h 000FE2                                      fsr2h 000FDA  
                                    indf1 000FE7                                      indf2 000FDF  
                                    fsr1l 000FE1                                      pad@w 0027  
                                    fsr2l 000FD9                                      btemp 0051  
                           __CFG_BORV$190 000000                             ___fpclassifyf 306C  
                  __size_of_WriteDataXLCD 003E                                      prodh 000FF4  
                                    prodl 000FF3                                      start 0066  
                           __CFG_IESO$OFF 000000                           ___fldiv@new_exp 001F  
              ??_TMR1_SetInterruptHandler 0010                              _tolower$1993 001A  
                            ___param_bank 000000                                     ??_pad 0024  
                            _WriteCmdXLCD 3A12                          __end_of_INT0_ISR 3E6A  
                        __end_of_INT1_ISR 3E62            __size_of_OSCILLATOR_Initialize 000E  
           __end_of_OSCILLATOR_Initialize 3E2A                             ___fltol@sign1 0016  
                                   ?_atoi 0015                           __end_of___fladd 171E  
                                   ?_main 0001                           __end_of___fldiv 2702  
                         __end_of___awdiv 33CE                           __end_of___flneg 3B3C  
                           _convert_timer 3E6A                                     STR_12 0698  
                                   STR_13 06A0                                     STR_16 06A4  
                                   STR_18 06A4                           __end_of___awmod 3540  
                         __end_of___flmul 1FB4                           __end_of___flsub 398C  
                         __end_of___fltol 2E68                             ?_SetCGRamAddr 0001  
                         ___awdiv@divisor 0010                                     _T1CON 000FCD  
                                   _T2CON 000FBA                            __CFG_DEBUG$OFF 000000  
                                   i1l102 3E60                                     i1l112 3E82  
                                   i1l106 3C42                                     i1l156 004E  
                                   i1l333 3C0E                       __size_of_CGRamAddr0 0100  
                                   i1l335 3C12                                     i2l202 3DC8  
                                   i2l214 3D9C                                     i2l143 3616  
                                   i2l145 363A                                     i2l146 365E  
                                   i2l149 365E                                     i2l270 3ACA  
                                   i2l329 3BDE                                     i2l257 3CEE  
                                   i2l338 3E6E                                     i2l196 3E76  
                                   i2l276 3E84                                     i2l533 3E7E  
                                   i2l536 3E7A                           ___awdiv@counter 0012  
                            vfpfcnvrt@fmt 00A6                                     _TMR1H 000FCF  
                                   _TMR1L 000FCE                                     _PORTD 000F83  
                                   _TRISA 000F92                                     _TRISB 000F93  
                          ?_INT0_CallBack 0001                                     _TRISC 000F94  
                                   _TRISD 000F95                                     _TRISE 000F96  
        __size_of_ADC_GetConversionResult 0014                             __CFG_WRT0$OFF 000000  
                           __CFG_WRT1$OFF 000000                             __CFG_WRT2$OFF 000000  
                           __CFG_WRT3$OFF 000000                            __CFG_EBTR0$OFF 000000  
                          __CFG_FCMEN$OFF 000000                            __CFG_EBTR1$OFF 000000  
                          __CFG_EBTR2$OFF 000000                            __CFG_EBTR3$OFF 000000  
                        __end_of_TMR1_ISR 3ACC                             __CFG_WRTB$OFF 000000  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
                          ?_INT1_CallBack 0001                            __CFG_EBTRB$OFF 000000  
                                   _flags 0049            ??_INT1_DefaultInterruptHandler 0009  
                                   _fputc 3240                                     _fputs 398C  
                         __end_of_isdigit 3B74                        __CFG_MCLRE$EXTMCLR 000000  
                                   _valor 004D                                     atoi@n 0022  
                                   pad@fp 001E                                     atoi@s 0015  
                                   _width 0045                                     _putch 3E80  
                                   _start 3BE0                                     main@i 018D  
                                   main@j 018F                           __end_of_isspace 38F8  
                _INT1_SetInterruptHandler 3E3E                   __end_of_TMR1_Initialize 3CC8  
                         __end_of_isupper 3B04                                     pclath 000FFA  
                                   tablat 000FF5                                     plusw1 000FE3  
                                   plusw2 000FDB                                     ttemp5 0052  
                                   ttemp6 0055                                     ttemp7 0059  
                                   status 000FD8                                     wtemp8 0052  
                         __end_of_sprintf 38A6                            ?___fpclassifyf 000E  
                         __end_of_tolower 379E                            __CFG_HFOFST$ON 000000  
                         _TMR2_StartTimer 3E7C                           __end_of_strncmp 3240  
                         _TMR1_WriteTimer 3CC8            ?_INTERRUPT_InterruptManagerLow 0001  
                          __CFG_PBADEN$ON 000000                           __initialization 38F8  
                            __end_of_atoi 2C58                              __end_of_main 2368  
                        __end_of_BusyXLCD 3DDC                        __size_of_DelayXLCD 0010  
                   __size_of_DelayPORXLCD 0010                   __end_of_TMR2_Initialize 3DEC  
                               ??_ADC_ISR 0005                            ?_convert_timer 0001  
                          ??_SetCGRamAddr 000E                          __end_of_OpenXLCD 2D62  
                                  ??_atoi 0017                                    ??_main 00D2  
                 __end_of_CCP5_Initialize 3DFC                             __activetblptr 000002  
                           _WriteDataXLCD 3A50                                    _ADCON0 000FC2  
                                  _ADCON1 000FC1                                    _ADCON2 000FC0  
                                  ?_fputc 000E                                    ?_fputs 0017  
                                  _ADRESH 000FC4                                    _ADRESL 000FC3  
                                  _CCPR2H 000F68                                    _CCPR2L 000F67  
                                  _CCPR5H 000F56                                    _CCPR5L 000F55  
                        ___awdiv@dividend 000E                                    _ANSELA 000F38  
                                  ?_putch 0001                                    _ANSELB 000F39  
                                  _ANSELC 000F3A                                    _ANSELD 000F3B  
                                  _ANSELE 000F3C                                    ?_start 0001  
                                  _T1GCON 000FCC                   TMR1_WriteTimer@timerVal 0001  
                                  i1l5006 3E5A                                    i1l5008 3E5C  
                                  i1l5240 004A                                    i1l5236 002E  
                                  i1l5238 003C                                    i1l4720 3C0A  
                                  i1l4714 3BE0                                    i1l4716 3BF2  
                                  i1l4718 3BFA                                    i2l5010 3D82  
                                  i2l5002 3E62                                    i2l5012 3D8E  
                                  i2l5004 3E64                                    i2l5020 3A90  
                                  i2l5014 3D96                                    i2l5022 3A9C  
                                  i1l4870 3C28                            __CFG_WDTEN$OFF 000000  
                                  i2l5016 3D98                                    i2l5024 3AB0  
                                  i2l5018 3A8E                                    i1l4868 3C14  
                                  i2l4326 3E7C                                    i2l5230 3632  
                                  i2l5222 35F2                                    i2l5232 3648  
                                  i2l5224 3600                                    i2l5234 3656  
                                  i2l5226 360E                                    i2l4700 3BB8  
                                  i2l5228 3624                                    i2l4710 3BD4  
                                  i2l4702 3BC2                                    i2l4712 3BD8  
                                  i2l4704 3BC4                                    i2l4706 3BCC  
                                  i2l4708 3BD2                                    i2l4694 3E74  
                                  i2l4872 3DB6                                    i2l4688 3E78  
                                  i2l4864 3C44                                    i2l4880 3CD8  
                                  i2l4698 3BAA                                    i2l4866 3C58  
                                  i2l4882 3CDC                                    i2l4890 3E6A  
                                  i2l4884 3CE0                                    i2l4876 3CC8  
                                  i2l4878 3CD6                                    i2l4886 3CE6  
                                  i2l4888 3CEA                                    _OSCCON 000FD3  
                        __end_of___xxtofl 2AC8                              _DelayPORXLCD 3E0C  
                          __CFG_XINST$OFF 000000      __end_of_TMR1_DefaultInterruptHandler 3E86  
   __size_of_TMR1_DefaultInterruptHandler 0002              _TMR1_DefaultInterruptHandler 3E84  
                            _CCPTMRS0bits 000F49                              vfprintf@cfmt 0041  
                                  ___flge 2E68                                    ___fleq 3540  
                               ??___fladd 0016                                    ___wmul 3CF0  
                               ??___fldiv 0016                                 ??___awdiv 0012  
                               ??___flneg 0012                            __CFG_STVREN$ON 000000  
                               ??___awmod 0012                 __size_ofi2_TMR2_StopTimer 0004  
                               ??___flmul 0024                                 ??___flsub 003D  
                               ??___fltol 0012                                    _efgtoa 06AC  
                                  _floorf 2702                                    clear_0 391E  
                                  clear_1 3932                          ___awdiv@quotient 0014  
                         ___awmod@divisor 0010                           ___awmod@counter 0012  
                                  pad@buf 0020                           ??_INT0_CallBack 0001  
                          ?_WriteDataXLCD 0001                                    _strcpy 379E  
                                  _strlen 3B74                                    fputc@c 000E  
                                  fputs@c 001B                                    fputs@i 001C  
                                  fputs@s 0017                                 ??_isdigit 0010  
                         ??_INT1_CallBack 0009                           ___fpclassifyf@e 0016  
                         ___fpclassifyf@u 0018                           ___fpclassifyf@x 000E  
                            __mediumconst 0000                                 ??_isspace 0010  
                                  tblptrh 000FF7                                 ??_isupper 0010  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                                  putch@c 0001                          __end_of_putsXLCD 36DC  
                        __end_of_vfprintf 373E                   __end_of_TMR2_StartTimer 3E80  
TMR1_SetInterruptHandler@InterruptHandler 000E  INT1_SetInterruptHandler@InterruptHandler 000E  
INT0_SetInterruptHandler@InterruptHandler 000E                                 ??_sprintf 0043  
                               ??_tolower 0016                   __end_of_TMR1_WriteTimer 3CF0  
                               ??_strncmp 0014             __size_of_INTERRUPT_Initialize 000A  
                       __end_of_DelayXLCD 3E0C                                ___flge@ff1 0035  
                              ___flge@ff2 0039                           ??___fpclassifyf 0012  
                        ?_TMR1_Initialize 0001                           __CFG_FOSC$RCIO6 000000  
                            ___xxtofl@arg 0018                              ___xxtofl@exp 0017  
        ??_INTERRUPT_InterruptManagerHigh 0007           ?_INTERRUPT_InterruptManagerHigh 0001  
                       _SYSTEM_Initialize 3D16                              ___xxtofl@val 000E  
                              ___fleq@ff1 000E                                ___fleq@ff2 0012  
                              __accesstop 0060                   __end_of__initialization 3938  
                            ??_CGRamAddr0 0012                                 ?_INT0_ISR 0001  
                               ?_INT1_ISR 0001                                ___flneg@f1 000E  
                      ?_SYSTEM_Initialize 0001                             ___rparam_used 000001  
                              ___fltol@f1 000E              __size_of_ADC_StartConversion 0004  
                          __pcstackCOMRAM 0001                              __pidataBANK1 3C74  
                     ??_SYSTEM_Initialize 0010                                 ?_TMR1_ISR 0001  
         fp__TMR1_DefaultInterruptHandler 0000             ?_TMR1_DefaultInterruptHandler 0001  
                         ??_convert_timer 0001                             __end_of_fputc 330A  
                           __end_of_fputs 39D0                             __end_of_putch 3E82  
                           __end_of_start 3C14                          ?_TMR2_Initialize 0001  
                        ?_CCP5_Initialize 0001                   _ADC_GetConversionResult 3DB6  
             __size_of_EXT_INT_Initialize 0026                        __end_of_CGRamAddr0 306C  
                       ?_EPWM2_Initialize 0001                              ADC_ISR@anval 0005  
                                 ??_fputc 0012                 __end_of_SYSTEM_Initialize 3D3C  
                                 ??_fputs 001B                    __size_of_DelayFor18TCY 0008  
                      ??_EPWM2_Initialize 000E                                   ??_putch 000E  
                                 ??_start 0009                        __size_of_emrgencia 0036  
                              __pbssBANK0 00D4                                __pbssBANK1 0100  
                               ?_BusyXLCD 0001                           __CFG_PLLCFG$OFF 000000  
                         WriteCmdXLCD@cmd 000E                     _INT0_InterruptHandler 01BF  
                              ??_INT0_ISR 0001                                ??_INT1_ISR 0009  
                              __pnvCOMRAM 004F                      __end_of_SetCGRamAddr 3854  
                               ?_OpenXLCD 0001                        __CFG_CCP2MX$PORTB3 000000  
                                 ?___flge 0035                                   ?___fleq 000E  
                       WriteDataXLCD@data 000E                                   ?___wmul 000E  
                              ??_TMR1_ISR 0003                        __CFG_CCP3MX$PORTB5 000000  
                                 ?_efgtoa 0060                                   _CCP2CON 000F66  
                                 ?_floorf 0027                                   _CCP5CON 000F54  
                         ??_WriteDataXLCD 000E                                   _ECCP2AS 000F64  
                                 _ADC_ISR 3D82                   __size_of_ADC_Initialize 0018  
                                 ?_strcpy 000E                                   ?_strlen 000E  
              ??_INT1_SetInterruptHandler 0010                                 ?___xxtofl 000E  
                                 _OSCCON2 000FD2                                _emerg_flag 00D6  
                      __size_of_vfpfcnvrt 046C                                   _OSCTUNE 000F9B  
                                 _PWM2CON 000F65                   __size_of_TMR2_StopTimer 0004  
                        ?_TMR2_StartTimer 0001                          ?_TMR1_WriteTimer 0001  
                              ??_BusyXLCD 000E         __size_of_INT0_SetInterruptHandler 000A  
               ?_INT0_SetInterruptHandler 000E                                ??_OpenXLCD 000F  
                         __CFG_PWRTEN$OFF 000000                                   __Hparam 0000  
                                 __Lparam 0000                           __size_of___flge 0104  
                         __size_of___fleq 00AA                                   ___fladd 125E  
                        i2_TMR2_StopTimer 3E78                                   ___fldiv 2368  
                                 ___awdiv 330A                             _DelayFor18TCY 3E52  
                                 ___flneg 3B04                                   ___awmod 3490  
                                 ___flmul 1B8A                                   ___flsub 3946  
                                 ___fltol 2D62                           __size_of___wmul 0026  
                               ?_putsXLCD 000F                                 ?_vfprintf 00BA  
                            __psmallconst 0600                           __size_of_efgtoa 0BB2  
                       __end_of_emrgencia 3BE0                 ??_ADC_GetConversionResult 0003  
                         __size_of_floorf 0212                                   __pcinit 38F8  
                                 __ramtop 0600                                   __ptext0 1FB4  
                                 __ptext1 3854                                   __ptext2 36DC  
                                 __ptext3 171E                                   __ptext4 316A  
                                 __ptext5 06AC                                   __ptext6 373E  
                                 __ptext7 3ACC                                   __ptext8 379E  
                                 __ptext9 33CE            ??_TMR1_DefaultInterruptHandler 0001  
                         __size_of_strcpy 005C                           __size_of_strlen 0036  
                               _T1CONbits 000FCD                     _OSCILLATOR_Initialize 3E1C  
                               _T2CONbits 000FBA                              __size_of_pad 00C2  
                                 _isdigit 3B3C                                ??___xxtofl 0012  
                        ___awmod@dividend 000E         __size_of_TMR1_SetInterruptHandler 000A  
                ??_PIN_MANAGER_Initialize 000E                                   _isspace 38A6  
               ?_TMR1_SetInterruptHandler 000E                                   _isupper 3ACC  
                                 efgtoa@c 0066                                   efgtoa@d 0084  
                                 efgtoa@e 009C                                   efgtoa@f 0062  
                                 efgtoa@g 0098                                   efgtoa@h 008E  
                                 efgtoa@i 0096                                   efgtoa@l 0092  
                                 efgtoa@m 0080                                   efgtoa@n 009E  
                                 efgtoa@p 0088                                   efgtoa@t 007C  
                                 efgtoa@u 00A0                                   efgtoa@w 008B  
                                 atoi@neg 001B                __size_of_SYSTEM_Initialize 0026  
                                 _sprintf 3854                                   _tolower 373E  
                                 _strncmp 316A                            __pintcode_body 35EA  
                    end_of_initialization 3938                                   floorf@e 0035  
                                 floorf@m 0031                                   floorf@u 0037  
                                 floorf@x 0027                                   fputc@fp 0010  
                           __Lmediumconst 0000                                   int_func 35EA  
                                 fputs@fp 0019                         __end_of_vfpfcnvrt 1B8A  
                              efgtoa@mode 008D                                efgtoa@sign 0086  
                          ?_DelayFor18TCY 0001                                   postdec1 000FE5  
                                 postdec2 000FDD                                   postinc0 000FEE  
                                 postinc1 000FE6                                   postinc2 000FDE  
                              ??_putsXLCD 0011                                ??_vfprintf 0041  
                                 strcpy@d 0016                                   strlen@a 0010  
                                 strcpy@s 0014                                   strlen@s 000E  
                   _INT1_InterruptHandler 01BD                               ___fladd@grs 001D  
                           ___xxtofl@sign 0016                                 _TRISDbits 000F95  
                     _ADC_StartConversion 3E74                               ___fldiv@grs 0021  
                             ___fldiv@rem 001A                     __size_of_SetCGRamAddr 005A  
                              _start_flag 00D5                               ___flmul@grs 002A  
                              main@angulo 0189                                 _DelayXLCD 3DFC  
                       __size_of_INT0_ISR 0008                         __size_of_INT1_ISR 0008  
                    ?_ADC_StartConversion 0001              __end_of_INTERRUPT_Initialize 3E3E  
                          __end_of___flge 2F6C                            __end_of___fleq 35EA  
    __end_of_INT0_DefaultInterruptHandler 3E88     __size_of_INT0_DefaultInterruptHandler 0002  
            _INT0_DefaultInterruptHandler 3E86                               vfpfcnvrt@ap 00A8  
                             vfpfcnvrt@ct 00B6                               vfpfcnvrt@fp 00A4  
                          __end_of___wmul 3D16                                _write_flag 00D4  
                          __end_of_efgtoa 125E                         __size_of_TMR1_ISR 003E  
                          _ADC_Initialize 3D9E                            __end_of_floorf 2914  
                  ?_OSCILLATOR_Initialize 0001                                floorf@F524 0100  
                            _SetCGRamAddr 37FA                     __end_of_INT0_CallBack 3C74  
                          __end_of_strcpy 37FA                            __end_of_strlen 3BAA  
                     start_initialization 38F8           __size_of_PIN_MANAGER_Initialize 0042  
                   __end_of_INT1_CallBack 3C44                               __end_of_pad 3490  
                          _TMR2_StopTimer 3E70                     __end_of___fpclassifyf 316A  
                       __size_of_BusyXLCD 0012                                ?_DelayXLCD 0001  
                         ??_DelayFor18TCY 000E                     ??_ADC_StartConversion 0001  
               __size_of_EPWM2_Initialize 0020                  __size_of_TMR1_Initialize 002A  
                             vfprintf@fmt 00BC                         __size_of_OpenXLCD 010A  
                                ??___flge 003D                                  ??___fleq 0016  
                                ??___wmul 0012                                  ??_efgtoa 0067  
                           ?_WriteCmdXLCD 0001                    __end_of_ADC_Initialize 3DB6  
                             __pdataBANK1 0191                                  ??_floorf 002B  
                                ?_ADC_ISR 0001                __end_of_EXT_INT_Initialize 3D62  
                   __end_of_convert_timer 3E70           fp__INT0_DefaultInterruptHandler 0000  
           ?_INT0_DefaultInterruptHandler 0001                                  ??_strcpy 0012  
                                ??_strlen 0010                                 ___fladd@a 0012  
                               ___fladd@b 000E                                 ___fldiv@a 0012  
                               ___fldiv@b 000E                    __end_of_TMR2_StopTimer 3E74  
                               ___flmul@a 0020                                 ___flmul@b 001C  
                             __pbssCOMRAM 0043                                 ___flsub@a 0039  
                               ___flsub@b 0035          __end_of_INT0_SetInterruptHandler 3E52  
                           __pcstackBANK0 0060                             __pcstackBANK1 015A  
                __size_of_TMR2_Initialize 0010                         __size_of___xxtofl 01B4  
                __end_ofi2_TMR2_StopTimer 3E7C                  __size_of_CCP5_Initialize 0010  
                               _atoi$1877 001D                                 _atoi$1878 0021  
                               _atoi$1879 001F                                 __pnvBANK1 01BB  
                             _efgtoa$1382 0074                               _efgtoa$1376 0070  
                             _efgtoa$1377 0072                               _efgtoa$1386 0076  
                             _efgtoa$1387 0078                               _efgtoa$1388 007A  
                          putsXLCD@buffer 000F                    _PIN_MANAGER_Initialize 39D0  
                               _flag_CNT1 004B                                 __pintcode 0008  
        __end_of_TMR1_SetInterruptHandler 3E34                            ??_WriteCmdXLCD 000E  
                                ?___fladd 000E                                  ?___fldiv 000E  
                                ?___awdiv 000E                                  ?___flneg 000E  
                                ?___awmod 000E                                  ?___flmul 001C  
                                ?___flsub 0035                                  ?___fltol 000E  
                         ?_ADC_Initialize 0001                               __pintcodelo 0018  
                        __CFG_PRICLKEN$ON 000000                         __size_of_putsXLCD 0072  
                   __end_of_WriteDataXLCD 3A8E                         __size_of_vfprintf 0062  
                             __smallconst 0600                                 _emrgencia 3BAA  
                                ?_isdigit 000E                           ?_TMR2_StopTimer 0001  
                                ?_isspace 000E                                  ?_isupper 000E  
                                ?_sprintf 00C0                                  ?_tolower 0014  
                          __size_of_fputc 00CA                            __size_of_fputs 0044  
                                ?_strncmp 000E                            __size_of_putch 0002  
                          __size_of_start 0034                      _INTERRUPT_Initialize 3E34  
                                _INT0_ISR 3E62                                  _INT1_ISR 3E5A  
                          ___wmul@product 0012                                  _LATDbits 000F8C  
       __size_of_INT1_SetInterruptHandler 000A                 ?_INT1_SetInterruptHandler 000E  
                             ??_DelayXLCD 000E                                  _IPR1bits 000F9F  
                                _PIE1bits 000F9D                             ?_DelayPORXLCD 0001  
                __size_of_TMR2_StartTimer 0004                  __size_of_TMR1_WriteTimer 0028  
                                i1u516_20 3BF2                                  i1u516_21 3BEE  
                                i1u517_20 3C0A                                  i1u517_21 3C06  
                                i1u534_20 3C28                                  i1u534_21 3C24  
                                i1u535_28 3C2E                                  i1u535_29 3C42  
                                i1u577_20 003C                                  i1u577_21 0038  
                                _PIR1bits 000F9E                                  i1u578_20 004A  
                                i1u578_21 0046                           OpenXLCD@lcdtype 0001  
                                i2u515_40 3BB8                                  i2u515_41 3BB4  
                                i2u532_40 3C58                                  i2u532_41 3C54  
                                i2u540_48 3AB6                                  i2u540_49 3ACA  
                                i2u533_48 3C5E                                  i2u533_49 3C72  
                                i2u536_40 3CD6                                  i2u536_41 3CD2  
                                i2u539_40 3AB0                                  i2u571_40 3600  
                                i2u539_41 3AAC                                  i2u571_41 35FC  
                                i2u572_40 360E                                  i2u572_41 360A  
                                i2u573_40 3624                                  i2u573_41 3620  
                                i2u574_40 3632                                  i2u574_41 362E  
                                i2u575_40 3648                                  i2u575_41 3644  
                                i2u576_40 3656                                  i2u576_41 3652  
                                _RCONbits 000FD0                          __CFG_WDTPS$32768 000000  
                               main@F6407 01A6                                 main@F6409 0191  
                                _TMR1_ISR 3A8E                                  _PSTR2CON 000F63  
                               _vfpfcnvrt 171E                         ??_TMR1_Initialize 0010  
                        __size_of_ADC_ISR 001C                                _ADCON0bits 000FC2  
                       ___wmul@multiplier 000E                                ?_emrgencia 0001  
                               main@name1 015A                                 main@name2 016F  
          ??_INT0_DefaultInterruptHandler 0001                          main@valor_analog 0184  
                            _isspace$1908 0014                                vfpfcnvrt@c 00B9  
                              vfpfcnvrt@f 00B2                               _INTCON2bits 000FF1  
                             _INTCON3bits 000FF0                                 copy_data0 390C  
                   ?_INTERRUPT_Initialize 0001                  _INT0_SetInterruptHandler 3E48  
                                _BusyXLCD 3DCA                         ??_TMR2_Initialize 000E  
                          ??_DelayPORXLCD 000E                                  _OpenXLCD 2C58  
                       ??_CCP5_Initialize 000E                                  __Hrparam 0000  
                        _EPWM2_Initialize 3D62                                vfprintf@ap 00BE  
                                __Lrparam 0000                                vfprintf@fp 00BA  
                ?_ADC_GetConversionResult 0001                        __CFG_BOREN$SBORDIS 000000  
                       __CFG_P2BMX$PORTD2 000000                   ??_OSCILLATOR_Initialize 000E  
                        __size_of___fladd 04C0                          __size_of___fldiv 039A  
                        __size_of___awdiv 00C4                          __size_of___flneg 0038  
                        __size_of___awmod 00B0                          __size_of___flmul 042A  
                        __size_of___flsub 0046                          __size_of___fltol 0106  
                              ?_vfpfcnvrt 00A4                                  _adc_flag 004C  
                _TMR1_SetInterruptHandler 3E2A                        ___fpclassifyf@F463 0104  
                   _TMR1_InterruptHandler 01BB                                sprintf@fmt 00C2  
                                ___xxtofl 2914           ??_INTERRUPT_InterruptManagerLow 0009  
                      SetCGRamAddr@CGaddr 0011                          __size_of_isdigit 0038  
                        __size_of_isspace 0052                                  __ptext10 3B74  
                                __ptext11 398C                                  __ptext20 1B8A  
                                __ptext12 3240                                  __ptext21 2E68  
                                __ptext13 3E80                                _T1GCONbits 000FCC  
                                __ptext30 366A                                  __ptext22 3540  
                                __ptext14 2702                                  __ptext31 2914  
                                __ptext23 2368                                  __ptext15 306C  
                                __ptext40 3D3C                                  __ptext32 3E70  
                                __ptext24 3490                                  __ptext16 2D62  
                                __ptext41 3E3E                                  __ptext33 3D16  
                                __ptext25 330A                                  __ptext17 3946  
                                __ptext50 2F6C                                  __ptext42 3E48  
                                __ptext34 3DDC                                  __ptext26 2AC8  
                                __ptext18 125E                                  __ptext51 3A50  
                                __ptext43 3D62                                  __ptext35 3C9E  
                                __ptext27 38A6                                  __ptext19 3B04  
                                __ptext52 37FA                                  __ptext44 3DEC  
                                __ptext36 3E2A                                  __ptext28 3B3C  
                                __ptext61 3A8E                                  __ptext53 3E52  
                                __ptext45 3D9E                                  __ptext37 39D0  
                                __ptext29 3CF0                                  __ptext70 3E78  
                                __ptext62 3E84                                  __ptext54 3DCA  
                                __ptext46 2C58                                  __ptext38 3E1C  
                                __ptext71 3E7C                                  __ptext63 3E6A  
                                __ptext47 3A12                                  __ptext39 3E34  
                                __ptext72 3D82                                  __ptext64 3E74  
                                __ptext56 3E5A                                  __ptext48 3DFC  
                                __ptext73 3DB6                                  __ptext65 3CC8  
                                __ptext57 3C14                                  __ptext49 3E0C  
                                __ptext74 0000                                  __ptext66 3E62  
                                __ptext58 3E82                                  __ptext67 3C44  
                                __ptext59 3BE0                                  __ptext68 3E86  
                                __ptext69 3BAA                          __size_of_isupper 0038  
                    __end_of_WriteCmdXLCD 3A50                          __size_of_sprintf 0052  
                        __size_of_tolower 0060                                strcpy@dest 000E  
                        __size_of_strncmp 00D6                                _CGRamAddr0 2F6C  
                           __size_of_atoi 0190                             __size_of_main 03B4  
                                efgtoa@fp 0060                                  efgtoa@ne 0082  
                                efgtoa@pp 007E                                  efgtoa@ou 006C  
                                int$flags 0051                                  _putsXLCD 366A  
                                _vfprintf 36DC                         ??_TMR2_StartTimer 0001  
                                fp__start 0000                         ??_TMR1_WriteTimer 0003  
    __end_of_INT1_DefaultInterruptHandler 3E84     __size_of_INT1_DefaultInterruptHandler 0002  
            _INT1_DefaultInterruptHandler 3E82                               ??_emrgencia 0001  
                          _vfpfcnvrt$1402 00AE                            _vfpfcnvrt$1406 00B0  
                              _INTCONbits 000FF2                                  isdigit@c 000E  
                  ??_INTERRUPT_Initialize 000E                        _EXT_INT_Initialize 3D3C  
                       ?i2_TMR2_StopTimer 0001                                  intlevel1 0000  
                                intlevel2 0000                                 sprintf@ap 00CA  
             __end_of_ADC_StartConversion 3E78                        ??i2_TMR2_StopTimer 0001  
                                isspace@c 000E                   ?_PIN_MANAGER_Initialize 0001  
         __end_of_ADC_GetConversionResult 3DCA                       ?_EXT_INT_Initialize 0001  
                               strcpy@src 0010                                  isupper@c 000E  
                               strncmp@_l 000E                                 strncmp@_r 0010  
                        ??_ADC_Initialize 000E                    __size_of_INT0_CallBack 0030  
                   __end_of_DelayFor18TCY 3E5A                               efgtoa@nmode 008A  
                  __size_of_INT1_CallBack 0030                               ??_vfpfcnvrt 00AA  
                        ??_TMR2_StopTimer 000E    __end_of_INTERRUPT_InterruptManagerHigh 366A  
 __size_of_INTERRUPT_InterruptManagerHigh 3662            _INTERRUPT_InterruptManagerHigh 0008  
                    ??_EXT_INT_Initialize 0010                                  sprintf@f 00CC  
                                tolower@c 0014                                  sprintf@s 00C0  
         fp__INT1_DefaultInterruptHandler 0000             ?_INT1_DefaultInterruptHandler 0001  
                  __size_of___fpclassifyf 00FE                      __end_of_DelayPORXLCD 3E1C  
        __end_of_INT1_SetInterruptHandler 3E48                                  strncmp@l 0015  
                                strncmp@n 0012                                  strncmp@r 0017  
                       __CFG_T3CMX$PORTC0 000000                             ___fladd@signs 001A  
   __end_of_INTERRUPT_InterruptManagerLow 0066    __size_of_INTERRUPT_InterruptManagerLow 004E  
           _INTERRUPT_InterruptManagerLow 0018            __end_of_PIN_MANAGER_Initialize 3A12  
                            ___fladd@aexp 001B                              ___fladd@bexp 001C  
                             ?_CGRamAddr0 0001                    __size_of_convert_timer 0006  
                        fp__convert_timer 0000                           _TMR1_Initialize 3C9E  
                            fp__emrgencia 0000  
